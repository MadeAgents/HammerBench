[
  {
    "messages": [
      {
        "role": "user",
        "content": "Check if my car has any illegal records"
      },
      {
        "role": "function call",
        "content": {
          "name": "Navigation.TrafficViolations.queryViolation",
          "arguments": {}
        }
      },
      {
        "role": "assistant",
        "content": "What city is the violation located in?"
      },
      {
        "role": "user",
        "content": "The violating city is Guangzhou."
      },
      {
        "role": "function call",
        "content": {
          "name": "Navigation.TrafficViolations.queryViolation",
          "arguments": {
            "city": "Guangzhou"
          }
        }
      },
      {
        "role": "assistant",
        "content": "Please provide the license plate number"
      },
      {
        "role": "user",
        "content": "My license plate number is Yue B67890.I'm sorry, License plate number is Guangdong B67890. "
      },
      {
        "role": "function call",
        "content": {
          "name": "Navigation.TrafficViolations.queryViolation",
          "arguments": {
            "city": "Guangzhou",
            "plate_number": "Guangdong B67890"
          }
        }
      }
    ],
    "multiple_tools": [
      {
        "name": "Health.HealthManagement.searchDietRecord",
        "description": "Search dietary records by food name, type of meal, etc.",
        "parameters": {
          "type": "object",
          "properties": {
            "food_name": {
              "type": "string",
              "description": "Food Name"
            },
            "meal_type": {
              "type": "string",
              "description": "Types of meals, such as breakfast, lunch, dinner, or add-ons"
            },
            "time": {
              "type": "string",
              "description": "Meal Time"
            }
          },
          "required": [
            "food_name",
            "meal_type",
            "time"
          ]
        }
      },
      {
        "name": "Navigation.TrafficViolations.queryViolation",
        "description": "Query traffic violation records by conditions",
        "parameters": {
          "type": "object",
          "properties": {
            "plate_number": {
              "type": "string",
              "description": "License plate number"
            },
            "city": {
              "type": "string",
              "description": "Violating city"
            },
            "time": {
              "type": "string",
              "description": "Billing Time"
            }
          },
          "required": [
            "plate_number",
            "city",
            "time"
          ]
        }
      },
      {
        "name": "OfficeSoftware.CloudStorage.netdiskGetUploadFilesRecords",
        "description": "Get a list of uploaded files/folders records in Cloud Drive",
        "parameters": {
          "type": "object",
          "properties": {},
          "required": []
        }
      },
      {
        "name": "Travel.HotelServices.getHotelReservationHistory",
        "description": "Get a user's hotel booking history",
        "parameters": {
          "type": "object",
          "properties": {
            "start_date": {
              "type": "string",
              "description": "Start Time "
            },
            "end_date": {
              "type": "string",
              "description": "End Time"
            }
          },
          "required": [
            "start_date",
            "end_date"
          ]
        }
      },
      {
        "name": "Health.MedicalServices.getPatientMedicalRecord",
        "description": "Obtain the patient's medical record information based on the patient's name, etc.",
        "parameters": {
          "type": "object",
          "properties": {
            "patient_name": {
              "type": "string",
              "description": "Patient Name"
            }
          },
          "required": [
            "patient_name"
          ]
        }
      }
    ],
    "single_tool": [
      {
        "name": "Navigation.TrafficViolations.queryViolation",
        "description": "Query traffic violation records by conditions",
        "parameters": {
          "type": "object",
          "properties": {
            "plate_number": {
              "type": "string",
              "description": "License plate number"
            },
            "city": {
              "type": "string",
              "description": "Violating city"
            },
            "time": {
              "type": "string",
              "description": "Billing Time"
            }
          },
          "required": [
            "plate_number",
            "city",
            "time"
          ]
        }
      }
    ],
    "id": 0
  },
  {
    "messages": [
      {
        "role": "user",
        "content": "See what's going on with my traffic violations"
      },
      {
        "role": "function call",
        "content": {
          "name": "Navigation.TrafficViolations.queryViolation",
          "arguments": {}
        }
      },
      {
        "role": "assistant",
        "content": "Please provide the city where the violation occurred"
      },
      {
        "role": "user",
        "content": "The violation occurred in Guangzhou."
      },
      {
        "role": "function call",
        "content": {
          "name": "Navigation.TrafficViolations.queryViolation",
          "arguments": {
            "city": "Guangzhou"
          }
        }
      },
      {
        "role": "assistant",
        "content": "Please provide the license plate number"
      },
      {
        "role": "user",
        "content": "My license plate number is Yue B6789X.I'm sorry, License plate number is Guangdong B67890. "
      },
      {
        "role": "function call",
        "content": {
          "name": "Navigation.TrafficViolations.queryViolation",
          "arguments": {
            "city": "Guangzhou",
            "plate_number": "Guangdong B67890"
          }
        }
      }
    ],
    "multiple_tools": [
      {
        "name": "Navigation.TrafficViolations.viewViolationDetail",
        "description": "View details of the specified traffic violation record",
        "parameters": {
          "type": "object",
          "properties": {
            "plate_number": {
              "type": "string",
              "description": "License plate number"
            },
            "city": {
              "type": "string",
              "description": "Violating city"
            },
            "time": {
              "type": "string",
              "description": "Billing Time"
            }
          },
          "required": [
            "plate_number",
            "city",
            "time"
          ]
        }
      },
      {
        "name": "Navigation.TrafficViolations.viewTrafficEvent",
        "description": "View notifications about traffic events",
        "parameters": {
          "type": "object",
          "properties": {
            "keyword": {
              "type": "string",
              "description": "Additional conditions, such as area of occurrence, duration of impact, etc."
            }
          },
          "required": [
            "keyword"
          ]
        }
      },
      {
        "name": "Navigation.TrafficViolations.queryViolation",
        "description": "Query traffic violation records by conditions",
        "parameters": {
          "type": "object",
          "properties": {
            "plate_number": {
              "type": "string",
              "description": "License plate number"
            },
            "city": {
              "type": "string",
              "description": "Violating city"
            },
            "time": {
              "type": "string",
              "description": "Billing Time"
            }
          },
          "required": [
            "plate_number",
            "city",
            "time"
          ]
        }
      },
      {
        "name": "Navigation.Bicycles.viewMileage",
        "description": "View cumulative kilometers cycled",
        "parameters": {
          "type": "object",
          "properties": {},
          "required": []
        }
      },
      {
        "name": "ConvenientLiving.GovernmentServices.queryTrafficViolations",
        "description": "Check the traffic violation information of the user's vehicle",
        "parameters": {
          "type": "object",
          "properties": {
            "plate_number": {
              "type": "string",
              "description": "Vehicle license plate"
            }
          },
          "required": [
            "plate_number"
          ]
        }
      }
    ],
    "single_tool": [
      {
        "name": "Navigation.TrafficViolations.queryViolation",
        "description": "Query traffic violation records by conditions",
        "parameters": {
          "type": "object",
          "properties": {
            "plate_number": {
              "type": "string",
              "description": "License plate number"
            },
            "city": {
              "type": "string",
              "description": "Violating city"
            },
            "time": {
              "type": "string",
              "description": "Billing Time"
            }
          },
          "required": [
            "plate_number",
            "city",
            "time"
          ]
        }
      }
    ],
    "id": 1
  },
  {
    "messages": [
      {
        "role": "user",
        "content": "Share infringement information"
      },
      {
        "role": "function call",
        "content": {
          "name": "Navigation.TrafficViolations.shareViolationDetail",
          "arguments": {}
        }
      },
      {
        "role": "assistant",
        "content": "What city is the violation located in?"
      },
      {
        "role": "user",
        "content": "The violation occurred in Guangzhou.I'm sorry, Violating city is Chongqing. "
      },
      {
        "role": "function call",
        "content": {
          "name": "Navigation.TrafficViolations.shareViolationDetail",
          "arguments": {
            "city": "Chongqing"
          }
        }
      },
      {
        "role": "assistant",
        "content": "Please provide a way to share"
      },
      {
        "role": "user",
        "content": "Share the link via email."
      },
      {
        "role": "function call",
        "content": {
          "name": "Navigation.TrafficViolations.shareViolationDetail",
          "arguments": {
            "city": "Chongqing",
            "media": "Email"
          }
        }
      },
      {
        "role": "assistant",
        "content": "Please provide recipients for the shared content"
      },
      {
        "role": "user",
        "content": "The recipient is Manager Zhang."
      },
      {
        "role": "function call",
        "content": {
          "name": "Navigation.TrafficViolations.shareViolationDetail",
          "arguments": {
            "city": "Chongqing",
            "media": "Email",
            "name": "Manager Zhang"
          }
        }
      },
      {
        "role": "assistant",
        "content": "Please provide the license plate number"
      },
      {
        "role": "user",
        "content": "My license plate number is Yue B6789X."
      },
      {
        "role": "function call",
        "content": {
          "name": "Navigation.TrafficViolations.shareViolationDetail",
          "arguments": {
            "city": "Chongqing",
            "media": "Email",
            "name": "Manager Zhang",
            "plate_number": "Yue B6789X"
          }
        }
      },
      {
        "role": "assistant",
        "content": "When is the order opening time?"
      },
      {
        "role": "user",
        "content": "It is April 1, 2023."
      },
      {
        "role": "function call",
        "content": {
          "name": "Navigation.TrafficViolations.shareViolationDetail",
          "arguments": {
            "city": "Chongqing",
            "media": "Email",
            "name": "Manager Zhang",
            "plate_number": "Yue B6789X",
            "time": "April 1, 2023"
          }
        }
      }
    ],
    "multiple_tools": [
      {
        "name": "ConvenientLiving.UtilityPayments.queryBillInfo",
        "description": "Used to get billing details for utilities, etc.",
        "parameters": {
          "type": "object",
          "properties": {
            "service_type": {
              "type": "string",
              "description": "Types of paid services, such as utilities, gas, etc."
            },
            "user_name": {
              "type": "string",
              "description": "User Name"
            },
            "time": {
              "type": "string",
              "description": "Bill Time"
            }
          },
          "required": [
            "service_type",
            "user_name",
            "time"
          ]
        }
      },
      {
        "name": "ConvenientLiving.FoodDelivery.searchRestaurantDiscounts",
        "description": "Enter keywords to search for deals",
        "parameters": {
          "type": "object",
          "properties": {
            "keyword": {
              "type": "string",
              "description": "Keywords related to offers"
            }
          },
          "required": [
            "keyword"
          ]
        }
      },
      {
        "name": "OfficeSoftware.CloudStorage.viewNetdiskShare",
        "description": "View Drive Share",
        "parameters": {
          "type": "object",
          "properties": {},
          "required": []
        }
      },
      {
        "name": "Travel.ItineraryServices.shareTravelItinerary",
        "description": "Sharing travel itineraries to designated locations",
        "parameters": {
          "type": "object",
          "properties": {
            "name": {
              "type": "string",
              "description": "Trip name or keyword"
            },
            "to": {
              "type": "string",
              "description": "Destination app name"
            }
          },
          "required": [
            "name",
            "to"
          ]
        }
      },
      {
        "name": "Navigation.TrafficViolations.shareViolationDetail",
        "description": "Share Designated Violation Information",
        "parameters": {
          "type": "object",
          "properties": {
            "plate_number": {
              "type": "string",
              "description": "License plate number"
            },
            "city": {
              "type": "string",
              "description": "Violating city"
            },
            "time": {
              "type": "string",
              "description": "Billing Time"
            },
            "media": {
              "type": "string",
              "description": "Ways to share"
            },
            "name": {
              "type": "string",
              "description": "Shared content recipients"
            }
          },
          "required": [
            "plate_number",
            "city",
            "time",
            "media",
            "name"
          ]
        }
      }
    ],
    "single_tool": [
      {
        "name": "Navigation.TrafficViolations.shareViolationDetail",
        "description": "Share Designated Violation Information",
        "parameters": {
          "type": "object",
          "properties": {
            "plate_number": {
              "type": "string",
              "description": "License plate number"
            },
            "city": {
              "type": "string",
              "description": "Violating city"
            },
            "time": {
              "type": "string",
              "description": "Billing Time"
            },
            "media": {
              "type": "string",
              "description": "Ways to share"
            },
            "name": {
              "type": "string",
              "description": "Shared content recipients"
            }
          },
          "required": [
            "plate_number",
            "city",
            "time",
            "media",
            "name"
          ]
        }
      }
    ],
    "id": 2
  },
  {
    "messages": [
      {
        "role": "user",
        "content": "How to pay traffic violation fines online?"
      },
      {
        "role": "function call",
        "content": {
          "name": "Navigation.TrafficViolations.payViolations",
          "arguments": {}
        }
      },
      {
        "role": "assistant",
        "content": "What city is the violation located in?"
      },
      {
        "role": "user",
        "content": "The violation occurred in Guangzhou.I'm sorry, Violating city is Hangzhou. "
      },
      {
        "role": "function call",
        "content": {
          "name": "Navigation.TrafficViolations.payViolations",
          "arguments": {
            "city": "Hangzhou"
          }
        }
      },
      {
        "role": "assistant",
        "content": "Please provide the license plate number"
      },
      {
        "role": "user",
        "content": "My license plate number is Yue B88888."
      },
      {
        "role": "function call",
        "content": {
          "name": "Navigation.TrafficViolations.payViolations",
          "arguments": {
            "city": "Hangzhou",
            "plate_number": "Yue B88888"
          }
        }
      },
      {
        "role": "assistant",
        "content": "When to start billing"
      },
      {
        "role": "user",
        "content": "Billing starts March 15, 2023 at 2pm."
      },
      {
        "role": "function call",
        "content": {
          "name": "Navigation.TrafficViolations.payViolations",
          "arguments": {
            "city": "Hangzhou",
            "plate_number": "Yue B88888",
            "time": "March 15, 2023"
          }
        }
      }
    ],
    "multiple_tools": [
      {
        "name": "Navigation.TrafficViolations.payViolations",
        "description": "Pay fines for violations online",
        "parameters": {
          "type": "object",
          "properties": {
            "plate_number": {
              "type": "string",
              "description": "License plate number"
            },
            "city": {
              "type": "string",
              "description": "Violating city"
            },
            "time": {
              "type": "string",
              "description": "Billing Time"
            }
          },
          "required": [
            "plate_number",
            "city",
            "time"
          ]
        }
      },
      {
        "name": "ConvenientLiving.UtilityPayments.getDueDate",
        "description": "Deadline for payment of fees for the acquisition of utilities, etc.",
        "parameters": {
          "type": "object",
          "properties": {
            "service_type": {
              "type": "string",
              "description": "Types of paid services, such as utilities, gas, etc."
            },
            "user_name": {
              "type": "string",
              "description": "User Name"
            }
          },
          "required": [
            "service_type",
            "user_name"
          ]
        }
      },
      {
        "name": "Finance.Funds.getFundSubscriptionFee",
        "description": "Query subscription fee information for designated funds",
        "parameters": {
          "type": "object",
          "properties": {
            "fund_name": {
              "type": "string",
              "description": "Fund name"
            },
            "fund_code": {
              "type": "string",
              "description": "Fund  Code"
            }
          },
          "required": [
            "fund_name",
            "fund_code"
          ]
        }
      },
      {
        "name": "Navigation.TaxiCarRental.issueTaxiInvoice",
        "description": "Invoicing taxi rides",
        "parameters": {
          "type": "object",
          "properties": {
            "time": {
              "type": "string",
              "description": "Order time"
            },
            "destination": {
              "type": "string",
              "description": "Destination"
            }
          },
          "required": [
            "time",
            "destination"
          ]
        }
      },
      {
        "name": "ConvenientLiving.UtilityPayments.payBill",
        "description": "Payment of utilities, etc.",
        "parameters": {
          "type": "object",
          "properties": {
            "service_type": {
              "type": "string",
              "description": "Types of paid services, such as utilities, gas, etc."
            },
            "user_name": {
              "type": "string",
              "description": "User Name"
            },
            "pay": {
              "type": "float",
              "description": "Contribution Amount, Default Billing Amount"
            },
            "address": {
              "type": "string",
              "description": "user address, default address"
            }
          },
          "required": [
            "service_type",
            "user_name",
            "pay",
            "address"
          ]
        }
      }
    ],
    "single_tool": [
      {
        "name": "Navigation.TrafficViolations.payViolations",
        "description": "Pay fines for violations online",
        "parameters": {
          "type": "object",
          "properties": {
            "plate_number": {
              "type": "string",
              "description": "License plate number"
            },
            "city": {
              "type": "string",
              "description": "Violating city"
            },
            "time": {
              "type": "string",
              "description": "Billing Time"
            }
          },
          "required": [
            "plate_number",
            "city",
            "time"
          ]
        }
      }
    ],
    "id": 3
  },
  {
    "messages": [
      {
        "role": "user",
        "content": "I want to report a traffic accident, there are no specific details, just want to let the relevant departments know."
      },
      {
        "role": "function call",
        "content": {
          "name": "Navigation.TrafficViolations.reportAccident",
          "arguments": {}
        }
      },
      {
        "role": "assistant",
        "content": "Where was the accident?"
      },
      {
        "role": "user",
        "content": "The location of the accident is near Zhongshan Mausoleum in Nanjing."
      },
      {
        "role": "function call",
        "content": {
          "name": "Navigation.TrafficViolations.reportAccident",
          "arguments": {
            "location": "Near Zhongshan Mausoleum in Nanjing"
          }
        }
      },
      {
        "role": "assistant",
        "content": "Please provide the license plate number"
      },
      {
        "role": "user",
        "content": "My license plate number is Su E67890, there is a small problem.I'm sorry, License plate number is Beijing C98765. "
      },
      {
        "role": "function call",
        "content": {
          "name": "Navigation.TrafficViolations.reportAccident",
          "arguments": {
            "location": "Near Zhongshan Mausoleum in Nanjing",
            "plate_number": "Beijing C98765"
          }
        }
      }
    ],
    "multiple_tools": [
      {
        "name": "ConvenientLiving.GovernmentServices.reportTaxEvasion",
        "description": "Reporting tax evasion",
        "parameters": {
          "type": "object",
          "properties": {
            "company_name": {
              "type": "string",
              "description": "Company name"
            },
            "description": {
              "type": "string",
              "description": "Problem description"
            }
          },
          "required": [
            "company_name",
            "description"
          ]
        }
      },
      {
        "name": "ConvenientLiving.AutoLife.reportCarProblem",
        "description": "Report a malfunction or problem with your car to the platform.",
        "parameters": {
          "type": "object",
          "properties": {
            "brand": {
              "type": "string",
              "description": "Car Brand"
            },
            "problem_description": {
              "type": "string",
              "description": "Problem description"
            },
            "name": {
              "type": "string",
              "description": "Contact person"
            }
          },
          "required": [
            "brand",
            "problem_description",
            "name"
          ]
        }
      },
      {
        "name": "SocialCommunication.Community.reportCommunityPost",
        "description": "Report a post from a specific community",
        "parameters": {
          "type": "object",
          "properties": {
            "community_name": {
              "type": "string",
              "description": "The name of the community where the post is to be reported"
            },
            "comment_name": {
              "type": "string",
              "description": "Post title to report"
            }
          },
          "required": [
            "community_name",
            "comment_name"
          ]
        }
      },
      {
        "name": "Navigation.TrafficViolations.reportAccident",
        "description": "Report traffic accidents and violations",
        "parameters": {
          "type": "object",
          "properties": {
            "plate_number": {
              "type": "string",
              "description": "License plate number"
            },
            "location": {
              "type": "string",
              "description": "Site"
            }
          },
          "required": [
            "plate_number",
            "location"
          ]
        }
      },
      {
        "name": "Navigation.Bicycles.submitBikeFault",
        "description": "Submit a bicycle malfunction",
        "parameters": {
          "type": "object",
          "properties": {
            "number": {
              "type": "string",
              "description": "Vehicle number"
            }
          },
          "required": [
            "number"
          ]
        }
      }
    ],
    "single_tool": [
      {
        "name": "Navigation.TrafficViolations.reportAccident",
        "description": "Report traffic accidents and violations",
        "parameters": {
          "type": "object",
          "properties": {
            "plate_number": {
              "type": "string",
              "description": "License plate number"
            },
            "location": {
              "type": "string",
              "description": "Site"
            }
          },
          "required": [
            "plate_number",
            "location"
          ]
        }
      }
    ],
    "id": 4
  },
  {
    "messages": [
      {
        "role": "user",
        "content": "Report a traffic accident"
      },
      {
        "role": "function call",
        "content": {
          "name": "Navigation.TrafficViolations.reportAccident",
          "arguments": {}
        }
      },
      {
        "role": "assistant",
        "content": "Where was the accident?"
      },
      {
        "role": "user",
        "content": "The location of the accident is near Chang 'an Street."
      },
      {
        "role": "function call",
        "content": {
          "name": "Navigation.TrafficViolations.reportAccident",
          "arguments": {
            "location": "Changan Street"
          }
        }
      },
      {
        "role": "assistant",
        "content": "Please provide the license plate number"
      },
      {
        "role": "user",
        "content": "My license plate number is Beijing C98765.I'm sorry, License plate number is Shanghai B67890. "
      },
      {
        "role": "function call",
        "content": {
          "name": "Navigation.TrafficViolations.reportAccident",
          "arguments": {
            "location": "Changan Street",
            "plate_number": "Shanghai B67890"
          }
        }
      }
    ],
    "multiple_tools": [
      {
        "name": "SocialCommunication.Community.reportCommunityPost",
        "description": "Report a post from a specific community",
        "parameters": {
          "type": "object",
          "properties": {
            "community_name": {
              "type": "string",
              "description": "The name of the community where the post is to be reported"
            },
            "comment_name": {
              "type": "string",
              "description": "Post title to report"
            }
          },
          "required": [
            "community_name",
            "comment_name"
          ]
        }
      },
      {
        "name": "Navigation.Bicycles.submitBikeFault",
        "description": "Submit a bicycle malfunction",
        "parameters": {
          "type": "object",
          "properties": {
            "number": {
              "type": "string",
              "description": "Vehicle number"
            }
          },
          "required": [
            "number"
          ]
        }
      },
      {
        "name": "Navigation.TrafficViolations.reportAccident",
        "description": "Report traffic accidents and violations",
        "parameters": {
          "type": "object",
          "properties": {
            "plate_number": {
              "type": "string",
              "description": "License plate number"
            },
            "location": {
              "type": "string",
              "description": "Site"
            }
          },
          "required": [
            "plate_number",
            "location"
          ]
        }
      },
      {
        "name": "ConvenientLiving.AutoLife.reportCarProblem",
        "description": "Report a malfunction or problem with your car to the platform.",
        "parameters": {
          "type": "object",
          "properties": {
            "brand": {
              "type": "string",
              "description": "Car Brand"
            },
            "problem_description": {
              "type": "string",
              "description": "Problem description"
            },
            "name": {
              "type": "string",
              "description": "Contact person"
            }
          },
          "required": [
            "brand",
            "problem_description",
            "name"
          ]
        }
      },
      {
        "name": "ConvenientLiving.GovernmentServices.reportTaxEvasion",
        "description": "Reporting tax evasion",
        "parameters": {
          "type": "object",
          "properties": {
            "company_name": {
              "type": "string",
              "description": "Company name"
            },
            "description": {
              "type": "string",
              "description": "Problem description"
            }
          },
          "required": [
            "company_name",
            "description"
          ]
        }
      }
    ],
    "single_tool": [
      {
        "name": "Navigation.TrafficViolations.reportAccident",
        "description": "Report traffic accidents and violations",
        "parameters": {
          "type": "object",
          "properties": {
            "plate_number": {
              "type": "string",
              "description": "License plate number"
            },
            "location": {
              "type": "string",
              "description": "Site"
            }
          },
          "required": [
            "plate_number",
            "location"
          ]
        }
      }
    ],
    "id": 5
  },
  {
    "messages": [
      {
        "role": "user",
        "content": "How is the vehicle insurance information going?"
      },
      {
        "role": "function call",
        "content": {
          "name": "Navigation.TrafficViolations.viewCarInsurance",
          "arguments": {}
        }
      },
      {
        "role": "assistant",
        "content": "Please provide the license plate number"
      },
      {
        "role": "user",
        "content": "My license plate number is Gan B77777.I'm sorry, License plate is Su E13579. "
      },
      {
        "role": "function call",
        "content": {
          "name": "Navigation.TrafficViolations.viewCarInsurance",
          "arguments": {
            "plate_number": "Su E13579"
          }
        }
      }
    ],
    "multiple_tools": [
      {
        "name": "Finance.Insurance.getInsuranceFAQ",
        "description": "Frequently asked questions and answers about insurance",
        "parameters": {
          "type": "object",
          "properties": {
            "keyword": {
              "type": "string",
              "description": "Question Keywords"
            }
          },
          "required": [
            "keyword"
          ]
        }
      },
      {
        "name": "ConvenientLiving.AutoLife.getCarInsuranceOptions",
        "description": "Get insurance for selected car models.",
        "parameters": {
          "type": "object",
          "properties": {
            "brand": {
              "type": "string",
              "description": "Car Brand"
            }
          },
          "required": [
            "brand"
          ]
        }
      },
      {
        "name": "Navigation.TrafficViolations.viewCarInsurance",
        "description": "View Vehicle Insurance Information",
        "parameters": {
          "type": "object",
          "properties": {
            "plate_number": {
              "type": "string",
              "description": "License plate"
            }
          },
          "required": [
            "plate_number"
          ]
        }
      },
      {
        "name": "Finance.Insurance.getInsuranceCoverage",
        "description": "Check the coverage of insurance products",
        "parameters": {
          "type": "object",
          "properties": {
            "insurance_name": {
              "type": "string",
              "description": "Insurance Product Name"
            },
            "insurance_type": {
              "type": "string",
              "description": "Types of insurance products, such as life insurance, health insurance, property insurance, car insurance, etc."
            }
          },
          "required": [
            "insurance_name",
            "insurance_type"
          ]
        }
      },
      {
        "name": "Finance.Funds.getFundRiskLevel",
        "description": "Check the risk level of the designated fund",
        "parameters": {
          "type": "object",
          "properties": {
            "fund_name": {
              "type": "string",
              "description": "Fund name"
            },
            "fund_code": {
              "type": "string",
              "description": "Fund  Code"
            }
          },
          "required": [
            "fund_name",
            "fund_code"
          ]
        }
      }
    ],
    "single_tool": [
      {
        "name": "Navigation.TrafficViolations.viewCarInsurance",
        "description": "View Vehicle Insurance Information",
        "parameters": {
          "type": "object",
          "properties": {
            "plate_number": {
              "type": "string",
              "description": "License plate"
            }
          },
          "required": [
            "plate_number"
          ]
        }
      }
    ],
    "id": 6
  },
  {
    "messages": [
      {
        "role": "user",
        "content": "Find out where the bus I used to take is now and how long it will take to get to the station"
      },
      {
        "role": "function call",
        "content": {
          "name": "Navigation.PublicTransit.queryRealTimeBus",
          "arguments": {}
        }
      },
      {
        "role": "assistant",
        "content": "Please provide the bus route number"
      },
      {
        "role": "user",
        "content": "Route 88I'm sorry, Bus line number is Late-night snack 1. "
      },
      {
        "role": "function call",
        "content": {
          "name": "Navigation.PublicTransit.queryRealTimeBus",
          "arguments": {
            "bus_line_number": "Late-night snack 1"
          }
        }
      }
    ],
    "multiple_tools": [
      {
        "name": "SystemTools.SystemSettings.setSystemScreenTimeout",
        "description": "Set the auto message screen time for your phone screen",
        "parameters": {
          "type": "object",
          "properties": {
            "timeout_duration": {
              "type": "integer",
              "description": "Maximum duration of screen inactivity, in seconds"
            }
          },
          "required": [
            "timeout_duration"
          ]
        }
      },
      {
        "name": "Navigation.PublicTransit.queryRealTimeBus",
        "description": "Find the real-time location and estimated time of arrival of a given bus route",
        "parameters": {
          "type": "object",
          "properties": {
            "bus_line_number": {
              "type": "string",
              "description": "Bus line number"
            },
            "stop_name": {
              "type": "string",
              "description": "Name of bus stop"
            }
          },
          "required": [
            "bus_line_number",
            "stop_name"
          ]
        }
      },
      {
        "name": "Finance.Stocks.getStockFundInfo",
        "description": "Query details and real-time information on selected stocks",
        "parameters": {
          "type": "object",
          "properties": {
            "stock_code": {
              "type": "string",
              "description": "Ticker"
            },
            "stock_name": {
              "type": "string",
              "description": "Stock Key Name"
            }
          },
          "required": [
            "stock_code",
            "stock_name"
          ]
        }
      },
      {
        "name": "UtilityTools.AlarmClock.viewtimer",
        "description": "View assigned timers",
        "parameters": {
          "type": "object",
          "properties": {
            "timer_name": {
              "type": "string",
              "description": "Timer name, empty by default"
            },
            "timer": {
              "type": "string",
              "description": "Timer time"
            }
          },
          "required": [
            "timer_name",
            "timer"
          ]
        }
      },
      {
        "name": "Education.ChildrenEducation.searchChildMathProblem",
        "description": "Search for children's math questions",
        "parameters": {
          "type": "object",
          "properties": {
            "grade": {
              "type": "integer",
              "description": "Grades, e.g. Grade 1, Grade 2"
            }
          },
          "required": [
            "grade"
          ]
        }
      }
    ],
    "single_tool": [
      {
        "name": "Navigation.PublicTransit.queryRealTimeBus",
        "description": "Find the real-time location and estimated time of arrival of a given bus route",
        "parameters": {
          "type": "object",
          "properties": {
            "bus_line_number": {
              "type": "string",
              "description": "Bus line number"
            },
            "stop_name": {
              "type": "string",
              "description": "Name of bus stop"
            }
          },
          "required": [
            "bus_line_number",
            "stop_name"
          ]
        }
      }
    ],
    "id": 7
  },
  {
    "messages": [
      {
        "role": "user",
        "content": "I'm reporting a breakdown in my car"
      },
      {
        "role": "function call",
        "content": {
          "name": "Navigation.Bicycles.submitBikeFault",
          "arguments": {}
        }
      },
      {
        "role": "assistant",
        "content": "What’s the vehicle number?”<ex id=\"_2095360944\"/><ex id=\"_2095360943\"/><ex id=\"_2095360942\"/><ex id=\"_2095360940\"/>"
      },
      {
        "role": "user",
        "content": "My vehicle number is Beijing A88888.I'm sorry, Vehicle number is GX-2023-0325. "
      },
      {
        "role": "function call",
        "content": {
          "name": "Navigation.Bicycles.submitBikeFault",
          "arguments": {
            "number": "GX-2023-0325"
          }
        }
      }
    ],
    "multiple_tools": [
      {
        "name": "ConvenientLiving.GovernmentServices.reportTaxEvasion",
        "description": "Reporting tax evasion",
        "parameters": {
          "type": "object",
          "properties": {
            "company_name": {
              "type": "string",
              "description": "Company name"
            },
            "description": {
              "type": "string",
              "description": "Problem description"
            }
          },
          "required": [
            "company_name",
            "description"
          ]
        }
      },
      {
        "name": "ConvenientLiving.AutoLife.reportCarProblem",
        "description": "Report a malfunction or problem with your car to the platform.",
        "parameters": {
          "type": "object",
          "properties": {
            "brand": {
              "type": "string",
              "description": "Car Brand"
            },
            "problem_description": {
              "type": "string",
              "description": "Problem description"
            },
            "name": {
              "type": "string",
              "description": "Contact person"
            }
          },
          "required": [
            "brand",
            "problem_description",
            "name"
          ]
        }
      },
      {
        "name": "SocialCommunication.Community.reportCommunityPost",
        "description": "Report a post from a specific community",
        "parameters": {
          "type": "object",
          "properties": {
            "community_name": {
              "type": "string",
              "description": "The name of the community where the post is to be reported"
            },
            "comment_name": {
              "type": "string",
              "description": "Post title to report"
            }
          },
          "required": [
            "community_name",
            "comment_name"
          ]
        }
      },
      {
        "name": "Navigation.TrafficViolations.reportAccident",
        "description": "Report traffic accidents and violations",
        "parameters": {
          "type": "object",
          "properties": {
            "plate_number": {
              "type": "string",
              "description": "License plate number"
            },
            "location": {
              "type": "string",
              "description": "Site"
            }
          },
          "required": [
            "plate_number",
            "location"
          ]
        }
      },
      {
        "name": "Navigation.Bicycles.submitBikeFault",
        "description": "Submit a bicycle malfunction",
        "parameters": {
          "type": "object",
          "properties": {
            "number": {
              "type": "string",
              "description": "Vehicle number"
            }
          },
          "required": [
            "number"
          ]
        }
      }
    ],
    "single_tool": [
      {
        "name": "Navigation.Bicycles.submitBikeFault",
        "description": "Submit a bicycle malfunction",
        "parameters": {
          "type": "object",
          "properties": {
            "number": {
              "type": "string",
              "description": "Vehicle number"
            }
          },
          "required": [
            "number"
          ]
        }
      }
    ],
    "id": 8
  },
  {
    "messages": [
      {
        "role": "user",
        "content": "Something seems to be wrong with my vehicle, I need to submit a breakdown report"
      },
      {
        "role": "function call",
        "content": {
          "name": "Navigation.Bicycles.submitBikeFault",
          "arguments": {}
        }
      },
      {
        "role": "assistant",
        "content": "What’s the vehicle number?”<ex id=\"_2095360944\"/><ex id=\"_2095360943\"/><ex id=\"_2095360942\"/><ex id=\"_2095360940\"/>"
      },
      {
        "role": "user",
        "content": "The vehicle number is GX-2023-0325I'm sorry, Vehicle number is Beijing A88888. "
      },
      {
        "role": "function call",
        "content": {
          "name": "Navigation.Bicycles.submitBikeFault",
          "arguments": {
            "number": "Beijing A88888"
          }
        }
      }
    ],
    "multiple_tools": [
      {
        "name": "Navigation.TaxiCarRental.issueTaxiInvoice",
        "description": "Invoicing taxi rides",
        "parameters": {
          "type": "object",
          "properties": {
            "time": {
              "type": "string",
              "description": "Order time"
            },
            "destination": {
              "type": "string",
              "description": "Destination"
            }
          },
          "required": [
            "time",
            "destination"
          ]
        }
      },
      {
        "name": "SocialCommunication.Community.reportCommunityPost",
        "description": "Report a post from a specific community",
        "parameters": {
          "type": "object",
          "properties": {
            "community_name": {
              "type": "string",
              "description": "The name of the community where the post is to be reported"
            },
            "comment_name": {
              "type": "string",
              "description": "Post title to report"
            }
          },
          "required": [
            "community_name",
            "comment_name"
          ]
        }
      },
      {
        "name": "Navigation.TrafficViolations.reportAccident",
        "description": "Report traffic accidents and violations",
        "parameters": {
          "type": "object",
          "properties": {
            "plate_number": {
              "type": "string",
              "description": "License plate number"
            },
            "location": {
              "type": "string",
              "description": "Site"
            }
          },
          "required": [
            "plate_number",
            "location"
          ]
        }
      },
      {
        "name": "Navigation.Bicycles.submitBikeFault",
        "description": "Submit a bicycle malfunction",
        "parameters": {
          "type": "object",
          "properties": {
            "number": {
              "type": "string",
              "description": "Vehicle number"
            }
          },
          "required": [
            "number"
          ]
        }
      },
      {
        "name": "Navigation.TrafficViolations.appealViolation",
        "description": "Appealing a Designated Violation Record",
        "parameters": {
          "type": "object",
          "properties": {
            "plate_number": {
              "type": "string",
              "description": "License plate number"
            },
            "time": {
              "type": "string",
              "description": "Billing Time"
            },
            "appeal_reason": {
              "type": "string",
              "description": "Reasons for appealing"
            }
          },
          "required": [
            "plate_number",
            "time",
            "appeal_reason"
          ]
        }
      }
    ],
    "single_tool": [
      {
        "name": "Navigation.Bicycles.submitBikeFault",
        "description": "Submit a bicycle malfunction",
        "parameters": {
          "type": "object",
          "properties": {
            "number": {
              "type": "string",
              "description": "Vehicle number"
            }
          },
          "required": [
            "number"
          ]
        }
      }
    ],
    "id": 9
  },
  {
    "messages": [
      {
        "role": "user",
        "content": "Plan a route for me"
      },
      {
        "role": "function call",
        "content": {
          "name": "Navigation.MapNavigation.planNavigationRoute",
          "arguments": {}
        }
      },
      {
        "role": "assistant",
        "content": "Please provide the name or address of the departure location If there is no specific location your current location will be used"
      },
      {
        "role": "user",
        "content": "Shanghai Hongqiao Railway StationI'm sorry, The name or address of the departure location, the default current location is Tiananmen. "
      },
      {
        "role": "function call",
        "content": {
          "name": "Navigation.MapNavigation.planNavigationRoute",
          "arguments": {
            "departure": "Tiananmen"
          }
        }
      },
      {
        "role": "assistant",
        "content": "Please provide a name or address for the destination"
      },
      {
        "role": "user",
        "content": "Shanghai Disneyland"
      },
      {
        "role": "function call",
        "content": {
          "name": "Navigation.MapNavigation.planNavigationRoute",
          "arguments": {
            "departure": "Tiananmen",
            "destination": "Shanghai Disneyland"
          }
        }
      },
      {
        "role": "assistant",
        "content": "What time is your departure? The default is the current time"
      },
      {
        "role": "user",
        "content": "My departure time is 10am."
      },
      {
        "role": "function call",
        "content": {
          "name": "Navigation.MapNavigation.planNavigationRoute",
          "arguments": {
            "departure": "Tiananmen",
            "destination": "Shanghai Disneyland",
            "time": "10am"
          }
        }
      },
      {
        "role": "assistant",
        "content": "How would you like to get around by car, public transport, bike, or on foot?"
      },
      {
        "role": "user",
        "content": "I choose to drive."
      },
      {
        "role": "function call",
        "content": {
          "name": "Navigation.MapNavigation.planNavigationRoute",
          "arguments": {
            "departure": "Tiananmen",
            "destination": "Shanghai Disneyland",
            "time": "10am",
            "mode": "DRIVING"
          }
        }
      }
    ],
    "multiple_tools": [
      {
        "name": "ConvenientLiving.FoodDelivery.getRestaurantOrderEstimatedDeliveryRoute",
        "description": "Get an estimated delivery route for a given order",
        "parameters": {
          "type": "object",
          "properties": {
            "order_name": {
              "type": "string",
              "description": "Name of the order"
            }
          },
          "required": [
            "order_name"
          ]
        }
      },
      {
        "name": "Navigation.MapNavigation.vehicleNavigationRoute",
        "description": "Specify a vehicle as a way to get around and search for a route",
        "parameters": {
          "type": "object",
          "properties": {
            "departure": {
              "type": "string",
              "description": "The name or address of the departure location, the default current location"
            },
            "destination": {
              "type": "string",
              "description": "Name or address of the destination"
            },
            "vehicle": {
              "type": "string",
              "description": "Specify how you want to travel"
            }
          },
          "required": [
            "departure",
            "destination",
            "vehicle"
          ]
        }
      },
      {
        "name": "SystemTools.SystemSettings.setSystemTurnOnFlashlight",
        "description": "Turn on flashlight",
        "parameters": {
          "type": "object",
          "properties": {},
          "required": []
        }
      },
      {
        "name": "SystemTools.SystemSettings.setSystemTurnOnScreen2TV",
        "description": "Turn on phone projection to TV",
        "parameters": {
          "type": "object",
          "properties": {},
          "required": []
        }
      },
      {
        "name": "Navigation.MapNavigation.planNavigationRoute",
        "description": "Search navigation routes by origin and destination",
        "parameters": {
          "type": "object",
          "properties": {
            "departure": {
              "type": "string",
              "description": "The name or address of the departure location, the default current location"
            },
            "destination": {
              "type": "string",
              "description": "Name or address of the destination"
            },
            "time": {
              "type": "string",
              "description": "Departure time, default current time"
            },
            "mode": {
              "type": "string",
              "description": "Getting around, by car, public transport, bike, or on foot, by default"
            },
            "preferred_route": {
              "type": "string",
              "description": "Preferred route type, such as direct, few transfers, etc., optional"
            }
          },
          "required": [
            "departure",
            "destination",
            "time",
            "mode",
            "preferred_route"
          ]
        }
      }
    ],
    "single_tool": [
      {
        "name": "Navigation.MapNavigation.planNavigationRoute",
        "description": "Search navigation routes by origin and destination",
        "parameters": {
          "type": "object",
          "properties": {
            "departure": {
              "type": "string",
              "description": "The name or address of the departure location, the default current location"
            },
            "destination": {
              "type": "string",
              "description": "Name or address of the destination"
            },
            "time": {
              "type": "string",
              "description": "Departure time, default current time"
            },
            "mode": {
              "type": "string",
              "description": "Getting around, by car, public transport, bike, or on foot, by default"
            },
            "preferred_route": {
              "type": "string",
              "description": "Preferred route type, such as direct, few transfers, etc., optional"
            }
          },
          "required": [
            "departure",
            "destination",
            "time",
            "mode",
            "preferred_route"
          ]
        }
      }
    ],
    "id": 10
  },
  {
    "messages": [
      {
        "role": "user",
        "content": "To share my travel plans"
      },
      {
        "role": "function call",
        "content": {
          "name": "Navigation.MapNavigation.shareTravelRoute",
          "arguments": {}
        }
      },
      {
        "role": "assistant",
        "content": "Where are you departing from If you are not sure you can use your current location"
      },
      {
        "role": "user",
        "content": "My starting place is the office."
      },
      {
        "role": "function call",
        "content": {
          "name": "Navigation.MapNavigation.shareTravelRoute",
          "arguments": {
            "departure": "Offices"
          }
        }
      },
      {
        "role": "assistant",
        "content": "Please provide a name or address for the destination"
      },
      {
        "role": "user",
        "content": "Nearest cafeI'm sorry, Name or address of the destination is The Palace Museum. "
      },
      {
        "role": "function call",
        "content": {
          "name": "Navigation.MapNavigation.shareTravelRoute",
          "arguments": {
            "departure": "Offices",
            "destination": "The Palace Museum"
          }
        }
      }
    ],
    "multiple_tools": [
      {
        "name": "SocialCommunication.Community.shareCommunityPost",
        "description": "Share a specific post to a specific medium or to someone",
        "parameters": {
          "type": "object",
          "properties": {
            "community_name": {
              "type": "string",
              "description": "The name of the community where the post is located"
            },
            "title": {
              "type": "string",
              "description": "Prev Post Caption"
            },
            "medium": {
              "type": "string",
              "description": "Share media"
            },
            "user_name": {
              "type": "string",
              "description": "Shared by"
            }
          },
          "required": [
            "community_name",
            "title",
            "medium",
            "user_name"
          ]
        }
      },
      {
        "name": "MusicRadio.Karaoke.shareKsongWorks",
        "description": "Share work based on song name",
        "parameters": {
          "type": "object",
          "properties": {
            "song_name": {
              "type": "string",
              "description": "Song Name"
            },
            "media": {
              "type": "string",
              "description": "Media"
            },
            "name": {
              "type": "string",
              "description": "Friend name"
            }
          },
          "required": [
            "song_name",
            "media",
            "name"
          ]
        }
      },
      {
        "name": "Navigation.MapNavigation.shareTravelRoute",
        "description": "Share travel plans or directions",
        "parameters": {
          "type": "object",
          "properties": {
            "departure": {
              "type": "string",
              "description": "The name or address of the departure location, the default current location"
            },
            "destination": {
              "type": "string",
              "description": "Name or address of the destination"
            },
            "to": {
              "type": "string",
              "description": "Ways to share, like social media, texting, etc."
            }
          },
          "required": [
            "departure",
            "destination",
            "to"
          ]
        }
      },
      {
        "name": "Health.HealthManagement.shareHealthPlan",
        "description": "Share a health plan",
        "parameters": {
          "type": "object",
          "properties": {
            "goal_title": {
              "type": "string",
              "description": "Target Headings"
            },
            "media": {
              "type": "string",
              "description": "Media"
            },
            "name": {
              "type": "string",
              "description": "Friend name"
            }
          },
          "required": [
            "goal_title",
            "media",
            "name"
          ]
        }
      },
      {
        "name": "UtilityTools.Memo.shareNotes",
        "description": "Share a memo",
        "parameters": {
          "type": "object",
          "properties": {
            "title": {
              "type": "string",
              "description": "Title"
            },
            "to": {
              "type": "string",
              "description": "Shared with"
            },
            "category": {
              "type": "string",
              "description": "Classify"
            }
          },
          "required": [
            "title",
            "to",
            "category"
          ]
        }
      }
    ],
    "single_tool": [
      {
        "name": "Navigation.MapNavigation.shareTravelRoute",
        "description": "Share travel plans or directions",
        "parameters": {
          "type": "object",
          "properties": {
            "departure": {
              "type": "string",
              "description": "The name or address of the departure location, the default current location"
            },
            "destination": {
              "type": "string",
              "description": "Name or address of the destination"
            },
            "to": {
              "type": "string",
              "description": "Ways to share, like social media, texting, etc."
            }
          },
          "required": [
            "departure",
            "destination",
            "to"
          ]
        }
      }
    ],
    "id": 11
  },
  {
    "messages": [
      {
        "role": "user",
        "content": "Change the sound of my navigation, it doesn't sound so monotonous."
      },
      {
        "role": "function call",
        "content": {
          "name": "Navigation.MapNavigation.changeNavigationSound",
          "arguments": {}
        }
      },
      {
        "role": "assistant",
        "content": "Which sound type would you like to select? Male/female/vocal vocal vocal vocal vocal vocal"
      },
      {
        "role": "user",
        "content": "I want a baby tone.I'm sorry, Types of sounds, e.g. male, female, vocal is Female Voice. "
      },
      {
        "role": "function call",
        "content": {
          "name": "Navigation.MapNavigation.changeNavigationSound",
          "arguments": {
            "type": "Female Voice"
          }
        }
      }
    ],
    "multiple_tools": [
      {
        "name": "Navigation.MapNavigation.changeNavigationSound",
        "description": "Change navigation sound",
        "parameters": {
          "type": "object",
          "properties": {
            "type": {
              "type": "string",
              "description": "Types of sounds, e.g. male, female, vocal"
            },
            "person": {
              "type": "string",
              "description": "A task or object that mimics sound"
            }
          },
          "required": [
            "type",
            "person"
          ]
        }
      },
      {
        "name": "SystemTools.SystemSettings.setSystemRingtone",
        "description": "set the ringtone",
        "parameters": {
          "type": "object",
          "properties": {
            "ringtoneType": {
              "type": "string",
              "description": "Ringtone type, such as mobile phone ringtone, notification tone, etc."
            },
            "ringtone": {
              "type": "string",
              "description": "Ringtone file path or URL"
            }
          },
          "required": [
            "ringtoneType",
            "ringtone"
          ]
        }
      },
      {
        "name": "UtilityTools.AlarmClock.alterAlarm",
        "description": "Modify the alarm clock, including alarm time, ringing method, etc.",
        "parameters": {
          "type": "object",
          "properties": {
            "clock_time_name": {
              "type": "string",
              "description": "Alarm name, defaults to all alarms"
            },
            "clock_time": {
              "type": "string",
              "description": "Alarm time"
            },
            "target_time": {
              "type": "string",
              "description": "Modified target time"
            }
          },
          "required": [
            "clock_time_name",
            "clock_time",
            "target_time"
          ]
        }
      },
      {
        "name": "Photography.VideoEditing.videoColorStyleChange",
        "description": "Change the color style of your video",
        "parameters": {
          "type": "object",
          "properties": {
            "name_or_path": {
              "type": "string",
              "description": "The name or path of the video"
            },
            "style": {
              "type": "string",
              "description": "Video Styles"
            }
          },
          "required": [
            "name_or_path",
            "style"
          ]
        }
      },
      {
        "name": "OfficeSoftware.Conferencing.setMeetingOptions",
        "description": "Change the title, time, whether the video is turned on, whether the audio is turned on, etc. settings of the meeting",
        "parameters": {
          "type": "object",
          "properties": {
            "meeting_id": {
              "type": "string",
              "description": "Conference No."
            },
            "title": {
              "type": "string",
              "description": "Meeting Title:"
            },
            "time": {
              "type": "string",
              "description": "Meeting Date"
            }
          },
          "required": [
            "meeting_id",
            "title",
            "time"
          ]
        }
      }
    ],
    "single_tool": [
      {
        "name": "Navigation.MapNavigation.changeNavigationSound",
        "description": "Change navigation sound",
        "parameters": {
          "type": "object",
          "properties": {
            "type": {
              "type": "string",
              "description": "Types of sounds, e.g. male, female, vocal"
            },
            "person": {
              "type": "string",
              "description": "A task or object that mimics sound"
            }
          },
          "required": [
            "type",
            "person"
          ]
        }
      }
    ],
    "id": 12
  },
  {
    "messages": [
      {
        "role": "user",
        "content": "Find me a way. How do I get there?"
      },
      {
        "role": "function call",
        "content": {
          "name": "Navigation.MapNavigation.vehicleNavigationRoute",
          "arguments": {}
        }
      },
      {
        "role": "assistant",
        "content": "Please provide your departure location name or address If using your current location please confirm directly"
      },
      {
        "role": "user",
        "content": "People's SquareI'm sorry, The name or address of the departure location, the default current location is Sydney Opera House. "
      },
      {
        "role": "function call",
        "content": {
          "name": "Navigation.MapNavigation.vehicleNavigationRoute",
          "arguments": {
            "departure": "Sydney Opera House"
          }
        }
      },
      {
        "role": "assistant",
        "content": "Please provide your destination name or address"
      },
      {
        "role": "user",
        "content": "Shanghai Hongqiao International Airport"
      },
      {
        "role": "function call",
        "content": {
          "name": "Navigation.MapNavigation.vehicleNavigationRoute",
          "arguments": {
            "departure": "Sydney Opera House",
            "destination": "Shanghai Hongqiao International Airport"
          }
        }
      }
    ],
    "multiple_tools": [
      {
        "name": "ConvenientLiving.AutoLife.findCarNearbyDealers",
        "description": "Find a car dealership near you.",
        "parameters": {
          "type": "object",
          "properties": {},
          "required": []
        }
      },
      {
        "name": "Navigation.MapNavigation.vehicleNavigationRoute",
        "description": "Specify a vehicle as a way to get around and search for a route",
        "parameters": {
          "type": "object",
          "properties": {
            "departure": {
              "type": "string",
              "description": "The name or address of the departure location, the default current location"
            },
            "destination": {
              "type": "string",
              "description": "Name or address of the destination"
            },
            "vehicle": {
              "type": "string",
              "description": "Specify how you want to travel"
            }
          },
          "required": [
            "departure",
            "destination",
            "vehicle"
          ]
        }
      },
      {
        "name": "Health.Fitness.searchNearbyGyms",
        "description": "Find a gym near you",
        "parameters": {
          "type": "object",
          "properties": {},
          "required": []
        }
      },
      {
        "name": "ConvenientLiving.GovernmentServices.searchEnterpriseByName",
        "description": "Search related businesses based on keywords entered",
        "parameters": {
          "type": "object",
          "properties": {
            "keyword": {
              "type": "string",
              "description": "Search keywords"
            }
          },
          "required": [
            "keyword"
          ]
        }
      },
      {
        "name": "VideoPlayback.OnlineVideos.searchOnlineVideo",
        "description": "Search online videos, which can be searched based on keywords (director/publisher/video keywords); can be searched based on categories; can be searched based on AI smart search",
        "parameters": {
          "type": "object",
          "properties": {
            "keyword": {
              "type": "array",
              "description": "Director/Publisher/Video Keyword Search"
            },
            "video_type": {
              "type": "string",
              "description": "Video Type Categories, Recommended, Popular, Chase, Film and Television New Journey"
            },
            "ai_search": {
              "type": "string",
              "description": "Based on search history, viewing history can only be turned off by default"
            }
          },
          "required": [
            "keyword",
            "video_type",
            "ai_search"
          ]
        }
      }
    ],
    "single_tool": [
      {
        "name": "Navigation.MapNavigation.vehicleNavigationRoute",
        "description": "Specify a vehicle as a way to get around and search for a route",
        "parameters": {
          "type": "object",
          "properties": {
            "departure": {
              "type": "string",
              "description": "The name or address of the departure location, the default current location"
            },
            "destination": {
              "type": "string",
              "description": "Name or address of the destination"
            },
            "vehicle": {
              "type": "string",
              "description": "Specify how you want to travel"
            }
          },
          "required": [
            "departure",
            "destination",
            "vehicle"
          ]
        }
      }
    ],
    "id": 13
  },
  {
    "messages": [
      {
        "role": "user",
        "content": "Take a look at the details of your ride"
      },
      {
        "role": "function call",
        "content": {
          "name": "Navigation.TaxiCarRental.viewTaxiOrderDetail",
          "arguments": {}
        }
      },
      {
        "role": "assistant",
        "content": "What is the order time"
      },
      {
        "role": "user",
        "content": "The order was placed last Friday at 8pm.I'm sorry, Order time is 8:00 AM, 10th March. "
      },
      {
        "role": "function call",
        "content": {
          "name": "Navigation.TaxiCarRental.viewTaxiOrderDetail",
          "arguments": {
            "time": "8:00 AM, 10th March"
          }
        }
      },
      {
        "role": "assistant",
        "content": "Where to"
      },
      {
        "role": "user",
        "content": "The destination is the library"
      },
      {
        "role": "function call",
        "content": {
          "name": "Navigation.TaxiCarRental.viewTaxiOrderDetail",
          "arguments": {
            "time": "8:00 AM, 10th March",
            "destination": "Library"
          }
        }
      }
    ],
    "multiple_tools": [
      {
        "name": "SocialCommunication.Community.getCommunityUserInfo",
        "description": "Get user details for a specific community based on user nickname",
        "parameters": {
          "type": "object",
          "properties": {
            "community_name": {
              "type": "string",
              "description": "The name of the community where you want to get user information"
            },
            "user_nickname": {
              "type": "string",
              "description": "User's nickname"
            }
          },
          "required": [
            "community_name",
            "user_nickname"
          ]
        }
      },
      {
        "name": "Navigation.TaxiCarRental.viewTaxiOrderDetail",
        "description": "View details of a ride",
        "parameters": {
          "type": "object",
          "properties": {
            "time": {
              "type": "string",
              "description": "Order time"
            },
            "destination": {
              "type": "string",
              "description": "Destination"
            }
          },
          "required": [
            "time",
            "destination"
          ]
        }
      },
      {
        "name": "SocialCommunication.SocialMedia.viewMediumFriendInfo",
        "description": "View details of selected friends in selected media",
        "parameters": {
          "type": "object",
          "properties": {
            "medium_name": {
              "type": "string",
              "description": "Media name"
            },
            "name": {
              "type": "string",
              "description": "Friend's nickname"
            },
            "account_number": {
              "type": "string",
              "description": "Friend's account"
            }
          },
          "required": [
            "medium_name",
            "name",
            "account_number"
          ]
        }
      },
      {
        "name": "MusicRadio.OnlineMusic.getUserInfo",
        "description": "Get user information by username",
        "parameters": {
          "type": "object",
          "properties": {
            "name": {
              "type": "string",
              "description": "Username"
            }
          },
          "required": [
            "name"
          ]
        }
      },
      {
        "name": "Finance.Payment.viewPayUserInfo",
        "description": "View user information for your account",
        "parameters": {
          "type": "object",
          "properties": {},
          "required": []
        }
      }
    ],
    "single_tool": [
      {
        "name": "Navigation.TaxiCarRental.viewTaxiOrderDetail",
        "description": "View details of a ride",
        "parameters": {
          "type": "object",
          "properties": {
            "time": {
              "type": "string",
              "description": "Order time"
            },
            "destination": {
              "type": "string",
              "description": "Destination"
            }
          },
          "required": [
            "time",
            "destination"
          ]
        }
      }
    ],
    "id": 14
  },
  {
    "messages": [
      {
        "role": "user",
        "content": "Check the taxi records for me."
      },
      {
        "role": "function call",
        "content": {
          "name": "Navigation.TaxiCarRental.viewTaxiOrderDetail",
          "arguments": {}
        }
      },
      {
        "role": "assistant",
        "content": "Please provide the order time"
      },
      {
        "role": "user",
        "content": "My order was placed at 8am on March 10th.I'm sorry, Order time is Yesterday at 10pm. "
      },
      {
        "role": "function call",
        "content": {
          "name": "Navigation.TaxiCarRental.viewTaxiOrderDetail",
          "arguments": {
            "time": "Yesterday at 10pm"
          }
        }
      }
    ],
    "multiple_tools": [
      {
        "name": "Navigation.TaxiCarRental.searchTaxiOrders",
        "description": "View trip history",
        "parameters": {
          "type": "object",
          "properties": {
            "time": {
              "type": "string",
              "description": "Order time"
            },
            "destination": {
              "type": "string",
              "description": "destination"
            }
          },
          "required": [
            "time",
            "destination"
          ]
        }
      },
      {
        "name": "Finance.Payment.getPayHistory",
        "description": "View history of payment transactions",
        "parameters": {
          "type": "object",
          "properties": {
            "start_date": {
              "type": "string",
              "description": "Start date"
            },
            "end_date": {
              "type": "string",
              "description": "结束日期"
            }
          },
          "required": [
            "start_date",
            "end_date"
          ]
        }
      },
      {
        "name": "Navigation.TaxiCarRental.viewTaxiOrderDetail",
        "description": "View details of a ride",
        "parameters": {
          "type": "object",
          "properties": {
            "time": {
              "type": "string",
              "description": "Order time"
            },
            "destination": {
              "type": "string",
              "description": "Destination"
            }
          },
          "required": [
            "time",
            "destination"
          ]
        }
      },
      {
        "name": "SocialCommunication.Calling.viewPhoneCallRecords",
        "description": "View all call logs; view assigned call logs",
        "parameters": {
          "type": "object",
          "properties": {
            "contact_name": {
              "type": "string",
              "description": "Name of the contact to view; defaults to all records"
            }
          },
          "required": [
            "contact_name"
          ]
        }
      },
      {
        "name": "Navigation.PublicTransit.viewBusHistory",
        "description": "Viewing a user's transit history",
        "parameters": {
          "type": "object",
          "properties": {},
          "required": []
        }
      }
    ],
    "single_tool": [
      {
        "name": "Navigation.TaxiCarRental.viewTaxiOrderDetail",
        "description": "View details of a ride",
        "parameters": {
          "type": "object",
          "properties": {
            "time": {
              "type": "string",
              "description": "Order time"
            },
            "destination": {
              "type": "string",
              "description": "Destination"
            }
          },
          "required": [
            "time",
            "destination"
          ]
        }
      }
    ],
    "id": 15
  },
  {
    "messages": [
      {
        "role": "user",
        "content": "Share my taxi ride"
      },
      {
        "role": "function call",
        "content": {
          "name": "Navigation.TaxiCarRental.shareTaxiOrder",
          "arguments": {}
        }
      },
      {
        "role": "assistant",
        "content": "What time is the order"
      },
      {
        "role": "user",
        "content": "The order was placed at 3pm today."
      },
      {
        "role": "function call",
        "content": {
          "name": "Navigation.TaxiCarRental.shareTaxiOrder",
          "arguments": {
            "time": "Today at 3pm"
          }
        }
      },
      {
        "role": "assistant",
        "content": "Please provide a taxi destination"
      },
      {
        "role": "user",
        "content": "Central Library, please.I'm sorry, destination is Shanghai. "
      },
      {
        "role": "function call",
        "content": {
          "name": "Navigation.TaxiCarRental.shareTaxiOrder",
          "arguments": {
            "time": "Today at 3pm",
            "destination": "Shanghai"
          }
        }
      }
    ],
    "multiple_tools": [
      {
        "name": "MusicRadio.Karaoke.shareKsongWorks",
        "description": "Share work based on song name",
        "parameters": {
          "type": "object",
          "properties": {
            "song_name": {
              "type": "string",
              "description": "Song Name"
            },
            "media": {
              "type": "string",
              "description": "Media"
            },
            "name": {
              "type": "string",
              "description": "Friend name"
            }
          },
          "required": [
            "song_name",
            "media",
            "name"
          ]
        }
      },
      {
        "name": "UtilityTools.Search.shareWebPage",
        "description": "Share the current page to other platforms/media",
        "parameters": {
          "type": "object",
          "properties": {
            "media": {
              "type": "string",
              "description": "Media or platform to share"
            },
            "person": {
              "type": "string",
              "description": "Specify who to share with"
            }
          },
          "required": [
            "media",
            "person"
          ]
        }
      },
      {
        "name": "Navigation.TaxiCarRental.shareTaxiOrder",
        "description": "Share route",
        "parameters": {
          "type": "object",
          "properties": {
            "time": {
              "type": "string",
              "description": "Order time"
            },
            "destination": {
              "type": "string",
              "description": "destination"
            },
            "media": {
              "type": "string",
              "description": "Choose Socials To Share Single Post"
            }
          },
          "required": [
            "time",
            "destination",
            "media"
          ]
        }
      },
      {
        "name": "VideoPlayback.OnlineVideos.shareOnlineVideo",
        "description": "Share a video to other media",
        "parameters": {
          "type": "object",
          "properties": {
            "name": {
              "type": "string",
              "description": "Video Name"
            },
            "media": {
              "type": "string",
              "description": "Share video to: WeChat, etc."
            }
          },
          "required": [
            "name",
            "media"
          ]
        }
      },
      {
        "name": "MusicRadio.RadioStations.radioShareRadio",
        "description": "Share the station to social platforms based on the station name",
        "parameters": {
          "type": "object",
          "properties": {
            "radio_name": {
              "type": "string",
              "description": "Radio Name"
            },
            "to": {
              "type": "string",
              "description": "Sharing platform"
            }
          },
          "required": [
            "radio_name",
            "to"
          ]
        }
      }
    ],
    "single_tool": [
      {
        "name": "Navigation.TaxiCarRental.shareTaxiOrder",
        "description": "Share route",
        "parameters": {
          "type": "object",
          "properties": {
            "time": {
              "type": "string",
              "description": "Order time"
            },
            "destination": {
              "type": "string",
              "description": "destination"
            },
            "media": {
              "type": "string",
              "description": "Choose Socials To Share Single Post"
            }
          },
          "required": [
            "time",
            "destination",
            "media"
          ]
        }
      }
    ],
    "id": 16
  },
  {
    "messages": [
      {
        "role": "user",
        "content": "Rate your driver from a previous trip"
      },
      {
        "role": "function call",
        "content": {
          "name": "Navigation.TaxiCarRental.evaluateTaxiOrder",
          "arguments": {}
        }
      },
      {
        "role": "assistant",
        "content": "What is the order time"
      },
      {
        "role": "user",
        "content": "It was an order placed last Friday night."
      },
      {
        "role": "function call",
        "content": {
          "name": "Navigation.TaxiCarRental.evaluateTaxiOrder",
          "arguments": {
            "time": "Last Friday night"
          }
        }
      },
      {
        "role": "assistant",
        "content": "Please provide a destination for your trip"
      },
      {
        "role": "user",
        "content": "The destination is Friends Café, which is located in the center of the city.I'm sorry, Order time is March 10. "
      },
      {
        "role": "function call",
        "content": {
          "name": "Navigation.TaxiCarRental.evaluateTaxiOrder",
          "arguments": {
            "time": "March 10",
            "destination": "Friends Remember Cafe"
          }
        }
      },
      {
        "role": "assistant",
        "content": "Please provide a review score"
      },
      {
        "role": "user",
        "content": "I rated this experience 5 and was very satisfied."
      },
      {
        "role": "function call",
        "content": {
          "name": "Navigation.TaxiCarRental.evaluateTaxiOrder",
          "arguments": {
            "time": "March 10",
            "destination": "Friends Remember Cafe",
            "rating": "5"
          }
        }
      }
    ],
    "multiple_tools": [
      {
        "name": "SocialCommunication.InstantMessaging.receiveFile",
        "description": "Receive files from specified contacts or groups",
        "parameters": {
          "type": "object",
          "properties": {
            "sender_name": {
              "type": "string",
              "description": "The contact or group who sent the file"
            }
          },
          "required": [
            "sender_name"
          ]
        }
      },
      {
        "name": "SystemTools.SystemSettings.setSystemRingtone",
        "description": "set the ringtone",
        "parameters": {
          "type": "object",
          "properties": {
            "ringtoneType": {
              "type": "string",
              "description": "Ringtone type, such as mobile phone ringtone, notification tone, etc."
            },
            "ringtone": {
              "type": "string",
              "description": "Ringtone file path or URL"
            }
          },
          "required": [
            "ringtoneType",
            "ringtone"
          ]
        }
      },
      {
        "name": "Navigation.TaxiCarRental.evaluateTaxiOrder",
        "description": "Rate the driver who completed the trip",
        "parameters": {
          "type": "object",
          "properties": {
            "time": {
              "type": "string",
              "description": "Order time"
            },
            "destination": {
              "type": "string",
              "description": "Destination"
            },
            "rating": {
              "type": "string",
              "description": "Review Score"
            }
          },
          "required": [
            "time",
            "destination",
            "rating"
          ]
        }
      },
      {
        "name": "UtilityTools.AlarmClock.restartTimer",
        "description": "Reset the current timer or continue with the paused timer",
        "parameters": {
          "type": "object",
          "properties": {},
          "required": []
        }
      },
      {
        "name": "OnlineShopping.ExpressDelivery.returnExpressPreOrder",
        "description": "Specify a time to initiate the shipment to the courier",
        "parameters": {
          "type": "object",
          "properties": {
            "date": {
              "type": "string",
              "description": "Shipping time"
            },
            "recipient_address": {
              "type": "string",
              "description": "<g id=\"Bold\">Receiver's</g> <g id=\"Bold\">Address:</g>"
            }
          },
          "required": [
            "date",
            "recipient_address"
          ]
        }
      }
    ],
    "single_tool": [
      {
        "name": "Navigation.TaxiCarRental.evaluateTaxiOrder",
        "description": "Rate the driver who completed the trip",
        "parameters": {
          "type": "object",
          "properties": {
            "time": {
              "type": "string",
              "description": "Order time"
            },
            "destination": {
              "type": "string",
              "description": "Destination"
            },
            "rating": {
              "type": "string",
              "description": "Review Score"
            }
          },
          "required": [
            "time",
            "destination",
            "rating"
          ]
        }
      }
    ],
    "id": 17
  },
  {
    "messages": [
      {
        "role": "user",
        "content": "I need an invoice for my ride"
      },
      {
        "role": "function call",
        "content": {
          "name": "Navigation.TaxiCarRental.issueTaxiInvoice",
          "arguments": {}
        }
      },
      {
        "role": "assistant",
        "content": "What time is the order"
      },
      {
        "role": "user",
        "content": "The order was placed on March 1st."
      },
      {
        "role": "function call",
        "content": {
          "name": "Navigation.TaxiCarRental.issueTaxiInvoice",
          "arguments": {
            "time": "March 1"
          }
        }
      },
      {
        "role": "assistant",
        "content": "Where to"
      },
      {
        "role": "user",
        "content": "The destination is Beijing International Convention Center, located in Chaoyang District, Beijing.I'm sorry, Order time is Yesterday at 9pm. "
      },
      {
        "role": "function call",
        "content": {
          "name": "Navigation.TaxiCarRental.issueTaxiInvoice",
          "arguments": {
            "time": "Yesterday at 9pm",
            "destination": "Beijing International Convention Center"
          }
        }
      }
    ],
    "multiple_tools": [
      {
        "name": "Finance.Funds.recommendFunds",
        "description": "Recommend user-friendly funds based on investment objectives and duration",
        "parameters": {
          "type": "object",
          "properties": {
            "objective": {
              "type": "string",
              "description": "Investment objectives such as robust, aggressive"
            },
            "investment_term": {
              "type": "string",
              "description": "Investment term, e.g. short term, long term"
            }
          },
          "required": [
            "objective",
            "investment_term"
          ]
        }
      },
      {
        "name": "Navigation.TaxiCarRental.createCarRentalOrder",
        "description": "Book a rental car",
        "parameters": {
          "type": "object",
          "properties": {
            "location": {
              "type": "string",
              "description": "Pick-up from"
            },
            "start_time": {
              "type": "string",
              "description": "Start Time "
            },
            "end_time": {
              "type": "string",
              "description": "drop-off date"
            }
          },
          "required": [
            "location",
            "start_time",
            "end_time"
          ]
        }
      },
      {
        "name": "Navigation.TaxiCarRental.issueTaxiInvoice",
        "description": "Invoicing taxi rides",
        "parameters": {
          "type": "object",
          "properties": {
            "time": {
              "type": "string",
              "description": "Order time"
            },
            "destination": {
              "type": "string",
              "description": "Destination"
            }
          },
          "required": [
            "time",
            "destination"
          ]
        }
      },
      {
        "name": "ConvenientLiving.JobRecruitment.getJobSalaryRange",
        "description": "Enter the job title to get its approximate salary range",
        "parameters": {
          "type": "object",
          "properties": {
            "job_title": {
              "type": "string",
              "description": "Position name"
            }
          },
          "required": [
            "job_title"
          ]
        }
      },
      {
        "name": "Education.ChildrenEducation.getChildLearningProgress",
        "description": "Get your child's progress",
        "parameters": {
          "type": "object",
          "properties": {},
          "required": []
        }
      }
    ],
    "single_tool": [
      {
        "name": "Navigation.TaxiCarRental.issueTaxiInvoice",
        "description": "Invoicing taxi rides",
        "parameters": {
          "type": "object",
          "properties": {
            "time": {
              "type": "string",
              "description": "Order time"
            },
            "destination": {
              "type": "string",
              "description": "Destination"
            }
          },
          "required": [
            "time",
            "destination"
          ]
        }
      }
    ],
    "id": 18
  },
  {
    "messages": [
      {
        "role": "user",
        "content": "Find out where's available car right now"
      },
      {
        "role": "function call",
        "content": {
          "name": "Navigation.TaxiCarRental.searchCarRental",
          "arguments": {}
        }
      },
      {
        "role": "assistant",
        "content": "Where is your pickup location?"
      },
      {
        "role": "user",
        "content": "The pick-up location is Beijing Capital International Airport.I'm sorry, Pick-up from is Sanlitun, Chaoyang District, Beijing. "
      },
      {
        "role": "function call",
        "content": {
          "name": "Navigation.TaxiCarRental.searchCarRental",
          "arguments": {
            "location": "Sanlitun, Chaoyang District, Beijing"
          }
        }
      },
      {
        "role": "assistant",
        "content": "What time does it start?"
      },
      {
        "role": "user",
        "content": "The start time is 8am on April 5, 2023, remember to set a reminder."
      },
      {
        "role": "function call",
        "content": {
          "name": "Navigation.TaxiCarRental.searchCarRental",
          "arguments": {
            "location": "Sanlitun, Chaoyang District, Beijing",
            "start_time": "04/05/2023 08:00"
          }
        }
      },
      {
        "role": "assistant",
        "content": "What is the return time?"
      },
      {
        "role": "user",
        "content": "Please remind me that the return time is 6pm on April 10, 2023."
      },
      {
        "role": "function call",
        "content": {
          "name": "Navigation.TaxiCarRental.searchCarRental",
          "arguments": {
            "location": "Sanlitun, Chaoyang District, Beijing",
            "start_time": "04/05/2023 08:00",
            "end_time": "April 10, 2023 at 6pm"
          }
        }
      }
    ],
    "multiple_tools": [
      {
        "name": "ConvenientLiving.JobRecruitment.checkJobPositionAvailability",
        "description": "Check if a specific position is still being recruited",
        "parameters": {
          "type": "object",
          "properties": {
            "job_name": {
              "type": "string",
              "description": "Position name"
            },
            "company_name": {
              "type": "string",
              "description": "Company name"
            }
          },
          "required": [
            "job_name",
            "company_name"
          ]
        }
      },
      {
        "name": "OfficeSoftware.Conferencing.viewParticipants",
        "description": "Get a list of participants for the current meeting",
        "parameters": {
          "type": "object",
          "properties": {
            "meeting_id": {
              "type": "string",
              "description": "Conference No."
            },
            "title": {
              "type": "string",
              "description": "Meeting Title:"
            },
            "time": {
              "type": "string",
              "description": "Meeting Date"
            }
          },
          "required": [
            "meeting_id",
            "title",
            "time"
          ]
        }
      },
      {
        "name": "MusicRadio.OnlineMusic.getRecommendedPlaylists",
        "description": "Get recommended songs by mood and scene",
        "parameters": {
          "type": "object",
          "properties": {
            "mood": {
              "type": "string",
              "description": "Emotions"
            },
            "scene": {
              "type": "string",
              "description": "setting"
            }
          },
          "required": [
            "mood",
            "scene"
          ]
        }
      },
      {
        "name": "ConvenientLiving.BuyingRentingHomes.searchRentingHouses",
        "description": "Search for rentals by criteria",
        "parameters": {
          "type": "object",
          "properties": {
            "price": {
              "type": "string",
              "description": "Rents"
            },
            "house_area": {
              "type": "string",
              "description": "Area"
            },
            "level": {
              "type": "string",
              "description": "Floor"
            },
            "age": {
              "type": "integer",
              "description": "fixed number of years"
            },
            "house_type": {
              "type": "string",
              "description": "Layout"
            },
            "housing_estate": {
              "type": "string",
              "description": "Community"
            },
            "location": {
              "type": "string",
              "description": "Position"
            },
            "indoor_decoration": {
              "type": "string",
              "description": "decorate"
            },
            "furniture": {
              "type": "string",
              "description": "Furniture"
            }
          },
          "required": [
            "price",
            "house_area",
            "level",
            "age",
            "house_type",
            "housing_estate",
            "location",
            "indoor_decoration",
            "furniture"
          ]
        }
      },
      {
        "name": "Navigation.TaxiCarRental.searchCarRental",
        "description": "See cars available in your location",
        "parameters": {
          "type": "object",
          "properties": {
            "location": {
              "type": "string",
              "description": "Pick-up from"
            },
            "start_time": {
              "type": "string",
              "description": "Start Time "
            },
            "end_time": {
              "type": "string",
              "description": "drop-off date"
            }
          },
          "required": [
            "location",
            "start_time",
            "end_time"
          ]
        }
      }
    ],
    "single_tool": [
      {
        "name": "Navigation.TaxiCarRental.searchCarRental",
        "description": "See cars available in your location",
        "parameters": {
          "type": "object",
          "properties": {
            "location": {
              "type": "string",
              "description": "Pick-up from"
            },
            "start_time": {
              "type": "string",
              "description": "Start Time "
            },
            "end_time": {
              "type": "string",
              "description": "drop-off date"
            }
          },
          "required": [
            "location",
            "start_time",
            "end_time"
          ]
        }
      }
    ],
    "id": 19
  },
  {
    "messages": [
      {
        "role": "user",
        "content": "I need to rent a car and book it for me"
      },
      {
        "role": "function call",
        "content": {
          "name": "Navigation.TaxiCarRental.createCarRentalOrder",
          "arguments": {}
        }
      },
      {
        "role": "assistant",
        "content": "Where to pick up your car"
      },
      {
        "role": "user",
        "content": "Pick up at Beijing Capital International Airport."
      },
      {
        "role": "function call",
        "content": {
          "name": "Navigation.TaxiCarRental.createCarRentalOrder",
          "arguments": {
            "location": "Beijing Capital International Airport"
          }
        }
      },
      {
        "role": "assistant",
        "content": "What time does it start?"
      },
      {
        "role": "user",
        "content": "It started at 9 am on April 10th."
      },
      {
        "role": "function call",
        "content": {
          "name": "Navigation.TaxiCarRental.createCarRentalOrder",
          "arguments": {
            "location": "Beijing Capital International Airport",
            "start_time": "9 am on April 10th"
          }
        }
      },
      {
        "role": "assistant",
        "content": "When is the dropoff time?"
      },
      {
        "role": "user",
        "content": "The return time is 6:00 pm on April 15th, remember to return it on time.I'm sorry, drop-off date is May-22. "
      },
      {
        "role": "function call",
        "content": {
          "name": "Navigation.TaxiCarRental.createCarRentalOrder",
          "arguments": {
            "location": "Beijing Capital International Airport",
            "start_time": "9 am on April 10th",
            "end_time": "May-22"
          }
        }
      }
    ],
    "multiple_tools": [
      {
        "name": "UtilityTools.AlarmClock.restartTimer",
        "description": "Reset the current timer or continue with the paused timer",
        "parameters": {
          "type": "object",
          "properties": {},
          "required": []
        }
      },
      {
        "name": "OfficeSoftware.CloudStorage.netdiskRenameFiles",
        "description": "Renaming Files in Cloud Drive",
        "parameters": {
          "type": "object",
          "properties": {
            "origin_name": {
              "type": "string",
              "description": "Original filename"
            },
            "target_name": {
              "type": "string",
              "description": "New file name"
            }
          },
          "required": [
            "origin_name",
            "target_name"
          ]
        }
      },
      {
        "name": "OnlineShopping.ExpressDelivery.returnExpressPreOrder",
        "description": "Specify a time to initiate the shipment to the courier",
        "parameters": {
          "type": "object",
          "properties": {
            "date": {
              "type": "string",
              "description": "Shipping time"
            },
            "recipient_address": {
              "type": "string",
              "description": "<g id=\"Bold\">Receiver's</g> <g id=\"Bold\">Address:</g>"
            }
          },
          "required": [
            "date",
            "recipient_address"
          ]
        }
      },
      {
        "name": "Navigation.TaxiCarRental.createCarRentalOrder",
        "description": "Book a rental car",
        "parameters": {
          "type": "object",
          "properties": {
            "location": {
              "type": "string",
              "description": "Pick-up from"
            },
            "start_time": {
              "type": "string",
              "description": "Start Time "
            },
            "end_time": {
              "type": "string",
              "description": "drop-off date"
            }
          },
          "required": [
            "location",
            "start_time",
            "end_time"
          ]
        }
      },
      {
        "name": "SystemTools.SystemSettings.resetMobilePhone",
        "description": "Restore phone factory settings",
        "parameters": {
          "type": "object",
          "properties": {},
          "required": []
        }
      }
    ],
    "single_tool": [
      {
        "name": "Navigation.TaxiCarRental.createCarRentalOrder",
        "description": "Book a rental car",
        "parameters": {
          "type": "object",
          "properties": {
            "location": {
              "type": "string",
              "description": "Pick-up from"
            },
            "start_time": {
              "type": "string",
              "description": "Start Time "
            },
            "end_time": {
              "type": "string",
              "description": "drop-off date"
            }
          },
          "required": [
            "location",
            "start_time",
            "end_time"
          ]
        }
      }
    ],
    "id": 20
  },
  {
    "messages": [
      {
        "role": "user",
        "content": "Cancel Rental"
      },
      {
        "role": "function call",
        "content": {
          "name": "Navigation.TaxiCarRental.cancelCarRentalOrder",
          "arguments": {}
        }
      },
      {
        "role": "assistant",
        "content": "When to cancel"
      },
      {
        "role": "user",
        "content": "I'll take care of the cancellation tomorrow morning.I'm sorry, Release Date is Today at 3pm. "
      },
      {
        "role": "function call",
        "content": {
          "name": "Navigation.TaxiCarRental.cancelCarRentalOrder",
          "arguments": {
            "time": "Today at 3pm"
          }
        }
      }
    ],
    "multiple_tools": [
      {
        "name": "SocialCommunication.Community.unlikeCommunityPost",
        "description": "Unlike a specific post",
        "parameters": {
          "type": "object",
          "properties": {
            "community_name": {
              "type": "string",
              "description": "The name of the community where you want to unlike the post"
            },
            "post_name": {
              "type": "string",
              "description": "Title of the post to unlike"
            }
          },
          "required": [
            "community_name",
            "post_name"
          ]
        }
      },
      {
        "name": "OfficeSoftware.Email.uncollectMail",
        "description": "Unfavorite the specified message",
        "parameters": {
          "type": "object",
          "properties": {
            "mail_title": {
              "type": "string",
              "description": "Title of the message to unfavorite"
            }
          },
          "required": [
            "mail_title"
          ]
        }
      },
      {
        "name": "Navigation.TaxiCarRental.cancelCarRentalOrder",
        "description": "Cancel the rental (all pending reservations are canceled by default)",
        "parameters": {
          "type": "object",
          "properties": {
            "time": {
              "type": "string",
              "description": "Release Date"
            }
          },
          "required": [
            "time"
          ]
        }
      },
      {
        "name": "Health.Fitness.cancelBookFitnessClass",
        "description": "Cancel scheduled fitness class",
        "parameters": {
          "type": "object",
          "properties": {
            "name": {
              "type": "string",
              "description": "Course Title"
            }
          },
          "required": [
            "name"
          ]
        }
      },
      {
        "name": "Education.OnlineClasses.cancelCourse",
        "description": "Cancel Enrolled Courses",
        "parameters": {
          "type": "object",
          "properties": {
            "course_name": {
              "type": "string",
              "description": "Course Title"
            }
          },
          "required": [
            "course_name"
          ]
        }
      }
    ],
    "single_tool": [
      {
        "name": "Navigation.TaxiCarRental.cancelCarRentalOrder",
        "description": "Cancel the rental (all pending reservations are canceled by default)",
        "parameters": {
          "type": "object",
          "properties": {
            "time": {
              "type": "string",
              "description": "Release Date"
            }
          },
          "required": [
            "time"
          ]
        }
      }
    ],
    "id": 21
  },
  {
    "messages": [
      {
        "role": "user",
        "content": "My recent order had a minor issue with the vehicle and needs to be escalated"
      },
      {
        "role": "function call",
        "content": {
          "name": "Navigation.TaxiCarRental.reportCarRentalFault",
          "arguments": {}
        }
      },
      {
        "role": "assistant",
        "content": "Please provide Booking Order ID"
      },
      {
        "role": "user",
        "content": "My order ID is DD20230401SZ1234, please check it for me.I'm sorry, Booking Order ID is 20230401001. "
      },
      {
        "role": "function call",
        "content": {
          "name": "Navigation.TaxiCarRental.reportCarRentalFault",
          "arguments": {
            "order_id": "20230401001"
          }
        }
      }
    ],
    "multiple_tools": [
      {
        "name": "Navigation.TaxiCarRental.reportCarRentalFault",
        "description": "Escalate vehicle issue based on order",
        "parameters": {
          "type": "object",
          "properties": {
            "order_id": {
              "type": "string",
              "description": "Booking Order ID"
            },
            "content": {
              "type": "string",
              "description": "Questions"
            }
          },
          "required": [
            "order_id",
            "content"
          ]
        }
      },
      {
        "name": "OnlineShopping.ExpressDelivery.signForOrderExpress",
        "description": "Sign and receive courier orders according to the designated courier number",
        "parameters": {
          "type": "object",
          "properties": {
            "date": {
              "type": "string",
              "description": "Express date"
            },
            "express_id": {
              "type": "string",
              "description": "Tracking Number"
            }
          },
          "required": [
            "date",
            "express_id"
          ]
        }
      },
      {
        "name": "OnlineShopping.Mall.searchCommodityOrders",
        "description": "Query all eligible orders by commodity name and other criteria",
        "parameters": {
          "type": "object",
          "properties": {
            "goods": {
              "type": "string",
              "description": "Product Name"
            },
            "order_stage": {
              "type": "string",
              "description": "Order status, e.g. Pending Payment, Pending Receipt, Completed, Cancelled, Refund/After Sales"
            },
            "evaluate_stage": {
              "type": "string",
              "description": "Review status, e.g. reviewed, pending review"
            }
          },
          "required": [
            "goods",
            "order_stage",
            "evaluate_stage"
          ]
        }
      },
      {
        "name": "OnlineShopping.SecondhandTrading.searchSecondhandSaleOrders",
        "description": "Search for item orders by keyword, and query all current status orders directly by default",
        "parameters": {
          "type": "object",
          "properties": {
            "goods_order": {
              "type": "string",
              "description": "Product name keywords"
            }
          },
          "required": [
            "goods_order"
          ]
        }
      },
      {
        "name": "ConvenientLiving.FoodDelivery.updateRestaurantOrder",
        "description": "Updating order information based on the order, such as delivery address, notes, etc.",
        "parameters": {
          "type": "object",
          "properties": {
            "order_name": {
              "type": "string",
              "description": "Contents of the order"
            },
            "delivery_address": {
              "type": "string",
              "description": "Delivery address"
            },
            "delivery_time": {
              "type": "string",
              "description": "Expected delivery time in HH: mm format"
            },
            "note": {
              "type": "string",
              "description": "Remarks"
            }
          },
          "required": [
            "order_name",
            "delivery_address",
            "delivery_time",
            "note"
          ]
        }
      }
    ],
    "single_tool": [
      {
        "name": "Navigation.TaxiCarRental.reportCarRentalFault",
        "description": "Escalate vehicle issue based on order",
        "parameters": {
          "type": "object",
          "properties": {
            "order_id": {
              "type": "string",
              "description": "Booking Order ID"
            },
            "content": {
              "type": "string",
              "description": "Questions"
            }
          },
          "required": [
            "order_id",
            "content"
          ]
        }
      }
    ],
    "id": 22
  },
  {
    "messages": [
      {
        "role": "user",
        "content": "I noticed that the vehicle is in a bit of a condition, I need to give feedback"
      },
      {
        "role": "function call",
        "content": {
          "name": "Navigation.TaxiCarRental.reportCarRentalFault",
          "arguments": {}
        }
      },
      {
        "role": "assistant",
        "content": "Please provide Booking Order ID"
      },
      {
        "role": "user",
        "content": "My order ID is 20230325BJ0001, please check it for me.I'm sorry, Booking Order ID is DD20230401SZ1234. "
      },
      {
        "role": "function call",
        "content": {
          "name": "Navigation.TaxiCarRental.reportCarRentalFault",
          "arguments": {
            "order_id": "DD20230401SZ1234"
          }
        }
      }
    ],
    "multiple_tools": [
      {
        "name": "NewsMagazines.News.postNewsComment",
        "description": "Post user comments under specified news",
        "parameters": {
          "type": "object",
          "properties": {
            "news_name": {
              "type": "string",
              "description": "News Name"
            },
            "comment_content": {
              "type": "string",
              "description": "Comments"
            }
          },
          "required": [
            "news_name",
            "comment_content"
          ]
        }
      },
      {
        "name": "Education.OnlineClasses.postCourseReview",
        "description": "User commented on a given course",
        "parameters": {
          "type": "object",
          "properties": {
            "course_name": {
              "type": "string",
              "description": "Course Title"
            },
            "teacher_name": {
              "type": "string",
              "description": "Educator name:"
            },
            "content": {
              "type": "string",
              "description": "Review Content"
            }
          },
          "required": [
            "course_name",
            "teacher_name",
            "content"
          ]
        }
      },
      {
        "name": "Travel.ScenicAreaServices.addScenicSpotComment",
        "description": "Comment on user-specified scenic spots",
        "parameters": {
          "type": "object",
          "properties": {
            "name": {
              "type": "string",
              "description": "Name of the tourist area"
            },
            "comment": {
              "type": "string",
              "description": "Comments"
            }
          },
          "required": [
            "name",
            "comment"
          ]
        }
      },
      {
        "name": "SocialCommunication.Community.createCommunityComment",
        "description": "Create a new comment under a post in a specific community",
        "parameters": {
          "type": "object",
          "properties": {
            "community_name": {
              "type": "string",
              "description": "The name of the community where you want to create the review"
            },
            "post_name": {
              "type": "string",
              "description": "Title of the post to comment on"
            },
            "comment": {
              "type": "string",
              "description": "The content of the review"
            }
          },
          "required": [
            "community_name",
            "post_name",
            "comment"
          ]
        }
      },
      {
        "name": "Navigation.TaxiCarRental.reportCarRentalFault",
        "description": "Escalate vehicle issue based on order",
        "parameters": {
          "type": "object",
          "properties": {
            "order_id": {
              "type": "string",
              "description": "Booking Order ID"
            },
            "content": {
              "type": "string",
              "description": "Questions"
            }
          },
          "required": [
            "order_id",
            "content"
          ]
        }
      }
    ],
    "single_tool": [
      {
        "name": "Navigation.TaxiCarRental.reportCarRentalFault",
        "description": "Escalate vehicle issue based on order",
        "parameters": {
          "type": "object",
          "properties": {
            "order_id": {
              "type": "string",
              "description": "Booking Order ID"
            },
            "content": {
              "type": "string",
              "description": "Questions"
            }
          },
          "required": [
            "order_id",
            "content"
          ]
        }
      }
    ],
    "id": 23
  },
  {
    "messages": [
      {
        "role": "user",
        "content": "Search a flight for me"
      },
      {
        "role": "function call",
        "content": {
          "name": "Navigation.FlightTickets.searchFlight",
          "arguments": {}
        }
      },
      {
        "role": "assistant",
        "content": "What time is your departure time"
      },
      {
        "role": "user",
        "content": "I plan to leave on May 1st."
      },
      {
        "role": "function call",
        "content": {
          "name": "Navigation.FlightTickets.searchFlight",
          "arguments": {
            "date": "May 1st"
          }
        }
      },
      {
        "role": "assistant",
        "content": "Please provide your departure location"
      },
      {
        "role": "user",
        "content": "I leave from London."
      },
      {
        "role": "function call",
        "content": {
          "name": "Navigation.FlightTickets.searchFlight",
          "arguments": {
            "date": "May 1st",
            "departure": "Londorn"
          }
        }
      },
      {
        "role": "assistant",
        "content": "Where will this one-way trip <g id=\"20\">end</g>?"
      },
      {
        "role": "user",
        "content": "My destination is Paris."
      },
      {
        "role": "function call",
        "content": {
          "name": "Navigation.FlightTickets.searchFlight",
          "arguments": {
            "date": "May 1st",
            "departure": "Londorn",
            "destination": "Paris"
          }
        }
      },
      {
        "role": "assistant",
        "content": "Do you need economy or business class"
      },
      {
        "role": "user",
        "content": "I need economy class.I'm sorry, Origination is Guangzhou. "
      },
      {
        "role": "function call",
        "content": {
          "name": "Navigation.FlightTickets.searchFlight",
          "arguments": {
            "date": "May 1st",
            "departure": "Guangzhou",
            "destination": "Paris",
            "site_type": "Economy Class"
          }
        }
      }
    ],
    "multiple_tools": [
      {
        "name": "ConvenientLiving.GovernmentServices.searchEnterpriseByName",
        "description": "Search related businesses based on keywords entered",
        "parameters": {
          "type": "object",
          "properties": {
            "keyword": {
              "type": "string",
              "description": "Search keywords"
            }
          },
          "required": [
            "keyword"
          ]
        }
      },
      {
        "name": "Travel.ItineraryServices.searchTravelRoute",
        "description": "Search for relevant travel itineraries based on keywords",
        "parameters": {
          "type": "object",
          "properties": {
            "keyword": {
              "type": "string",
              "description": "Search keywords"
            }
          },
          "required": [
            "keyword"
          ]
        }
      },
      {
        "name": "Navigation.FlightTickets.searchCheapFlights",
        "description": "Search cheap flights by specified criteria",
        "parameters": {
          "type": "object",
          "properties": {
            "type": {
              "type": "string",
              "description": "One way, round trip"
            },
            "departure": {
              "type": "string",
              "description": "Origination"
            },
            "destination": {
              "type": "string",
              "description": "Reach ground"
            },
            "travel_date": {
              "type": "string",
              "description": "Specify date, next month, next three months, etc."
            }
          },
          "required": [
            "type",
            "departure",
            "destination",
            "travel_date"
          ]
        }
      },
      {
        "name": "Navigation.FlightTickets.searchFlight",
        "description": "Find tickets for specific dates",
        "parameters": {
          "type": "object",
          "properties": {
            "date": {
              "type": "string",
              "description": "Trip start time"
            },
            "departure": {
              "type": "string",
              "description": "Origination"
            },
            "destination": {
              "type": "string",
              "description": "Reach ground"
            },
            "type": {
              "type": "string",
              "description": "One-way, round-trip, multi-trip"
            },
            "site_type": {
              "type": "string",
              "description": "Economy, Business"
            }
          },
          "required": [
            "date",
            "departure",
            "destination",
            "type",
            "site_type"
          ]
        }
      },
      {
        "name": "ConvenientLiving.BuyingRentingHomes.searchRentingHouses",
        "description": "Search for rentals by criteria",
        "parameters": {
          "type": "object",
          "properties": {
            "price": {
              "type": "string",
              "description": "Rents"
            },
            "house_area": {
              "type": "string",
              "description": "Area"
            },
            "level": {
              "type": "string",
              "description": "Floor"
            },
            "age": {
              "type": "integer",
              "description": "fixed number of years"
            },
            "house_type": {
              "type": "string",
              "description": "Layout"
            },
            "housing_estate": {
              "type": "string",
              "description": "Community"
            },
            "location": {
              "type": "string",
              "description": "Position"
            },
            "indoor_decoration": {
              "type": "string",
              "description": "decorate"
            },
            "furniture": {
              "type": "string",
              "description": "Furniture"
            }
          },
          "required": [
            "price",
            "house_area",
            "level",
            "age",
            "house_type",
            "housing_estate",
            "location",
            "indoor_decoration",
            "furniture"
          ]
        }
      }
    ],
    "single_tool": [
      {
        "name": "Navigation.FlightTickets.searchFlight",
        "description": "Find tickets for specific dates",
        "parameters": {
          "type": "object",
          "properties": {
            "date": {
              "type": "string",
              "description": "Trip start time"
            },
            "departure": {
              "type": "string",
              "description": "Origination"
            },
            "destination": {
              "type": "string",
              "description": "Reach ground"
            },
            "type": {
              "type": "string",
              "description": "One-way, round-trip, multi-trip"
            },
            "site_type": {
              "type": "string",
              "description": "Economy, Business"
            }
          },
          "required": [
            "date",
            "departure",
            "destination",
            "type",
            "site_type"
          ]
        }
      }
    ],
    "id": 24
  },
  {
    "messages": [
      {
        "role": "user",
        "content": "See if there are any plane tickets left"
      },
      {
        "role": "function call",
        "content": {
          "name": "Navigation.FlightTickets.searchFlight",
          "arguments": {}
        }
      },
      {
        "role": "assistant",
        "content": "What time is your departure time"
      },
      {
        "role": "user",
        "content": "I plan to leave next Spring Festival."
      },
      {
        "role": "function call",
        "content": {
          "name": "Navigation.FlightTickets.searchFlight",
          "arguments": {
            "date": "Next year's Spring Festival"
          }
        }
      },
      {
        "role": "assistant",
        "content": "Where do you come from?"
      },
      {
        "role": "user",
        "content": "My starting place is Beijing."
      },
      {
        "role": "function call",
        "content": {
          "name": "Navigation.FlightTickets.searchFlight",
          "arguments": {
            "date": "Next year's Spring Festival",
            "departure": "Beijing"
          }
        }
      },
      {
        "role": "assistant",
        "content": "Where to"
      },
      {
        "role": "user",
        "content": "The destination is Bangkok.I'm sorry, Origination is Londorn. "
      },
      {
        "role": "function call",
        "content": {
          "name": "Navigation.FlightTickets.searchFlight",
          "arguments": {
            "date": "Next year's Spring Festival",
            "departure": "Londorn",
            "destination": "Bangkok"
          }
        }
      },
      {
        "role": "assistant",
        "content": "Do you need economy or business class"
      },
      {
        "role": "user",
        "content": "I need business class."
      },
      {
        "role": "function call",
        "content": {
          "name": "Navigation.FlightTickets.searchFlight",
          "arguments": {
            "date": "Next year's Spring Festival",
            "departure": "Londorn",
            "destination": "Bangkok",
            "site_type": "- business class"
          }
        }
      }
    ],
    "multiple_tools": [
      {
        "name": "UtilityTools.Memo.searchNotes",
        "description": "Search memos by keyword (see all by default)",
        "parameters": {
          "type": "object",
          "properties": {
            "key_words": {
              "type": "string",
              "description": "KEYWORDS"
            }
          },
          "required": [
            "key_words"
          ]
        }
      },
      {
        "name": "ConvenientLiving.BuyingRentingHomes.searchRentingHouses",
        "description": "Search for rentals by criteria",
        "parameters": {
          "type": "object",
          "properties": {
            "price": {
              "type": "string",
              "description": "Rents"
            },
            "house_area": {
              "type": "string",
              "description": "Area"
            },
            "level": {
              "type": "string",
              "description": "Floor"
            },
            "age": {
              "type": "integer",
              "description": "fixed number of years"
            },
            "house_type": {
              "type": "string",
              "description": "Layout"
            },
            "housing_estate": {
              "type": "string",
              "description": "Community"
            },
            "location": {
              "type": "string",
              "description": "Position"
            },
            "indoor_decoration": {
              "type": "string",
              "description": "decorate"
            },
            "furniture": {
              "type": "string",
              "description": "Furniture"
            }
          },
          "required": [
            "price",
            "house_area",
            "level",
            "age",
            "house_type",
            "housing_estate",
            "location",
            "indoor_decoration",
            "furniture"
          ]
        }
      },
      {
        "name": "Travel.ItineraryServices.searchTravelRoute",
        "description": "Search for relevant travel itineraries based on keywords",
        "parameters": {
          "type": "object",
          "properties": {
            "keyword": {
              "type": "string",
              "description": "Search keywords"
            }
          },
          "required": [
            "keyword"
          ]
        }
      },
      {
        "name": "Navigation.FlightTickets.searchFlight",
        "description": "Find tickets for specific dates",
        "parameters": {
          "type": "object",
          "properties": {
            "date": {
              "type": "string",
              "description": "Trip start time"
            },
            "departure": {
              "type": "string",
              "description": "Origination"
            },
            "destination": {
              "type": "string",
              "description": "Reach ground"
            },
            "type": {
              "type": "string",
              "description": "One-way, round-trip, multi-trip"
            },
            "site_type": {
              "type": "string",
              "description": "Economy, Business"
            }
          },
          "required": [
            "date",
            "departure",
            "destination",
            "type",
            "site_type"
          ]
        }
      },
      {
        "name": "ConvenientLiving.FoodDelivery.searchRestaurantDiscounts",
        "description": "Enter keywords to search for deals",
        "parameters": {
          "type": "object",
          "properties": {
            "keyword": {
              "type": "string",
              "description": "Keywords related to offers"
            }
          },
          "required": [
            "keyword"
          ]
        }
      }
    ],
    "single_tool": [
      {
        "name": "Navigation.FlightTickets.searchFlight",
        "description": "Find tickets for specific dates",
        "parameters": {
          "type": "object",
          "properties": {
            "date": {
              "type": "string",
              "description": "Trip start time"
            },
            "departure": {
              "type": "string",
              "description": "Origination"
            },
            "destination": {
              "type": "string",
              "description": "Reach ground"
            },
            "type": {
              "type": "string",
              "description": "One-way, round-trip, multi-trip"
            },
            "site_type": {
              "type": "string",
              "description": "Economy, Business"
            }
          },
          "required": [
            "date",
            "departure",
            "destination",
            "type",
            "site_type"
          ]
        }
      }
    ],
    "id": 25
  },
  {
    "messages": [
      {
        "role": "user",
        "content": "Find flight details"
      },
      {
        "role": "function call",
        "content": {
          "name": "Navigation.FlightTickets.getFlightDetails",
          "arguments": {}
        }
      },
      {
        "role": "assistant",
        "content": "Please provide the specified date"
      },
      {
        "role": "user",
        "content": "Christmas Day"
      },
      {
        "role": "function call",
        "content": {
          "name": "Navigation.FlightTickets.getFlightDetails",
          "arguments": {
            "date": "Christmas Day"
          }
        }
      },
      {
        "role": "assistant",
        "content": "Please provide flight number"
      },
      {
        "role": "user",
        "content": "My flight number is CZ330 and I need information.I'm sorry, Specify a date, such as 2024-07-05 is October 11. "
      },
      {
        "role": "function call",
        "content": {
          "name": "Navigation.FlightTickets.getFlightDetails",
          "arguments": {
            "date": "October 11",
            "flight_number": "CZ330"
          }
        }
      }
    ],
    "multiple_tools": [
      {
        "name": "OnlineShopping.SecondhandTrading.searchSecondhandSaleCommodity",
        "description": "Query the product by the specified commodity category; name; or picture QR code query",
        "parameters": {
          "type": "object",
          "properties": {
            "search_name": {
              "type": "string",
              "description": "Trade Name/Keywords"
            },
            "type": {
              "type": "string",
              "description": ": Guess what you like, latest release, save money group, fish coins for money"
            }
          },
          "required": [
            "search_name",
            "type"
          ]
        }
      },
      {
        "name": "Finance.Funds.getFundInfo",
        "description": "Query specific fund details based on specific fund name or code",
        "parameters": {
          "type": "object",
          "properties": {
            "fund_name": {
              "type": "string",
              "description": "Fund name"
            },
            "fund_code": {
              "type": "string",
              "description": "Fund  Code"
            }
          },
          "required": [
            "fund_name",
            "fund_code"
          ]
        }
      },
      {
        "name": "OfficeSoftware.Documents.searchDocuments",
        "description": "Search documents by keyword",
        "parameters": {
          "type": "object",
          "properties": {
            "keyword": {
              "type": "string",
              "description": "Search keywords, required"
            }
          },
          "required": [
            "keyword"
          ]
        }
      },
      {
        "name": "Navigation.TaxiCarRental.viewTaxiOrderDetail",
        "description": "View details of a ride",
        "parameters": {
          "type": "object",
          "properties": {
            "time": {
              "type": "string",
              "description": "Order time"
            },
            "destination": {
              "type": "string",
              "description": "Destination"
            }
          },
          "required": [
            "time",
            "destination"
          ]
        }
      },
      {
        "name": "Navigation.FlightTickets.getFlightDetails",
        "description": "Get details for a specific flight, including takeoff and landing times, fares, and more",
        "parameters": {
          "type": "object",
          "properties": {
            "flight_number": {
              "type": "string",
              "description": "e.g. CA1234"
            },
            "date": {
              "type": "string",
              "description": "Specify a date, such as 2024-07-05"
            },
            "line": {
              "type": "string",
              "description": "Routes such as Beijing-Shanghai"
            }
          },
          "required": [
            "flight_number",
            "date",
            "line"
          ]
        }
      }
    ],
    "single_tool": [
      {
        "name": "Navigation.FlightTickets.getFlightDetails",
        "description": "Get details for a specific flight, including takeoff and landing times, fares, and more",
        "parameters": {
          "type": "object",
          "properties": {
            "flight_number": {
              "type": "string",
              "description": "e.g. CA1234"
            },
            "date": {
              "type": "string",
              "description": "Specify a date, such as 2024-07-05"
            },
            "line": {
              "type": "string",
              "description": "Routes such as Beijing-Shanghai"
            }
          },
          "required": [
            "flight_number",
            "date",
            "line"
          ]
        }
      }
    ],
    "id": 26
  },
  {
    "messages": [
      {
        "role": "user",
        "content": "Can you help me find the details of the flight I'm following? I just want to see when it takes off, when it lands, and how much it costs."
      },
      {
        "role": "function call",
        "content": {
          "name": "Navigation.FlightTickets.getFlightDetails",
          "arguments": {}
        }
      },
      {
        "role": "assistant",
        "content": "When to specify the date"
      },
      {
        "role": "user",
        "content": "The specified date is October 11th"
      },
      {
        "role": "function call",
        "content": {
          "name": "Navigation.FlightTickets.getFlightDetails",
          "arguments": {
            "date": "October 11th"
          }
        }
      },
      {
        "role": "assistant",
        "content": "Please provide flight number"
      },
      {
        "role": "user",
        "content": "My flight number is MU5678.I'm sorry, Specify a date, such as 2024-07-05 is October 11. "
      },
      {
        "role": "function call",
        "content": {
          "name": "Navigation.FlightTickets.getFlightDetails",
          "arguments": {
            "date": "October 11",
            "flight_number": "MU5678"
          }
        }
      }
    ],
    "multiple_tools": [
      {
        "name": "MusicRadio.OnlineMusic.getSongDetails",
        "description": "Get song details by song name",
        "parameters": {
          "type": "object",
          "properties": {
            "name": {
              "type": "string",
              "description": "Song Name"
            }
          },
          "required": [
            "name"
          ]
        }
      },
      {
        "name": "Education.OnlineClasses.viewCourseDetails",
        "description": "View course details by course name",
        "parameters": {
          "type": "object",
          "properties": {
            "course_name": {
              "type": "string",
              "description": "Course Title"
            }
          },
          "required": [
            "course_name"
          ]
        }
      },
      {
        "name": "Navigation.TaxiCarRental.viewTaxiOrderDetail",
        "description": "View details of a ride",
        "parameters": {
          "type": "object",
          "properties": {
            "time": {
              "type": "string",
              "description": "Order time"
            },
            "destination": {
              "type": "string",
              "description": "Destination"
            }
          },
          "required": [
            "time",
            "destination"
          ]
        }
      },
      {
        "name": "Navigation.FlightTickets.getFlightDetails",
        "description": "Get details for a specific flight, including takeoff and landing times, fares, and more",
        "parameters": {
          "type": "object",
          "properties": {
            "flight_number": {
              "type": "string",
              "description": "e.g. CA1234"
            },
            "date": {
              "type": "string",
              "description": "Specify a date, such as 2024-07-05"
            },
            "line": {
              "type": "string",
              "description": "Routes such as Beijing-Shanghai"
            }
          },
          "required": [
            "flight_number",
            "date",
            "line"
          ]
        }
      },
      {
        "name": "ConvenientLiving.AutoLife.viewCarDetails",
        "description": "View the details of the specified car model.",
        "parameters": {
          "type": "object",
          "properties": {
            "brand": {
              "type": "string",
              "description": "Car Brand"
            }
          },
          "required": [
            "brand"
          ]
        }
      }
    ],
    "single_tool": [
      {
        "name": "Navigation.FlightTickets.getFlightDetails",
        "description": "Get details for a specific flight, including takeoff and landing times, fares, and more",
        "parameters": {
          "type": "object",
          "properties": {
            "flight_number": {
              "type": "string",
              "description": "e.g. CA1234"
            },
            "date": {
              "type": "string",
              "description": "Specify a date, such as 2024-07-05"
            },
            "line": {
              "type": "string",
              "description": "Routes such as Beijing-Shanghai"
            }
          },
          "required": [
            "flight_number",
            "date",
            "line"
          ]
        }
      }
    ],
    "id": 27
  },
  {
    "messages": [
      {
        "role": "user",
        "content": "Help me find any cheap flight tickets I can pick up"
      },
      {
        "role": "function call",
        "content": {
          "name": "Navigation.FlightTickets.searchCheapFlights",
          "arguments": {}
        }
      },
      {
        "role": "assistant",
        "content": "Where you're flying from"
      },
      {
        "role": "user",
        "content": "I'm leaving from New York."
      },
      {
        "role": "function call",
        "content": {
          "name": "Navigation.FlightTickets.searchCheapFlights",
          "arguments": {
            "departure": "Neo-York"
          }
        }
      },
      {
        "role": "assistant",
        "content": "What's the destination"
      },
      {
        "role": "user",
        "content": "London is my destination."
      },
      {
        "role": "function call",
        "content": {
          "name": "Navigation.FlightTickets.searchCheapFlights",
          "arguments": {
            "departure": "Neo-York",
            "destination": "Londorn"
          }
        }
      },
      {
        "role": "assistant",
        "content": "When are you traveling?"
      },
      {
        "role": "user",
        "content": "Departure this July 15thI'm sorry, Origination is Guangzhou. "
      },
      {
        "role": "function call",
        "content": {
          "name": "Navigation.FlightTickets.searchCheapFlights",
          "arguments": {
            "departure": "Guangzhou",
            "destination": "Londorn",
            "travel_date": "July of this year"
          }
        }
      }
    ],
    "multiple_tools": [
      {
        "name": "Navigation.FlightTickets.searchCheapFlights",
        "description": "Search cheap flights by specified criteria",
        "parameters": {
          "type": "object",
          "properties": {
            "type": {
              "type": "string",
              "description": "One way, round trip"
            },
            "departure": {
              "type": "string",
              "description": "Origination"
            },
            "destination": {
              "type": "string",
              "description": "Reach ground"
            },
            "travel_date": {
              "type": "string",
              "description": "Specify date, next month, next three months, etc."
            }
          },
          "required": [
            "type",
            "departure",
            "destination",
            "travel_date"
          ]
        }
      },
      {
        "name": "Navigation.Bicycles.viewBikeCoupons",
        "description": "View riding-related vouchers",
        "parameters": {
          "type": "object",
          "properties": {},
          "required": []
        }
      },
      {
        "name": "UtilityTools.Memo.searchNotes",
        "description": "Search memos by keyword (see all by default)",
        "parameters": {
          "type": "object",
          "properties": {
            "key_words": {
              "type": "string",
              "description": "KEYWORDS"
            }
          },
          "required": [
            "key_words"
          ]
        }
      },
      {
        "name": "Travel.ItineraryServices.searchTravelRoute",
        "description": "Search for relevant travel itineraries based on keywords",
        "parameters": {
          "type": "object",
          "properties": {
            "keyword": {
              "type": "string",
              "description": "Search keywords"
            }
          },
          "required": [
            "keyword"
          ]
        }
      },
      {
        "name": "ConvenientLiving.BuyingRentingHomes.searchRentingHouses",
        "description": "Search for rentals by criteria",
        "parameters": {
          "type": "object",
          "properties": {
            "price": {
              "type": "string",
              "description": "Rents"
            },
            "house_area": {
              "type": "string",
              "description": "Area"
            },
            "level": {
              "type": "string",
              "description": "Floor"
            },
            "age": {
              "type": "integer",
              "description": "fixed number of years"
            },
            "house_type": {
              "type": "string",
              "description": "Layout"
            },
            "housing_estate": {
              "type": "string",
              "description": "Community"
            },
            "location": {
              "type": "string",
              "description": "Position"
            },
            "indoor_decoration": {
              "type": "string",
              "description": "decorate"
            },
            "furniture": {
              "type": "string",
              "description": "Furniture"
            }
          },
          "required": [
            "price",
            "house_area",
            "level",
            "age",
            "house_type",
            "housing_estate",
            "location",
            "indoor_decoration",
            "furniture"
          ]
        }
      }
    ],
    "single_tool": [
      {
        "name": "Navigation.FlightTickets.searchCheapFlights",
        "description": "Search cheap flights by specified criteria",
        "parameters": {
          "type": "object",
          "properties": {
            "type": {
              "type": "string",
              "description": "One way, round trip"
            },
            "departure": {
              "type": "string",
              "description": "Origination"
            },
            "destination": {
              "type": "string",
              "description": "Reach ground"
            },
            "travel_date": {
              "type": "string",
              "description": "Specify date, next month, next three months, etc."
            }
          },
          "required": [
            "type",
            "departure",
            "destination",
            "travel_date"
          ]
        }
      }
    ],
    "id": 28
  },
  {
    "messages": [
      {
        "role": "user",
        "content": "To cancel a previously booked flight"
      },
      {
        "role": "function call",
        "content": {
          "name": "Navigation.FlightTickets.cancelFlightBooking",
          "arguments": {}
        }
      },
      {
        "role": "assistant",
        "content": "Where you're flying from"
      },
      {
        "role": "user",
        "content": "I leave from Guangzhou."
      },
      {
        "role": "function call",
        "content": {
          "name": "Navigation.FlightTickets.cancelFlightBooking",
          "arguments": {
            "departure": "Guangzhou"
          }
        }
      },
      {
        "role": "assistant",
        "content": "Where to"
      },
      {
        "role": "user",
        "content": "ChengduI'm sorry, Origination is Beijing. "
      },
      {
        "role": "function call",
        "content": {
          "name": "Navigation.FlightTickets.cancelFlightBooking",
          "arguments": {
            "departure": "Beijing",
            "destination": "Chengdu"
          }
        }
      },
      {
        "role": "assistant",
        "content": "What's the name of the person who booked the reservation"
      },
      {
        "role": "user",
        "content": "The name of the booker is Li Si."
      },
      {
        "role": "function call",
        "content": {
          "name": "Navigation.FlightTickets.cancelFlightBooking",
          "arguments": {
            "departure": "Beijing",
            "destination": "Chengdu",
            "name": "Li Si"
          }
        }
      },
      {
        "role": "assistant",
        "content": "What time does the flight leave?"
      },
      {
        "role": "user",
        "content": "My flight departs the day after tomorrow at 4pm."
      },
      {
        "role": "function call",
        "content": {
          "name": "Navigation.FlightTickets.cancelFlightBooking",
          "arguments": {
            "departure": "Beijing",
            "destination": "Chengdu",
            "name": "Li Si",
            "time": "The day after tomorrow at 4pm"
          }
        }
      }
    ],
    "multiple_tools": [
      {
        "name": "Health.MedicalServices.cancelDoctorAppointment",
        "description": "Cancelling an appointment with a doctor",
        "parameters": {
          "type": "object",
          "properties": {
            "doctor_name": {
              "type": "string",
              "description": "Doctor Name"
            },
            "appointment_time": {
              "type": "string",
              "description": "Specific time of appointment '"
            }
          },
          "required": [
            "doctor_name",
            "appointment_time"
          ]
        }
      },
      {
        "name": "Navigation.FlightTickets.cancelFlightBooking",
        "description": "Cancelling a flight for a specific reservation",
        "parameters": {
          "type": "object",
          "properties": {
            "departure": {
              "type": "string",
              "description": "Origination"
            },
            "destination": {
              "type": "string",
              "description": "Reach ground"
            },
            "name": {
              "type": "string",
              "description": "Name of person who booked"
            },
            "time": {
              "type": "string",
              "description": "Flight departure time"
            },
            "passenger_id": {
              "type": "string",
              "description": "Rider ID number"
            }
          },
          "required": [
            "departure",
            "destination",
            "name",
            "time",
            "passenger_id"
          ]
        }
      },
      {
        "name": "Navigation.TrainTickets.cancelTrainTicket",
        "description": "Cancelling a booked train ticket",
        "parameters": {
          "type": "object",
          "properties": {
            "train_number": {
              "type": "string",
              "description": "Wagon Number"
            },
            "name": {
              "type": "string",
              "description": "Rider's name"
            },
            "time": {
              "type": "string",
              "description": "To cancel a reservation for a certain time"
            },
            "departure_station": {
              "type": "string",
              "description": "Departure Station"
            },
            "destination_station": {
              "type": "string",
              "description": "arrival station"
            }
          },
          "required": [
            "train_number",
            "name",
            "time",
            "departure_station",
            "destination_station"
          ]
        }
      },
      {
        "name": "Education.OnlineClasses.cancelCourse",
        "description": "Cancel Enrolled Courses",
        "parameters": {
          "type": "object",
          "properties": {
            "course_name": {
              "type": "string",
              "description": "Course Title"
            }
          },
          "required": [
            "course_name"
          ]
        }
      },
      {
        "name": "Navigation.TaxiCarRental.cancelCarRentalOrder",
        "description": "Cancel the rental (all pending reservations are canceled by default)",
        "parameters": {
          "type": "object",
          "properties": {
            "time": {
              "type": "string",
              "description": "Release Date"
            }
          },
          "required": [
            "time"
          ]
        }
      }
    ],
    "single_tool": [
      {
        "name": "Navigation.FlightTickets.cancelFlightBooking",
        "description": "Cancelling a flight for a specific reservation",
        "parameters": {
          "type": "object",
          "properties": {
            "departure": {
              "type": "string",
              "description": "Origination"
            },
            "destination": {
              "type": "string",
              "description": "Reach ground"
            },
            "name": {
              "type": "string",
              "description": "Name of person who booked"
            },
            "time": {
              "type": "string",
              "description": "Flight departure time"
            },
            "passenger_id": {
              "type": "string",
              "description": "Rider ID number"
            }
          },
          "required": [
            "departure",
            "destination",
            "name",
            "time",
            "passenger_id"
          ]
        }
      }
    ],
    "id": 29
  },
  {
    "messages": [
      {
        "role": "user",
        "content": "I want to change the departure time of the flight I have booked, but the origin and destination cannot be changed."
      },
      {
        "role": "function call",
        "content": {
          "name": "Navigation.FlightTickets.modifyFlightBooking",
          "arguments": {}
        }
      },
      {
        "role": "assistant",
        "content": "Please provide a departure location"
      },
      {
        "role": "user",
        "content": "I leave from Guangzhou.I'm sorry, Origination is Shenzhen. "
      },
      {
        "role": "function call",
        "content": {
          "name": "Navigation.FlightTickets.modifyFlightBooking",
          "arguments": {
            "departure": "Shenzhen"
          }
        }
      },
      {
        "role": "assistant",
        "content": "Where to"
      },
      {
        "role": "user",
        "content": "Chengdu"
      },
      {
        "role": "function call",
        "content": {
          "name": "Navigation.FlightTickets.modifyFlightBooking",
          "arguments": {
            "departure": "Shenzhen",
            "destination": "Chengdu"
          }
        }
      },
      {
        "role": "assistant",
        "content": "What's the name of the person who booked the reservation"
      },
      {
        "role": "user",
        "content": "The booker's name is Li Si"
      },
      {
        "role": "function call",
        "content": {
          "name": "Navigation.FlightTickets.modifyFlightBooking",
          "arguments": {
            "departure": "Shenzhen",
            "destination": "Chengdu",
            "name": "Li Si"
          }
        }
      },
      {
        "role": "assistant",
        "content": "Please provide the flight time before the change and the flight time you would like to change"
      },
      {
        "role": "user",
        "content": "My original flight time was 5pm and I would like to change it to 8pm."
      },
      {
        "role": "function call",
        "content": {
          "name": "Navigation.FlightTickets.modifyFlightBooking",
          "arguments": {
            "departure": "Shenzhen",
            "destination": "Chengdu",
            "name": "Li Si",
            "time": "5pm"
          }
        }
      },
      {
        "role": "assistant",
        "content": "Please provide the revised flight time"
      },
      {
        "role": "user",
        "content": "The new flight time is 8pm."
      },
      {
        "role": "function call",
        "content": {
          "name": "Navigation.FlightTickets.modifyFlightBooking",
          "arguments": {
            "departure": "Shenzhen",
            "destination": "Chengdu",
            "name": "Li Si",
            "time": "5pm",
            "alter_time": "8pm"
          }
        }
      }
    ],
    "multiple_tools": [
      {
        "name": "Navigation.FlightTickets.modifyFlightBooking",
        "description": "Changing the departure time of a booked flight is not supported for departure and destination changes",
        "parameters": {
          "type": "object",
          "properties": {
            "departure": {
              "type": "string",
              "description": "Origination"
            },
            "destination": {
              "type": "string",
              "description": "Reach ground"
            },
            "name": {
              "type": "string",
              "description": "Name of person who booked"
            },
            "time": {
              "type": "string",
              "description": "Flight duration before modification"
            },
            "alter_time": {
              "type": "string",
              "description": "Revised flight time"
            },
            "alter_seat": {
              "type": "string",
              "description": "Class Selection"
            }
          },
          "required": [
            "departure",
            "destination",
            "name",
            "time",
            "alter_time",
            "alter_seat"
          ]
        }
      },
      {
        "name": "Navigation.TaxiCarRental.modifyCarRentalOrder",
        "description": "Modify the contents of a rental order, such as pick-up time, drop-off time, pick-up person, pick-up location, etc.",
        "parameters": {
          "type": "object",
          "properties": {
            "time": {
              "type": "string",
              "description": "Release Date"
            }
          },
          "required": [
            "time"
          ]
        }
      },
      {
        "name": "UtilityTools.AlarmClock.alterAlarm",
        "description": "Modify the alarm clock, including alarm time, ringing method, etc.",
        "parameters": {
          "type": "object",
          "properties": {
            "clock_time_name": {
              "type": "string",
              "description": "Alarm name, defaults to all alarms"
            },
            "clock_time": {
              "type": "string",
              "description": "Alarm time"
            },
            "target_time": {
              "type": "string",
              "description": "Modified target time"
            }
          },
          "required": [
            "clock_time_name",
            "clock_time",
            "target_time"
          ]
        }
      },
      {
        "name": "UtilityTools.Calendar.alterCalendarschedule",
        "description": "Modify a schedule",
        "parameters": {
          "type": "object",
          "properties": {
            "date_name": {
              "type": "string",
              "description": "Visiting program name"
            },
            "date_name_before": {
              "type": "string",
              "description": "Modified Schedule Name"
            },
            "start_date": {
              "type": "string",
              "description": "Schedule start time"
            },
            "start_date_before": {
              "type": "string",
              "description": "Modified Schedule Start Time"
            }
          },
          "required": [
            "date_name",
            "date_name_before",
            "start_date",
            "start_date_before"
          ]
        }
      },
      {
        "name": "Health.HealthManagement.updateHealthGoal",
        "description": "Update health goals based on goal type, goal content, target time, etc.",
        "parameters": {
          "type": "object",
          "properties": {
            "goal_title": {
              "type": "string",
              "description": "Target Headings"
            },
            "goal_content": {
              "type": "string",
              "description": "Detailed description of the goal, such as weight loss of 10kg, body fat rate reduction of 5%, etc."
            },
            "time_limit": {
              "type": "string",
              "description": "Time to complete goal"
            },
            "update_content": {
              "type": "string",
              "description": "Updated content description"
            }
          },
          "required": [
            "goal_title",
            "goal_content",
            "time_limit",
            "update_content"
          ]
        }
      }
    ],
    "single_tool": [
      {
        "name": "Navigation.FlightTickets.modifyFlightBooking",
        "description": "Changing the departure time of a booked flight is not supported for departure and destination changes",
        "parameters": {
          "type": "object",
          "properties": {
            "departure": {
              "type": "string",
              "description": "Origination"
            },
            "destination": {
              "type": "string",
              "description": "Reach ground"
            },
            "name": {
              "type": "string",
              "description": "Name of person who booked"
            },
            "time": {
              "type": "string",
              "description": "Flight duration before modification"
            },
            "alter_time": {
              "type": "string",
              "description": "Revised flight time"
            },
            "alter_seat": {
              "type": "string",
              "description": "Class Selection"
            }
          },
          "required": [
            "departure",
            "destination",
            "name",
            "time",
            "alter_time",
            "alter_seat"
          ]
        }
      }
    ],
    "id": 30
  },
  {
    "messages": [
      {
        "role": "user",
        "content": "Change booking info for your flight"
      },
      {
        "role": "function call",
        "content": {
          "name": "Navigation.FlightTickets.modifyFlightBooking",
          "arguments": {}
        }
      },
      {
        "role": "assistant",
        "content": "Please provide a departure location"
      },
      {
        "role": "user",
        "content": "I leave from Beijing."
      },
      {
        "role": "function call",
        "content": {
          "name": "Navigation.FlightTickets.modifyFlightBooking",
          "arguments": {
            "departure": "Beijing"
          }
        }
      },
      {
        "role": "assistant",
        "content": "What's the destination"
      },
      {
        "role": "user",
        "content": "Shanghai is my destination for this trip."
      },
      {
        "role": "function call",
        "content": {
          "name": "Navigation.FlightTickets.modifyFlightBooking",
          "arguments": {
            "departure": "Beijing",
            "destination": "Shanghai"
          }
        }
      },
      {
        "role": "assistant",
        "content": "What's the name of the person who booked the reservation"
      },
      {
        "role": "user",
        "content": "The name of the booker is Zhang San.I'm sorry, Reach ground is Chengdu. "
      },
      {
        "role": "function call",
        "content": {
          "name": "Navigation.FlightTickets.modifyFlightBooking",
          "arguments": {
            "departure": "Beijing",
            "destination": "Chengdu",
            "name": "Zhang San"
          }
        }
      },
      {
        "role": "assistant",
        "content": "Please provide the flight time before the change"
      },
      {
        "role": "user",
        "content": "My original flight was at 10 a.m."
      },
      {
        "role": "function call",
        "content": {
          "name": "Navigation.FlightTickets.modifyFlightBooking",
          "arguments": {
            "departure": "Beijing",
            "destination": "Chengdu",
            "name": "Zhang San",
            "time": "10am"
          }
        }
      },
      {
        "role": "assistant",
        "content": "Please provide the revised flight time"
      },
      {
        "role": "user",
        "content": "The revised flight time is 2pm."
      },
      {
        "role": "function call",
        "content": {
          "name": "Navigation.FlightTickets.modifyFlightBooking",
          "arguments": {
            "departure": "Beijing",
            "destination": "Chengdu",
            "name": "Zhang San",
            "time": "10am",
            "alter_time": "14:00"
          }
        }
      }
    ],
    "multiple_tools": [
      {
        "name": "Finance.Payment.updatePayUserInfo",
        "description": "Update account user information",
        "parameters": {
          "type": "object",
          "properties": {
            "user_name": {
              "type": "string",
              "description": "username"
            },
            "phone": {
              "type": "string",
              "description": "User's phone number"
            },
            "address": {
              "type": "string",
              "description": "User Address"
            }
          },
          "required": [
            "user_name",
            "phone",
            "address"
          ]
        }
      },
      {
        "name": "SocialCommunication.SocialMedia.updateMediumInfo",
        "description": "Edit profile information",
        "parameters": {
          "type": "object",
          "properties": {
            "medium_name": {
              "type": "string",
              "description": "Media name"
            },
            "new_nickname": {
              "type": "string",
              "description": "Updated nickname"
            }
          },
          "required": [
            "medium_name",
            "new_nickname"
          ]
        }
      },
      {
        "name": "SystemTools.SystemSettings.modifyuserAccounts",
        "description": "Modify the current user's information",
        "parameters": {
          "type": "object",
          "properties": {
            "phone_number": {
              "type": "string",
              "description": "Phone No."
            },
            "nickname": {
              "type": "string",
              "description": "Nickname"
            }
          },
          "required": [
            "phone_number",
            "nickname"
          ]
        }
      },
      {
        "name": "SocialCommunication.Calling.modifyContact",
        "description": "Modify the information for the specified contact",
        "parameters": {
          "type": "object",
          "properties": {
            "contact_name": {
              "type": "string",
              "description": "Contact name to modify"
            },
            "new_contact_name": {
              "type": "string",
              "description": "New contact name (optional)"
            },
            "new_phone_number": {
              "type": "string",
              "description": "New contact phone number (optional)"
            },
            "phone_number": {
              "type": "string",
              "description": "Contact phone number to modify"
            }
          },
          "required": [
            "contact_name",
            "new_contact_name",
            "new_phone_number",
            "phone_number"
          ]
        }
      },
      {
        "name": "Navigation.FlightTickets.modifyFlightBooking",
        "description": "Changing the departure time of a booked flight is not supported for departure and destination changes",
        "parameters": {
          "type": "object",
          "properties": {
            "departure": {
              "type": "string",
              "description": "Origination"
            },
            "destination": {
              "type": "string",
              "description": "Reach ground"
            },
            "name": {
              "type": "string",
              "description": "Name of person who booked"
            },
            "time": {
              "type": "string",
              "description": "Flight duration before modification"
            },
            "alter_time": {
              "type": "string",
              "description": "Revised flight time"
            },
            "alter_seat": {
              "type": "string",
              "description": "Class Selection"
            }
          },
          "required": [
            "departure",
            "destination",
            "name",
            "time",
            "alter_time",
            "alter_seat"
          ]
        }
      }
    ],
    "single_tool": [
      {
        "name": "Navigation.FlightTickets.modifyFlightBooking",
        "description": "Changing the departure time of a booked flight is not supported for departure and destination changes",
        "parameters": {
          "type": "object",
          "properties": {
            "departure": {
              "type": "string",
              "description": "Origination"
            },
            "destination": {
              "type": "string",
              "description": "Reach ground"
            },
            "name": {
              "type": "string",
              "description": "Name of person who booked"
            },
            "time": {
              "type": "string",
              "description": "Flight duration before modification"
            },
            "alter_time": {
              "type": "string",
              "description": "Revised flight time"
            },
            "alter_seat": {
              "type": "string",
              "description": "Class Selection"
            }
          },
          "required": [
            "departure",
            "destination",
            "name",
            "time",
            "alter_time",
            "alter_seat"
          ]
        }
      }
    ],
    "id": 31
  },
  {
    "messages": [
      {
        "role": "user",
        "content": "Check-in online for my flight"
      },
      {
        "role": "function call",
        "content": {
          "name": "Navigation.FlightTickets.checkInOnlineFlight",
          "arguments": {}
        }
      },
      {
        "role": "assistant",
        "content": "What's the flight number"
      },
      {
        "role": "user",
        "content": "My flight number is CA8888, anything else I need to know?"
      },
      {
        "role": "function call",
        "content": {
          "name": "Navigation.FlightTickets.checkInOnlineFlight",
          "arguments": {
            "flight_number": "CA8888"
          }
        }
      },
      {
        "role": "assistant",
        "content": "Please provide your name to complete online check-in"
      },
      {
        "role": "user",
        "content": "My name is Sun Li, please help me check in online.I'm sorry, e.g. CA1234 is HU7788. "
      },
      {
        "role": "function call",
        "content": {
          "name": "Navigation.FlightTickets.checkInOnlineFlight",
          "arguments": {
            "flight_number": "HU7788",
            "name": "Sun Li"
          }
        }
      }
    ],
    "multiple_tools": [
      {
        "name": "Finance.Stocks.viewStockstrategy",
        "description": "View investment playbook",
        "parameters": {
          "type": "object",
          "properties": {},
          "required": []
        }
      },
      {
        "name": "MusicRadio.OnlineMusic.bindSocialPlatforms",
        "description": "Link your account to a social platform",
        "parameters": {
          "type": "object",
          "properties": {
            "platforms": {
              "type": "string",
              "description": "Social platforms to be linked"
            }
          },
          "required": [
            "platforms"
          ]
        }
      },
      {
        "name": "NewsMagazines.NewspapersMagazines.subscribeMagazine",
        "description": "Subscribe to magazine by magazine name",
        "parameters": {
          "type": "object",
          "properties": {
            "name": {
              "type": "string",
              "description": "Magazine Name"
            }
          },
          "required": [
            "name"
          ]
        }
      },
      {
        "name": "MusicRadio.Karaoke.manageAccount",
        "description": "Manage your account by following the steps in Account Management",
        "parameters": {
          "type": "object",
          "properties": {
            "action": {
              "type": "string",
              "description": "Account management actions"
            }
          },
          "required": [
            "action"
          ]
        }
      },
      {
        "name": "Navigation.FlightTickets.checkInOnlineFlight",
        "description": "Online check-in for selected flights",
        "parameters": {
          "type": "object",
          "properties": {
            "flight_number": {
              "type": "string",
              "description": "e.g. CA1234"
            },
            "name": {
              "type": "string",
              "description": "Name"
            },
            "passenger_id": {
              "type": "string",
              "description": "Rider ID number"
            }
          },
          "required": [
            "flight_number",
            "name",
            "passenger_id"
          ]
        }
      }
    ],
    "single_tool": [
      {
        "name": "Navigation.FlightTickets.checkInOnlineFlight",
        "description": "Online check-in for selected flights",
        "parameters": {
          "type": "object",
          "properties": {
            "flight_number": {
              "type": "string",
              "description": "e.g. CA1234"
            },
            "name": {
              "type": "string",
              "description": "Name"
            },
            "passenger_id": {
              "type": "string",
              "description": "Rider ID number"
            }
          },
          "required": [
            "flight_number",
            "name",
            "passenger_id"
          ]
        }
      }
    ],
    "id": 32
  },
  {
    "messages": [
      {
        "role": "user",
        "content": "Help me check in to my flight on my phone"
      },
      {
        "role": "function call",
        "content": {
          "name": "Navigation.FlightTickets.checkInOnlineFlight",
          "arguments": {}
        }
      },
      {
        "role": "assistant",
        "content": "What's the flight number"
      },
      {
        "role": "user",
        "content": "Flight number is CZ330 from Guangzhou to Beijing."
      },
      {
        "role": "function call",
        "content": {
          "name": "Navigation.FlightTickets.checkInOnlineFlight",
          "arguments": {
            "flight_number": "CZ330"
          }
        }
      },
      {
        "role": "assistant",
        "content": "What's the name?"
      },
      {
        "role": "user",
        "content": "My name is Wang Xiaomei.I'm sorry, e.g. CA1234 is HU7788. "
      },
      {
        "role": "function call",
        "content": {
          "name": "Navigation.FlightTickets.checkInOnlineFlight",
          "arguments": {
            "flight_number": "HU7788",
            "name": "Wang Xiaomei"
          }
        }
      }
    ],
    "multiple_tools": [
      {
        "name": "OfficeSoftware.CloudStorage.netdiskDownLoadFiles",
        "description": "Download specified files/folders to local in cloud drive",
        "parameters": {
          "type": "object",
          "properties": {
            "file_path": {
              "type": "string",
              "description": "File Path"
            },
            "target_path": {
              "type": "string",
              "description": "Direct Download"
            }
          },
          "required": [
            "file_path",
            "target_path"
          ]
        }
      },
      {
        "name": "UtilityTools.Reading.downloadReadingBook",
        "description": "Download books by title",
        "parameters": {
          "type": "object",
          "properties": {
            "book_name": {
              "type": "string",
              "description": "title of a book"
            },
            "book_author": {
              "type": "string",
              "description": "Author name"
            }
          },
          "required": [
            "book_name",
            "book_author"
          ]
        }
      },
      {
        "name": "Navigation.FlightTickets.checkInOnlineFlight",
        "description": "Online check-in for selected flights",
        "parameters": {
          "type": "object",
          "properties": {
            "flight_number": {
              "type": "string",
              "description": "e.g. CA1234"
            },
            "name": {
              "type": "string",
              "description": "Name"
            },
            "passenger_id": {
              "type": "string",
              "description": "Rider ID number"
            }
          },
          "required": [
            "flight_number",
            "name",
            "passenger_id"
          ]
        }
      },
      {
        "name": "MusicRadio.OnlineMusic.bindSocialPlatforms",
        "description": "Link your account to a social platform",
        "parameters": {
          "type": "object",
          "properties": {
            "platforms": {
              "type": "string",
              "description": "Social platforms to be linked"
            }
          },
          "required": [
            "platforms"
          ]
        }
      },
      {
        "name": "SystemTools.SystemSettings.OpenApp",
        "description": "Open the specified App on your phone",
        "parameters": {
          "type": "object",
          "properties": {
            "app_name": {
              "type": "string",
              "description": "App name"
            }
          },
          "required": [
            "app_name"
          ]
        }
      }
    ],
    "single_tool": [
      {
        "name": "Navigation.FlightTickets.checkInOnlineFlight",
        "description": "Online check-in for selected flights",
        "parameters": {
          "type": "object",
          "properties": {
            "flight_number": {
              "type": "string",
              "description": "e.g. CA1234"
            },
            "name": {
              "type": "string",
              "description": "Name"
            },
            "passenger_id": {
              "type": "string",
              "description": "Rider ID number"
            }
          },
          "required": [
            "flight_number",
            "name",
            "passenger_id"
          ]
        }
      }
    ],
    "id": 33
  },
  {
    "messages": [
      {
        "role": "user",
        "content": "Book some special air services"
      },
      {
        "role": "function call",
        "content": {
          "name": "Navigation.FlightTickets.bookFlightSpecialServices",
          "arguments": {}
        }
      },
      {
        "role": "assistant",
        "content": "Please provide the flight number of the service you want to book"
      },
      {
        "role": "user",
        "content": "My flight number is AA123.I'm sorry, Flight number to book service is MH370. "
      },
      {
        "role": "function call",
        "content": {
          "name": "Navigation.FlightTickets.bookFlightSpecialServices",
          "arguments": {
            "flight_number": "MH370"
          }
        }
      }
    ],
    "multiple_tools": [
      {
        "name": "Education.ChildrenEducation.searchChildCraft",
        "description": "Search Kids Craft Tutorials",
        "parameters": {
          "type": "object",
          "properties": {
            "craft_type": {
              "type": "string",
              "description": "Manual types such as origami, paper-cut"
            }
          },
          "required": [
            "craft_type"
          ]
        }
      },
      {
        "name": "Navigation.FlightTickets.bookFlightSpecialServices",
        "description": "Booking special airline services such as wheelchair service, unaccompanied minors service, etc.",
        "parameters": {
          "type": "object",
          "properties": {
            "service_type": {
              "type": "string",
              "description": "Types of special services, such as wheelchair access, unaccompanied minors"
            },
            "flight_number": {
              "type": "string",
              "description": "Flight number to book service"
            }
          },
          "required": [
            "service_type",
            "flight_number"
          ]
        }
      },
      {
        "name": "ConvenientLiving.GovernmentServices.searchServiceByName",
        "description": "Search for relevant city services based on the service name entered",
        "parameters": {
          "type": "object",
          "properties": {
            "service_name": {
              "type": "string",
              "description": "Name of service to search"
            }
          },
          "required": [
            "service_name"
          ]
        }
      },
      {
        "name": "ConvenientLiving.UtilityPayments.getServiceProviders",
        "description": "Get information on suppliers that provide services such as utilities",
        "parameters": {
          "type": "object",
          "properties": {
            "service_type": {
              "type": "string",
              "description": "Types of paid services, such as utilities, gas, etc."
            },
            "location": {
              "type": "string",
              "description": "Region, default local"
            }
          },
          "required": [
            "service_type",
            "location"
          ]
        }
      },
      {
        "name": "Travel.ItineraryServices.getTravelCulturalActivities",
        "description": "Get information on unique cultural activities in your destination",
        "parameters": {
          "type": "object",
          "properties": {
            "destination": {
              "type": "string",
              "description": "destination"
            }
          },
          "required": [
            "destination"
          ]
        }
      }
    ],
    "single_tool": [
      {
        "name": "Navigation.FlightTickets.bookFlightSpecialServices",
        "description": "Booking special airline services such as wheelchair service, unaccompanied minors service, etc.",
        "parameters": {
          "type": "object",
          "properties": {
            "service_type": {
              "type": "string",
              "description": "Types of special services, such as wheelchair access, unaccompanied minors"
            },
            "flight_number": {
              "type": "string",
              "description": "Flight number to book service"
            }
          },
          "required": [
            "service_type",
            "flight_number"
          ]
        }
      }
    ],
    "id": 34
  },
  {
    "messages": [
      {
        "role": "user",
        "content": "Flight Booking Special"
      },
      {
        "role": "function call",
        "content": {
          "name": "Navigation.FlightTickets.bookFlightSpecialServices",
          "arguments": {}
        }
      },
      {
        "role": "assistant",
        "content": "Please provide the flight number of the service you want to book"
      },
      {
        "role": "user",
        "content": "I need to inquire about Flight MH370.I'm sorry, Flight number to book service is AA123. "
      },
      {
        "role": "function call",
        "content": {
          "name": "Navigation.FlightTickets.bookFlightSpecialServices",
          "arguments": {
            "flight_number": "AA123"
          }
        }
      }
    ],
    "multiple_tools": [
      {
        "name": "MusicRadio.OnlineMusic.getMusicRecommendationsByScene",
        "description": "Get a list of music recommendations based on the scene",
        "parameters": {
          "type": "object",
          "properties": {
            "scene": {
              "type": "string",
              "description": "Music Scene"
            }
          },
          "required": [
            "scene"
          ]
        }
      },
      {
        "name": "ConvenientLiving.UtilityPayments.getServiceProviders",
        "description": "Get information on suppliers that provide services such as utilities",
        "parameters": {
          "type": "object",
          "properties": {
            "service_type": {
              "type": "string",
              "description": "Types of paid services, such as utilities, gas, etc."
            },
            "location": {
              "type": "string",
              "description": "Region, default local"
            }
          },
          "required": [
            "service_type",
            "location"
          ]
        }
      },
      {
        "name": "UtilityTools.FileManagement.editFileProperty",
        "description": "Setting the properties of a file",
        "parameters": {
          "type": "object",
          "properties": {
            "filename": {
              "type": "string",
              "description": "Document Name"
            },
            "property": {
              "type": "string",
              "description": "Contents of the property setting"
            }
          },
          "required": [
            "filename",
            "property"
          ]
        }
      },
      {
        "name": "Navigation.TrainTickets.queryPassengerTrainOrder",
        "description": "Check the passenger's train ticket reservation information",
        "parameters": {
          "type": "object",
          "properties": {
            "passenger_id": {
              "type": "string",
              "description": "Rider ID number"
            },
            "name": {
              "type": "string",
              "description": "Name of person to query"
            },
            "time": {
              "type": "string",
              "description": "Release Date"
            }
          },
          "required": [
            "passenger_id",
            "name",
            "time"
          ]
        }
      },
      {
        "name": "Navigation.FlightTickets.bookFlightSpecialServices",
        "description": "Booking special airline services such as wheelchair service, unaccompanied minors service, etc.",
        "parameters": {
          "type": "object",
          "properties": {
            "service_type": {
              "type": "string",
              "description": "Types of special services, such as wheelchair access, unaccompanied minors"
            },
            "flight_number": {
              "type": "string",
              "description": "Flight number to book service"
            }
          },
          "required": [
            "service_type",
            "flight_number"
          ]
        }
      }
    ],
    "single_tool": [
      {
        "name": "Navigation.FlightTickets.bookFlightSpecialServices",
        "description": "Booking special airline services such as wheelchair service, unaccompanied minors service, etc.",
        "parameters": {
          "type": "object",
          "properties": {
            "service_type": {
              "type": "string",
              "description": "Types of special services, such as wheelchair access, unaccompanied minors"
            },
            "flight_number": {
              "type": "string",
              "description": "Flight number to book service"
            }
          },
          "required": [
            "service_type",
            "flight_number"
          ]
        }
      }
    ],
    "id": 35
  },
  {
    "messages": [
      {
        "role": "user",
        "content": "See how much airline credit I have"
      },
      {
        "role": "function call",
        "content": {
          "name": "Navigation.FlightTickets.getFlightAirlinePoints",
          "arguments": {}
        }
      },
      {
        "role": "assistant",
        "content": "Provide the rider's ID number"
      },
      {
        "role": "user",
        "content": "My ID number is 876543210987654321, please.I'm sorry, Rider ID number is 1357924680123456. "
      },
      {
        "role": "function call",
        "content": {
          "name": "Navigation.FlightTickets.getFlightAirlinePoints",
          "arguments": {
            "passenger_id": "1357924680123456"
          }
        }
      },
      {
        "role": "assistant",
        "content": "What's your rider's name"
      },
      {
        "role": "user",
        "content": "The passenger's name is Li Si."
      },
      {
        "role": "function call",
        "content": {
          "name": "Navigation.FlightTickets.getFlightAirlinePoints",
          "arguments": {
            "passenger_id": "1357924680123456",
            "name": "Li Si"
          }
        }
      }
    ],
    "multiple_tools": [
      {
        "name": "Navigation.FlightTickets.getFlightAirlinePoints",
        "description": "Earn airline credits",
        "parameters": {
          "type": "object",
          "properties": {
            "passenger_id": {
              "type": "string",
              "description": "Rider ID number"
            },
            "name": {
              "type": "string",
              "description": "Passenger's Name"
            },
            "airline": {
              "type": "string",
              "description": "Airline Name"
            }
          },
          "required": [
            "passenger_id",
            "name",
            "airline"
          ]
        }
      },
      {
        "name": "ConvenientLiving.JobRecruitment.getJobApplicantsForPosition",
        "description": "Get information about people applying for specific roles",
        "parameters": {
          "type": "object",
          "properties": {
            "position_name": {
              "type": "string",
              "description": "Job title, required"
            }
          },
          "required": [
            "position_name"
          ]
        }
      },
      {
        "name": "ConvenientLiving.FoodDelivery.getRestaurantLicense",
        "description": "Get licensing info for select restaurants",
        "parameters": {
          "type": "object",
          "properties": {
            "restaurant_name": {
              "type": "string",
              "description": "Name of the restaurant"
            }
          },
          "required": [
            "restaurant_name"
          ]
        }
      },
      {
        "name": "ConvenientLiving.UtilityPayments.queryBillInfo",
        "description": "Used to get billing details for utilities, etc.",
        "parameters": {
          "type": "object",
          "properties": {
            "service_type": {
              "type": "string",
              "description": "Types of paid services, such as utilities, gas, etc."
            },
            "user_name": {
              "type": "string",
              "description": "User Name"
            },
            "time": {
              "type": "string",
              "description": "Bill Time"
            }
          },
          "required": [
            "service_type",
            "user_name",
            "time"
          ]
        }
      },
      {
        "name": "ConvenientLiving.GovernmentServices.queryBusinessLicenseInfo",
        "description": "Get information about your business license",
        "parameters": {
          "type": "object",
          "properties": {
            "enterprise_name": {
              "type": "string",
              "description": "Name of the Enterprise"
            }
          },
          "required": [
            "enterprise_name"
          ]
        }
      }
    ],
    "single_tool": [
      {
        "name": "Navigation.FlightTickets.getFlightAirlinePoints",
        "description": "Earn airline credits",
        "parameters": {
          "type": "object",
          "properties": {
            "passenger_id": {
              "type": "string",
              "description": "Rider ID number"
            },
            "name": {
              "type": "string",
              "description": "Passenger's Name"
            },
            "airline": {
              "type": "string",
              "description": "Airline Name"
            }
          },
          "required": [
            "passenger_id",
            "name",
            "airline"
          ]
        }
      }
    ],
    "id": 36
  },
  {
    "messages": [
      {
        "role": "user",
        "content": "Can you check my airline credit balance?"
      },
      {
        "role": "function call",
        "content": {
          "name": "Navigation.FlightTickets.getFlightAirlinePoints",
          "arguments": {}
        }
      },
      {
        "role": "assistant",
        "content": "Provide the rider's ID number"
      },
      {
        "role": "user",
        "content": "123456789012345678 This is the first 18 digits of my ID number.I'm sorry, Rider ID number is 876543210987654321. "
      },
      {
        "role": "function call",
        "content": {
          "name": "Navigation.FlightTickets.getFlightAirlinePoints",
          "arguments": {
            "passenger_id": "876543210987654321"
          }
        }
      },
      {
        "role": "assistant",
        "content": "What's your rider's name"
      },
      {
        "role": "user",
        "content": "The rider's name is Zhang San, do you need me to provide any additional information?"
      },
      {
        "role": "function call",
        "content": {
          "name": "Navigation.FlightTickets.getFlightAirlinePoints",
          "arguments": {
            "passenger_id": "876543210987654321",
            "name": "Zhang San"
          }
        }
      }
    ],
    "multiple_tools": [
      {
        "name": "OnlineShopping.ExpressDelivery.rateExpressService",
        "description": "Rate courier service",
        "parameters": {
          "type": "object",
          "properties": {
            "express_id": {
              "type": "string",
              "description": "Tracking Number"
            },
            "signing_date": {
              "type": "string",
              "description": "The date of signing"
            },
            "rating": {
              "type": "string",
              "description": "Rating, 1-5 points"
            },
            "comment": {
              "type": "string",
              "description": "Scoring contents"
            }
          },
          "required": [
            "express_id",
            "signing_date",
            "rating",
            "comment"
          ]
        }
      },
      {
        "name": "Navigation.FlightTickets.getFlightAirlinePoints",
        "description": "Earn airline credits",
        "parameters": {
          "type": "object",
          "properties": {
            "passenger_id": {
              "type": "string",
              "description": "Rider ID number"
            },
            "name": {
              "type": "string",
              "description": "Passenger's Name"
            },
            "airline": {
              "type": "string",
              "description": "Airline Name"
            }
          },
          "required": [
            "passenger_id",
            "name",
            "airline"
          ]
        }
      },
      {
        "name": "Travel.ItineraryServices.getTravelTransportationOptions",
        "description": "Provide transportation and directions to your destination",
        "parameters": {
          "type": "object",
          "properties": {
            "origin": {
              "type": "string",
              "description": "Origination"
            },
            "destination": {
              "type": "string",
              "description": "destination"
            }
          },
          "required": [
            "origin",
            "destination"
          ]
        }
      },
      {
        "name": "Finance.Banking.viewBalance",
        "description": "Check the current balance of your bank account",
        "parameters": {
          "type": "object",
          "properties": {
            "account_number": {
              "type": "string",
              "description": "Inquired account number"
            }
          },
          "required": [
            "account_number"
          ]
        }
      },
      {
        "name": "Finance.Payment.getPayBalance",
        "description": "Check the current balance of the account",
        "parameters": {
          "type": "object",
          "properties": {},
          "required": []
        }
      }
    ],
    "single_tool": [
      {
        "name": "Navigation.FlightTickets.getFlightAirlinePoints",
        "description": "Earn airline credits",
        "parameters": {
          "type": "object",
          "properties": {
            "passenger_id": {
              "type": "string",
              "description": "Rider ID number"
            },
            "name": {
              "type": "string",
              "description": "Passenger's Name"
            },
            "airline": {
              "type": "string",
              "description": "Airline Name"
            }
          },
          "required": [
            "passenger_id",
            "name",
            "airline"
          ]
        }
      }
    ],
    "id": 37
  },
  {
    "messages": [
      {
        "role": "user",
        "content": "See how to redeem my Loyalty Points"
      },
      {
        "role": "function call",
        "content": {
          "name": "Navigation.FlightTickets.useFlightAirlinePoints",
          "arguments": {}
        }
      },
      {
        "role": "assistant",
        "content": "What is the rider's ID number"
      },
      {
        "role": "user",
        "content": "The rider's ID number is 440106198612020056."
      },
      {
        "role": "function call",
        "content": {
          "name": "Navigation.FlightTickets.useFlightAirlinePoints",
          "arguments": {
            "passenger_id": "440106198612020056"
          }
        }
      },
      {
        "role": "assistant",
        "content": "What's your rider's name"
      },
      {
        "role": "user",
        "content": "The passenger's name is Zhou WuzhengI'm sorry, Rider ID number is 123456. "
      },
      {
        "role": "function call",
        "content": {
          "name": "Navigation.FlightTickets.useFlightAirlinePoints",
          "arguments": {
            "passenger_id": "123456",
            "name": "Zhou Wuzheng"
          }
        }
      }
    ],
    "multiple_tools": [
      {
        "name": "Travel.ScenicAreaServices.getScenicSpotRating",
        "description": "Get user ratings for selected scenic spots",
        "parameters": {
          "type": "object",
          "properties": {
            "name": {
              "type": "string",
              "description": "Name of the tourist area"
            }
          },
          "required": [
            "name"
          ]
        }
      },
      {
        "name": "Navigation.FlightTickets.getFlightAirlinePoints",
        "description": "Earn airline credits",
        "parameters": {
          "type": "object",
          "properties": {
            "passenger_id": {
              "type": "string",
              "description": "Rider ID number"
            },
            "name": {
              "type": "string",
              "description": "Passenger's Name"
            },
            "airline": {
              "type": "string",
              "description": "Airline Name"
            }
          },
          "required": [
            "passenger_id",
            "name",
            "airline"
          ]
        }
      },
      {
        "name": "Education.OnlineClasses.evaluateCourse",
        "description": "Rate a course",
        "parameters": {
          "type": "object",
          "properties": {
            "course_name": {
              "type": "string",
              "description": "Course Title"
            },
            "rating": {
              "type": "string",
              "description": "Rating"
            }
          },
          "required": [
            "course_name",
            "rating"
          ]
        }
      },
      {
        "name": "Navigation.FlightTickets.useFlightAirlinePoints",
        "description": "Redeem frequent flyer points",
        "parameters": {
          "type": "object",
          "properties": {
            "passenger_id": {
              "type": "string",
              "description": "Rider ID number"
            },
            "name": {
              "type": "string",
              "description": "Passenger's Name"
            },
            "points_to_redeem": {
              "type": "string",
              "description": "Items to redeem"
            }
          },
          "required": [
            "passenger_id",
            "name",
            "points_to_redeem"
          ]
        }
      },
      {
        "name": "Navigation.TrafficViolations.queryDrivingLicensePoints",
        "description": "Check the remaining points on your driver's license",
        "parameters": {
          "type": "object",
          "properties": {
            "driving_license_number": {
              "type": "string",
              "description": "Licence Number:"
            }
          },
          "required": [
            "driving_license_number"
          ]
        }
      }
    ],
    "single_tool": [
      {
        "name": "Navigation.FlightTickets.useFlightAirlinePoints",
        "description": "Redeem frequent flyer points",
        "parameters": {
          "type": "object",
          "properties": {
            "passenger_id": {
              "type": "string",
              "description": "Rider ID number"
            },
            "name": {
              "type": "string",
              "description": "Passenger's Name"
            },
            "points_to_redeem": {
              "type": "string",
              "description": "Items to redeem"
            }
          },
          "required": [
            "passenger_id",
            "name",
            "points_to_redeem"
          ]
        }
      }
    ],
    "id": 38
  },
  {
    "messages": [
      {
        "role": "user",
        "content": "Find out what your airline's baggage rules are"
      },
      {
        "role": "function call",
        "content": {
          "name": "Navigation.FlightTickets.checkAirlinesBaggagePolicy",
          "arguments": {}
        }
      },
      {
        "role": "assistant",
        "content": "Is the flight type international or domestic"
      },
      {
        "role": "user",
        "content": "ChinaI'm sorry, Flight type e.g. domestic, international is International. "
      },
      {
        "role": "function call",
        "content": {
          "name": "Navigation.FlightTickets.checkAirlinesBaggagePolicy",
          "arguments": {
            "flight_type": "International"
          }
        }
      }
    ],
    "multiple_tools": [
      {
        "name": "Navigation.FlightTickets.checkAirlinesBaggagePolicy",
        "description": "Learn about airline baggage rules",
        "parameters": {
          "type": "object",
          "properties": {
            "flight_type": {
              "type": "string",
              "description": "Flight type e.g. domestic, international"
            },
            "name": {
              "type": "string",
              "description": "Airline Name"
            }
          },
          "required": [
            "flight_type",
            "name"
          ]
        }
      },
      {
        "name": "OfficeSoftware.Email.searchMail",
        "description": "Search messages by email keyword",
        "parameters": {
          "type": "object",
          "properties": {
            "keyword": {
              "type": "string",
              "description": "KEYWORDS"
            },
            "max_results": {
              "type": "integer",
              "description": "Maximum number of returned results, default is 10"
            }
          },
          "required": [
            "keyword",
            "max_results"
          ]
        }
      },
      {
        "name": "OfficeSoftware.Documents.searchDocuments",
        "description": "Search documents by keyword",
        "parameters": {
          "type": "object",
          "properties": {
            "keyword": {
              "type": "string",
              "description": "Search keywords, required"
            }
          },
          "required": [
            "keyword"
          ]
        }
      },
      {
        "name": "Education.ChildrenEducation.searchChildRiddle",
        "description": "Search for children's riddles",
        "parameters": {
          "type": "object",
          "properties": {
            "riddle_type": {
              "type": "string",
              "description": "Type of puzzle, e.g. animal puzzle, object puzzle"
            }
          },
          "required": [
            "riddle_type"
          ]
        }
      },
      {
        "name": "NewsMagazines.News.searchNews",
        "description": "Search news by keyword",
        "parameters": {
          "type": "object",
          "properties": {
            "keyword": {
              "type": "string",
              "description": "Keywords Search"
            }
          },
          "required": [
            "keyword"
          ]
        }
      }
    ],
    "single_tool": [
      {
        "name": "Navigation.FlightTickets.checkAirlinesBaggagePolicy",
        "description": "Learn about airline baggage rules",
        "parameters": {
          "type": "object",
          "properties": {
            "flight_type": {
              "type": "string",
              "description": "Flight type e.g. domestic, international"
            },
            "name": {
              "type": "string",
              "description": "Airline Name"
            }
          },
          "required": [
            "flight_type",
            "name"
          ]
        }
      }
    ],
    "id": 39
  },
  {
    "messages": [
      {
        "role": "user",
        "content": "Can you tell me about the air baggage rules?"
      },
      {
        "role": "function call",
        "content": {
          "name": "Navigation.FlightTickets.checkAirlinesBaggagePolicy",
          "arguments": {}
        }
      },
      {
        "role": "assistant",
        "content": "Is your flight domestic or international"
      },
      {
        "role": "user",
        "content": "My flight is international.I'm sorry, Flight type e.g. domestic, international is China. "
      },
      {
        "role": "function call",
        "content": {
          "name": "Navigation.FlightTickets.checkAirlinesBaggagePolicy",
          "arguments": {
            "flight_type": "China"
          }
        }
      }
    ],
    "multiple_tools": [
      {
        "name": "MusicRadio.OnlineMusic.participateInMusicTopicDiscussion",
        "description": "Participate in musical conversations by topic and comment content",
        "parameters": {
          "type": "object",
          "properties": {
            "topic": {
              "type": "string",
              "description": "Topic"
            },
            "comment": {
              "type": "string",
              "description": "Comments"
            }
          },
          "required": [
            "topic",
            "comment"
          ]
        }
      },
      {
        "name": "Navigation.TrafficViolations.queryTrafficRegulations",
        "description": "Find specific traffic laws",
        "parameters": {
          "type": "object",
          "properties": {
            "regulation_keyword": {
              "type": "string",
              "description": "Keywords for Traffic Regulations"
            }
          },
          "required": [
            "regulation_keyword"
          ]
        }
      },
      {
        "name": "SocialCommunication.Community.searchCommunityTopics",
        "description": "Search for related topics in specific communities by keyword",
        "parameters": {
          "type": "object",
          "properties": {
            "community_name": {
              "type": "string",
              "description": "Community name of the topic to search"
            },
            "key_words": {
              "type": "string",
              "description": "Keywords used to search topics"
            }
          },
          "required": [
            "community_name",
            "key_words"
          ]
        }
      },
      {
        "name": "Navigation.FlightTickets.checkAirlinesBaggagePolicy",
        "description": "Learn about airline baggage rules",
        "parameters": {
          "type": "object",
          "properties": {
            "flight_type": {
              "type": "string",
              "description": "Flight type e.g. domestic, international"
            },
            "name": {
              "type": "string",
              "description": "Airline Name"
            }
          },
          "required": [
            "flight_type",
            "name"
          ]
        }
      },
      {
        "name": "OfficeSoftware.Documents.searchDocuments",
        "description": "Search documents by keyword",
        "parameters": {
          "type": "object",
          "properties": {
            "keyword": {
              "type": "string",
              "description": "Search keywords, required"
            }
          },
          "required": [
            "keyword"
          ]
        }
      }
    ],
    "single_tool": [
      {
        "name": "Navigation.FlightTickets.checkAirlinesBaggagePolicy",
        "description": "Learn about airline baggage rules",
        "parameters": {
          "type": "object",
          "properties": {
            "flight_type": {
              "type": "string",
              "description": "Flight type e.g. domestic, international"
            },
            "name": {
              "type": "string",
              "description": "Airline Name"
            }
          },
          "required": [
            "flight_type",
            "name"
          ]
        }
      }
    ],
    "id": 40
  },
  {
    "messages": [
      {
        "role": "user",
        "content": "Look at my past flight booking records, remember to be more detailed"
      },
      {
        "role": "function call",
        "content": {
          "name": "Navigation.FlightTickets.viewBookingFlightHistory",
          "arguments": {}
        }
      },
      {
        "role": "assistant",
        "content": "Provide the rider's ID number"
      },
      {
        "role": "user",
        "content": "987654321098765432, which is the rider's ID number.I'm sorry, Rider ID number is 876543210987654321. "
      },
      {
        "role": "function call",
        "content": {
          "name": "Navigation.FlightTickets.viewBookingFlightHistory",
          "arguments": {
            "passenger_id": "876543210987654321"
          }
        }
      },
      {
        "role": "assistant",
        "content": "What's your rider's name"
      },
      {
        "role": "user",
        "content": "The rider's name is Li Si."
      },
      {
        "role": "function call",
        "content": {
          "name": "Navigation.FlightTickets.viewBookingFlightHistory",
          "arguments": {
            "passenger_id": "876543210987654321",
            "name": "Li Si"
          }
        }
      },
      {
        "role": "assistant",
        "content": "Please provide a start time."
      },
      {
        "role": "user",
        "content": "Started in January of this year."
      },
      {
        "role": "function call",
        "content": {
          "name": "Navigation.FlightTickets.viewBookingFlightHistory",
          "arguments": {
            "passenger_id": "876543210987654321",
            "name": "Li Si",
            "start_time": "January of this year"
          }
        }
      }
    ],
    "multiple_tools": [
      {
        "name": "Navigation.FlightTickets.viewBookingFlightHistory",
        "description": "View user's past flight bookings",
        "parameters": {
          "type": "object",
          "properties": {
            "passenger_id": {
              "type": "string",
              "description": "Rider ID number"
            },
            "name": {
              "type": "string",
              "description": "Passenger's Name"
            },
            "start_time": {
              "type": "string",
              "description": "Start Time "
            },
            "end_time": {
              "type": "string",
              "description": "End Time"
            }
          },
          "required": [
            "passenger_id",
            "name",
            "start_time",
            "end_time"
          ]
        }
      },
      {
        "name": "OfficeSoftware.Documents.getDocumentHistory",
        "description": "Get the action history of the specified document",
        "parameters": {
          "type": "object",
          "properties": {
            "document_name": {
              "type": "string",
              "description": "To get the document name of the history, it is required"
            }
          },
          "required": [
            "document_name"
          ]
        }
      },
      {
        "name": "SocialCommunication.Calling.viewPhoneCallRecords",
        "description": "View all call logs; view assigned call logs",
        "parameters": {
          "type": "object",
          "properties": {
            "contact_name": {
              "type": "string",
              "description": "Name of the contact to view; defaults to all records"
            }
          },
          "required": [
            "contact_name"
          ]
        }
      },
      {
        "name": "Navigation.TrainTickets.viewBookingTrainHistory",
        "description": "View user's past booking history",
        "parameters": {
          "type": "object",
          "properties": {},
          "required": []
        }
      },
      {
        "name": "Travel.HotelServices.getHotelReservationHistory",
        "description": "Get a user's hotel booking history",
        "parameters": {
          "type": "object",
          "properties": {
            "start_date": {
              "type": "string",
              "description": "Start Time "
            },
            "end_date": {
              "type": "string",
              "description": "End Time"
            }
          },
          "required": [
            "start_date",
            "end_date"
          ]
        }
      }
    ],
    "single_tool": [
      {
        "name": "Navigation.FlightTickets.viewBookingFlightHistory",
        "description": "View user's past flight bookings",
        "parameters": {
          "type": "object",
          "properties": {
            "passenger_id": {
              "type": "string",
              "description": "Rider ID number"
            },
            "name": {
              "type": "string",
              "description": "Passenger's Name"
            },
            "start_time": {
              "type": "string",
              "description": "Start Time "
            },
            "end_time": {
              "type": "string",
              "description": "End Time"
            }
          },
          "required": [
            "passenger_id",
            "name",
            "start_time",
            "end_time"
          ]
        }
      }
    ],
    "id": 41
  },
  {
    "messages": [
      {
        "role": "user",
        "content": "Flip through my previous flights and see what's on the record"
      },
      {
        "role": "function call",
        "content": {
          "name": "Navigation.FlightTickets.viewBookingFlightHistory",
          "arguments": {}
        }
      },
      {
        "role": "assistant",
        "content": "Provide the rider's ID number"
      },
      {
        "role": "user",
        "content": "123456789012345678I'm sorry, Rider ID number is 876543210987654321. "
      },
      {
        "role": "function call",
        "content": {
          "name": "Navigation.FlightTickets.viewBookingFlightHistory",
          "arguments": {
            "passenger_id": "876543210987654321"
          }
        }
      },
      {
        "role": "assistant",
        "content": "What's your rider's name"
      },
      {
        "role": "user",
        "content": "The passenger's name is Zhang San."
      },
      {
        "role": "function call",
        "content": {
          "name": "Navigation.FlightTickets.viewBookingFlightHistory",
          "arguments": {
            "passenger_id": "876543210987654321",
            "name": "Zhang San"
          }
        }
      },
      {
        "role": "assistant",
        "content": "Please provide a start time."
      },
      {
        "role": "user",
        "content": "It started in Specifically, December 5th."
      },
      {
        "role": "function call",
        "content": {
          "name": "Navigation.FlightTickets.viewBookingFlightHistory",
          "arguments": {
            "passenger_id": "876543210987654321",
            "name": "Zhang San",
            "start_time": "December 5th"
          }
        }
      }
    ],
    "multiple_tools": [
      {
        "name": "Health.MedicalServices.getPatientMedicalRecord",
        "description": "Obtain the patient's medical record information based on the patient's name, etc.",
        "parameters": {
          "type": "object",
          "properties": {
            "patient_name": {
              "type": "string",
              "description": "Patient Name"
            }
          },
          "required": [
            "patient_name"
          ]
        }
      },
      {
        "name": "SocialCommunication.Calling.viewPhoneCallRecords",
        "description": "View all call logs; view assigned call logs",
        "parameters": {
          "type": "object",
          "properties": {
            "contact_name": {
              "type": "string",
              "description": "Name of the contact to view; defaults to all records"
            }
          },
          "required": [
            "contact_name"
          ]
        }
      },
      {
        "name": "Navigation.FlightTickets.viewBookingFlightHistory",
        "description": "View user's past flight bookings",
        "parameters": {
          "type": "object",
          "properties": {
            "passenger_id": {
              "type": "string",
              "description": "Rider ID number"
            },
            "name": {
              "type": "string",
              "description": "Passenger's Name"
            },
            "start_time": {
              "type": "string",
              "description": "Start Time "
            },
            "end_time": {
              "type": "string",
              "description": "End Time"
            }
          },
          "required": [
            "passenger_id",
            "name",
            "start_time",
            "end_time"
          ]
        }
      },
      {
        "name": "OfficeSoftware.CloudStorage.netdiskGetUploadFilesRecords",
        "description": "Get a list of uploaded files/folders records in Cloud Drive",
        "parameters": {
          "type": "object",
          "properties": {},
          "required": []
        }
      },
      {
        "name": "Travel.HotelServices.getHotelReservationHistory",
        "description": "Get a user's hotel booking history",
        "parameters": {
          "type": "object",
          "properties": {
            "start_date": {
              "type": "string",
              "description": "Start Time "
            },
            "end_date": {
              "type": "string",
              "description": "End Time"
            }
          },
          "required": [
            "start_date",
            "end_date"
          ]
        }
      }
    ],
    "single_tool": [
      {
        "name": "Navigation.FlightTickets.viewBookingFlightHistory",
        "description": "View user's past flight bookings",
        "parameters": {
          "type": "object",
          "properties": {
            "passenger_id": {
              "type": "string",
              "description": "Rider ID number"
            },
            "name": {
              "type": "string",
              "description": "Passenger's Name"
            },
            "start_time": {
              "type": "string",
              "description": "Start Time "
            },
            "end_time": {
              "type": "string",
              "description": "End Time"
            }
          },
          "required": [
            "passenger_id",
            "name",
            "start_time",
            "end_time"
          ]
        }
      }
    ],
    "id": 42
  },
  {
    "messages": [
      {
        "role": "user",
        "content": "Find out how many train tickets are left"
      },
      {
        "role": "function call",
        "content": {
          "name": "Navigation.TrainTickets.queryTrainTicket",
          "arguments": {}
        }
      },
      {
        "role": "assistant",
        "content": "Where is your departure station?"
      },
      {
        "role": "user",
        "content": "My departure station is Xi 'an North."
      },
      {
        "role": "function call",
        "content": {
          "name": "Navigation.TrainTickets.queryTrainTicket",
          "arguments": {
            "departure_station": "Xi 'an North Railway"
          }
        }
      },
      {
        "role": "assistant",
        "content": "Where is your arrival station?"
      },
      {
        "role": "user",
        "content": "My arrival station is Lanzhou West Railway Station."
      },
      {
        "role": "function call",
        "content": {
          "name": "Navigation.TrainTickets.queryTrainTicket",
          "arguments": {
            "departure_station": "Xi 'an North Railway",
            "destination_station": "Lanzhou West Railway Station"
          }
        }
      },
      {
        "role": "assistant",
        "content": "What's the date of your trip?"
      },
      {
        "role": "user",
        "content": "I plan to leave this Saturday."
      },
      {
        "role": "function call",
        "content": {
          "name": "Navigation.TrainTickets.queryTrainTicket",
          "arguments": {
            "departure_station": "Xi 'an North Railway",
            "destination_station": "Lanzhou West Railway Station",
            "ride_date": "Saturday"
          }
        }
      },
      {
        "role": "assistant",
        "content": "Please provide the type of seat you would like to inquire about"
      },
      {
        "role": "user",
        "content": "I would like to check the fare and availability of Softbeds.I'm sorry, Date of trip is April 10. "
      },
      {
        "role": "function call",
        "content": {
          "name": "Navigation.TrainTickets.queryTrainTicket",
          "arguments": {
            "departure_station": "Xi 'an North Railway",
            "destination_station": "Lanzhou West Railway Station",
            "ride_date": "April 10",
            "seat_type": "Softbed"
          }
        }
      }
    ],
    "multiple_tools": [
      {
        "name": "Navigation.Bicycles.searchBikesOrders",
        "description": "See a list of bike rides",
        "parameters": {
          "type": "object",
          "properties": {},
          "required": []
        }
      },
      {
        "name": "UtilityTools.Memo.searchNotes",
        "description": "Search memos by keyword (see all by default)",
        "parameters": {
          "type": "object",
          "properties": {
            "key_words": {
              "type": "string",
              "description": "KEYWORDS"
            }
          },
          "required": [
            "key_words"
          ]
        }
      },
      {
        "name": "Navigation.TrainTickets.searchWaitlistTrain",
        "description": "Search for alternate train numbers based on the criteria entered by the user",
        "parameters": {
          "type": "object",
          "properties": {
            "ride_date": {
              "type": "string",
              "description": "Date of trip"
            },
            "departure_station": {
              "type": "string",
              "description": "Departure Station"
            },
            "destination_station": {
              "type": "string",
              "description": "arrival station"
            }
          },
          "required": [
            "ride_date",
            "departure_station",
            "destination_station"
          ]
        }
      },
      {
        "name": "Navigation.TrainTickets.queryTrainTicket",
        "description": "Check the status of the remaining train tickets for the specified date, departure place, and destination",
        "parameters": {
          "type": "object",
          "properties": {
            "ride_date": {
              "type": "string",
              "description": "Date of trip"
            },
            "departure_station": {
              "type": "string",
              "description": "Departure Station"
            },
            "destination_station": {
              "type": "string",
              "description": "arrival station"
            },
            "train_type": {
              "type": "string",
              "description": "Train type, optional types are high-speed rail, motor vehicles, general express, express, etc."
            },
            "seat_type": {
              "type": "string",
              "description": "Seat Type"
            }
          },
          "required": [
            "ride_date",
            "departure_station",
            "destination_station",
            "train_type",
            "seat_type"
          ]
        }
      },
      {
        "name": "MusicRadio.RadioStations.radioSearchPlaylist",
        "description": "Search Playlists",
        "parameters": {
          "type": "object",
          "properties": {
            "keyword": {
              "type": "string",
              "description": "category"
            }
          },
          "required": [
            "keyword"
          ]
        }
      }
    ],
    "single_tool": [
      {
        "name": "Navigation.TrainTickets.queryTrainTicket",
        "description": "Check the status of the remaining train tickets for the specified date, departure place, and destination",
        "parameters": {
          "type": "object",
          "properties": {
            "ride_date": {
              "type": "string",
              "description": "Date of trip"
            },
            "departure_station": {
              "type": "string",
              "description": "Departure Station"
            },
            "destination_station": {
              "type": "string",
              "description": "arrival station"
            },
            "train_type": {
              "type": "string",
              "description": "Train type, optional types are high-speed rail, motor vehicles, general express, express, etc."
            },
            "seat_type": {
              "type": "string",
              "description": "Seat Type"
            }
          },
          "required": [
            "ride_date",
            "departure_station",
            "destination_station",
            "train_type",
            "seat_type"
          ]
        }
      }
    ],
    "id": 43
  },
  {
    "messages": [
      {
        "role": "user",
        "content": "Do you still have tickets for the train?"
      },
      {
        "role": "function call",
        "content": {
          "name": "Navigation.TrainTickets.queryTrainTicket",
          "arguments": {}
        }
      },
      {
        "role": "assistant",
        "content": "Where is your departure station?"
      },
      {
        "role": "user",
        "content": "My departure station is Guangzhou South Station."
      },
      {
        "role": "function call",
        "content": {
          "name": "Navigation.TrainTickets.queryTrainTicket",
          "arguments": {
            "departure_station": "Guangzhou South"
          }
        }
      },
      {
        "role": "assistant",
        "content": "Where is your arrival station?"
      },
      {
        "role": "user",
        "content": "My arrival station is Changsha South."
      },
      {
        "role": "function call",
        "content": {
          "name": "Navigation.TrainTickets.queryTrainTicket",
          "arguments": {
            "departure_station": "Guangzhou South",
            "destination_station": "Changsha South"
          }
        }
      },
      {
        "role": "assistant",
        "content": "When do you take the train?"
      },
      {
        "role": "user",
        "content": "The date of the trip is April 10th."
      },
      {
        "role": "function call",
        "content": {
          "name": "Navigation.TrainTickets.queryTrainTicket",
          "arguments": {
            "departure_station": "Guangzhou South",
            "destination_station": "Changsha South",
            "ride_date": "April 10th"
          }
        }
      },
      {
        "role": "assistant",
        "content": "Please provide the type of seat you would like to inquire about"
      },
      {
        "role": "user",
        "content": "I would like to inquire about second class seats.I'm sorry, Seat Type is Softbed. "
      },
      {
        "role": "function call",
        "content": {
          "name": "Navigation.TrainTickets.queryTrainTicket",
          "arguments": {
            "departure_station": "Guangzhou South",
            "destination_station": "Changsha South",
            "ride_date": "April 10th",
            "seat_type": "Softbed"
          }
        }
      }
    ],
    "multiple_tools": [
      {
        "name": "OnlineShopping.Mall.searchCommodityOrders",
        "description": "Query all eligible orders by commodity name and other criteria",
        "parameters": {
          "type": "object",
          "properties": {
            "goods": {
              "type": "string",
              "description": "Product Name"
            },
            "order_stage": {
              "type": "string",
              "description": "Order status, e.g. Pending Payment, Pending Receipt, Completed, Cancelled, Refund/After Sales"
            },
            "evaluate_stage": {
              "type": "string",
              "description": "Review status, e.g. reviewed, pending review"
            }
          },
          "required": [
            "goods",
            "order_stage",
            "evaluate_stage"
          ]
        }
      },
      {
        "name": "Navigation.TrainTickets.queryTrainTicket",
        "description": "Check the status of the remaining train tickets for the specified date, departure place, and destination",
        "parameters": {
          "type": "object",
          "properties": {
            "ride_date": {
              "type": "string",
              "description": "Date of trip"
            },
            "departure_station": {
              "type": "string",
              "description": "Departure Station"
            },
            "destination_station": {
              "type": "string",
              "description": "arrival station"
            },
            "train_type": {
              "type": "string",
              "description": "Train type, optional types are high-speed rail, motor vehicles, general express, express, etc."
            },
            "seat_type": {
              "type": "string",
              "description": "Seat Type"
            }
          },
          "required": [
            "ride_date",
            "departure_station",
            "destination_station",
            "train_type",
            "seat_type"
          ]
        }
      },
      {
        "name": "Navigation.TrainTickets.queryPassengerTrainOrder",
        "description": "Check the passenger's train ticket reservation information",
        "parameters": {
          "type": "object",
          "properties": {
            "passenger_id": {
              "type": "string",
              "description": "Rider ID number"
            },
            "name": {
              "type": "string",
              "description": "Name of person to query"
            },
            "time": {
              "type": "string",
              "description": "Release Date"
            }
          },
          "required": [
            "passenger_id",
            "name",
            "time"
          ]
        }
      },
      {
        "name": "Finance.Stocks.getStockPosition",
        "description": "Query the position status of designated stocks",
        "parameters": {
          "type": "object",
          "properties": {
            "stock_code": {
              "type": "string",
              "description": "Ticker"
            },
            "stock_name": {
              "type": "string",
              "description": "Stock Key Name"
            }
          },
          "required": [
            "stock_code",
            "stock_name"
          ]
        }
      },
      {
        "name": "ConvenientLiving.JobRecruitment.checkJobPositionAvailability",
        "description": "Check if a specific position is still being recruited",
        "parameters": {
          "type": "object",
          "properties": {
            "job_name": {
              "type": "string",
              "description": "Position name"
            },
            "company_name": {
              "type": "string",
              "description": "Company name"
            }
          },
          "required": [
            "job_name",
            "company_name"
          ]
        }
      }
    ],
    "single_tool": [
      {
        "name": "Navigation.TrainTickets.queryTrainTicket",
        "description": "Check the status of the remaining train tickets for the specified date, departure place, and destination",
        "parameters": {
          "type": "object",
          "properties": {
            "ride_date": {
              "type": "string",
              "description": "Date of trip"
            },
            "departure_station": {
              "type": "string",
              "description": "Departure Station"
            },
            "destination_station": {
              "type": "string",
              "description": "arrival station"
            },
            "train_type": {
              "type": "string",
              "description": "Train type, optional types are high-speed rail, motor vehicles, general express, express, etc."
            },
            "seat_type": {
              "type": "string",
              "description": "Seat Type"
            }
          },
          "required": [
            "ride_date",
            "departure_station",
            "destination_station",
            "train_type",
            "seat_type"
          ]
        }
      }
    ],
    "id": 44
  },
  {
    "messages": [
      {
        "role": "user",
        "content": "Hey, I'm planning a trip, can you check the train ticket information for me? Although I have not yet determined the city of departure and arrival, as well as the specific date."
      },
      {
        "role": "function call",
        "content": {
          "name": "Navigation.TrainTickets.bookTrainTicket",
          "arguments": {}
        }
      },
      {
        "role": "assistant",
        "content": "Please provide departure station information"
      },
      {
        "role": "user",
        "content": "The departure station is Beijing West Station."
      },
      {
        "role": "function call",
        "content": {
          "name": "Navigation.TrainTickets.bookTrainTicket",
          "arguments": {
            "departure_station": "Beijing West Railway Station"
          }
        }
      },
      {
        "role": "assistant",
        "content": "Please provide arrival station"
      },
      {
        "role": "user",
        "content": "The arrival station is Hangzhou East."
      },
      {
        "role": "function call",
        "content": {
          "name": "Navigation.TrainTickets.bookTrainTicket",
          "arguments": {
            "departure_station": "Beijing West Railway Station",
            "destination_station": "Hangzhou East"
          }
        }
      },
      {
        "role": "assistant",
        "content": "Provide the rider's ID number"
      },
      {
        "role": "user",
        "content": "The ID number is 234567890123456789."
      },
      {
        "role": "function call",
        "content": {
          "name": "Navigation.TrainTickets.bookTrainTicket",
          "arguments": {
            "departure_station": "Beijing West Railway Station",
            "destination_station": "Hangzhou East",
            "passenger_id": "234567890123456789"
          }
        }
      },
      {
        "role": "assistant",
        "content": "What's the rider's name"
      },
      {
        "role": "user",
        "content": "The passenger's name was Li Si."
      },
      {
        "role": "function call",
        "content": {
          "name": "Navigation.TrainTickets.bookTrainTicket",
          "arguments": {
            "departure_station": "Beijing West Railway Station",
            "destination_station": "Hangzhou East",
            "passenger_id": "234567890123456789",
            "passenger_name": "Li Si"
          }
        }
      },
      {
        "role": "assistant",
        "content": "When do you take the train?"
      },
      {
        "role": "user",
        "content": "October 5th, I plan to travel that day.I'm sorry, Date of trip is Next Friday. "
      },
      {
        "role": "function call",
        "content": {
          "name": "Navigation.TrainTickets.bookTrainTicket",
          "arguments": {
            "departure_station": "Beijing West Railway Station",
            "destination_station": "Hangzhou East",
            "passenger_id": "234567890123456789",
            "passenger_name": "Li Si",
            "ride_date": "Next Friday"
          }
        }
      },
      {
        "role": "assistant",
        "content": "What type of seat would you like to book"
      },
      {
        "role": "user",
        "content": "I would like to book a second class seat at a moderate and comfortable price."
      },
      {
        "role": "function call",
        "content": {
          "name": "Navigation.TrainTickets.bookTrainTicket",
          "arguments": {
            "departure_station": "Beijing West Railway Station",
            "destination_station": "Hangzhou East",
            "passenger_id": "234567890123456789",
            "passenger_name": "Li Si",
            "ride_date": "Next Friday",
            "seat_type": "Second class"
          }
        }
      }
    ],
    "multiple_tools": [
      {
        "name": "Finance.Insurance.getInsuranceFAQ",
        "description": "Frequently asked questions and answers about insurance",
        "parameters": {
          "type": "object",
          "properties": {
            "keyword": {
              "type": "string",
              "description": "Question Keywords"
            }
          },
          "required": [
            "keyword"
          ]
        }
      },
      {
        "name": "Navigation.TrainTickets.queryTrainDelayInfo",
        "description": "Check if the specified train is late and how long it is",
        "parameters": {
          "type": "object",
          "properties": {
            "train_number": {
              "type": "string",
              "description": "Trips to inquire about"
            }
          },
          "required": [
            "train_number"
          ]
        }
      },
      {
        "name": "Navigation.TrainTickets.bookTrainTicket",
        "description": "Book a train ticket for a specific time, origin, or destination for a specific rider",
        "parameters": {
          "type": "object",
          "properties": {
            "ride_date": {
              "type": "string",
              "description": "Date of trip"
            },
            "departure_station": {
              "type": "string",
              "description": "Departure Station"
            },
            "destination_station": {
              "type": "string",
              "description": "arrival station"
            },
            "train_type": {
              "type": "string",
              "description": "Train type, optional types are high-speed rail, motor vehicles, general express, express, etc."
            },
            "seat_type": {
              "type": "string",
              "description": "Seat Type"
            },
            "passenger_name": {
              "type": "string",
              "description": "Rider's name"
            },
            "passenger_id": {
              "type": "string",
              "description": "Rider ID number"
            }
          },
          "required": [
            "ride_date",
            "departure_station",
            "destination_station",
            "train_type",
            "seat_type",
            "passenger_name",
            "passenger_id"
          ]
        }
      },
      {
        "name": "Navigation.TrainTickets.queryTrainTicket",
        "description": "Check the status of the remaining train tickets for the specified date, departure place, and destination",
        "parameters": {
          "type": "object",
          "properties": {
            "ride_date": {
              "type": "string",
              "description": "Date of trip"
            },
            "departure_station": {
              "type": "string",
              "description": "Departure Station"
            },
            "destination_station": {
              "type": "string",
              "description": "arrival station"
            },
            "train_type": {
              "type": "string",
              "description": "Train type, optional types are high-speed rail, motor vehicles, general express, express, etc."
            },
            "seat_type": {
              "type": "string",
              "description": "Seat Type"
            }
          },
          "required": [
            "ride_date",
            "departure_station",
            "destination_station",
            "train_type",
            "seat_type"
          ]
        }
      },
      {
        "name": "ConvenientLiving.JobRecruitment.checkJobPositionAvailability",
        "description": "Check if a specific position is still being recruited",
        "parameters": {
          "type": "object",
          "properties": {
            "job_name": {
              "type": "string",
              "description": "Position name"
            },
            "company_name": {
              "type": "string",
              "description": "Company name"
            }
          },
          "required": [
            "job_name",
            "company_name"
          ]
        }
      }
    ],
    "single_tool": [
      {
        "name": "Navigation.TrainTickets.bookTrainTicket",
        "description": "Book a train ticket for a specific time, origin, or destination for a specific rider",
        "parameters": {
          "type": "object",
          "properties": {
            "ride_date": {
              "type": "string",
              "description": "Date of trip"
            },
            "departure_station": {
              "type": "string",
              "description": "Departure Station"
            },
            "destination_station": {
              "type": "string",
              "description": "arrival station"
            },
            "train_type": {
              "type": "string",
              "description": "Train type, optional types are high-speed rail, motor vehicles, general express, express, etc."
            },
            "seat_type": {
              "type": "string",
              "description": "Seat Type"
            },
            "passenger_name": {
              "type": "string",
              "description": "Rider's name"
            },
            "passenger_id": {
              "type": "string",
              "description": "Rider ID number"
            }
          },
          "required": [
            "ride_date",
            "departure_station",
            "destination_station",
            "train_type",
            "seat_type",
            "passenger_name",
            "passenger_id"
          ]
        }
      }
    ],
    "id": 45
  },
  {
    "messages": [
      {
        "role": "user",
        "content": "Find out when the train departs, arrives, and where it stops"
      },
      {
        "role": "function call",
        "content": {
          "name": "Navigation.TrainTickets.queryTrainSchedule",
          "arguments": {}
        }
      },
      {
        "role": "assistant",
        "content": "What is the query date?"
      },
      {
        "role": "user",
        "content": "The date of the inquiry is April 15, what are the special arrangements?I'm sorry, Query Date is Fri. "
      },
      {
        "role": "function call",
        "content": {
          "name": "Navigation.TrainTickets.queryTrainSchedule",
          "arguments": {
            "time": "Friday"
          }
        }
      }
    ],
    "multiple_tools": [
      {
        "name": "OfficeSoftware.Conferencing.viewParticipants",
        "description": "Get a list of participants for the current meeting",
        "parameters": {
          "type": "object",
          "properties": {
            "meeting_id": {
              "type": "string",
              "description": "Conference No."
            },
            "title": {
              "type": "string",
              "description": "Meeting Title:"
            },
            "time": {
              "type": "string",
              "description": "Meeting Date"
            }
          },
          "required": [
            "meeting_id",
            "title",
            "time"
          ]
        }
      },
      {
        "name": "Navigation.TrainTickets.queryPassengerTrainOrder",
        "description": "Check the passenger's train ticket reservation information",
        "parameters": {
          "type": "object",
          "properties": {
            "passenger_id": {
              "type": "string",
              "description": "Rider ID number"
            },
            "name": {
              "type": "string",
              "description": "Name of person to query"
            },
            "time": {
              "type": "string",
              "description": "Release Date"
            }
          },
          "required": [
            "passenger_id",
            "name",
            "time"
          ]
        }
      },
      {
        "name": "OnlineShopping.Mall.searchCoupons",
        "description": "Check the coupons list",
        "parameters": {
          "type": "object",
          "properties": {},
          "required": []
        }
      },
      {
        "name": "Navigation.TrainTickets.queryTrainSchedule",
        "description": "Find departure, arrival, and stops for specific trips",
        "parameters": {
          "type": "object",
          "properties": {
            "train_number": {
              "type": "string",
              "description": "Trips to inquire about"
            },
            "time": {
              "type": "string",
              "description": "Query Date"
            }
          },
          "required": [
            "train_number",
            "time"
          ]
        }
      },
      {
        "name": "OfficeSoftware.CloudStorage.netdiskSearchDeletedFile",
        "description": "Search for files by keyword in the Drive Recycle Bin",
        "parameters": {
          "type": "object",
          "properties": {
            "keyword": {
              "type": "string",
              "description": "Keywords Search"
            }
          },
          "required": [
            "keyword"
          ]
        }
      }
    ],
    "single_tool": [
      {
        "name": "Navigation.TrainTickets.queryTrainSchedule",
        "description": "Find departure, arrival, and stops for specific trips",
        "parameters": {
          "type": "object",
          "properties": {
            "train_number": {
              "type": "string",
              "description": "Trips to inquire about"
            },
            "time": {
              "type": "string",
              "description": "Query Date"
            }
          },
          "required": [
            "train_number",
            "time"
          ]
        }
      }
    ],
    "id": 46
  },
  {
    "messages": [
      {
        "role": "user",
        "content": "Check the train's itinerary details"
      },
      {
        "role": "function call",
        "content": {
          "name": "Navigation.TrainTickets.queryTrainSchedule",
          "arguments": {}
        }
      },
      {
        "role": "assistant",
        "content": "What is the query date?"
      },
      {
        "role": "user",
        "content": "The enquiry date is this Friday.I'm sorry, Query Date is April 15th. "
      },
      {
        "role": "function call",
        "content": {
          "name": "Navigation.TrainTickets.queryTrainSchedule",
          "arguments": {
            "time": "April 15th"
          }
        }
      }
    ],
    "multiple_tools": [
      {
        "name": "Navigation.PublicTransit.viewBusInfo",
        "description": "View the details of a bus, including stops, departure times, last shift times, fares, etc.",
        "parameters": {
          "type": "object",
          "properties": {
            "bus_name": {
              "type": "string",
              "description": "Bus name"
            }
          },
          "required": [
            "bus_name"
          ]
        }
      },
      {
        "name": "Travel.ItineraryServices.viewTravelItinerary",
        "description": "View a user-created trip by trip name or keyword",
        "parameters": {
          "type": "object",
          "properties": {
            "name": {
              "type": "string",
              "description": "Trip name or keyword"
            }
          },
          "required": [
            "name"
          ]
        }
      },
      {
        "name": "Navigation.TrainTickets.queryPassengerTrainOrder",
        "description": "Check the passenger's train ticket reservation information",
        "parameters": {
          "type": "object",
          "properties": {
            "passenger_id": {
              "type": "string",
              "description": "Rider ID number"
            },
            "name": {
              "type": "string",
              "description": "Name of person to query"
            },
            "time": {
              "type": "string",
              "description": "Release Date"
            }
          },
          "required": [
            "passenger_id",
            "name",
            "time"
          ]
        }
      },
      {
        "name": "Navigation.TrainTickets.queryTrainDelayInfo",
        "description": "Check if the specified train is late and how long it is",
        "parameters": {
          "type": "object",
          "properties": {
            "train_number": {
              "type": "string",
              "description": "Trips to inquire about"
            }
          },
          "required": [
            "train_number"
          ]
        }
      },
      {
        "name": "Navigation.TrainTickets.queryTrainSchedule",
        "description": "Find departure, arrival, and stops for specific trips",
        "parameters": {
          "type": "object",
          "properties": {
            "train_number": {
              "type": "string",
              "description": "Trips to inquire about"
            },
            "time": {
              "type": "string",
              "description": "Query Date"
            }
          },
          "required": [
            "train_number",
            "time"
          ]
        }
      }
    ],
    "single_tool": [
      {
        "name": "Navigation.TrainTickets.queryTrainSchedule",
        "description": "Find departure, arrival, and stops for specific trips",
        "parameters": {
          "type": "object",
          "properties": {
            "train_number": {
              "type": "string",
              "description": "Trips to inquire about"
            },
            "time": {
              "type": "string",
              "description": "Query Date"
            }
          },
          "required": [
            "train_number",
            "time"
          ]
        }
      }
    ],
    "id": 47
  },
  {
    "messages": [
      {
        "role": "user",
        "content": "Check my train ticket booking information to see if there are any anomalies"
      },
      {
        "role": "function call",
        "content": {
          "name": "Navigation.TrainTickets.queryPassengerTrainOrder",
          "arguments": {}
        }
      },
      {
        "role": "assistant",
        "content": "Provide the rider's ID number"
      },
      {
        "role": "user",
        "content": "987654321098765432, which is the rider's ID number."
      },
      {
        "role": "function call",
        "content": {
          "name": "Navigation.TrainTickets.queryPassengerTrainOrder",
          "arguments": {
            "passenger_id": "987654321098765432"
          }
        }
      },
      {
        "role": "assistant",
        "content": "Please provide the rider's name"
      },
      {
        "role": "user",
        "content": "The passenger's name is Li Si.I'm sorry, Name of person to query is Zhang San. "
      },
      {
        "role": "function call",
        "content": {
          "name": "Navigation.TrainTickets.queryPassengerTrainOrder",
          "arguments": {
            "passenger_id": "987654321098765432",
            "name": "Zhang San"
          }
        }
      }
    ],
    "multiple_tools": [
      {
        "name": "Navigation.TrafficViolations.viewTrafficEvent",
        "description": "View notifications about traffic events",
        "parameters": {
          "type": "object",
          "properties": {
            "keyword": {
              "type": "string",
              "description": "Additional conditions, such as area of occurrence, duration of impact, etc."
            }
          },
          "required": [
            "keyword"
          ]
        }
      },
      {
        "name": "SystemTools.SystemOptimization.scanForSystemVulnerabilities",
        "description": "Detect possible security flaws in your phone's system",
        "parameters": {
          "type": "object",
          "properties": {},
          "required": []
        }
      },
      {
        "name": "Navigation.TrainTickets.queryPassengerTrainOrder",
        "description": "Check the passenger's train ticket reservation information",
        "parameters": {
          "type": "object",
          "properties": {
            "passenger_id": {
              "type": "string",
              "description": "Rider ID number"
            },
            "name": {
              "type": "string",
              "description": "Name of person to query"
            },
            "time": {
              "type": "string",
              "description": "Release Date"
            }
          },
          "required": [
            "passenger_id",
            "name",
            "time"
          ]
        }
      },
      {
        "name": "Travel.ScenicAreaServices.getScenicSpotEventInfo",
        "description": "Get upcoming event schedules for selected scenic spots",
        "parameters": {
          "type": "object",
          "properties": {
            "name": {
              "type": "string",
              "description": "Name of the tourist area"
            }
          },
          "required": [
            "name"
          ]
        }
      },
      {
        "name": "Navigation.TrainTickets.queryTrainDelayInfo",
        "description": "Check if the specified train is late and how long it is",
        "parameters": {
          "type": "object",
          "properties": {
            "train_number": {
              "type": "string",
              "description": "Trips to inquire about"
            }
          },
          "required": [
            "train_number"
          ]
        }
      }
    ],
    "single_tool": [
      {
        "name": "Navigation.TrainTickets.queryPassengerTrainOrder",
        "description": "Check the passenger's train ticket reservation information",
        "parameters": {
          "type": "object",
          "properties": {
            "passenger_id": {
              "type": "string",
              "description": "Rider ID number"
            },
            "name": {
              "type": "string",
              "description": "Name of person to query"
            },
            "time": {
              "type": "string",
              "description": "Release Date"
            }
          },
          "required": [
            "passenger_id",
            "name",
            "time"
          ]
        }
      }
    ],
    "id": 49
  },
  {
    "messages": [
      {
        "role": "user",
        "content": "Can you confirm the details of the train ticket order for me? "
      },
      {
        "role": "function call",
        "content": {
          "name": "Navigation.TrainTickets.queryPassengerTrainOrder",
          "arguments": {}
        }
      },
      {
        "role": "assistant",
        "content": "Provide the rider's ID number"
      },
      {
        "role": "user",
        "content": "123456789012345678I'm sorry, Rider ID number is 310101198501012345. "
      },
      {
        "role": "function call",
        "content": {
          "name": "Navigation.TrainTickets.queryPassengerTrainOrder",
          "arguments": {
            "passenger_id": "310101198501012345"
          }
        }
      },
      {
        "role": "assistant",
        "content": "Please provide the rider's name"
      },
      {
        "role": "user",
        "content": "The passenger's name is Zhang San."
      },
      {
        "role": "function call",
        "content": {
          "name": "Navigation.TrainTickets.queryPassengerTrainOrder",
          "arguments": {
            "passenger_id": "310101198501012345",
            "name": "Zhang San"
          }
        }
      }
    ],
    "multiple_tools": [
      {
        "name": "OnlineShopping.SecondhandTrading.searchSecondhandSaleOrdersDetails",
        "description": "View specific item order details based on criteria",
        "parameters": {
          "type": "object",
          "properties": {
            "goods_name": {
              "type": "string",
              "description": "Product name keywords"
            }
          },
          "required": [
            "goods_name"
          ]
        }
      },
      {
        "name": "Navigation.TrainTickets.queryPassengerTrainOrder",
        "description": "Check the passenger's train ticket reservation information",
        "parameters": {
          "type": "object",
          "properties": {
            "passenger_id": {
              "type": "string",
              "description": "Rider ID number"
            },
            "name": {
              "type": "string",
              "description": "Name of person to query"
            },
            "time": {
              "type": "string",
              "description": "Release Date"
            }
          },
          "required": [
            "passenger_id",
            "name",
            "time"
          ]
        }
      },
      {
        "name": "Navigation.Bicycles.searchBikesOrderDetails",
        "description": "View bike order details",
        "parameters": {
          "type": "object",
          "properties": {},
          "required": []
        }
      },
      {
        "name": "Navigation.TaxiCarRental.viewCarRentalOrdersDetails",
        "description": "Review the details of a rental order",
        "parameters": {
          "type": "object",
          "properties": {
            "time": {
              "type": "string",
              "description": "Release Date"
            }
          },
          "required": [
            "time"
          ]
        }
      },
      {
        "name": "OnlineShopping.Mall.searchCommodityOrderDetails",
        "description": "View details of an item order based on criteria",
        "parameters": {
          "type": "object",
          "properties": {
            "goods": {
              "type": "string",
              "description": "Product Name"
            },
            "order_stage": {
              "type": "string",
              "description": "Order status, e.g. Pending Payment, Pending Receipt, Completed, Cancelled, Refund/After Sales"
            },
            "evaluate_stage": {
              "type": "string",
              "description": "Review status, e.g. reviewed, pending review"
            }
          },
          "required": [
            "goods",
            "order_stage",
            "evaluate_stage"
          ]
        }
      }
    ],
    "single_tool": [
      {
        "name": "Navigation.TrainTickets.queryPassengerTrainOrder",
        "description": "Check the passenger's train ticket reservation information",
        "parameters": {
          "type": "object",
          "properties": {
            "passenger_id": {
              "type": "string",
              "description": "Rider ID number"
            },
            "name": {
              "type": "string",
              "description": "Name of person to query"
            },
            "time": {
              "type": "string",
              "description": "Release Date"
            }
          },
          "required": [
            "passenger_id",
            "name",
            "time"
          ]
        }
      }
    ],
    "id": 50
  },
  {
    "messages": [
      {
        "role": "user",
        "content": "Check the status of the train ticket waiting list"
      },
      {
        "role": "function call",
        "content": {
          "name": "Navigation.TrainTickets.queryTrainWaitlistStatus",
          "arguments": {}
        }
      },
      {
        "role": "assistant",
        "content": "When do you take the train?"
      },
      {
        "role": "user",
        "content": "The date of the trip is June 5."
      },
      {
        "role": "function call",
        "content": {
          "name": "Navigation.TrainTickets.queryTrainWaitlistStatus",
          "arguments": {
            "ride_date": "5 June"
          }
        }
      },
      {
        "role": "assistant",
        "content": "What is the date and time the order was submitted"
      },
      {
        "role": "user",
        "content": "My order was placed on June 1st.I'm sorry, Date/time the order was submitted is 8 July. "
      },
      {
        "role": "function call",
        "content": {
          "name": "Navigation.TrainTickets.queryTrainWaitlistStatus",
          "arguments": {
            "ride_date": "5 June",
            "commit_date": "8 July"
          }
        }
      },
      {
        "role": "assistant",
        "content": "Please provide departure station information"
      },
      {
        "role": "user",
        "content": "I leave from Beijing."
      },
      {
        "role": "function call",
        "content": {
          "name": "Navigation.TrainTickets.queryTrainWaitlistStatus",
          "arguments": {
            "ride_date": "5 June",
            "commit_date": "8 July",
            "departure_station": "Beijing"
          }
        }
      },
      {
        "role": "assistant",
        "content": "Where is your arrival station?"
      },
      {
        "role": "user",
        "content": "My arrival station is Shanghai."
      },
      {
        "role": "function call",
        "content": {
          "name": "Navigation.TrainTickets.queryTrainWaitlistStatus",
          "arguments": {
            "ride_date": "5 June",
            "commit_date": "8 July",
            "departure_station": "Beijing",
            "destination_station": "Shanghai"
          }
        }
      },
      {
        "role": "assistant",
        "content": "Provide the rider's ID number"
      },
      {
        "role": "user",
        "content": "123456789012345678"
      },
      {
        "role": "function call",
        "content": {
          "name": "Navigation.TrainTickets.queryTrainWaitlistStatus",
          "arguments": {
            "ride_date": "5 June",
            "commit_date": "8 July",
            "departure_station": "Beijing",
            "destination_station": "Shanghai",
            "passenger_id": "123456789012345678"
          }
        }
      }
    ],
    "multiple_tools": [
      {
        "name": "ConvenientLiving.JobRecruitment.checkJobApplicationStatus",
        "description": "View the status of job applications by position",
        "parameters": {
          "type": "object",
          "properties": {
            "job_name": {
              "type": "string",
              "description": "Position name"
            },
            "company_name": {
              "type": "string",
              "description": "Company name"
            }
          },
          "required": [
            "job_name",
            "company_name"
          ]
        }
      },
      {
        "name": "Navigation.TrainTickets.queryTrainWaitlistStatus",
        "description": "Used to query the current status of train ticket standby orders submitted by users",
        "parameters": {
          "type": "object",
          "properties": {
            "ride_date": {
              "type": "string",
              "description": "Date of trip"
            },
            "commit_date": {
              "type": "string",
              "description": "Date/time the order was submitted"
            },
            "departure_station": {
              "type": "string",
              "description": "Departure Station"
            },
            "destination_station": {
              "type": "string",
              "description": "arrival station"
            },
            "passenger_id": {
              "type": "string",
              "description": "Rider ID number"
            },
            "name": {
              "type": "string",
              "description": "Name of person to query"
            }
          },
          "required": [
            "ride_date",
            "commit_date",
            "departure_station",
            "destination_station",
            "passenger_id",
            "name"
          ]
        }
      },
      {
        "name": "Travel.HotelServices.getHotelCheckInStatus",
        "description": "Check the check-in status of a specific hotel reservation",
        "parameters": {
          "type": "object",
          "properties": {
            "name": {
              "type": "string",
              "description": "Hotel Name"
            },
            "booking_date": {
              "type": "string",
              "description": "Ordered Date"
            }
          },
          "required": [
            "name",
            "booking_date"
          ]
        }
      },
      {
        "name": "ConvenientLiving.GovernmentServices.readServiceRequestStatus",
        "description": "Check the status of city service requests submitted",
        "parameters": {
          "type": "object",
          "properties": {
            "request_name": {
              "type": "string",
              "description": "Service name"
            }
          },
          "required": [
            "request_name"
          ]
        }
      },
      {
        "name": "ConvenientLiving.GovernmentServices.checkImmigrationStatus",
        "description": "Inquire about an individual's immigration status",
        "parameters": {
          "type": "object",
          "properties": {
            "passport_number": {
              "type": "string",
              "description": "Pasaport No."
            },
            "full_name": {
              "type": "string",
              "description": "User name, default user himself"
            }
          },
          "required": [
            "passport_number",
            "full_name"
          ]
        }
      }
    ],
    "single_tool": [
      {
        "name": "Navigation.TrainTickets.queryTrainWaitlistStatus",
        "description": "Used to query the current status of train ticket standby orders submitted by users",
        "parameters": {
          "type": "object",
          "properties": {
            "ride_date": {
              "type": "string",
              "description": "Date of trip"
            },
            "commit_date": {
              "type": "string",
              "description": "Date/time the order was submitted"
            },
            "departure_station": {
              "type": "string",
              "description": "Departure Station"
            },
            "destination_station": {
              "type": "string",
              "description": "arrival station"
            },
            "passenger_id": {
              "type": "string",
              "description": "Rider ID number"
            },
            "name": {
              "type": "string",
              "description": "Name of person to query"
            }
          },
          "required": [
            "ride_date",
            "commit_date",
            "departure_station",
            "destination_station",
            "passenger_id",
            "name"
          ]
        }
      }
    ],
    "id": 51
  },
  {
    "messages": [
      {
        "role": "user",
        "content": "See if I can revise the train ticket waiting list I submitted earlier"
      },
      {
        "role": "function call",
        "content": {
          "name": "Navigation.TrainTickets.updateTrainWaitlistOrder",
          "arguments": {}
        }
      },
      {
        "role": "assistant",
        "content": "What number of trips did you book"
      },
      {
        "role": "user",
        "content": "My train number is D789, from Beijing to Shanghai."
      },
      {
        "role": "function call",
        "content": {
          "name": "Navigation.TrainTickets.updateTrainWaitlistOrder",
          "arguments": {
            "train_number": "D789"
          }
        }
      },
      {
        "role": "assistant",
        "content": "What's the rider's name"
      },
      {
        "role": "user",
        "content": "The passenger's name is Li Si."
      },
      {
        "role": "function call",
        "content": {
          "name": "Navigation.TrainTickets.updateTrainWaitlistOrder",
          "arguments": {
            "train_number": "D789",
            "passenger_name": "Li Si"
          }
        }
      },
      {
        "role": "assistant",
        "content": "What's the number of trips on the modified reservation"
      },
      {
        "role": "user",
        "content": "The number of the modified reservation is D987, please confirm this information.I'm sorry, Booked trips is G123. "
      },
      {
        "role": "function call",
        "content": {
          "name": "Navigation.TrainTickets.updateTrainWaitlistOrder",
          "arguments": {
            "train_number": "G123",
            "passenger_name": "Li Si",
            "after_number": "D987"
          }
        }
      },
      {
        "role": "assistant",
        "content": "Please provide new departure date format YYYY-MM-DD"
      },
      {
        "role": "user",
        "content": "2023-05-20 I plan to leave on this date."
      },
      {
        "role": "function call",
        "content": {
          "name": "Navigation.TrainTickets.updateTrainWaitlistOrder",
          "arguments": {
            "train_number": "G123",
            "passenger_name": "Li Si",
            "after_number": "D987",
            "new_departure_date": "2023-05-20"
          }
        }
      }
    ],
    "multiple_tools": [
      {
        "name": "Navigation.TrainTickets.updateTrainWaitlistOrder",
        "description": "Used to modify submitted train ticket waiting list information",
        "parameters": {
          "type": "object",
          "properties": {
            "train_number": {
              "type": "string",
              "description": "Booked trips"
            },
            "passenger_name": {
              "type": "string",
              "description": "Rider's name"
            },
            "after_number": {
              "type": "string",
              "description": "Booked trips"
            },
            "new_departure_date": {
              "type": "string",
              "description": "New departure date, format 'YYYY-MM-DD', optional if modified"
            },
            "new_seat_type": {
              "type": "string",
              "description": "Seat Type"
            }
          },
          "required": [
            "train_number",
            "passenger_name",
            "after_number",
            "new_departure_date",
            "new_seat_type"
          ]
        }
      },
      {
        "name": "Education.OnlineClasses.viewCourseOrders",
        "description": "View a list of my orders (including learning, completed, etc.)",
        "parameters": {
          "type": "object",
          "properties": {
            "course_name": {
              "type": "string",
              "description": "Course Title"
            },
            "time": {
              "type": "string",
              "description": "Purchase time"
            },
            "teacher_name": {
              "type": "string",
              "description": "Educator name:"
            }
          },
          "required": [
            "course_name",
            "time",
            "teacher_name"
          ]
        }
      },
      {
        "name": "Navigation.TaxiCarRental.searchCarRentalOrders",
        "description": "View a list of historical car hire orders",
        "parameters": {
          "type": "object",
          "properties": {
            "time": {
              "type": "string",
              "description": "Release Date"
            }
          },
          "required": [
            "time"
          ]
        }
      },
      {
        "name": "Navigation.TrainTickets.queryTrainWaitlistStatus",
        "description": "Used to query the current status of train ticket standby orders submitted by users",
        "parameters": {
          "type": "object",
          "properties": {
            "ride_date": {
              "type": "string",
              "description": "Date of trip"
            },
            "commit_date": {
              "type": "string",
              "description": "Date/time the order was submitted"
            },
            "departure_station": {
              "type": "string",
              "description": "Departure Station"
            },
            "destination_station": {
              "type": "string",
              "description": "arrival station"
            },
            "passenger_id": {
              "type": "string",
              "description": "Rider ID number"
            },
            "name": {
              "type": "string",
              "description": "Name of person to query"
            }
          },
          "required": [
            "ride_date",
            "commit_date",
            "departure_station",
            "destination_station",
            "passenger_id",
            "name"
          ]
        }
      },
      {
        "name": "OnlineShopping.SecondhandTrading.searchSecondhandSaleOrders",
        "description": "Search for item orders by keyword, and query all current status orders directly by default",
        "parameters": {
          "type": "object",
          "properties": {
            "goods_order": {
              "type": "string",
              "description": "Product name keywords"
            }
          },
          "required": [
            "goods_order"
          ]
        }
      }
    ],
    "single_tool": [
      {
        "name": "Navigation.TrainTickets.updateTrainWaitlistOrder",
        "description": "Used to modify submitted train ticket waiting list information",
        "parameters": {
          "type": "object",
          "properties": {
            "train_number": {
              "type": "string",
              "description": "Booked trips"
            },
            "passenger_name": {
              "type": "string",
              "description": "Rider's name"
            },
            "after_number": {
              "type": "string",
              "description": "Booked trips"
            },
            "new_departure_date": {
              "type": "string",
              "description": "New departure date, format 'YYYY-MM-DD', optional if modified"
            },
            "new_seat_type": {
              "type": "string",
              "description": "Seat Type"
            }
          },
          "required": [
            "train_number",
            "passenger_name",
            "after_number",
            "new_departure_date",
            "new_seat_type"
          ]
        }
      }
    ],
    "id": 52
  },
  {
    "messages": [
      {
        "role": "user",
        "content": "Is there any way to change the train ticket standby order I applied for previously?"
      },
      {
        "role": "function call",
        "content": {
          "name": "Navigation.TrainTickets.updateTrainWaitlistOrder",
          "arguments": {}
        }
      },
      {
        "role": "assistant",
        "content": "What number of trips did you book"
      },
      {
        "role": "user",
        "content": "The number I booked is G123.I'm sorry, Booked trips is D789. "
      },
      {
        "role": "function call",
        "content": {
          "name": "Navigation.TrainTickets.updateTrainWaitlistOrder",
          "arguments": {
            "train_number": "D789"
          }
        }
      },
      {
        "role": "assistant",
        "content": "What's the rider's name"
      },
      {
        "role": "user",
        "content": "The passenger's name is Zhang San."
      },
      {
        "role": "function call",
        "content": {
          "name": "Navigation.TrainTickets.updateTrainWaitlistOrder",
          "arguments": {
            "train_number": "D789",
            "passenger_name": "Zhang San"
          }
        }
      },
      {
        "role": "assistant",
        "content": "What's the number of trips on the modified reservation"
      },
      {
        "role": "user",
        "content": "I rebooked to train G456."
      },
      {
        "role": "function call",
        "content": {
          "name": "Navigation.TrainTickets.updateTrainWaitlistOrder",
          "arguments": {
            "train_number": "D789",
            "passenger_name": "Zhang San",
            "after_number": "G456"
          }
        }
      },
      {
        "role": "assistant",
        "content": "Please provide new departure date format YYYY-MM-DD"
      },
      {
        "role": "user",
        "content": "2023-04-15 I plan to leave on this day."
      },
      {
        "role": "function call",
        "content": {
          "name": "Navigation.TrainTickets.updateTrainWaitlistOrder",
          "arguments": {
            "train_number": "D789",
            "passenger_name": "Zhang San",
            "after_number": "G456",
            "new_departure_date": "2023-04-15"
          }
        }
      }
    ],
    "multiple_tools": [
      {
        "name": "Navigation.TrainTickets.updateTrainWaitlistOrder",
        "description": "Used to modify submitted train ticket waiting list information",
        "parameters": {
          "type": "object",
          "properties": {
            "train_number": {
              "type": "string",
              "description": "Booked trips"
            },
            "passenger_name": {
              "type": "string",
              "description": "Rider's name"
            },
            "after_number": {
              "type": "string",
              "description": "Booked trips"
            },
            "new_departure_date": {
              "type": "string",
              "description": "New departure date, format 'YYYY-MM-DD', optional if modified"
            },
            "new_seat_type": {
              "type": "string",
              "description": "Seat Type"
            }
          },
          "required": [
            "train_number",
            "passenger_name",
            "after_number",
            "new_departure_date",
            "new_seat_type"
          ]
        }
      },
      {
        "name": "ConvenientLiving.FoodDelivery.updateRestaurantOrder",
        "description": "Updating order information based on the order, such as delivery address, notes, etc.",
        "parameters": {
          "type": "object",
          "properties": {
            "order_name": {
              "type": "string",
              "description": "Contents of the order"
            },
            "delivery_address": {
              "type": "string",
              "description": "Delivery address"
            },
            "delivery_time": {
              "type": "string",
              "description": "Expected delivery time in HH: mm format"
            },
            "note": {
              "type": "string",
              "description": "Remarks"
            }
          },
          "required": [
            "order_name",
            "delivery_address",
            "delivery_time",
            "note"
          ]
        }
      },
      {
        "name": "Finance.Banking.modifyFinancialProductOrder",
        "description": "Modify a subscribed order for a bank wealth management product",
        "parameters": {
          "type": "object",
          "properties": {
            "order_id": {
              "type": "string",
              "description": "Purchase Order Number"
            },
            "product": {
              "type": "string",
              "description": "Financing product"
            },
            "modify": {
              "type": "string",
              "description": "Modified content, such as additional amount, revision deadline, etc."
            }
          },
          "required": [
            "order_id",
            "product",
            "modify"
          ]
        }
      },
      {
        "name": "OnlineShopping.Mall.modifyCommodityOrders",
        "description": "Modify the contents of the order according to the product name and other conditions",
        "parameters": {
          "type": "object",
          "properties": {
            "goods": {
              "type": "string",
              "description": "Product Name"
            }
          },
          "required": [
            "goods"
          ]
        }
      },
      {
        "name": "Navigation.TaxiCarRental.modifyCarRentalOrder",
        "description": "Modify the contents of a rental order, such as pick-up time, drop-off time, pick-up person, pick-up location, etc.",
        "parameters": {
          "type": "object",
          "properties": {
            "time": {
              "type": "string",
              "description": "Release Date"
            }
          },
          "required": [
            "time"
          ]
        }
      }
    ],
    "single_tool": [
      {
        "name": "Navigation.TrainTickets.updateTrainWaitlistOrder",
        "description": "Used to modify submitted train ticket waiting list information",
        "parameters": {
          "type": "object",
          "properties": {
            "train_number": {
              "type": "string",
              "description": "Booked trips"
            },
            "passenger_name": {
              "type": "string",
              "description": "Rider's name"
            },
            "after_number": {
              "type": "string",
              "description": "Booked trips"
            },
            "new_departure_date": {
              "type": "string",
              "description": "New departure date, format 'YYYY-MM-DD', optional if modified"
            },
            "new_seat_type": {
              "type": "string",
              "description": "Seat Type"
            }
          },
          "required": [
            "train_number",
            "passenger_name",
            "after_number",
            "new_departure_date",
            "new_seat_type"
          ]
        }
      }
    ],
    "id": 53
  },
  {
    "messages": [
      {
        "role": "user",
        "content": "Can you help me cancel a train ticket standby order, I don't plan to travel right now."
      },
      {
        "role": "function call",
        "content": {
          "name": "Navigation.TrainTickets.cancelTrainWaitlistOrder",
          "arguments": {}
        }
      },
      {
        "role": "assistant",
        "content": "What's the date of the trip"
      },
      {
        "role": "user",
        "content": "May 15, 2023.I'm sorry, Date of trip is 20.07.2023. "
      },
      {
        "role": "function call",
        "content": {
          "name": "Navigation.TrainTickets.cancelTrainWaitlistOrder",
          "arguments": {
            "ride_date": "20.07.2023"
          }
        }
      },
      {
        "role": "assistant",
        "content": "What is the date and time the order was submitted"
      },
      {
        "role": "user",
        "content": "The order was placed on May 10, 2023."
      },
      {
        "role": "function call",
        "content": {
          "name": "Navigation.TrainTickets.cancelTrainWaitlistOrder",
          "arguments": {
            "ride_date": "20.07.2023",
            "commit_date": "May 10, 2023"
          }
        }
      },
      {
        "role": "assistant",
        "content": "Please provide departure station information"
      },
      {
        "role": "user",
        "content": "I leave from Beijing."
      },
      {
        "role": "function call",
        "content": {
          "name": "Navigation.TrainTickets.cancelTrainWaitlistOrder",
          "arguments": {
            "ride_date": "20.07.2023",
            "commit_date": "May 10, 2023",
            "departure_station": "Beijing"
          }
        }
      }
    ],
    "multiple_tools": [
      {
        "name": "Finance.Banking.cancelFinancialProductOrder",
        "description": "Cancel Subscribed Banking Products",
        "parameters": {
          "type": "object",
          "properties": {
            "order_id": {
              "type": "string",
              "description": "Purchase Order Number"
            },
            "product": {
              "type": "string",
              "description": "Financing product"
            }
          },
          "required": [
            "order_id",
            "product"
          ]
        }
      },
      {
        "name": "ConvenientLiving.FoodDelivery.cancelRestaurantOrder",
        "description": "Canceling an order based on an order",
        "parameters": {
          "type": "object",
          "properties": {
            "order_name": {
              "type": "string",
              "description": "Contents of the order"
            }
          },
          "required": [
            "order_name"
          ]
        }
      },
      {
        "name": "Navigation.TrainTickets.cancelTrainTicket",
        "description": "Cancelling a booked train ticket",
        "parameters": {
          "type": "object",
          "properties": {
            "train_number": {
              "type": "string",
              "description": "Wagon Number"
            },
            "name": {
              "type": "string",
              "description": "Rider's name"
            },
            "time": {
              "type": "string",
              "description": "To cancel a reservation for a certain time"
            },
            "departure_station": {
              "type": "string",
              "description": "Departure Station"
            },
            "destination_station": {
              "type": "string",
              "description": "arrival station"
            }
          },
          "required": [
            "train_number",
            "name",
            "time",
            "departure_station",
            "destination_station"
          ]
        }
      },
      {
        "name": "Navigation.TrainTickets.cancelTrainWaitlistOrder",
        "description": "Help the user cancel the specified train ticket standby order",
        "parameters": {
          "type": "object",
          "properties": {
            "ride_date": {
              "type": "string",
              "description": "Date of trip"
            },
            "commit_date": {
              "type": "string",
              "description": "Date/time the order was submitted"
            },
            "departure_station": {
              "type": "string",
              "description": "Departure Station"
            },
            "destination_station": {
              "type": "string",
              "description": "arrival station"
            }
          },
          "required": [
            "ride_date",
            "commit_date",
            "departure_station",
            "destination_station"
          ]
        }
      },
      {
        "name": "ConvenientLiving.GovernmentServices.deleteServiceRequest",
        "description": "Remove city service requests that are no longer needed",
        "parameters": {
          "type": "object",
          "properties": {
            "request_name": {
              "type": "string",
              "description": "Name of the service request"
            }
          },
          "required": [
            "request_name"
          ]
        }
      }
    ],
    "single_tool": [
      {
        "name": "Navigation.TrainTickets.cancelTrainWaitlistOrder",
        "description": "Help the user cancel the specified train ticket standby order",
        "parameters": {
          "type": "object",
          "properties": {
            "ride_date": {
              "type": "string",
              "description": "Date of trip"
            },
            "commit_date": {
              "type": "string",
              "description": "Date/time the order was submitted"
            },
            "departure_station": {
              "type": "string",
              "description": "Departure Station"
            },
            "destination_station": {
              "type": "string",
              "description": "arrival station"
            }
          },
          "required": [
            "ride_date",
            "commit_date",
            "departure_station",
            "destination_station"
          ]
        }
      }
    ],
    "id": 54
  },
  {
    "messages": [
      {
        "role": "user",
        "content": "Help me find out if there are train numbers that can be substituted"
      },
      {
        "role": "function call",
        "content": {
          "name": "Navigation.TrainTickets.searchWaitlistTrain",
          "arguments": {}
        }
      },
      {
        "role": "assistant",
        "content": "Where is your departure station?"
      },
      {
        "role": "user",
        "content": "My departure station is Guangzhou."
      },
      {
        "role": "function call",
        "content": {
          "name": "Navigation.TrainTickets.searchWaitlistTrain",
          "arguments": {
            "departure_station": "Guangzhou"
          }
        }
      },
      {
        "role": "assistant",
        "content": "Please provide arrival station"
      },
      {
        "role": "user",
        "content": "WuhanI'm sorry, Departure Station is Beijing South Railway Station. "
      },
      {
        "role": "function call",
        "content": {
          "name": "Navigation.TrainTickets.searchWaitlistTrain",
          "arguments": {
            "departure_station": "Beijing South Railway Station",
            "destination_station": "Wuhan"
          }
        }
      }
    ],
    "multiple_tools": [
      {
        "name": "Navigation.TaxiCarRental.searchCarRentalOrders",
        "description": "View a list of historical car hire orders",
        "parameters": {
          "type": "object",
          "properties": {
            "time": {
              "type": "string",
              "description": "Release Date"
            }
          },
          "required": [
            "time"
          ]
        }
      },
      {
        "name": "Navigation.Bicycles.viewFrequency",
        "description": "See total rides",
        "parameters": {
          "type": "object",
          "properties": {},
          "required": []
        }
      },
      {
        "name": "Navigation.Bicycles.searchBikesOrders",
        "description": "See a list of bike rides",
        "parameters": {
          "type": "object",
          "properties": {},
          "required": []
        }
      },
      {
        "name": "NewsMagazines.NewspapersMagazines.getSubscribedMagazines",
        "description": "Get all subscription magazines for a user",
        "parameters": {
          "type": "object",
          "properties": {},
          "required": []
        }
      },
      {
        "name": "Navigation.TrainTickets.searchWaitlistTrain",
        "description": "Search for alternate train numbers based on the criteria entered by the user",
        "parameters": {
          "type": "object",
          "properties": {
            "ride_date": {
              "type": "string",
              "description": "Date of trip"
            },
            "departure_station": {
              "type": "string",
              "description": "Departure Station"
            },
            "destination_station": {
              "type": "string",
              "description": "arrival station"
            }
          },
          "required": [
            "ride_date",
            "departure_station",
            "destination_station"
          ]
        }
      }
    ],
    "single_tool": [
      {
        "name": "Navigation.TrainTickets.searchWaitlistTrain",
        "description": "Search for alternate train numbers based on the criteria entered by the user",
        "parameters": {
          "type": "object",
          "properties": {
            "ride_date": {
              "type": "string",
              "description": "Date of trip"
            },
            "departure_station": {
              "type": "string",
              "description": "Departure Station"
            },
            "destination_station": {
              "type": "string",
              "description": "arrival station"
            }
          },
          "required": [
            "ride_date",
            "departure_station",
            "destination_station"
          ]
        }
      }
    ],
    "id": 55
  },
  {
    "messages": [
      {
        "role": "user",
        "content": "Find out which trains can be backed up"
      },
      {
        "role": "function call",
        "content": {
          "name": "Navigation.TrainTickets.searchWaitlistTrain",
          "arguments": {}
        }
      },
      {
        "role": "assistant",
        "content": "Please provide departure station information"
      },
      {
        "role": "user",
        "content": "I start from Chengdu.I'm sorry, Departure Station is Beijing South Railway Station. "
      },
      {
        "role": "function call",
        "content": {
          "name": "Navigation.TrainTickets.searchWaitlistTrain",
          "arguments": {
            "departure_station": "Beijing South Railway Station"
          }
        }
      },
      {
        "role": "assistant",
        "content": "What is the arrival station"
      },
      {
        "role": "user",
        "content": "The arrival station is Chongqing"
      },
      {
        "role": "function call",
        "content": {
          "name": "Navigation.TrainTickets.searchWaitlistTrain",
          "arguments": {
            "departure_station": "Beijing South Railway Station",
            "destination_station": "Chongqing"
          }
        }
      }
    ],
    "multiple_tools": [
      {
        "name": "OfficeSoftware.Conferencing.viewParticipants",
        "description": "Get a list of participants for the current meeting",
        "parameters": {
          "type": "object",
          "properties": {
            "meeting_id": {
              "type": "string",
              "description": "Conference No."
            },
            "title": {
              "type": "string",
              "description": "Meeting Title:"
            },
            "time": {
              "type": "string",
              "description": "Meeting Date"
            }
          },
          "required": [
            "meeting_id",
            "title",
            "time"
          ]
        }
      },
      {
        "name": "OfficeSoftware.CloudStorage.netdiskRestoreDeletedFile",
        "description": "Recover Specified Files from Drive Recycle Bin",
        "parameters": {
          "type": "object",
          "properties": {
            "file_name": {
              "type": "string",
              "description": "File name to recover"
            }
          },
          "required": [
            "file_name"
          ]
        }
      },
      {
        "name": "Navigation.TrainTickets.searchWaitlistTrain",
        "description": "Search for alternate train numbers based on the criteria entered by the user",
        "parameters": {
          "type": "object",
          "properties": {
            "ride_date": {
              "type": "string",
              "description": "Date of trip"
            },
            "departure_station": {
              "type": "string",
              "description": "Departure Station"
            },
            "destination_station": {
              "type": "string",
              "description": "arrival station"
            }
          },
          "required": [
            "ride_date",
            "departure_station",
            "destination_station"
          ]
        }
      },
      {
        "name": "OfficeSoftware.CloudStorage.netdiskSearchDeletedFile",
        "description": "Search for files by keyword in the Drive Recycle Bin",
        "parameters": {
          "type": "object",
          "properties": {
            "keyword": {
              "type": "string",
              "description": "Keywords Search"
            }
          },
          "required": [
            "keyword"
          ]
        }
      },
      {
        "name": "Finance.Payment.viewPayRefundHistory",
        "description": "View refund history on your account",
        "parameters": {
          "type": "object",
          "properties": {
            "start_date": {
              "type": "string",
              "description": "Start date"
            },
            "end_date": {
              "type": "string",
              "description": "结束日期"
            }
          },
          "required": [
            "start_date",
            "end_date"
          ]
        }
      }
    ],
    "single_tool": [
      {
        "name": "Navigation.TrainTickets.searchWaitlistTrain",
        "description": "Search for alternate train numbers based on the criteria entered by the user",
        "parameters": {
          "type": "object",
          "properties": {
            "ride_date": {
              "type": "string",
              "description": "Date of trip"
            },
            "departure_station": {
              "type": "string",
              "description": "Departure Station"
            },
            "destination_station": {
              "type": "string",
              "description": "arrival station"
            }
          },
          "required": [
            "ride_date",
            "departure_station",
            "destination_station"
          ]
        }
      }
    ],
    "id": 56
  },
  {
    "messages": [
      {
        "role": "user",
        "content": "I want to take the high-speed train, check the route"
      },
      {
        "role": "function call",
        "content": {
          "name": "Navigation.TrainTickets.queryHighSpeedRailRoutes",
          "arguments": {}
        }
      },
      {
        "role": "assistant",
        "content": "Please provide departure station information"
      },
      {
        "role": "user",
        "content": "I leave from Beijing."
      },
      {
        "role": "function call",
        "content": {
          "name": "Navigation.TrainTickets.queryHighSpeedRailRoutes",
          "arguments": {
            "departure_station": "Beijing"
          }
        }
      },
      {
        "role": "assistant",
        "content": "Where is your arrival station?"
      },
      {
        "role": "user",
        "content": "My arrival station is Tianjin.I'm sorry, arrival station is Hangzhou. "
      },
      {
        "role": "function call",
        "content": {
          "name": "Navigation.TrainTickets.queryHighSpeedRailRoutes",
          "arguments": {
            "departure_station": "Beijing",
            "destination_station": "Hangzhou"
          }
        }
      }
    ],
    "multiple_tools": [
      {
        "name": "Navigation.MapNavigation.vehicleNavigationRoute",
        "description": "Specify a vehicle as a way to get around and search for a route",
        "parameters": {
          "type": "object",
          "properties": {
            "departure": {
              "type": "string",
              "description": "The name or address of the departure location, the default current location"
            },
            "destination": {
              "type": "string",
              "description": "Name or address of the destination"
            },
            "vehicle": {
              "type": "string",
              "description": "Specify how you want to travel"
            }
          },
          "required": [
            "departure",
            "destination",
            "vehicle"
          ]
        }
      },
      {
        "name": "UtilityTools.Memo.viewUpcoming",
        "description": "View current to-do",
        "parameters": {
          "type": "object",
          "properties": {},
          "required": []
        }
      },
      {
        "name": "Navigation.TrainTickets.queryHighSpeedRailRoutes",
        "description": "Find high-speeded rail routes from and to specific destinations",
        "parameters": {
          "type": "object",
          "properties": {
            "departure_station": {
              "type": "string",
              "description": "Departure Station"
            },
            "destination_station": {
              "type": "string",
              "description": "arrival station"
            },
            "max_results": {
              "type": "integer",
              "description": "Returns the maximum number of results, optional, default is 5"
            }
          },
          "required": [
            "departure_station",
            "destination_station",
            "max_results"
          ]
        }
      },
      {
        "name": "SystemTools.SystemSettings.setSystemTurnOnScreen2TV",
        "description": "Turn on phone projection to TV",
        "parameters": {
          "type": "object",
          "properties": {},
          "required": []
        }
      },
      {
        "name": "Navigation.MapNavigation.planNavigationRoute",
        "description": "Search navigation routes by origin and destination",
        "parameters": {
          "type": "object",
          "properties": {
            "departure": {
              "type": "string",
              "description": "The name or address of the departure location, the default current location"
            },
            "destination": {
              "type": "string",
              "description": "Name or address of the destination"
            },
            "time": {
              "type": "string",
              "description": "Departure time, default current time"
            },
            "mode": {
              "type": "string",
              "description": "Getting around, by car, public transport, bike, or on foot, by default"
            },
            "preferred_route": {
              "type": "string",
              "description": "Preferred route type, such as direct, few transfers, etc., optional"
            }
          },
          "required": [
            "departure",
            "destination",
            "time",
            "mode",
            "preferred_route"
          ]
        }
      }
    ],
    "single_tool": [
      {
        "name": "Navigation.TrainTickets.queryHighSpeedRailRoutes",
        "description": "Find high-speeded rail routes from and to specific destinations",
        "parameters": {
          "type": "object",
          "properties": {
            "departure_station": {
              "type": "string",
              "description": "Departure Station"
            },
            "destination_station": {
              "type": "string",
              "description": "arrival station"
            },
            "max_results": {
              "type": "integer",
              "description": "Returns the maximum number of results, optional, default is 5"
            }
          },
          "required": [
            "departure_station",
            "destination_station",
            "max_results"
          ]
        }
      }
    ],
    "id": 57
  },
  {
    "messages": [
      {
        "role": "user",
        "content": "I've been looking for a place recently, can you help me search for suitable listings?"
      },
      {
        "role": "function call",
        "content": {
          "name": "ConvenientLiving.BuyingRentingHomes.searchSalingHouses",
          "arguments": {}
        }
      },
      {
        "role": "assistant",
        "content": "What's the minimum price"
      },
      {
        "role": "user",
        "content": "The minimum price is from 1.5 million."
      },
      {
        "role": "function call",
        "content": {
          "name": "ConvenientLiving.BuyingRentingHomes.searchSalingHouses",
          "arguments": {
            "min_price": "1,500,000"
          }
        }
      },
      {
        "role": "assistant",
        "content": "What's the highest price you'd like"
      },
      {
        "role": "user",
        "content": "I would like the maximum price to be 2.5 million."
      },
      {
        "role": "function call",
        "content": {
          "name": "ConvenientLiving.BuyingRentingHomes.searchSalingHouses",
          "arguments": {
            "min_price": "1,500,000",
            "max_price": "2.5 million"
          }
        }
      },
      {
        "role": "assistant",
        "content": "How many square meters do you want the house to be?"
      },
      {
        "role": "user",
        "content": "The size of the house I want is about 80 square meters."
      },
      {
        "role": "function call",
        "content": {
          "name": "ConvenientLiving.BuyingRentingHomes.searchSalingHouses",
          "arguments": {
            "min_price": "1,500,000",
            "max_price": "2.5 million",
            "house_area": "80 sqm"
          }
        }
      },
      {
        "role": "assistant",
        "content": "What floor is the house you want to buy located on?"
      },
      {
        "role": "user",
        "content": "I tend to be higher up and have a wider view."
      },
      {
        "role": "function call",
        "content": {
          "name": "ConvenientLiving.BuyingRentingHomes.searchSalingHouses",
          "arguments": {
            "min_price": "1,500,000",
            "max_price": "2.5 million",
            "house_area": "80 sqm",
            "level": "Higher-up"
          }
        }
      },
      {
        "role": "assistant",
        "content": "What is the age of the home?"
      },
      {
        "role": "user",
        "content": "The house was built 5 years ago."
      },
      {
        "role": "function call",
        "content": {
          "name": "ConvenientLiving.BuyingRentingHomes.searchSalingHouses",
          "arguments": {
            "min_price": "1,500,000",
            "max_price": "2.5 million",
            "house_area": "80 sqm",
            "level": "Higher-up",
            "age": 5
          }
        }
      },
      {
        "role": "assistant",
        "content": "What do you want your home to look like?"
      },
      {
        "role": "user",
        "content": "What I want is a two-bedroom apartment with better lighting."
      },
      {
        "role": "function call",
        "content": {
          "name": "ConvenientLiving.BuyingRentingHomes.searchSalingHouses",
          "arguments": {
            "min_price": "1,500,000",
            "max_price": "2.5 million",
            "house_area": "80 sqm",
            "level": "Higher-up",
            "age": 5,
            "house_type": "2 bedrooms & 1 living room"
          }
        }
      },
      {
        "role": "assistant",
        "content": "Please provide the name of the community you are interested in"
      },
      {
        "role": "user",
        "content": "I am very interested in the Cuihu District, can you give me some information?"
      },
      {
        "role": "function call",
        "content": {
          "name": "ConvenientLiving.BuyingRentingHomes.searchSalingHouses",
          "arguments": {
            "min_price": "1,500,000",
            "max_price": "2.5 million",
            "house_area": "80 sqm",
            "level": "Higher-up",
            "age": 5,
            "house_type": "2 bedrooms & 1 living room",
            "housing_estate": "Cuihu District"
          }
        }
      },
      {
        "role": "assistant",
        "content": "What is the area of ​​the property you are interested in?"
      },
      {
        "role": "user",
        "content": "Shanghai.I'm sorry, Community is Sunny Gardens. "
      },
      {
        "role": "function call",
        "content": {
          "name": "ConvenientLiving.BuyingRentingHomes.searchSalingHouses",
          "arguments": {
            "min_price": "1,500,000",
            "max_price": "2.5 million",
            "house_area": "80 sqm",
            "level": "Higher-up",
            "age": 5,
            "house_type": "2 bedrooms & 1 living room",
            "housing_estate": "Sunny Gardens",
            "location": "Shanghai"
          }
        }
      }
    ],
    "multiple_tools": [
      {
        "name": "OnlineShopping.Mall.searchCommodity",
        "description": "Query products by specified commodity category name",
        "parameters": {
          "type": "object",
          "properties": {
            "goods": {
              "type": "string",
              "description": "Product Name"
            },
            "sales_volume": {
              "type": "string",
              "description": "Merchandise sales"
            },
            "price_range": {
              "type": "string",
              "description": "Price Range"
            }
          },
          "required": [
            "goods",
            "sales_volume",
            "price_range"
          ]
        }
      },
      {
        "name": "VideoPlayback.OnlineVideos.searchOnlineVideo",
        "description": "Search online videos, which can be searched based on keywords (director/publisher/video keywords); can be searched based on categories; can be searched based on AI smart search",
        "parameters": {
          "type": "object",
          "properties": {
            "keyword": {
              "type": "array",
              "description": "Director/Publisher/Video Keyword Search"
            },
            "video_type": {
              "type": "string",
              "description": "Video Type Categories, Recommended, Popular, Chase, Film and Television New Journey"
            },
            "ai_search": {
              "type": "string",
              "description": "Based on search history, viewing history can only be turned off by default"
            }
          },
          "required": [
            "keyword",
            "video_type",
            "ai_search"
          ]
        }
      },
      {
        "name": "ConvenientLiving.BuyingRentingHomes.searchSalingHouses",
        "description": "Search for properties based on user needs",
        "parameters": {
          "type": "object",
          "properties": {
            "min_price": {
              "type": "string",
              "description": "rock-bottom prices"
            },
            "max_price": {
              "type": "string",
              "description": "Max Price"
            },
            "house_area": {
              "type": "string",
              "description": "Area"
            },
            "level": {
              "type": "string",
              "description": "Floor"
            },
            "age": {
              "type": "integer",
              "description": "fixed number of years"
            },
            "house_type": {
              "type": "string",
              "description": "Layout"
            },
            "housing_estate": {
              "type": "string",
              "description": "Community"
            },
            "location": {
              "type": "string",
              "description": "Position"
            }
          },
          "required": [
            "min_price",
            "max_price",
            "house_area",
            "level",
            "age",
            "house_type",
            "housing_estate",
            "location"
          ]
        }
      },
      {
        "name": "ConvenientLiving.BuyingRentingHomes.searchRentingHouses",
        "description": "Search for rentals by criteria",
        "parameters": {
          "type": "object",
          "properties": {
            "price": {
              "type": "string",
              "description": "Rents"
            },
            "house_area": {
              "type": "string",
              "description": "Area"
            },
            "level": {
              "type": "string",
              "description": "Floor"
            },
            "age": {
              "type": "integer",
              "description": "fixed number of years"
            },
            "house_type": {
              "type": "string",
              "description": "Layout"
            },
            "housing_estate": {
              "type": "string",
              "description": "Community"
            },
            "location": {
              "type": "string",
              "description": "Position"
            },
            "indoor_decoration": {
              "type": "string",
              "description": "decorate"
            },
            "furniture": {
              "type": "string",
              "description": "Furniture"
            }
          },
          "required": [
            "price",
            "house_area",
            "level",
            "age",
            "house_type",
            "housing_estate",
            "location",
            "indoor_decoration",
            "furniture"
          ]
        }
      },
      {
        "name": "UtilityTools.Memo.searchNotes",
        "description": "Search memos by keyword (see all by default)",
        "parameters": {
          "type": "object",
          "properties": {
            "key_words": {
              "type": "string",
              "description": "KEYWORDS"
            }
          },
          "required": [
            "key_words"
          ]
        }
      }
    ],
    "single_tool": [
      {
        "name": "ConvenientLiving.BuyingRentingHomes.searchSalingHouses",
        "description": "Search for properties based on user needs",
        "parameters": {
          "type": "object",
          "properties": {
            "min_price": {
              "type": "string",
              "description": "rock-bottom prices"
            },
            "max_price": {
              "type": "string",
              "description": "Max Price"
            },
            "house_area": {
              "type": "string",
              "description": "Area"
            },
            "level": {
              "type": "string",
              "description": "Floor"
            },
            "age": {
              "type": "integer",
              "description": "fixed number of years"
            },
            "house_type": {
              "type": "string",
              "description": "Layout"
            },
            "housing_estate": {
              "type": "string",
              "description": "Community"
            },
            "location": {
              "type": "string",
              "description": "Position"
            }
          },
          "required": [
            "min_price",
            "max_price",
            "house_area",
            "level",
            "age",
            "house_type",
            "housing_estate",
            "location"
          ]
        }
      }
    ],
    "id": 58
  },
  {
    "messages": [
      {
        "role": "user",
        "content": "Find out if there's a suitable place to rent"
      },
      {
        "role": "function call",
        "content": {
          "name": "ConvenientLiving.BuyingRentingHomes.searchRentingHouses",
          "arguments": {}
        }
      },
      {
        "role": "assistant",
        "content": "What is your rental budget"
      },
      {
        "role": "user",
        "content": "My rent budget is about 2500 yuan."
      },
      {
        "role": "function call",
        "content": {
          "name": "ConvenientLiving.BuyingRentingHomes.searchRentingHouses",
          "arguments": {
            "price": "$2,500"
          }
        }
      },
      {
        "role": "assistant",
        "content": "Need to know how much square meter you want your house to be"
      },
      {
        "role": "user",
        "content": "I would like the house to be about 60 square meters."
      },
      {
        "role": "function call",
        "content": {
          "name": "ConvenientLiving.BuyingRentingHomes.searchRentingHouses",
          "arguments": {
            "price": "$2,500",
            "house_area": "60 sqm"
          }
        }
      },
      {
        "role": "assistant",
        "content": "What floor would you like the house to be located on?"
      },
      {
        "role": "user",
        "content": "I would like the house to be on a high floor."
      },
      {
        "role": "function call",
        "content": {
          "name": "ConvenientLiving.BuyingRentingHomes.searchRentingHouses",
          "arguments": {
            "price": "$2,500",
            "house_area": "60 sqm",
            "level": "Higher-up"
          }
        }
      },
      {
        "role": "assistant",
        "content": "What is the age of the house"
      },
      {
        "role": "user",
        "content": "The house was built 10 years ago."
      },
      {
        "role": "function call",
        "content": {
          "name": "ConvenientLiving.BuyingRentingHomes.searchRentingHouses",
          "arguments": {
            "price": "$2,500",
            "house_area": "60 sqm",
            "level": "Higher-up",
            "age": 10
          }
        }
      },
      {
        "role": "assistant",
        "content": "What do you want your home to look like?"
      },
      {
        "role": "user",
        "content": "I want one bedroom and one living room."
      },
      {
        "role": "function call",
        "content": {
          "name": "ConvenientLiving.BuyingRentingHomes.searchRentingHouses",
          "arguments": {
            "price": "$2,500",
            "house_area": "60 sqm",
            "level": "Higher-up",
            "age": 10,
            "house_type": "1 bedroom & 1 living room"
          }
        }
      },
      {
        "role": "assistant",
        "content": "What is the cell name"
      },
      {
        "role": "user",
        "content": "Want to see Green Homes.I'm sorry, Community is Sunny Gardens. "
      },
      {
        "role": "function call",
        "content": {
          "name": "ConvenientLiving.BuyingRentingHomes.searchRentingHouses",
          "arguments": {
            "price": "$2,500",
            "house_area": "60 sqm",
            "level": "Higher-up",
            "age": 10,
            "house_type": "1 bedroom & 1 living room",
            "housing_estate": "Sunny Gardens"
          }
        }
      },
      {
        "role": "assistant",
        "content": "Please provide the location of the house"
      },
      {
        "role": "user",
        "content": "The house is located on the outskirts of the city in a quiet environment with good transportation."
      },
      {
        "role": "function call",
        "content": {
          "name": "ConvenientLiving.BuyingRentingHomes.searchRentingHouses",
          "arguments": {
            "price": "$2,500",
            "house_area": "60 sqm",
            "level": "Higher-up",
            "age": 10,
            "house_type": "1 bedroom & 1 living room",
            "housing_estate": "Sunny Gardens",
            "location": "suburbs"
          }
        }
      },
      {
        "role": "assistant",
        "content": "What is the decoration of the house like?"
      },
      {
        "role": "user",
        "content": "The house is simply decorated with all the basic amenities and can be checked in directly."
      },
      {
        "role": "function call",
        "content": {
          "name": "ConvenientLiving.BuyingRentingHomes.searchRentingHouses",
          "arguments": {
            "price": "$2,500",
            "house_area": "60 sqm",
            "level": "Higher-up",
            "age": 10,
            "house_type": "1 bedroom & 1 living room",
            "housing_estate": "Sunny Gardens",
            "location": "suburbs",
            "indoor_decoration": "Simple decoration"
          }
        }
      },
      {
        "role": "assistant",
        "content": "Whether the house needs to be furnished"
      },
      {
        "role": "user",
        "content": "Yes, the house needs to be equipped with basic furniture."
      },
      {
        "role": "function call",
        "content": {
          "name": "ConvenientLiving.BuyingRentingHomes.searchRentingHouses",
          "arguments": {
            "price": "$2,500",
            "house_area": "60 sqm",
            "level": "Higher-up",
            "age": 10,
            "house_type": "1 bedroom & 1 living room",
            "housing_estate": "Sunny Gardens",
            "location": "suburbs",
            "indoor_decoration": "Simple decoration",
            "furniture": "Basic furniture"
          }
        }
      }
    ],
    "multiple_tools": [
      {
        "name": "NewsMagazines.NewspapersMagazines.getRecommendedMagazines",
        "description": "Recommend newspapers and magazines according to user preferences",
        "parameters": {
          "type": "object",
          "properties": {},
          "required": []
        }
      },
      {
        "name": "ConvenientLiving.BuyingRentingHomes.searchRentingHouses",
        "description": "Search for rentals by criteria",
        "parameters": {
          "type": "object",
          "properties": {
            "price": {
              "type": "string",
              "description": "Rents"
            },
            "house_area": {
              "type": "string",
              "description": "Area"
            },
            "level": {
              "type": "string",
              "description": "Floor"
            },
            "age": {
              "type": "integer",
              "description": "fixed number of years"
            },
            "house_type": {
              "type": "string",
              "description": "Layout"
            },
            "housing_estate": {
              "type": "string",
              "description": "Community"
            },
            "location": {
              "type": "string",
              "description": "Position"
            },
            "indoor_decoration": {
              "type": "string",
              "description": "decorate"
            },
            "furniture": {
              "type": "string",
              "description": "Furniture"
            }
          },
          "required": [
            "price",
            "house_area",
            "level",
            "age",
            "house_type",
            "housing_estate",
            "location",
            "indoor_decoration",
            "furniture"
          ]
        }
      },
      {
        "name": "MusicRadio.OnlineMusic.getRecommendedPlaylists",
        "description": "Get recommended songs by mood and scene",
        "parameters": {
          "type": "object",
          "properties": {
            "mood": {
              "type": "string",
              "description": "Emotions"
            },
            "scene": {
              "type": "string",
              "description": "setting"
            }
          },
          "required": [
            "mood",
            "scene"
          ]
        }
      },
      {
        "name": "MusicRadio.RadioStations.radioGetRecommendedSongs",
        "description": "Get a list of recommended songs based on the user's historical preferences",
        "parameters": {
          "type": "object",
          "properties": {},
          "required": []
        }
      },
      {
        "name": "ConvenientLiving.JobRecruitment.getRecommendedJobs",
        "description": "Suggest a position based on the user's resume and preferences",
        "parameters": {
          "type": "object",
          "properties": {
            "resume_path": {
              "type": "string",
              "description": "Local path to resume file"
            }
          },
          "required": [
            "resume_path"
          ]
        }
      }
    ],
    "single_tool": [
      {
        "name": "ConvenientLiving.BuyingRentingHomes.searchRentingHouses",
        "description": "Search for rentals by criteria",
        "parameters": {
          "type": "object",
          "properties": {
            "price": {
              "type": "string",
              "description": "Rents"
            },
            "house_area": {
              "type": "string",
              "description": "Area"
            },
            "level": {
              "type": "string",
              "description": "Floor"
            },
            "age": {
              "type": "integer",
              "description": "fixed number of years"
            },
            "house_type": {
              "type": "string",
              "description": "Layout"
            },
            "housing_estate": {
              "type": "string",
              "description": "Community"
            },
            "location": {
              "type": "string",
              "description": "Position"
            },
            "indoor_decoration": {
              "type": "string",
              "description": "decorate"
            },
            "furniture": {
              "type": "string",
              "description": "Furniture"
            }
          },
          "required": [
            "price",
            "house_area",
            "level",
            "age",
            "house_type",
            "housing_estate",
            "location",
            "indoor_decoration",
            "furniture"
          ]
        }
      }
    ],
    "id": 59
  },
  {
    "messages": [
      {
        "role": "user",
        "content": "I am thinking about calculating the amount of mortgage to buy a new house, can you help me calculate it?"
      },
      {
        "role": "function call",
        "content": {
          "name": "ConvenientLiving.BuyingRentingHomes.calculateHousingMortgage",
          "arguments": {}
        }
      },
      {
        "role": "assistant",
        "content": "What's the down payment"
      },
      {
        "role": "user",
        "content": "The down payment is 360000 yuan."
      },
      {
        "role": "function call",
        "content": {
          "name": "ConvenientLiving.BuyingRentingHomes.calculateHousingMortgage",
          "arguments": {
            "down_payment": 360000
          }
        }
      },
      {
        "role": "assistant",
        "content": "What is the price of the house"
      },
      {
        "role": "user",
        "content": "The house price is 1.2 million."
      },
      {
        "role": "function call",
        "content": {
          "name": "ConvenientLiving.BuyingRentingHomes.calculateHousingMortgage",
          "arguments": {
            "down_payment": 360000,
            "house_price": 1200000
          }
        }
      },
      {
        "role": "assistant",
        "content": "What is the loan interest rate"
      },
      {
        "role": "user",
        "content": "The lending rate is 0.029, or 2.9%.I'm sorry, Interest Rate is 0.035. "
      },
      {
        "role": "function call",
        "content": {
          "name": "ConvenientLiving.BuyingRentingHomes.calculateHousingMortgage",
          "arguments": {
            "down_payment": 360000,
            "house_price": 1200000,
            "interest_rate": 0.035
          }
        }
      }
    ],
    "multiple_tools": [
      {
        "name": "OfficeSoftware.Documents.getDocumentStatistics",
        "description": "Get statistics for a given document, such as the number of words, pages, etc.",
        "parameters": {
          "type": "object",
          "properties": {
            "document_name": {
              "type": "string",
              "description": "To get the document name of the statistic, it is required"
            }
          },
          "required": [
            "document_name"
          ]
        }
      },
      {
        "name": "Photography.VideoEditing.videoEditCut",
        "description": "Capture clips from specific time periods in the video",
        "parameters": {
          "type": "object",
          "properties": {
            "name_or_path": {
              "type": "string",
              "description": "The name or path of the video"
            },
            "start_time": {
              "type": "integer",
              "description": "Start time period for capturing video, in seconds"
            },
            "end_time": {
              "type": "integer",
              "description": "End time period for intercepted video, in seconds"
            }
          },
          "required": [
            "name_or_path",
            "start_time",
            "end_time"
          ]
        }
      },
      {
        "name": "VideoPlayback.ShortVideos.playShortVideo",
        "description": "Watch the short video, watch from scratch by default",
        "parameters": {
          "type": "object",
          "properties": {
            "video_name": {
              "type": "string",
              "description": "Short video name"
            },
            "full_screen": {
              "type": "boolean",
              "description": "Full Screen"
            },
            "playback_speed": {
              "type": "float",
              "description": "Playback Speed"
            },
            "danmaku": {
              "type": "boolean",
              "description": "enable bullet text"
            }
          },
          "required": [
            "video_name",
            "full_screen",
            "playback_speed",
            "danmaku"
          ]
        }
      },
      {
        "name": "ConvenientLiving.BuyingRentingHomes.calculateHousingMortgage",
        "description": "Calculate Home Purchase Loan Amount",
        "parameters": {
          "type": "object",
          "properties": {
            "house_price": {
              "type": "integer",
              "description": "house prices "
            },
            "down_payment": {
              "type": "integer",
              "description": "First installment payment"
            },
            "interest_rate": {
              "type": "integer",
              "description": "Interest Rate"
            },
            "loan_term": {
              "type": "integer",
              "description": "Mortgage term"
            }
          },
          "required": [
            "house_price",
            "down_payment",
            "interest_rate",
            "loan_term"
          ]
        }
      },
      {
        "name": "ConvenientLiving.AutoLife.calculateCarLoan",
        "description": "The loan program is calculated based on information such as the purchase price of the car.",
        "parameters": {
          "type": "object",
          "properties": {
            "car_price": {
              "type": "float",
              "description": "Car price, required"
            },
            "down_payment": {
              "type": "float",
              "description": "First installment payment"
            }
          },
          "required": [
            "car_price",
            "down_payment"
          ]
        }
      }
    ],
    "single_tool": [
      {
        "name": "ConvenientLiving.BuyingRentingHomes.calculateHousingMortgage",
        "description": "Calculate Home Purchase Loan Amount",
        "parameters": {
          "type": "object",
          "properties": {
            "house_price": {
              "type": "integer",
              "description": "house prices "
            },
            "down_payment": {
              "type": "integer",
              "description": "First installment payment"
            },
            "interest_rate": {
              "type": "integer",
              "description": "Interest Rate"
            },
            "loan_term": {
              "type": "integer",
              "description": "Mortgage term"
            }
          },
          "required": [
            "house_price",
            "down_payment",
            "interest_rate",
            "loan_term"
          ]
        }
      }
    ],
    "id": 60
  },
  {
    "messages": [
      {
        "role": "user",
        "content": "I want to know how much I need to pay for my mortgage, can you give me an approximate number?"
      },
      {
        "role": "function call",
        "content": {
          "name": "ConvenientLiving.BuyingRentingHomes.calculateHousingMortgage",
          "arguments": {}
        }
      },
      {
        "role": "assistant",
        "content": "What's the down payment"
      },
      {
        "role": "user",
        "content": "The down payment is 200000 yuan."
      },
      {
        "role": "function call",
        "content": {
          "name": "ConvenientLiving.BuyingRentingHomes.calculateHousingMortgage",
          "arguments": {
            "down_payment": 200000
          }
        }
      },
      {
        "role": "assistant",
        "content": "What is the price of the house"
      },
      {
        "role": "user",
        "content": "The house price is 800000 yuan.I'm sorry, house prices  is 5000000. "
      },
      {
        "role": "function call",
        "content": {
          "name": "ConvenientLiving.BuyingRentingHomes.calculateHousingMortgage",
          "arguments": {
            "down_payment": 200000,
            "house_price": 5000000
          }
        }
      },
      {
        "role": "assistant",
        "content": "What is the loan interest rate"
      },
      {
        "role": "user",
        "content": "The lending rate is 0.035, or 3.5%."
      },
      {
        "role": "function call",
        "content": {
          "name": "ConvenientLiving.BuyingRentingHomes.calculateHousingMortgage",
          "arguments": {
            "down_payment": 200000,
            "house_price": 5000000,
            "interest_rate": 0.035
          }
        }
      }
    ],
    "multiple_tools": [
      {
        "name": "ConvenientLiving.AutoLife.calculateCarLoan",
        "description": "The loan program is calculated based on information such as the purchase price of the car.",
        "parameters": {
          "type": "object",
          "properties": {
            "car_price": {
              "type": "float",
              "description": "Car price, required"
            },
            "down_payment": {
              "type": "float",
              "description": "First installment payment"
            }
          },
          "required": [
            "car_price",
            "down_payment"
          ]
        }
      },
      {
        "name": "Navigation.TrainTickets.searchWaitlistTrain",
        "description": "Search for alternate train numbers based on the criteria entered by the user",
        "parameters": {
          "type": "object",
          "properties": {
            "ride_date": {
              "type": "string",
              "description": "Date of trip"
            },
            "departure_station": {
              "type": "string",
              "description": "Departure Station"
            },
            "destination_station": {
              "type": "string",
              "description": "arrival station"
            }
          },
          "required": [
            "ride_date",
            "departure_station",
            "destination_station"
          ]
        }
      },
      {
        "name": "OnlineShopping.ExpressDelivery.searchExpress",
        "description": "Search courier logistics based on information such as designated courier number, recipient, address, etc.",
        "parameters": {
          "type": "object",
          "properties": {
            "express_id": {
              "type": "string",
              "description": "Tracking Number"
            },
            "date": {
              "type": "string",
              "description": "Shipping date"
            },
            "send_name": {
              "type": "string",
              "description": "Name Of Sender"
            },
            "recipient_name": {
              "type": "string",
              "description": "Recipient's name"
            }
          },
          "required": [
            "express_id",
            "date",
            "send_name",
            "recipient_name"
          ]
        }
      },
      {
        "name": "SocialCommunication.InstantMessaging.getUnreadMessageCount",
        "description": "View the number of unread messages for a given group or contact",
        "parameters": {
          "type": "object",
          "properties": {
            "receiver_name": {
              "type": "string",
              "description": "Contacts or groups"
            }
          },
          "required": [
            "receiver_name"
          ]
        }
      },
      {
        "name": "ConvenientLiving.BuyingRentingHomes.calculateHousingMortgage",
        "description": "Calculate Home Purchase Loan Amount",
        "parameters": {
          "type": "object",
          "properties": {
            "house_price": {
              "type": "integer",
              "description": "house prices "
            },
            "down_payment": {
              "type": "integer",
              "description": "First installment payment"
            },
            "interest_rate": {
              "type": "integer",
              "description": "Interest Rate"
            },
            "loan_term": {
              "type": "integer",
              "description": "Mortgage term"
            }
          },
          "required": [
            "house_price",
            "down_payment",
            "interest_rate",
            "loan_term"
          ]
        }
      }
    ],
    "single_tool": [
      {
        "name": "ConvenientLiving.BuyingRentingHomes.calculateHousingMortgage",
        "description": "Calculate Home Purchase Loan Amount",
        "parameters": {
          "type": "object",
          "properties": {
            "house_price": {
              "type": "integer",
              "description": "house prices "
            },
            "down_payment": {
              "type": "integer",
              "description": "First installment payment"
            },
            "interest_rate": {
              "type": "integer",
              "description": "Interest Rate"
            },
            "loan_term": {
              "type": "integer",
              "description": "Mortgage term"
            }
          },
          "required": [
            "house_price",
            "down_payment",
            "interest_rate",
            "loan_term"
          ]
        }
      }
    ],
    "id": 61
  },
  {
    "messages": [
      {
        "role": "user",
        "content": "Can you help me calculate the property tax of the house?"
      },
      {
        "role": "function call",
        "content": {
          "name": "ConvenientLiving.BuyingRentingHomes.calculateHouseTax",
          "arguments": {}
        }
      },
      {
        "role": "assistant",
        "content": "What is the value of the home"
      },
      {
        "role": "user",
        "content": "The value of the house is 8 million.I'm sorry, Property value is 3000000. "
      },
      {
        "role": "function call",
        "content": {
          "name": "ConvenientLiving.BuyingRentingHomes.calculateHouseTax",
          "arguments": {
            "house_price": 3000000
          }
        }
      }
    ],
    "multiple_tools": [
      {
        "name": "ConvenientLiving.GovernmentServices.applyForBusinessLicense",
        "description": "Apply for a business license online",
        "parameters": {
          "type": "object",
          "properties": {
            "business_name": {
              "type": "string",
              "description": "Name of the Enterprise"
            },
            "name": {
              "type": "string",
              "description": "Objects that contain information about the business owner, such as name, ID number, etc."
            },
            "id_card": {
              "type": "string",
              "description": "ID No."
            }
          },
          "required": [
            "business_name",
            "name",
            "id_card"
          ]
        }
      },
      {
        "name": "Finance.Funds.getFundSubscriptionFee",
        "description": "Query subscription fee information for designated funds",
        "parameters": {
          "type": "object",
          "properties": {
            "fund_name": {
              "type": "string",
              "description": "Fund name"
            },
            "fund_code": {
              "type": "string",
              "description": "Fund  Code"
            }
          },
          "required": [
            "fund_name",
            "fund_code"
          ]
        }
      },
      {
        "name": "ConvenientLiving.BuyingRentingHomes.calculateHouseTax",
        "description": "Calculate the property tax amount of the property",
        "parameters": {
          "type": "object",
          "properties": {
            "house_price": {
              "type": "integer",
              "description": "Property value"
            },
            "tax_rate": {
              "type": "integer",
              "description": "Local Property Tax Rate"
            }
          },
          "required": [
            "house_price",
            "tax_rate"
          ]
        }
      },
      {
        "name": "ConvenientLiving.GovernmentServices.queryPersonalTaxInfo",
        "description": "Inquire about the user's personal tax information",
        "parameters": {
          "type": "object",
          "properties": {
            "user_name": {
              "type": "string",
              "description": "Username"
            }
          },
          "required": [
            "user_name"
          ]
        }
      },
      {
        "name": "ConvenientLiving.GovernmentServices.queryPropertyTaxInfo",
        "description": "Get tax info about your property",
        "parameters": {
          "type": "object",
          "properties": {
            "property_address": {
              "type": "string",
              "description": "property Address"
            }
          },
          "required": [
            "property_address"
          ]
        }
      }
    ],
    "single_tool": [
      {
        "name": "ConvenientLiving.BuyingRentingHomes.calculateHouseTax",
        "description": "Calculate the property tax amount of the property",
        "parameters": {
          "type": "object",
          "properties": {
            "house_price": {
              "type": "integer",
              "description": "Property value"
            },
            "tax_rate": {
              "type": "integer",
              "description": "Local Property Tax Rate"
            }
          },
          "required": [
            "house_price",
            "tax_rate"
          ]
        }
      }
    ],
    "id": 62
  },
  {
    "messages": [
      {
        "role": "user",
        "content": "Find out how much my family's property tax income pays?"
      },
      {
        "role": "function call",
        "content": {
          "name": "ConvenientLiving.BuyingRentingHomes.calculateHouseTax",
          "arguments": {}
        }
      },
      {
        "role": "assistant",
        "content": "What is the value of the home"
      },
      {
        "role": "user",
        "content": "The value of the house is 3000000 yuan.I'm sorry, Property value is 8000000. "
      },
      {
        "role": "function call",
        "content": {
          "name": "ConvenientLiving.BuyingRentingHomes.calculateHouseTax",
          "arguments": {
            "house_price": 8000000
          }
        }
      }
    ],
    "multiple_tools": [
      {
        "name": "ConvenientLiving.GovernmentServices.queryBusinessLicenseInfo",
        "description": "Get information about your business license",
        "parameters": {
          "type": "object",
          "properties": {
            "enterprise_name": {
              "type": "string",
              "description": "Name of the Enterprise"
            }
          },
          "required": [
            "enterprise_name"
          ]
        }
      },
      {
        "name": "ConvenientLiving.BuyingRentingHomes.calculateHouseTax",
        "description": "Calculate the property tax amount of the property",
        "parameters": {
          "type": "object",
          "properties": {
            "house_price": {
              "type": "integer",
              "description": "Property value"
            },
            "tax_rate": {
              "type": "integer",
              "description": "Local Property Tax Rate"
            }
          },
          "required": [
            "house_price",
            "tax_rate"
          ]
        }
      },
      {
        "name": "Finance.Funds.getFundSubscriptionFee",
        "description": "Query subscription fee information for designated funds",
        "parameters": {
          "type": "object",
          "properties": {
            "fund_name": {
              "type": "string",
              "description": "Fund name"
            },
            "fund_code": {
              "type": "string",
              "description": "Fund  Code"
            }
          },
          "required": [
            "fund_name",
            "fund_code"
          ]
        }
      },
      {
        "name": "ConvenientLiving.GovernmentServices.queryPropertyTaxInfo",
        "description": "Get tax info about your property",
        "parameters": {
          "type": "object",
          "properties": {
            "property_address": {
              "type": "string",
              "description": "property Address"
            }
          },
          "required": [
            "property_address"
          ]
        }
      },
      {
        "name": "ConvenientLiving.GovernmentServices.queryPersonalTaxInfo",
        "description": "Inquire about the user's personal tax information",
        "parameters": {
          "type": "object",
          "properties": {
            "user_name": {
              "type": "string",
              "description": "Username"
            }
          },
          "required": [
            "user_name"
          ]
        }
      }
    ],
    "single_tool": [
      {
        "name": "ConvenientLiving.BuyingRentingHomes.calculateHouseTax",
        "description": "Calculate the property tax amount of the property",
        "parameters": {
          "type": "object",
          "properties": {
            "house_price": {
              "type": "integer",
              "description": "Property value"
            },
            "tax_rate": {
              "type": "integer",
              "description": "Local Property Tax Rate"
            }
          },
          "required": [
            "house_price",
            "tax_rate"
          ]
        }
      }
    ],
    "id": 63
  },
  {
    "messages": [
      {
        "role": "user",
        "content": "Find out what's around my place"
      },
      {
        "role": "function call",
        "content": {
          "name": "ConvenientLiving.BuyingRentingHomes.getHouseSurroundings",
          "arguments": {}
        }
      },
      {
        "role": "assistant",
        "content": "What's the name of the property"
      },
      {
        "role": "user",
        "content": "Known as the Sea View Villa, this property is located on the picturesque coastline."
      },
      {
        "role": "function call",
        "content": {
          "name": "ConvenientLiving.BuyingRentingHomes.getHouseSurroundings",
          "arguments": {
            "house_name": "sea-viewing villa"
          }
        }
      },
      {
        "role": "assistant",
        "content": "Please provide a cell name"
      },
      {
        "role": "user",
        "content": "Blue Water Bay is my neighborhood.I'm sorry, Property name is The Pinnacle. "
      },
      {
        "role": "function call",
        "content": {
          "name": "ConvenientLiving.BuyingRentingHomes.getHouseSurroundings",
          "arguments": {
            "house_name": "The Pinnacle",
            "housing_estate": "Jade Water Bay"
          }
        }
      }
    ],
    "multiple_tools": [
      {
        "name": "UtilityTools.Memo.searchNotes",
        "description": "Search memos by keyword (see all by default)",
        "parameters": {
          "type": "object",
          "properties": {
            "key_words": {
              "type": "string",
              "description": "KEYWORDS"
            }
          },
          "required": [
            "key_words"
          ]
        }
      },
      {
        "name": "ConvenientLiving.BuyingRentingHomes.getHouseSurroundings",
        "description": "Check the amenities around the house",
        "parameters": {
          "type": "object",
          "properties": {
            "house_name": {
              "type": "string",
              "description": "Property name"
            },
            "housing_estate": {
              "type": "string",
              "description": "Community"
            },
            "location": {
              "type": "string",
              "description": "Position"
            }
          },
          "required": [
            "house_name",
            "housing_estate",
            "location"
          ]
        }
      },
      {
        "name": "OfficeSoftware.Conferencing.viewParticipants",
        "description": "Get a list of participants for the current meeting",
        "parameters": {
          "type": "object",
          "properties": {
            "meeting_id": {
              "type": "string",
              "description": "Conference No."
            },
            "title": {
              "type": "string",
              "description": "Meeting Title:"
            },
            "time": {
              "type": "string",
              "description": "Meeting Date"
            }
          },
          "required": [
            "meeting_id",
            "title",
            "time"
          ]
        }
      },
      {
        "name": "Travel.ItineraryServices.searchTravelRoute",
        "description": "Search for relevant travel itineraries based on keywords",
        "parameters": {
          "type": "object",
          "properties": {
            "keyword": {
              "type": "string",
              "description": "Search keywords"
            }
          },
          "required": [
            "keyword"
          ]
        }
      },
      {
        "name": "ConvenientLiving.BuyingRentingHomes.searchRentingHouses",
        "description": "Search for rentals by criteria",
        "parameters": {
          "type": "object",
          "properties": {
            "price": {
              "type": "string",
              "description": "Rents"
            },
            "house_area": {
              "type": "string",
              "description": "Area"
            },
            "level": {
              "type": "string",
              "description": "Floor"
            },
            "age": {
              "type": "integer",
              "description": "fixed number of years"
            },
            "house_type": {
              "type": "string",
              "description": "Layout"
            },
            "housing_estate": {
              "type": "string",
              "description": "Community"
            },
            "location": {
              "type": "string",
              "description": "Position"
            },
            "indoor_decoration": {
              "type": "string",
              "description": "decorate"
            },
            "furniture": {
              "type": "string",
              "description": "Furniture"
            }
          },
          "required": [
            "price",
            "house_area",
            "level",
            "age",
            "house_type",
            "housing_estate",
            "location",
            "indoor_decoration",
            "furniture"
          ]
        }
      }
    ],
    "single_tool": [
      {
        "name": "ConvenientLiving.BuyingRentingHomes.getHouseSurroundings",
        "description": "Check the amenities around the house",
        "parameters": {
          "type": "object",
          "properties": {
            "house_name": {
              "type": "string",
              "description": "Property name"
            },
            "housing_estate": {
              "type": "string",
              "description": "Community"
            },
            "location": {
              "type": "string",
              "description": "Position"
            }
          },
          "required": [
            "house_name",
            "housing_estate",
            "location"
          ]
        }
      }
    ],
    "id": 64
  },
  {
    "messages": [
      {
        "role": "user",
        "content": "Check public city services"
      },
      {
        "role": "function call",
        "content": {
          "name": "ConvenientLiving.GovernmentServices.queryCityServiceInfo",
          "arguments": {}
        }
      },
      {
        "role": "assistant",
        "content": "To inquire about public city services in which city"
      },
      {
        "role": "user",
        "content": "I would like to inquire about public city services in Guangzhou.I'm sorry, Name of the city to query is Shanghai. "
      },
      {
        "role": "function call",
        "content": {
          "name": "ConvenientLiving.GovernmentServices.queryCityServiceInfo",
          "arguments": {
            "city_name": "Shanghai"
          }
        }
      }
    ],
    "multiple_tools": [
      {
        "name": "ConvenientLiving.GovernmentServices.searchEnterpriseByName",
        "description": "Search related businesses based on keywords entered",
        "parameters": {
          "type": "object",
          "properties": {
            "keyword": {
              "type": "string",
              "description": "Search keywords"
            }
          },
          "required": [
            "keyword"
          ]
        }
      },
      {
        "name": "ConvenientLiving.GovernmentServices.searchServiceByName",
        "description": "Search for relevant city services based on the service name entered",
        "parameters": {
          "type": "object",
          "properties": {
            "service_name": {
              "type": "string",
              "description": "Name of service to search"
            }
          },
          "required": [
            "service_name"
          ]
        }
      },
      {
        "name": "ConvenientLiving.GovernmentServices.queryCityServiceInfo",
        "description": "Find information about public city services in selected cities",
        "parameters": {
          "type": "object",
          "properties": {
            "city_name": {
              "type": "string",
              "description": "Name of the city to query"
            }
          },
          "required": [
            "city_name"
          ]
        }
      },
      {
        "name": "ConvenientLiving.FoodDelivery.searchRestaurants",
        "description": "Search for restaurants on Meituan based on user input",
        "parameters": {
          "type": "object",
          "properties": {
            "location": {
              "type": "string",
              "description": "Location"
            },
            "name": {
              "type": "string",
              "description": "regional cuisine"
            },
            "order": {
              "type": "string",
              "description": "Sort by e.g. rating, distance, average spend"
            }
          },
          "required": [
            "location",
            "name",
            "order"
          ]
        }
      },
      {
        "name": "MusicRadio.RadioStations.searchMusicRadio",
        "description": "Search stations by keyword",
        "parameters": {
          "type": "object",
          "properties": {
            "keywords": {
              "type": "string",
              "description": "Keywords, such as station type, etc."
            }
          },
          "required": [
            "keywords"
          ]
        }
      }
    ],
    "single_tool": [
      {
        "name": "ConvenientLiving.GovernmentServices.queryCityServiceInfo",
        "description": "Find information about public city services in selected cities",
        "parameters": {
          "type": "object",
          "properties": {
            "city_name": {
              "type": "string",
              "description": "Name of the city to query"
            }
          },
          "required": [
            "city_name"
          ]
        }
      }
    ],
    "id": 65
  },
  {
    "messages": [
      {
        "role": "user",
        "content": "Public city services, learn about it"
      },
      {
        "role": "function call",
        "content": {
          "name": "ConvenientLiving.GovernmentServices.queryCityServiceInfo",
          "arguments": {}
        }
      },
      {
        "role": "assistant",
        "content": "Please provide the name of the city to query"
      },
      {
        "role": "user",
        "content": "ShanghaiI'm sorry, Name of the city to query is Guangzhou. "
      },
      {
        "role": "function call",
        "content": {
          "name": "ConvenientLiving.GovernmentServices.queryCityServiceInfo",
          "arguments": {
            "city_name": "Guangzhou"
          }
        }
      }
    ],
    "multiple_tools": [
      {
        "name": "Education.ChildrenEducation.searchChildKnowledge",
        "description": "Search all types of children's knowledge",
        "parameters": {
          "type": "object",
          "properties": {
            "knowledge_type": {
              "type": "string",
              "description": "Types of knowledge, e.g. astronomy, geography"
            }
          },
          "required": [
            "knowledge_type"
          ]
        }
      },
      {
        "name": "ConvenientLiving.GovernmentServices.queryCityServiceInfo",
        "description": "Find information about public city services in selected cities",
        "parameters": {
          "type": "object",
          "properties": {
            "city_name": {
              "type": "string",
              "description": "Name of the city to query"
            }
          },
          "required": [
            "city_name"
          ]
        }
      },
      {
        "name": "OnlineShopping.ExpressDelivery.contactCustomerService",
        "description": "Contact Live Chat for courier related questions",
        "parameters": {
          "type": "object",
          "properties": {},
          "required": []
        }
      },
      {
        "name": "SocialCommunication.Community.getCommunityNotifications",
        "description": "Get notifications from select communities",
        "parameters": {
          "type": "object",
          "properties": {
            "community_name": {
              "type": "string",
              "description": "The name of the community to be notified"
            }
          },
          "required": [
            "community_name"
          ]
        }
      },
      {
        "name": "ConvenientLiving.GovernmentServices.queryEnterpriseInfo",
        "description": "Enter the business name to get basic information about the business",
        "parameters": {
          "type": "object",
          "properties": {
            "enterprise_name": {
              "type": "string",
              "description": "Name of the business to query"
            }
          },
          "required": [
            "enterprise_name"
          ]
        }
      }
    ],
    "single_tool": [
      {
        "name": "ConvenientLiving.GovernmentServices.queryCityServiceInfo",
        "description": "Find information about public city services in selected cities",
        "parameters": {
          "type": "object",
          "properties": {
            "city_name": {
              "type": "string",
              "description": "Name of the city to query"
            }
          },
          "required": [
            "city_name"
          ]
        }
      }
    ],
    "id": 66
  },
  {
    "messages": [
      {
        "role": "user",
        "content": "What are the conditions and requirements for that public city service?"
      },
      {
        "role": "function call",
        "content": {
          "name": "ConvenientLiving.GovernmentServices.getServiceRequirements",
          "arguments": {}
        }
      },
      {
        "role": "assistant",
        "content": "Please provide the name of the city you would like to know"
      },
      {
        "role": "user",
        "content": "I want to know the history and culture of Nanjing.I'm sorry, City is Chongqing. "
      },
      {
        "role": "function call",
        "content": {
          "name": "ConvenientLiving.GovernmentServices.getServiceRequirements",
          "arguments": {
            "city_name": "Chongqing"
          }
        }
      }
    ],
    "multiple_tools": [
      {
        "name": "SystemTools.SystemSettings.setSystemLAccessibility",
        "description": "Set accessibility options for your phone",
        "parameters": {
          "type": "object",
          "properties": {
            "screen_reader": {
              "type": "boolean",
              "description": "Whether to turn on the screen reader"
            },
            "magnification": {
              "type": "boolean",
              "description": "Whether to turn on the zoom function"
            }
          },
          "required": [
            "screen_reader",
            "magnification"
          ]
        }
      },
      {
        "name": "ConvenientLiving.UtilityPayments.getServiceProviders",
        "description": "Get information on suppliers that provide services such as utilities",
        "parameters": {
          "type": "object",
          "properties": {
            "service_type": {
              "type": "string",
              "description": "Types of paid services, such as utilities, gas, etc."
            },
            "location": {
              "type": "string",
              "description": "Region, default local"
            }
          },
          "required": [
            "service_type",
            "location"
          ]
        }
      },
      {
        "name": "Finance.Insurance.getInsuranceFAQ",
        "description": "Frequently asked questions and answers about insurance",
        "parameters": {
          "type": "object",
          "properties": {
            "keyword": {
              "type": "string",
              "description": "Question Keywords"
            }
          },
          "required": [
            "keyword"
          ]
        }
      },
      {
        "name": "ConvenientLiving.GovernmentServices.queryCityServiceInfo",
        "description": "Find information about public city services in selected cities",
        "parameters": {
          "type": "object",
          "properties": {
            "city_name": {
              "type": "string",
              "description": "Name of the city to query"
            }
          },
          "required": [
            "city_name"
          ]
        }
      },
      {
        "name": "ConvenientLiving.GovernmentServices.getServiceRequirements",
        "description": "Get the conditions and requirements to use a city's services",
        "parameters": {
          "type": "object",
          "properties": {
            "city_name": {
              "type": "string",
              "description": "City"
            }
          },
          "required": [
            "city_name"
          ]
        }
      }
    ],
    "single_tool": [
      {
        "name": "ConvenientLiving.GovernmentServices.getServiceRequirements",
        "description": "Get the conditions and requirements to use a city's services",
        "parameters": {
          "type": "object",
          "properties": {
            "city_name": {
              "type": "string",
              "description": "City"
            }
          },
          "required": [
            "city_name"
          ]
        }
      }
    ],
    "id": 67
  },
  {
    "messages": [
      {
        "role": "user",
        "content": "Conditions and requirements for city services"
      },
      {
        "role": "function call",
        "content": {
          "name": "ConvenientLiving.GovernmentServices.getServiceRequirements",
          "arguments": {}
        }
      },
      {
        "role": "assistant",
        "content": "Please provide the name of the city you would like to know"
      },
      {
        "role": "user",
        "content": "I would like to know about Chongqing.I'm sorry, City is Nanjing. "
      },
      {
        "role": "function call",
        "content": {
          "name": "ConvenientLiving.GovernmentServices.getServiceRequirements",
          "arguments": {
            "city_name": "Nanjing"
          }
        }
      }
    ],
    "multiple_tools": [
      {
        "name": "ConvenientLiving.UtilityPayments.getServiceProviders",
        "description": "Get information on suppliers that provide services such as utilities",
        "parameters": {
          "type": "object",
          "properties": {
            "service_type": {
              "type": "string",
              "description": "Types of paid services, such as utilities, gas, etc."
            },
            "location": {
              "type": "string",
              "description": "Region, default local"
            }
          },
          "required": [
            "service_type",
            "location"
          ]
        }
      },
      {
        "name": "SystemTools.SystemSettings.setSystemLAccessibility",
        "description": "Set accessibility options for your phone",
        "parameters": {
          "type": "object",
          "properties": {
            "screen_reader": {
              "type": "boolean",
              "description": "Whether to turn on the screen reader"
            },
            "magnification": {
              "type": "boolean",
              "description": "Whether to turn on the zoom function"
            }
          },
          "required": [
            "screen_reader",
            "magnification"
          ]
        }
      },
      {
        "name": "ConvenientLiving.GovernmentServices.getServiceRequirements",
        "description": "Get the conditions and requirements to use a city's services",
        "parameters": {
          "type": "object",
          "properties": {
            "city_name": {
              "type": "string",
              "description": "City"
            }
          },
          "required": [
            "city_name"
          ]
        }
      },
      {
        "name": "ConvenientLiving.GovernmentServices.queryCityServiceInfo",
        "description": "Find information about public city services in selected cities",
        "parameters": {
          "type": "object",
          "properties": {
            "city_name": {
              "type": "string",
              "description": "Name of the city to query"
            }
          },
          "required": [
            "city_name"
          ]
        }
      },
      {
        "name": "ConvenientLiving.JobRecruitment.getRecommendedJobs",
        "description": "Suggest a position based on the user's resume and preferences",
        "parameters": {
          "type": "object",
          "properties": {
            "resume_path": {
              "type": "string",
              "description": "Local path to resume file"
            }
          },
          "required": [
            "resume_path"
          ]
        }
      }
    ],
    "single_tool": [
      {
        "name": "ConvenientLiving.GovernmentServices.getServiceRequirements",
        "description": "Get the conditions and requirements to use a city's services",
        "parameters": {
          "type": "object",
          "properties": {
            "city_name": {
              "type": "string",
              "description": "City"
            }
          },
          "required": [
            "city_name"
          ]
        }
      }
    ],
    "id": 68
  },
  {
    "messages": [
      {
        "role": "user",
        "content": "Submit a new city service request"
      },
      {
        "role": "function call",
        "content": {
          "name": "ConvenientLiving.GovernmentServices.createServiceRequest",
          "arguments": {}
        }
      },
      {
        "role": "assistant",
        "content": "Please provide a city name"
      },
      {
        "role": "user",
        "content": "ShanghaiI'm sorry, City is Beijing. "
      },
      {
        "role": "function call",
        "content": {
          "name": "ConvenientLiving.GovernmentServices.createServiceRequest",
          "arguments": {
            "city_name": "Beijing"
          }
        }
      }
    ],
    "multiple_tools": [
      {
        "name": "ConvenientLiving.GovernmentServices.reportTaxEvasion",
        "description": "Reporting tax evasion",
        "parameters": {
          "type": "object",
          "properties": {
            "company_name": {
              "type": "string",
              "description": "Company name"
            },
            "description": {
              "type": "string",
              "description": "Problem description"
            }
          },
          "required": [
            "company_name",
            "description"
          ]
        }
      },
      {
        "name": "Navigation.TaxiCarRental.callingTaxi",
        "description": "Send a ride request based on your starting location",
        "parameters": {
          "type": "object",
          "properties": {
            "departure": {
              "type": "string",
              "description": "Pickup location, default current location"
            },
            "destination": {
              "type": "string",
              "description": "Destination"
            },
            "time": {
              "type": "string",
              "description": "Taxi time, default current time"
            }
          },
          "required": [
            "departure",
            "destination",
            "time"
          ]
        }
      },
      {
        "name": "Navigation.TrainTickets.addTrainWaitlistOrder",
        "description": "User submits train ticket standby order",
        "parameters": {
          "type": "object",
          "properties": {
            "train_number": {
              "type": "string",
              "description": "Number of trips to book; select all by default, up to 6"
            },
            "passenger_name": {
              "type": "string",
              "description": "Rider's name"
            },
            "passenger_id": {
              "type": "string",
              "description": "Rider ID number"
            },
            "ride_date": {
              "type": "string",
              "description": "Trip date in YYYY-MM-DD format"
            },
            "departure_station": {
              "type": "string",
              "description": "Departure Station"
            },
            "destination_station": {
              "type": "string",
              "description": "arrival station"
            },
            "seat_type": {
              "type": "string",
              "description": "Seat Type"
            }
          },
          "required": [
            "train_number",
            "passenger_name",
            "passenger_id",
            "ride_date",
            "departure_station",
            "destination_station",
            "seat_type"
          ]
        }
      },
      {
        "name": "ConvenientLiving.GovernmentServices.createServiceRequest",
        "description": "Submit a new city service request",
        "parameters": {
          "type": "object",
          "properties": {
            "city_name": {
              "type": "string",
              "description": "City"
            }
          },
          "required": [
            "city_name"
          ]
        }
      },
      {
        "name": "ConvenientLiving.GovernmentServices.applyForEducationGrant",
        "description": "Submit an application for an education grant",
        "parameters": {
          "type": "object",
          "properties": {
            "name": {
              "type": "string",
              "description": "Applicant, default user self"
            },
            "school": {
              "type": "string",
              "description": "Schools"
            }
          },
          "required": [
            "name",
            "school"
          ]
        }
      }
    ],
    "single_tool": [
      {
        "name": "ConvenientLiving.GovernmentServices.createServiceRequest",
        "description": "Submit a new city service request",
        "parameters": {
          "type": "object",
          "properties": {
            "city_name": {
              "type": "string",
              "description": "City"
            }
          },
          "required": [
            "city_name"
          ]
        }
      }
    ],
    "id": 69
  },
  {
    "messages": [
      {
        "role": "user",
        "content": "Apply for a new service in City Services"
      },
      {
        "role": "function call",
        "content": {
          "name": "ConvenientLiving.GovernmentServices.createServiceRequest",
          "arguments": {}
        }
      },
      {
        "role": "assistant",
        "content": "Please provide a city name"
      },
      {
        "role": "user",
        "content": "BeijingI'm sorry, City is Shanghai. "
      },
      {
        "role": "function call",
        "content": {
          "name": "ConvenientLiving.GovernmentServices.createServiceRequest",
          "arguments": {
            "city_name": "Shanghai"
          }
        }
      }
    ],
    "multiple_tools": [
      {
        "name": "Navigation.TaxiCarRental.callingTaxi",
        "description": "Send a ride request based on your starting location",
        "parameters": {
          "type": "object",
          "properties": {
            "departure": {
              "type": "string",
              "description": "Pickup location, default current location"
            },
            "destination": {
              "type": "string",
              "description": "Destination"
            },
            "time": {
              "type": "string",
              "description": "Taxi time, default current time"
            }
          },
          "required": [
            "departure",
            "destination",
            "time"
          ]
        }
      },
      {
        "name": "ConvenientLiving.GovernmentServices.getServiceRequirements",
        "description": "Get the conditions and requirements to use a city's services",
        "parameters": {
          "type": "object",
          "properties": {
            "city_name": {
              "type": "string",
              "description": "City"
            }
          },
          "required": [
            "city_name"
          ]
        }
      },
      {
        "name": "ConvenientLiving.GovernmentServices.createServiceRequest",
        "description": "Submit a new city service request",
        "parameters": {
          "type": "object",
          "properties": {
            "city_name": {
              "type": "string",
              "description": "City"
            }
          },
          "required": [
            "city_name"
          ]
        }
      },
      {
        "name": "ConvenientLiving.GovernmentServices.applyForResidentPermit",
        "description": "Provide a residence permit application service for the user",
        "parameters": {
          "type": "object",
          "properties": {
            "identity_card_number": {
              "type": "string",
              "description": "User ID number, default user himself"
            },
            "address": {
              "type": "string",
              "description": "Residential Address"
            }
          },
          "required": [
            "identity_card_number",
            "address"
          ]
        }
      },
      {
        "name": "SocialCommunication.Calling.makePhoneCall",
        "description": "Used to call designated contacts",
        "parameters": {
          "type": "object",
          "properties": {
            "contact_name": {
              "type": "string",
              "description": "Name of the contact to call"
            },
            "phone_number": {
              "type": "string",
              "description": "Call the number directly"
            }
          },
          "required": [
            "contact_name",
            "phone_number"
          ]
        }
      }
    ],
    "single_tool": [
      {
        "name": "ConvenientLiving.GovernmentServices.createServiceRequest",
        "description": "Submit a new city service request",
        "parameters": {
          "type": "object",
          "properties": {
            "city_name": {
              "type": "string",
              "description": "City"
            }
          },
          "required": [
            "city_name"
          ]
        }
      }
    ],
    "id": 70
  },
  {
    "messages": [
      {
        "role": "user",
        "content": "Check how my residence permit is going and how long it's valid"
      },
      {
        "role": "function call",
        "content": {
          "name": "ConvenientLiving.GovernmentServices.queryResidentialPermitInfo",
          "arguments": {}
        }
      },
      {
        "role": "assistant",
        "content": "What is the applicant's name?"
      },
      {
        "role": "user",
        "content": "The applicant's name is Li Si.I'm sorry, Name of Applicant is Zhang San. "
      },
      {
        "role": "function call",
        "content": {
          "name": "ConvenientLiving.GovernmentServices.queryResidentialPermitInfo",
          "arguments": {
            "applicant_name": "Zhang San"
          }
        }
      }
    ],
    "multiple_tools": [
      {
        "name": "ConvenientLiving.GovernmentServices.queryResidentialPermitInfo",
        "description": "Check the progress of the residence permit, the validity period, etc.",
        "parameters": {
          "type": "object",
          "properties": {
            "applicant_name": {
              "type": "string",
              "description": "Name of Applicant"
            }
          },
          "required": [
            "applicant_name"
          ]
        }
      },
      {
        "name": "Finance.Funds.getFundSectorInfo",
        "description": "Check the details of a fund based on a specific sector",
        "parameters": {
          "type": "object",
          "properties": {
            "sector": {
              "type": "string",
              "description": "Fund Segment Name"
            }
          },
          "required": [
            "sector"
          ]
        }
      },
      {
        "name": "ConvenientLiving.GovernmentServices.queryEducationalQualificationVerification",
        "description": "Verify the authenticity of your qualifications by querying relevant information about your qualifications",
        "parameters": {
          "type": "object",
          "properties": {
            "graduate_name": {
              "type": "string",
              "description": "Graduate Name"
            },
            "school_name": {
              "type": "string",
              "description": "Graduate School Name"
            }
          },
          "required": [
            "graduate_name",
            "school_name"
          ]
        }
      },
      {
        "name": "Finance.Insurance.getInsuranceFAQ",
        "description": "Frequently asked questions and answers about insurance",
        "parameters": {
          "type": "object",
          "properties": {
            "keyword": {
              "type": "string",
              "description": "Question Keywords"
            }
          },
          "required": [
            "keyword"
          ]
        }
      },
      {
        "name": "Finance.Funds.getFundPortfolio",
        "description": "Query the position status of the designated fund based on the fund code or name",
        "parameters": {
          "type": "object",
          "properties": {
            "fund_name": {
              "type": "string",
              "description": "Fund name"
            },
            "fund_code": {
              "type": "string",
              "description": "Fund  Code"
            }
          },
          "required": [
            "fund_name",
            "fund_code"
          ]
        }
      }
    ],
    "single_tool": [
      {
        "name": "ConvenientLiving.GovernmentServices.queryResidentialPermitInfo",
        "description": "Check the progress of the residence permit, the validity period, etc.",
        "parameters": {
          "type": "object",
          "properties": {
            "applicant_name": {
              "type": "string",
              "description": "Name of Applicant"
            }
          },
          "required": [
            "applicant_name"
          ]
        }
      }
    ],
    "id": 71
  },
  {
    "messages": [
      {
        "role": "user",
        "content": "What is the progress and outcome of checking your tax returns?"
      },
      {
        "role": "function call",
        "content": {
          "name": "ConvenientLiving.GovernmentServices.queryTaxDeclarationStatus",
          "arguments": {}
        }
      },
      {
        "role": "assistant",
        "content": "Please provide the type of tax, such as personal income tax, corporate income tax, etc."
      },
      {
        "role": "user",
        "content": "I need information about VAT.I'm sorry, Tax types, such as personal income tax, corporate income tax, etc. is Corporate income tax. "
      },
      {
        "role": "function call",
        "content": {
          "name": "ConvenientLiving.GovernmentServices.queryTaxDeclarationStatus",
          "arguments": {
            "tax_type": "Corporate income tax"
          }
        }
      }
    ],
    "multiple_tools": [
      {
        "name": "ConvenientLiving.GovernmentServices.queryEducationalQualificationVerification",
        "description": "Verify the authenticity of your qualifications by querying relevant information about your qualifications",
        "parameters": {
          "type": "object",
          "properties": {
            "graduate_name": {
              "type": "string",
              "description": "Graduate Name"
            },
            "school_name": {
              "type": "string",
              "description": "Graduate School Name"
            }
          },
          "required": [
            "graduate_name",
            "school_name"
          ]
        }
      },
      {
        "name": "ConvenientLiving.GovernmentServices.queryTaxDeclarationStatus",
        "description": "Check the progress and results of your tax returns",
        "parameters": {
          "type": "object",
          "properties": {
            "tax_type": {
              "type": "string",
              "description": "Tax types, such as personal income tax, corporate income tax, etc."
            },
            "tax_period": {
              "type": "string",
              "description": "Tax reporting period"
            }
          },
          "required": [
            "tax_type",
            "tax_period"
          ]
        }
      },
      {
        "name": "ConvenientLiving.GovernmentServices.queryMedicalInsuranceClaimsStatus",
        "description": "Check the progress of your health insurance claim",
        "parameters": {
          "type": "object",
          "properties": {
            "claim_number": {
              "type": "string",
              "description": "Claim No."
            },
            "name": {
              "type": "string",
              "description": "Name, default user's own"
            }
          },
          "required": [
            "claim_number",
            "name"
          ]
        }
      },
      {
        "name": "Finance.Banking.viewCreditCardBill",
        "description": "View bank card statement",
        "parameters": {
          "type": "object",
          "properties": {
            "card_no": {
              "type": "string",
              "description": "Credit Card Number"
            },
            "time": {
              "type": "string",
              "description": "Credit Card Statement Month"
            }
          },
          "required": [
            "card_no",
            "time"
          ]
        }
      },
      {
        "name": "ConvenientLiving.GovernmentServices.queryBusinessLicenseInfo",
        "description": "Get information about your business license",
        "parameters": {
          "type": "object",
          "properties": {
            "enterprise_name": {
              "type": "string",
              "description": "Name of the Enterprise"
            }
          },
          "required": [
            "enterprise_name"
          ]
        }
      }
    ],
    "single_tool": [
      {
        "name": "ConvenientLiving.GovernmentServices.queryTaxDeclarationStatus",
        "description": "Check the progress and results of your tax returns",
        "parameters": {
          "type": "object",
          "properties": {
            "tax_type": {
              "type": "string",
              "description": "Tax types, such as personal income tax, corporate income tax, etc."
            },
            "tax_period": {
              "type": "string",
              "description": "Tax reporting period"
            }
          },
          "required": [
            "tax_type",
            "tax_period"
          ]
        }
      }
    ],
    "id": 72
  },
  {
    "messages": [
      {
        "role": "user",
        "content": "Can you help me see the progress of my tax return and the results?"
      },
      {
        "role": "function call",
        "content": {
          "name": "ConvenientLiving.GovernmentServices.queryTaxDeclarationStatus",
          "arguments": {}
        }
      },
      {
        "role": "assistant",
        "content": "Please provide the type of tax, such as personal income tax, corporate income tax, etc."
      },
      {
        "role": "user",
        "content": "I need information about corporate income tax.I'm sorry, Tax types, such as personal income tax, corporate income tax, etc. is Value Added Tax. "
      },
      {
        "role": "function call",
        "content": {
          "name": "ConvenientLiving.GovernmentServices.queryTaxDeclarationStatus",
          "arguments": {
            "tax_type": "Value Added Tax"
          }
        }
      }
    ],
    "multiple_tools": [
      {
        "name": "ConvenientLiving.GovernmentServices.queryTaxDeclarationStatus",
        "description": "Check the progress and results of your tax returns",
        "parameters": {
          "type": "object",
          "properties": {
            "tax_type": {
              "type": "string",
              "description": "Tax types, such as personal income tax, corporate income tax, etc."
            },
            "tax_period": {
              "type": "string",
              "description": "Tax reporting period"
            }
          },
          "required": [
            "tax_type",
            "tax_period"
          ]
        }
      },
      {
        "name": "Finance.Banking.viewCreditCardBill",
        "description": "View bank card statement",
        "parameters": {
          "type": "object",
          "properties": {
            "card_no": {
              "type": "string",
              "description": "Credit Card Number"
            },
            "time": {
              "type": "string",
              "description": "Credit Card Statement Month"
            }
          },
          "required": [
            "card_no",
            "time"
          ]
        }
      },
      {
        "name": "Navigation.TrainTickets.queryTrainWaitlistStatus",
        "description": "Used to query the current status of train ticket standby orders submitted by users",
        "parameters": {
          "type": "object",
          "properties": {
            "ride_date": {
              "type": "string",
              "description": "Date of trip"
            },
            "commit_date": {
              "type": "string",
              "description": "Date/time the order was submitted"
            },
            "departure_station": {
              "type": "string",
              "description": "Departure Station"
            },
            "destination_station": {
              "type": "string",
              "description": "arrival station"
            },
            "passenger_id": {
              "type": "string",
              "description": "Rider ID number"
            },
            "name": {
              "type": "string",
              "description": "Name of person to query"
            }
          },
          "required": [
            "ride_date",
            "commit_date",
            "departure_station",
            "destination_station",
            "passenger_id",
            "name"
          ]
        }
      },
      {
        "name": "ConvenientLiving.GovernmentServices.queryEducationalQualificationVerification",
        "description": "Verify the authenticity of your qualifications by querying relevant information about your qualifications",
        "parameters": {
          "type": "object",
          "properties": {
            "graduate_name": {
              "type": "string",
              "description": "Graduate Name"
            },
            "school_name": {
              "type": "string",
              "description": "Graduate School Name"
            }
          },
          "required": [
            "graduate_name",
            "school_name"
          ]
        }
      },
      {
        "name": "ConvenientLiving.GovernmentServices.queryMedicalInsuranceClaimsStatus",
        "description": "Check the progress of your health insurance claim",
        "parameters": {
          "type": "object",
          "properties": {
            "claim_number": {
              "type": "string",
              "description": "Claim No."
            },
            "name": {
              "type": "string",
              "description": "Name, default user's own"
            }
          },
          "required": [
            "claim_number",
            "name"
          ]
        }
      }
    ],
    "single_tool": [
      {
        "name": "ConvenientLiving.GovernmentServices.queryTaxDeclarationStatus",
        "description": "Check the progress and results of your tax returns",
        "parameters": {
          "type": "object",
          "properties": {
            "tax_type": {
              "type": "string",
              "description": "Tax types, such as personal income tax, corporate income tax, etc."
            },
            "tax_period": {
              "type": "string",
              "description": "Tax reporting period"
            }
          },
          "required": [
            "tax_type",
            "tax_period"
          ]
        }
      }
    ],
    "id": 73
  },
  {
    "messages": [
      {
        "role": "user",
        "content": "Check the property ownership information."
      },
      {
        "role": "function call",
        "content": {
          "name": "ConvenientLiving.GovernmentServices.queryEstateOwnershipInfo",
          "arguments": {}
        }
      },
      {
        "role": "assistant",
        "content": "Please provide your name for property ownership information"
      },
      {
        "role": "user",
        "content": "My name is Wang Xiaohua, please check my property information.I'm sorry, Name is Zhang San. "
      },
      {
        "role": "function call",
        "content": {
          "name": "ConvenientLiving.GovernmentServices.queryEstateOwnershipInfo",
          "arguments": {
            "name": "Zhang San"
          }
        }
      }
    ],
    "multiple_tools": [
      {
        "name": "ConvenientLiving.GovernmentServices.queryEstateOwnershipInfo",
        "description": "Find information about property ownership",
        "parameters": {
          "type": "object",
          "properties": {
            "name": {
              "type": "string",
              "description": "Name"
            }
          },
          "required": [
            "name"
          ]
        }
      },
      {
        "name": "SocialCommunication.SocialMedia.viewMediumFriendInfo",
        "description": "View details of selected friends in selected media",
        "parameters": {
          "type": "object",
          "properties": {
            "medium_name": {
              "type": "string",
              "description": "Media name"
            },
            "name": {
              "type": "string",
              "description": "Friend's nickname"
            },
            "account_number": {
              "type": "string",
              "description": "Friend's account"
            }
          },
          "required": [
            "medium_name",
            "name",
            "account_number"
          ]
        }
      },
      {
        "name": "SocialCommunication.Community.getCommunityUserInfo",
        "description": "Get user details for a specific community based on user nickname",
        "parameters": {
          "type": "object",
          "properties": {
            "community_name": {
              "type": "string",
              "description": "The name of the community where you want to get user information"
            },
            "user_nickname": {
              "type": "string",
              "description": "User's nickname"
            }
          },
          "required": [
            "community_name",
            "user_nickname"
          ]
        }
      },
      {
        "name": "Finance.Insurance.contactInsuranceAgent",
        "description": "Get contact details for your insurance agent",
        "parameters": {
          "type": "object",
          "properties": {},
          "required": []
        }
      },
      {
        "name": "ConvenientLiving.BuyingRentingHomes.getRealEstateAgencyInfo",
        "description": "Get contact info for a real estate agent",
        "parameters": {
          "type": "object",
          "properties": {
            "house_name": {
              "type": "string",
              "description": "Property name"
            }
          },
          "required": [
            "house_name"
          ]
        }
      }
    ],
    "single_tool": [
      {
        "name": "ConvenientLiving.GovernmentServices.queryEstateOwnershipInfo",
        "description": "Find information about property ownership",
        "parameters": {
          "type": "object",
          "properties": {
            "name": {
              "type": "string",
              "description": "Name"
            }
          },
          "required": [
            "name"
          ]
        }
      }
    ],
    "id": 74
  },
  {
    "messages": [
      {
        "role": "user",
        "content": "Check how my Medicare claim is going"
      },
      {
        "role": "function call",
        "content": {
          "name": "ConvenientLiving.GovernmentServices.queryMedicalInsuranceClaimsStatus",
          "arguments": {}
        }
      },
      {
        "role": "assistant",
        "content": "Please provide the claim number"
      },
      {
        "role": "user",
        "content": "My claim number is 20230630JKL, anything else I need to know?I'm sorry, Claim No. is CLM20230415. "
      },
      {
        "role": "function call",
        "content": {
          "name": "ConvenientLiving.GovernmentServices.queryMedicalInsuranceClaimsStatus",
          "arguments": {
            "claim_number": "CLM20230415"
          }
        }
      }
    ],
    "multiple_tools": [
      {
        "name": "Navigation.TrainTickets.queryTrainWaitlistStatus",
        "description": "Used to query the current status of train ticket standby orders submitted by users",
        "parameters": {
          "type": "object",
          "properties": {
            "ride_date": {
              "type": "string",
              "description": "Date of trip"
            },
            "commit_date": {
              "type": "string",
              "description": "Date/time the order was submitted"
            },
            "departure_station": {
              "type": "string",
              "description": "Departure Station"
            },
            "destination_station": {
              "type": "string",
              "description": "arrival station"
            },
            "passenger_id": {
              "type": "string",
              "description": "Rider ID number"
            },
            "name": {
              "type": "string",
              "description": "Name of person to query"
            }
          },
          "required": [
            "ride_date",
            "commit_date",
            "departure_station",
            "destination_station",
            "passenger_id",
            "name"
          ]
        }
      },
      {
        "name": "ConvenientLiving.GovernmentServices.checkLicenseStatus",
        "description": "Check the validity status of various licenses (such as driver's license)",
        "parameters": {
          "type": "object",
          "properties": {
            "license_type": {
              "type": "string",
              "description": "Type of licence Trainee attorneys"
            },
            "license_number": {
              "type": "string",
              "description": "License number"
            }
          },
          "required": [
            "license_type",
            "license_number"
          ]
        }
      },
      {
        "name": "ConvenientLiving.GovernmentServices.queryMedicalInsuranceClaimsStatus",
        "description": "Check the progress of your health insurance claim",
        "parameters": {
          "type": "object",
          "properties": {
            "claim_number": {
              "type": "string",
              "description": "Claim No."
            },
            "name": {
              "type": "string",
              "description": "Name, default user's own"
            }
          },
          "required": [
            "claim_number",
            "name"
          ]
        }
      },
      {
        "name": "ConvenientLiving.GovernmentServices.checkImmigrationStatus",
        "description": "Inquire about an individual's immigration status",
        "parameters": {
          "type": "object",
          "properties": {
            "passport_number": {
              "type": "string",
              "description": "Pasaport No."
            },
            "full_name": {
              "type": "string",
              "description": "User name, default user himself"
            }
          },
          "required": [
            "passport_number",
            "full_name"
          ]
        }
      },
      {
        "name": "Travel.HotelServices.getHotelCheckInStatus",
        "description": "Check the check-in status of a specific hotel reservation",
        "parameters": {
          "type": "object",
          "properties": {
            "name": {
              "type": "string",
              "description": "Hotel Name"
            },
            "booking_date": {
              "type": "string",
              "description": "Ordered Date"
            }
          },
          "required": [
            "name",
            "booking_date"
          ]
        }
      }
    ],
    "single_tool": [
      {
        "name": "ConvenientLiving.GovernmentServices.queryMedicalInsuranceClaimsStatus",
        "description": "Check the progress of your health insurance claim",
        "parameters": {
          "type": "object",
          "properties": {
            "claim_number": {
              "type": "string",
              "description": "Claim No."
            },
            "name": {
              "type": "string",
              "description": "Name, default user's own"
            }
          },
          "required": [
            "claim_number",
            "name"
          ]
        }
      }
    ],
    "id": 75
  },
  {
    "messages": [
      {
        "role": "user",
        "content": "Take a look at the progress of Medicare claims."
      },
      {
        "role": "function call",
        "content": {
          "name": "ConvenientLiving.GovernmentServices.queryMedicalInsuranceClaimsStatus",
          "arguments": {}
        }
      },
      {
        "role": "assistant",
        "content": "Please provide the claim number"
      },
      {
        "role": "user",
        "content": "20230901ABC is my claim number.I'm sorry, Claim No. is CLM20230415. "
      },
      {
        "role": "function call",
        "content": {
          "name": "ConvenientLiving.GovernmentServices.queryMedicalInsuranceClaimsStatus",
          "arguments": {
            "claim_number": "CLM20230415"
          }
        }
      }
    ],
    "multiple_tools": [
      {
        "name": "ConvenientLiving.GovernmentServices.checkLicenseStatus",
        "description": "Check the validity status of various licenses (such as driver's license)",
        "parameters": {
          "type": "object",
          "properties": {
            "license_type": {
              "type": "string",
              "description": "Type of licence Trainee attorneys"
            },
            "license_number": {
              "type": "string",
              "description": "License number"
            }
          },
          "required": [
            "license_type",
            "license_number"
          ]
        }
      },
      {
        "name": "ConvenientLiving.FoodDelivery.searchRestaurantDiscounts",
        "description": "Enter keywords to search for deals",
        "parameters": {
          "type": "object",
          "properties": {
            "keyword": {
              "type": "string",
              "description": "Keywords related to offers"
            }
          },
          "required": [
            "keyword"
          ]
        }
      },
      {
        "name": "ConvenientLiving.GovernmentServices.queryMedicalInsuranceClaimsStatus",
        "description": "Check the progress of your health insurance claim",
        "parameters": {
          "type": "object",
          "properties": {
            "claim_number": {
              "type": "string",
              "description": "Claim No."
            },
            "name": {
              "type": "string",
              "description": "Name, default user's own"
            }
          },
          "required": [
            "claim_number",
            "name"
          ]
        }
      },
      {
        "name": "ConvenientLiving.UtilityPayments.getServiceProviders",
        "description": "Get information on suppliers that provide services such as utilities",
        "parameters": {
          "type": "object",
          "properties": {
            "service_type": {
              "type": "string",
              "description": "Types of paid services, such as utilities, gas, etc."
            },
            "location": {
              "type": "string",
              "description": "Region, default local"
            }
          },
          "required": [
            "service_type",
            "location"
          ]
        }
      },
      {
        "name": "Finance.Insurance.getInsuranceClaimProgress",
        "description": "Check the progress of your insurance claim",
        "parameters": {
          "type": "object",
          "properties": {
            "insurance_name": {
              "type": "string",
              "description": "Insurance Product Name"
            },
            "insurance_type": {
              "type": "string",
              "description": "Types of insurance products, such as life insurance, health insurance, property insurance, car insurance, etc."
            }
          },
          "required": [
            "insurance_name",
            "insurance_type"
          ]
        }
      }
    ],
    "single_tool": [
      {
        "name": "ConvenientLiving.GovernmentServices.queryMedicalInsuranceClaimsStatus",
        "description": "Check the progress of your health insurance claim",
        "parameters": {
          "type": "object",
          "properties": {
            "claim_number": {
              "type": "string",
              "description": "Claim No."
            },
            "name": {
              "type": "string",
              "description": "Name, default user's own"
            }
          },
          "required": [
            "claim_number",
            "name"
          ]
        }
      }
    ],
    "id": 76
  },
  {
    "messages": [
      {
        "role": "user",
        "content": "I heard that there are many fake academic qualifications now, can you teach me how to verify the authenticity of the academic qualifications?"
      },
      {
        "role": "function call",
        "content": {
          "name": "ConvenientLiving.GovernmentServices.queryEducationalQualificationVerification",
          "arguments": {}
        }
      },
      {
        "role": "assistant",
        "content": "Please provide the name of the graduate"
      },
      {
        "role": "user",
        "content": "Alice, she is my classmate and we just attended the graduation ceremony.I'm sorry, Graduate Name is Zhang Wei. "
      },
      {
        "role": "function call",
        "content": {
          "name": "ConvenientLiving.GovernmentServices.queryEducationalQualificationVerification",
          "arguments": {
            "graduate_name": "Zhang Wei"
          }
        }
      }
    ],
    "multiple_tools": [
      {
        "name": "Finance.Funds.getFundRiskLevel",
        "description": "Check the risk level of the designated fund",
        "parameters": {
          "type": "object",
          "properties": {
            "fund_name": {
              "type": "string",
              "description": "Fund name"
            },
            "fund_code": {
              "type": "string",
              "description": "Fund  Code"
            }
          },
          "required": [
            "fund_name",
            "fund_code"
          ]
        }
      },
      {
        "name": "Finance.Insurance.getInsuranceFAQ",
        "description": "Frequently asked questions and answers about insurance",
        "parameters": {
          "type": "object",
          "properties": {
            "keyword": {
              "type": "string",
              "description": "Question Keywords"
            }
          },
          "required": [
            "keyword"
          ]
        }
      },
      {
        "name": "SystemTools.SystemOptimization.scanForSystemVulnerabilities",
        "description": "Detect possible security flaws in your phone's system",
        "parameters": {
          "type": "object",
          "properties": {},
          "required": []
        }
      },
      {
        "name": "OnlineShopping.ExpressDelivery.complaintExpress",
        "description": "Make a complaint about a courier issue",
        "parameters": {
          "type": "object",
          "properties": {
            "express_id": {
              "type": "string",
              "description": "Tracking Number"
            },
            "signing_date": {
              "type": "string",
              "description": "The date of signing"
            },
            "complaint_content": {
              "type": "string",
              "description": "Complaint Contents"
            }
          },
          "required": [
            "express_id",
            "signing_date",
            "complaint_content"
          ]
        }
      },
      {
        "name": "ConvenientLiving.GovernmentServices.queryEducationalQualificationVerification",
        "description": "Verify the authenticity of your qualifications by querying relevant information about your qualifications",
        "parameters": {
          "type": "object",
          "properties": {
            "graduate_name": {
              "type": "string",
              "description": "Graduate Name"
            },
            "school_name": {
              "type": "string",
              "description": "Graduate School Name"
            }
          },
          "required": [
            "graduate_name",
            "school_name"
          ]
        }
      }
    ],
    "single_tool": [
      {
        "name": "ConvenientLiving.GovernmentServices.queryEducationalQualificationVerification",
        "description": "Verify the authenticity of your qualifications by querying relevant information about your qualifications",
        "parameters": {
          "type": "object",
          "properties": {
            "graduate_name": {
              "type": "string",
              "description": "Graduate Name"
            },
            "school_name": {
              "type": "string",
              "description": "Graduate School Name"
            }
          },
          "required": [
            "graduate_name",
            "school_name"
          ]
        }
      }
    ],
    "id": 77
  },
  {
    "messages": [
      {
        "role": "user",
        "content": "Help me take a look at the latest policy developments of the State Council"
      },
      {
        "role": "function call",
        "content": {
          "name": "ConvenientLiving.GovernmentServices.getPolicyUpdates",
          "arguments": {}
        }
      },
      {
        "role": "assistant",
        "content": "Please provide the policy category you are interested in, such as economic and environmental protection, etc."
      },
      {
        "role": "user",
        "content": "I am interested in economic policies, especially measures to support small and micro enterprises.I'm sorry, Policy categories such as economic, environmental, etc. is Education. "
      },
      {
        "role": "function call",
        "content": {
          "name": "ConvenientLiving.GovernmentServices.getPolicyUpdates",
          "arguments": {
            "category": "Education"
          }
        }
      }
    ],
    "multiple_tools": [
      {
        "name": "MusicRadio.OnlineMusic.getNewSongRecommendations",
        "description": "Get a list of new song recommendations",
        "parameters": {
          "type": "object",
          "properties": {},
          "required": []
        }
      },
      {
        "name": "SystemTools.SystemOptimization.checkSystemUpdates",
        "description": "Check for available system updates",
        "parameters": {
          "type": "object",
          "properties": {},
          "required": []
        }
      },
      {
        "name": "ConvenientLiving.GovernmentServices.getPolicyUpdates",
        "description": "Check the latest policy information issued by the State Council",
        "parameters": {
          "type": "object",
          "properties": {
            "category": {
              "type": "string",
              "description": "Policy categories such as economic, environmental, etc."
            },
            "date": {
              "type": "string",
              "description": "Query Date"
            }
          },
          "required": [
            "category",
            "date"
          ]
        }
      },
      {
        "name": "SystemTools.SystemSettings.setSystemUpdate",
        "description": "Turn on or off automatic system updates for your phone",
        "parameters": {
          "type": "object",
          "properties": {
            "auto_update": {
              "type": "boolean",
              "description": "Whether to automatically update the system"
            }
          },
          "required": [
            "auto_update"
          ]
        }
      },
      {
        "name": "MusicRadio.Karaoke.getFriendPosts",
        "description": "Get assigned social updates or get all social updates based on your friend's name",
        "parameters": {
          "type": "object",
          "properties": {
            "name": {
              "type": "string",
              "description": "Friend name, defaults to all friends"
            }
          },
          "required": [
            "name"
          ]
        }
      }
    ],
    "single_tool": [
      {
        "name": "ConvenientLiving.GovernmentServices.getPolicyUpdates",
        "description": "Check the latest policy information issued by the State Council",
        "parameters": {
          "type": "object",
          "properties": {
            "category": {
              "type": "string",
              "description": "Policy categories such as economic, environmental, etc."
            },
            "date": {
              "type": "string",
              "description": "Query Date"
            }
          },
          "required": [
            "category",
            "date"
          ]
        }
      }
    ],
    "id": 78
  },
  {
    "messages": [
      {
        "role": "user",
        "content": "Submit some feedback on State Council policy"
      },
      {
        "role": "function call",
        "content": {
          "name": "ConvenientLiving.GovernmentServices.createPolicyFeedback",
          "arguments": {}
        }
      },
      {
        "role": "assistant",
        "content": "What is the name of the policy being fed back"
      },
      {
        "role": "user",
        "content": "Online Education Support ProgramI'm sorry, Name of the policy being fed back is Green Mobility Initiative. "
      },
      {
        "role": "function call",
        "content": {
          "name": "ConvenientLiving.GovernmentServices.createPolicyFeedback",
          "arguments": {
            "policy_name": "Green Mobility Initiative"
          }
        }
      }
    ],
    "multiple_tools": [
      {
        "name": "NewsMagazines.News.postNewsComment",
        "description": "Post user comments under specified news",
        "parameters": {
          "type": "object",
          "properties": {
            "news_name": {
              "type": "string",
              "description": "News Name"
            },
            "comment_content": {
              "type": "string",
              "description": "Comments"
            }
          },
          "required": [
            "news_name",
            "comment_content"
          ]
        }
      },
      {
        "name": "ConvenientLiving.GovernmentServices.createPolicyFeedback",
        "description": "Submit feedback on State Council policy",
        "parameters": {
          "type": "object",
          "properties": {
            "policy_name": {
              "type": "string",
              "description": "Name of the policy being fed back"
            }
          },
          "required": [
            "policy_name"
          ]
        }
      },
      {
        "name": "SocialCommunication.Community.createCommunityComment",
        "description": "Create a new comment under a post in a specific community",
        "parameters": {
          "type": "object",
          "properties": {
            "community_name": {
              "type": "string",
              "description": "The name of the community where you want to create the review"
            },
            "post_name": {
              "type": "string",
              "description": "Title of the post to comment on"
            },
            "comment": {
              "type": "string",
              "description": "The content of the review"
            }
          },
          "required": [
            "community_name",
            "post_name",
            "comment"
          ]
        }
      },
      {
        "name": "OfficeSoftware.Documents.addDocumentComment",
        "description": "Add a comment for the specified document",
        "parameters": {
          "type": "object",
          "properties": {
            "document_name": {
              "type": "string",
              "description": "Document name to add comment, required"
            },
            "comment_content": {
              "type": "string",
              "description": "Comment (required)"
            }
          },
          "required": [
            "document_name",
            "comment_content"
          ]
        }
      },
      {
        "name": "SocialCommunication.SocialMedia.mediumComment",
        "description": "Comment on a given activity",
        "parameters": {
          "type": "object",
          "properties": {
            "medium_name": {
              "type": "string",
              "description": "Media name"
            },
            "correlation": {
              "type": "string",
              "description": "Dynamic Related Content"
            },
            "publisher": {
              "type": "string",
              "description": "Posted by/publisher?"
            },
            "publish_time": {
              "type": "string",
              "description": "Release Date"
            }
          },
          "required": [
            "medium_name",
            "correlation",
            "publisher",
            "publish_time"
          ]
        }
      }
    ],
    "single_tool": [
      {
        "name": "ConvenientLiving.GovernmentServices.createPolicyFeedback",
        "description": "Submit feedback on State Council policy",
        "parameters": {
          "type": "object",
          "properties": {
            "policy_name": {
              "type": "string",
              "description": "Name of the policy being fed back"
            }
          },
          "required": [
            "policy_name"
          ]
        }
      }
    ],
    "id": 79
  },
  {
    "messages": [
      {
        "role": "user",
        "content": "I have some opinions on the new policy of the State Council, where to submit it"
      },
      {
        "role": "function call",
        "content": {
          "name": "ConvenientLiving.GovernmentServices.createPolicyFeedback",
          "arguments": {}
        }
      },
      {
        "role": "assistant",
        "content": "What is the name of the policy being fed back"
      },
      {
        "role": "user",
        "content": "Green Mobility InitiativeI'm sorry, Name of the policy being fed back is Online Education Support Program. "
      },
      {
        "role": "function call",
        "content": {
          "name": "ConvenientLiving.GovernmentServices.createPolicyFeedback",
          "arguments": {
            "policy_name": "Online Education Support Program"
          }
        }
      }
    ],
    "multiple_tools": [
      {
        "name": "NewsMagazines.News.postNewsComment",
        "description": "Post user comments under specified news",
        "parameters": {
          "type": "object",
          "properties": {
            "news_name": {
              "type": "string",
              "description": "News Name"
            },
            "comment_content": {
              "type": "string",
              "description": "Comments"
            }
          },
          "required": [
            "news_name",
            "comment_content"
          ]
        }
      },
      {
        "name": "ConvenientLiving.GovernmentServices.createPolicyFeedback",
        "description": "Submit feedback on State Council policy",
        "parameters": {
          "type": "object",
          "properties": {
            "policy_name": {
              "type": "string",
              "description": "Name of the policy being fed back"
            }
          },
          "required": [
            "policy_name"
          ]
        }
      },
      {
        "name": "SocialCommunication.Community.createCommunityComment",
        "description": "Create a new comment under a post in a specific community",
        "parameters": {
          "type": "object",
          "properties": {
            "community_name": {
              "type": "string",
              "description": "The name of the community where you want to create the review"
            },
            "post_name": {
              "type": "string",
              "description": "Title of the post to comment on"
            },
            "comment": {
              "type": "string",
              "description": "The content of the review"
            }
          },
          "required": [
            "community_name",
            "post_name",
            "comment"
          ]
        }
      },
      {
        "name": "OfficeSoftware.Documents.addDocumentComment",
        "description": "Add a comment for the specified document",
        "parameters": {
          "type": "object",
          "properties": {
            "document_name": {
              "type": "string",
              "description": "Document name to add comment, required"
            },
            "comment_content": {
              "type": "string",
              "description": "Comment (required)"
            }
          },
          "required": [
            "document_name",
            "comment_content"
          ]
        }
      },
      {
        "name": "SocialCommunication.SocialMedia.mediumComment",
        "description": "Comment on a given activity",
        "parameters": {
          "type": "object",
          "properties": {
            "medium_name": {
              "type": "string",
              "description": "Media name"
            },
            "correlation": {
              "type": "string",
              "description": "Dynamic Related Content"
            },
            "publisher": {
              "type": "string",
              "description": "Posted by/publisher?"
            },
            "publish_time": {
              "type": "string",
              "description": "Release Date"
            }
          },
          "required": [
            "medium_name",
            "correlation",
            "publisher",
            "publish_time"
          ]
        }
      }
    ],
    "single_tool": [
      {
        "name": "ConvenientLiving.GovernmentServices.createPolicyFeedback",
        "description": "Submit feedback on State Council policy",
        "parameters": {
          "type": "object",
          "properties": {
            "policy_name": {
              "type": "string",
              "description": "Name of the policy being fed back"
            }
          },
          "required": [
            "policy_name"
          ]
        }
      }
    ],
    "id": 80
  },
  {
    "messages": [
      {
        "role": "user",
        "content": "Check my tax info to see if anything has changed recently."
      },
      {
        "role": "function call",
        "content": {
          "name": "ConvenientLiving.GovernmentServices.queryPersonalTaxInfo",
          "arguments": {}
        }
      },
      {
        "role": "assistant",
        "content": "Please provide your username"
      },
      {
        "role": "user",
        "content": "My name is Li Mei.I'm sorry, Username is Zhang San. "
      },
      {
        "role": "function call",
        "content": {
          "name": "ConvenientLiving.GovernmentServices.queryPersonalTaxInfo",
          "arguments": {
            "user_name": "Zhang San"
          }
        }
      }
    ],
    "multiple_tools": [
      {
        "name": "ConvenientLiving.GovernmentServices.queryPersonalTaxInfo",
        "description": "Inquire about the user's personal tax information",
        "parameters": {
          "type": "object",
          "properties": {
            "user_name": {
              "type": "string",
              "description": "Username"
            }
          },
          "required": [
            "user_name"
          ]
        }
      },
      {
        "name": "SocialCommunication.Community.getCommunityNotifications",
        "description": "Get notifications from select communities",
        "parameters": {
          "type": "object",
          "properties": {
            "community_name": {
              "type": "string",
              "description": "The name of the community to be notified"
            }
          },
          "required": [
            "community_name"
          ]
        }
      },
      {
        "name": "MusicRadio.Karaoke.getFriendPosts",
        "description": "Get assigned social updates or get all social updates based on your friend's name",
        "parameters": {
          "type": "object",
          "properties": {
            "name": {
              "type": "string",
              "description": "Friend name, defaults to all friends"
            }
          },
          "required": [
            "name"
          ]
        }
      },
      {
        "name": "OnlineShopping.SecondhandTrading.viewSecondhandSaleMessage",
        "description": "View message list by default",
        "parameters": {
          "type": "object",
          "properties": {},
          "required": []
        }
      },
      {
        "name": "ConvenientLiving.GovernmentServices.queryTaxDeclarationStatus",
        "description": "Check the progress and results of your tax returns",
        "parameters": {
          "type": "object",
          "properties": {
            "tax_type": {
              "type": "string",
              "description": "Tax types, such as personal income tax, corporate income tax, etc."
            },
            "tax_period": {
              "type": "string",
              "description": "Tax reporting period"
            }
          },
          "required": [
            "tax_type",
            "tax_period"
          ]
        }
      }
    ],
    "single_tool": [
      {
        "name": "ConvenientLiving.GovernmentServices.queryPersonalTaxInfo",
        "description": "Inquire about the user's personal tax information",
        "parameters": {
          "type": "object",
          "properties": {
            "user_name": {
              "type": "string",
              "description": "Username"
            }
          },
          "required": [
            "user_name"
          ]
        }
      }
    ],
    "id": 81
  },
  {
    "messages": [
      {
        "role": "user",
        "content": "Show me my taxes, including income and property taxes, and make sure everything is within normal limits."
      },
      {
        "role": "function call",
        "content": {
          "name": "ConvenientLiving.GovernmentServices.queryPersonalTaxInfo",
          "arguments": {}
        }
      },
      {
        "role": "assistant",
        "content": "Please provide your username"
      },
      {
        "role": "user",
        "content": "My name is Zhang San.I'm sorry, Username is Li Mei. "
      },
      {
        "role": "function call",
        "content": {
          "name": "ConvenientLiving.GovernmentServices.queryPersonalTaxInfo",
          "arguments": {
            "user_name": "Li Mei"
          }
        }
      }
    ],
    "multiple_tools": [
      {
        "name": "ConvenientLiving.GovernmentServices.queryPersonalTaxInfo",
        "description": "Inquire about the user's personal tax information",
        "parameters": {
          "type": "object",
          "properties": {
            "user_name": {
              "type": "string",
              "description": "Username"
            }
          },
          "required": [
            "user_name"
          ]
        }
      },
      {
        "name": "ConvenientLiving.GovernmentServices.queryPropertyTaxInfo",
        "description": "Get tax info about your property",
        "parameters": {
          "type": "object",
          "properties": {
            "property_address": {
              "type": "string",
              "description": "property Address"
            }
          },
          "required": [
            "property_address"
          ]
        }
      },
      {
        "name": "ConvenientLiving.FoodDelivery.getRestaurantLicense",
        "description": "Get licensing info for select restaurants",
        "parameters": {
          "type": "object",
          "properties": {
            "restaurant_name": {
              "type": "string",
              "description": "Name of the restaurant"
            }
          },
          "required": [
            "restaurant_name"
          ]
        }
      },
      {
        "name": "ConvenientLiving.GovernmentServices.queryBusinessLicenseInfo",
        "description": "Get information about your business license",
        "parameters": {
          "type": "object",
          "properties": {
            "enterprise_name": {
              "type": "string",
              "description": "Name of the Enterprise"
            }
          },
          "required": [
            "enterprise_name"
          ]
        }
      },
      {
        "name": "Navigation.TrafficViolations.viewDriverInfo",
        "description": "View driver's license details",
        "parameters": {
          "type": "object",
          "properties": {
            "driver_license_number": {
              "type": "string",
              "description": "Licence Number:"
            }
          },
          "required": [
            "driver_license_number"
          ]
        }
      }
    ],
    "single_tool": [
      {
        "name": "ConvenientLiving.GovernmentServices.queryPersonalTaxInfo",
        "description": "Inquire about the user's personal tax information",
        "parameters": {
          "type": "object",
          "properties": {
            "user_name": {
              "type": "string",
              "description": "Username"
            }
          },
          "required": [
            "user_name"
          ]
        }
      }
    ],
    "id": 82
  },
  {
    "messages": [
      {
        "role": "user",
        "content": "Help me see how to apply for a business license online?"
      },
      {
        "role": "function call",
        "content": {
          "name": "ConvenientLiving.GovernmentServices.applyForBusinessLicense",
          "arguments": {}
        }
      },
      {
        "role": "assistant",
        "content": "Please provide the business name"
      },
      {
        "role": "user",
        "content": "Future Technology Innovation Co., Ltd."
      },
      {
        "role": "function call",
        "content": {
          "name": "ConvenientLiving.GovernmentServices.applyForBusinessLicense",
          "arguments": {
            "business_name": "Future Technology Innovation Co., Ltd."
          }
        }
      },
      {
        "role": "assistant",
        "content": "Please provide the business owner's name"
      },
      {
        "role": "user",
        "content": "Zhang San."
      },
      {
        "role": "function call",
        "content": {
          "name": "ConvenientLiving.GovernmentServices.applyForBusinessLicense",
          "arguments": {
            "business_name": "Future Technology Innovation Co., Ltd.",
            "name": "Zhang San"
          }
        }
      },
      {
        "role": "assistant",
        "content": "Please provide your ID number"
      },
      {
        "role": "user",
        "content": "My ID number is 440582199001011234I'm sorry, Objects that contain information about the business owner, such as name, ID number, etc. is Li Si. "
      },
      {
        "role": "function call",
        "content": {
          "name": "ConvenientLiving.GovernmentServices.applyForBusinessLicense",
          "arguments": {
            "business_name": "Future Technology Innovation Co., Ltd.",
            "name": "Li Si",
            "id_card": "440582199001011234"
          }
        }
      }
    ],
    "multiple_tools": [
      {
        "name": "MusicRadio.OnlineMusic.bindSocialPlatforms",
        "description": "Link your account to a social platform",
        "parameters": {
          "type": "object",
          "properties": {
            "platforms": {
              "type": "string",
              "description": "Social platforms to be linked"
            }
          },
          "required": [
            "platforms"
          ]
        }
      },
      {
        "name": "Finance.Payment.linkPayBankCard",
        "description": "Link your card to your account",
        "parameters": {
          "type": "object",
          "properties": {
            "card_number": {
              "type": "string",
              "description": "Bank Card Number"
            },
            "card_holder_name": {
              "type": "string",
              "description": "Card holder name"
            },
            "bank_name": {
              "type": "string",
              "description": "Bank Name"
            }
          },
          "required": [
            "card_number",
            "card_holder_name",
            "bank_name"
          ]
        }
      },
      {
        "name": "ConvenientLiving.GovernmentServices.applyForBusinessLicense",
        "description": "Apply for a business license online",
        "parameters": {
          "type": "object",
          "properties": {
            "business_name": {
              "type": "string",
              "description": "Name of the Enterprise"
            },
            "name": {
              "type": "string",
              "description": "Objects that contain information about the business owner, such as name, ID number, etc."
            },
            "id_card": {
              "type": "string",
              "description": "ID No."
            }
          },
          "required": [
            "business_name",
            "name",
            "id_card"
          ]
        }
      },
      {
        "name": "SystemTools.SystemSettings.OpenApp",
        "description": "Open the specified App on your phone",
        "parameters": {
          "type": "object",
          "properties": {
            "app_name": {
              "type": "string",
              "description": "App name"
            }
          },
          "required": [
            "app_name"
          ]
        }
      },
      {
        "name": "SystemTools.SystemSettings.setSystemTurnOnConnect2Win",
        "description": "Open connection to windows",
        "parameters": {
          "type": "object",
          "properties": {},
          "required": []
        }
      }
    ],
    "single_tool": [
      {
        "name": "ConvenientLiving.GovernmentServices.applyForBusinessLicense",
        "description": "Apply for a business license online",
        "parameters": {
          "type": "object",
          "properties": {
            "business_name": {
              "type": "string",
              "description": "Name of the Enterprise"
            },
            "name": {
              "type": "string",
              "description": "Objects that contain information about the business owner, such as name, ID number, etc."
            },
            "id_card": {
              "type": "string",
              "description": "ID No."
            }
          },
          "required": [
            "business_name",
            "name",
            "id_card"
          ]
        }
      }
    ],
    "id": 83
  },
  {
    "messages": [
      {
        "role": "user",
        "content": "I found a merchant that is suspected of tax evasion and needs to be reported"
      },
      {
        "role": "function call",
        "content": {
          "name": "ConvenientLiving.GovernmentServices.reportTaxEvasion",
          "arguments": {}
        }
      },
      {
        "role": "assistant",
        "content": "Please provide a company name"
      },
      {
        "role": "user",
        "content": "Starlight TechnologyI'm sorry, Company name is Chenxi Catering Group. "
      },
      {
        "role": "function call",
        "content": {
          "name": "ConvenientLiving.GovernmentServices.reportTaxEvasion",
          "arguments": {
            "company_name": "Chenxi Catering Group"
          }
        }
      }
    ],
    "multiple_tools": [
      {
        "name": "ConvenientLiving.GovernmentServices.queryEducationalQualificationVerification",
        "description": "Verify the authenticity of your qualifications by querying relevant information about your qualifications",
        "parameters": {
          "type": "object",
          "properties": {
            "graduate_name": {
              "type": "string",
              "description": "Graduate Name"
            },
            "school_name": {
              "type": "string",
              "description": "Graduate School Name"
            }
          },
          "required": [
            "graduate_name",
            "school_name"
          ]
        }
      },
      {
        "name": "Finance.Insurance.getInsuranceClaimProgress",
        "description": "Check the progress of your insurance claim",
        "parameters": {
          "type": "object",
          "properties": {
            "insurance_name": {
              "type": "string",
              "description": "Insurance Product Name"
            },
            "insurance_type": {
              "type": "string",
              "description": "Types of insurance products, such as life insurance, health insurance, property insurance, car insurance, etc."
            }
          },
          "required": [
            "insurance_name",
            "insurance_type"
          ]
        }
      },
      {
        "name": "ConvenientLiving.UtilityPayments.verifyBill",
        "description": "Verify the accuracy of bills such as utilities",
        "parameters": {
          "type": "object",
          "properties": {
            "service_type": {
              "type": "string",
              "description": "Types of paid services, such as utilities, gas, etc."
            },
            "user_name": {
              "type": "string",
              "description": "User Name"
            }
          },
          "required": [
            "service_type",
            "user_name"
          ]
        }
      },
      {
        "name": "ConvenientLiving.GovernmentServices.reportTaxEvasion",
        "description": "Reporting tax evasion",
        "parameters": {
          "type": "object",
          "properties": {
            "company_name": {
              "type": "string",
              "description": "Company name"
            },
            "description": {
              "type": "string",
              "description": "Problem description"
            }
          },
          "required": [
            "company_name",
            "description"
          ]
        }
      },
      {
        "name": "Navigation.Bicycles.rateRidingExperience",
        "description": "Rate this bike ride",
        "parameters": {
          "type": "object",
          "properties": {
            "rating": {
              "type": "integer",
              "description": "Rating"
            },
            "comment": {
              "type": "string",
              "description": "Review Content"
            }
          },
          "required": [
            "rating",
            "comment"
          ]
        }
      }
    ],
    "single_tool": [
      {
        "name": "ConvenientLiving.GovernmentServices.reportTaxEvasion",
        "description": "Reporting tax evasion",
        "parameters": {
          "type": "object",
          "properties": {
            "company_name": {
              "type": "string",
              "description": "Company name"
            },
            "description": {
              "type": "string",
              "description": "Problem description"
            }
          },
          "required": [
            "company_name",
            "description"
          ]
        }
      }
    ],
    "id": 84
  },
  {
    "messages": [
      {
        "role": "user",
        "content": "Learn how to apply for a residence permit"
      },
      {
        "role": "function call",
        "content": {
          "name": "ConvenientLiving.GovernmentServices.applyForResidentPermit",
          "arguments": {}
        }
      },
      {
        "role": "assistant",
        "content": "Provide your ID number so we can continue processing your request"
      },
      {
        "role": "user",
        "content": "My ID number is 430522198807078899, can I proceed with my application?I'm sorry, User ID number, default user himself is 420111199003078888. "
      },
      {
        "role": "function call",
        "content": {
          "name": "ConvenientLiving.GovernmentServices.applyForResidentPermit",
          "arguments": {
            "identity_card_number": "420111199003078888"
          }
        }
      }
    ],
    "multiple_tools": [
      {
        "name": "ConvenientLiving.GovernmentServices.queryResidentialPermitInfo",
        "description": "Check the progress of the residence permit, the validity period, etc.",
        "parameters": {
          "type": "object",
          "properties": {
            "applicant_name": {
              "type": "string",
              "description": "Name of Applicant"
            }
          },
          "required": [
            "applicant_name"
          ]
        }
      },
      {
        "name": "Finance.Insurance.getInsuranceFAQ",
        "description": "Frequently asked questions and answers about insurance",
        "parameters": {
          "type": "object",
          "properties": {
            "keyword": {
              "type": "string",
              "description": "Question Keywords"
            }
          },
          "required": [
            "keyword"
          ]
        }
      },
      {
        "name": "ConvenientLiving.JobRecruitment.getJobApplicantsForPosition",
        "description": "Get information about people applying for specific roles",
        "parameters": {
          "type": "object",
          "properties": {
            "position_name": {
              "type": "string",
              "description": "Job title, required"
            }
          },
          "required": [
            "position_name"
          ]
        }
      },
      {
        "name": "ConvenientLiving.GovernmentServices.applyForResidentPermit",
        "description": "Provide a residence permit application service for the user",
        "parameters": {
          "type": "object",
          "properties": {
            "identity_card_number": {
              "type": "string",
              "description": "User ID number, default user himself"
            },
            "address": {
              "type": "string",
              "description": "Residential Address"
            }
          },
          "required": [
            "identity_card_number",
            "address"
          ]
        }
      },
      {
        "name": "ConvenientLiving.UtilityPayments.getServiceProviders",
        "description": "Get information on suppliers that provide services such as utilities",
        "parameters": {
          "type": "object",
          "properties": {
            "service_type": {
              "type": "string",
              "description": "Types of paid services, such as utilities, gas, etc."
            },
            "location": {
              "type": "string",
              "description": "Region, default local"
            }
          },
          "required": [
            "service_type",
            "location"
          ]
        }
      }
    ],
    "single_tool": [
      {
        "name": "ConvenientLiving.GovernmentServices.applyForResidentPermit",
        "description": "Provide a residence permit application service for the user",
        "parameters": {
          "type": "object",
          "properties": {
            "identity_card_number": {
              "type": "string",
              "description": "User ID number, default user himself"
            },
            "address": {
              "type": "string",
              "description": "Residential Address"
            }
          },
          "required": [
            "identity_card_number",
            "address"
          ]
        }
      }
    ],
    "id": 85
  },
  {
    "messages": [
      {
        "role": "user",
        "content": "Check on my immigration status"
      },
      {
        "role": "function call",
        "content": {
          "name": "ConvenientLiving.GovernmentServices.checkImmigrationStatus",
          "arguments": {}
        }
      },
      {
        "role": "assistant",
        "content": "Please provide your passport number"
      },
      {
        "role": "user",
        "content": "My passport number is G12345678.I'm sorry, Pasaport No. is G87654321. "
      },
      {
        "role": "function call",
        "content": {
          "name": "ConvenientLiving.GovernmentServices.checkImmigrationStatus",
          "arguments": {
            "passport_number": "G87654321"
          }
        }
      },
      {
        "role": "assistant",
        "content": "Please provide your username"
      },
      {
        "role": "user",
        "content": "My name is Zhang San, how can I help you?"
      },
      {
        "role": "function call",
        "content": {
          "name": "ConvenientLiving.GovernmentServices.checkImmigrationStatus",
          "arguments": {
            "passport_number": "G87654321",
            "full_name": "Zhang San"
          }
        }
      }
    ],
    "multiple_tools": [
      {
        "name": "Navigation.TrainTickets.queryTrainWaitlistStatus",
        "description": "Used to query the current status of train ticket standby orders submitted by users",
        "parameters": {
          "type": "object",
          "properties": {
            "ride_date": {
              "type": "string",
              "description": "Date of trip"
            },
            "commit_date": {
              "type": "string",
              "description": "Date/time the order was submitted"
            },
            "departure_station": {
              "type": "string",
              "description": "Departure Station"
            },
            "destination_station": {
              "type": "string",
              "description": "arrival station"
            },
            "passenger_id": {
              "type": "string",
              "description": "Rider ID number"
            },
            "name": {
              "type": "string",
              "description": "Name of person to query"
            }
          },
          "required": [
            "ride_date",
            "commit_date",
            "departure_station",
            "destination_station",
            "passenger_id",
            "name"
          ]
        }
      },
      {
        "name": "ConvenientLiving.JobRecruitment.checkJobApplicationStatus",
        "description": "View the status of job applications by position",
        "parameters": {
          "type": "object",
          "properties": {
            "job_name": {
              "type": "string",
              "description": "Position name"
            },
            "company_name": {
              "type": "string",
              "description": "Company name"
            }
          },
          "required": [
            "job_name",
            "company_name"
          ]
        }
      },
      {
        "name": "Travel.HotelServices.getHotelCheckInStatus",
        "description": "Check the check-in status of a specific hotel reservation",
        "parameters": {
          "type": "object",
          "properties": {
            "name": {
              "type": "string",
              "description": "Hotel Name"
            },
            "booking_date": {
              "type": "string",
              "description": "Ordered Date"
            }
          },
          "required": [
            "name",
            "booking_date"
          ]
        }
      },
      {
        "name": "ConvenientLiving.GovernmentServices.checkImmigrationStatus",
        "description": "Inquire about an individual's immigration status",
        "parameters": {
          "type": "object",
          "properties": {
            "passport_number": {
              "type": "string",
              "description": "Pasaport No."
            },
            "full_name": {
              "type": "string",
              "description": "User name, default user himself"
            }
          },
          "required": [
            "passport_number",
            "full_name"
          ]
        }
      },
      {
        "name": "ConvenientLiving.JobRecruitment.checkJobPositionAvailability",
        "description": "Check if a specific position is still being recruited",
        "parameters": {
          "type": "object",
          "properties": {
            "job_name": {
              "type": "string",
              "description": "Position name"
            },
            "company_name": {
              "type": "string",
              "description": "Company name"
            }
          },
          "required": [
            "job_name",
            "company_name"
          ]
        }
      }
    ],
    "single_tool": [
      {
        "name": "ConvenientLiving.GovernmentServices.checkImmigrationStatus",
        "description": "Inquire about an individual's immigration status",
        "parameters": {
          "type": "object",
          "properties": {
            "passport_number": {
              "type": "string",
              "description": "Pasaport No."
            },
            "full_name": {
              "type": "string",
              "description": "User name, default user himself"
            }
          },
          "required": [
            "passport_number",
            "full_name"
          ]
        }
      }
    ],
    "id": 86
  },
  {
    "messages": [
      {
        "role": "user",
        "content": "Can you take a look at my current immigration situation?"
      },
      {
        "role": "function call",
        "content": {
          "name": "ConvenientLiving.GovernmentServices.checkImmigrationStatus",
          "arguments": {}
        }
      },
      {
        "role": "assistant",
        "content": "Please provide your passport number"
      },
      {
        "role": "user",
        "content": "My passport number is G12345678."
      },
      {
        "role": "function call",
        "content": {
          "name": "ConvenientLiving.GovernmentServices.checkImmigrationStatus",
          "arguments": {
            "passport_number": "G12345678"
          }
        }
      },
      {
        "role": "assistant",
        "content": "Please provide your username to check immigration status"
      },
      {
        "role": "user",
        "content": "My name is Zhang San, and I need to check my immigration status.I'm sorry, User name, default user himself is Zhang Wei. "
      },
      {
        "role": "function call",
        "content": {
          "name": "ConvenientLiving.GovernmentServices.checkImmigrationStatus",
          "arguments": {
            "passport_number": "G12345678",
            "full_name": "Zhang Wei"
          }
        }
      }
    ],
    "multiple_tools": [
      {
        "name": "OnlineShopping.Mall.viewMessage",
        "description": "View messages for a specific friend or time, and see the entire list of messages by default",
        "parameters": {
          "type": "object",
          "properties": {},
          "required": []
        }
      },
      {
        "name": "SocialCommunication.SocialMedia.viewMediumMessage",
        "description": "View messages for specified friends in specified media (defaults to last week)",
        "parameters": {
          "type": "object",
          "properties": {
            "medium_name": {
              "type": "string",
              "description": "Media name"
            },
            "name": {
              "type": "string",
              "description": "Friend's nickname"
            },
            "account_number": {
              "type": "string",
              "description": "Friend's account"
            },
            "time": {
              "type": "string",
              "description": "Release Date"
            }
          },
          "required": [
            "medium_name",
            "name",
            "account_number",
            "time"
          ]
        }
      },
      {
        "name": "ConvenientLiving.GovernmentServices.checkImmigrationStatus",
        "description": "Inquire about an individual's immigration status",
        "parameters": {
          "type": "object",
          "properties": {
            "passport_number": {
              "type": "string",
              "description": "Pasaport No."
            },
            "full_name": {
              "type": "string",
              "description": "User name, default user himself"
            }
          },
          "required": [
            "passport_number",
            "full_name"
          ]
        }
      },
      {
        "name": "ConvenientLiving.JobRecruitment.checkJobPositionAvailability",
        "description": "Check if a specific position is still being recruited",
        "parameters": {
          "type": "object",
          "properties": {
            "job_name": {
              "type": "string",
              "description": "Position name"
            },
            "company_name": {
              "type": "string",
              "description": "Company name"
            }
          },
          "required": [
            "job_name",
            "company_name"
          ]
        }
      },
      {
        "name": "OnlineShopping.SecondhandTrading.viewSecondhandSaleMessage",
        "description": "View message list by default",
        "parameters": {
          "type": "object",
          "properties": {},
          "required": []
        }
      }
    ],
    "single_tool": [
      {
        "name": "ConvenientLiving.GovernmentServices.checkImmigrationStatus",
        "description": "Inquire about an individual's immigration status",
        "parameters": {
          "type": "object",
          "properties": {
            "passport_number": {
              "type": "string",
              "description": "Pasaport No."
            },
            "full_name": {
              "type": "string",
              "description": "User name, default user himself"
            }
          },
          "required": [
            "passport_number",
            "full_name"
          ]
        }
      }
    ],
    "id": 87
  },
  {
    "messages": [
      {
        "role": "user",
        "content": "Can you help me see what I need by submitting my visa application?"
      },
      {
        "role": "function call",
        "content": {
          "name": "ConvenientLiving.GovernmentServices.applyForVisa",
          "arguments": {}
        }
      },
      {
        "role": "assistant",
        "content": "Please provide your passport number"
      },
      {
        "role": "user",
        "content": "My passport number is B87654321.I'm sorry, Pasaport No. is A12345678. "
      },
      {
        "role": "function call",
        "content": {
          "name": "ConvenientLiving.GovernmentServices.applyForVisa",
          "arguments": {
            "passport_number": "A12345678"
          }
        }
      }
    ],
    "multiple_tools": [
      {
        "name": "ConvenientLiving.GovernmentServices.applyForVisa",
        "description": "Submit Visa Application",
        "parameters": {
          "type": "object",
          "properties": {
            "passport_number": {
              "type": "string",
              "description": "Pasaport No."
            }
          },
          "required": [
            "passport_number"
          ]
        }
      },
      {
        "name": "Travel.ItineraryServices.getTravelVisaInfo",
        "description": "Get visa requirements and process for a specific destination",
        "parameters": {
          "type": "object",
          "properties": {
            "destination": {
              "type": "string",
              "description": "destination"
            }
          },
          "required": [
            "destination"
          ]
        }
      },
      {
        "name": "SocialCommunication.SocialMedia.collectMediumTrends",
        "description": "Favorite specified activity in specified media",
        "parameters": {
          "type": "object",
          "properties": {
            "medium_name": {
              "type": "string",
              "description": "Media name"
            },
            "correlation": {
              "type": "string",
              "description": "Dynamic Related Content"
            },
            "publisher": {
              "type": "string",
              "description": "Posted by/publisher?"
            },
            "publish_time": {
              "type": "string",
              "description": "Release Date"
            }
          },
          "required": [
            "medium_name",
            "correlation",
            "publisher",
            "publish_time"
          ]
        }
      },
      {
        "name": "OnlineShopping.SecondhandTrading.addCollectSecondhandSale",
        "description": "Collect products by trade name",
        "parameters": {
          "type": "object",
          "properties": {
            "search_name": {
              "type": "string",
              "description": "Product Name"
            }
          },
          "required": [
            "search_name"
          ]
        }
      },
      {
        "name": "OnlineShopping.Mall.addCollectCommodity",
        "description": "Collect products by trade name",
        "parameters": {
          "type": "object",
          "properties": {
            "goods": {
              "type": "string",
              "description": "Product Name"
            }
          },
          "required": [
            "goods"
          ]
        }
      }
    ],
    "single_tool": [
      {
        "name": "ConvenientLiving.GovernmentServices.applyForVisa",
        "description": "Submit Visa Application",
        "parameters": {
          "type": "object",
          "properties": {
            "passport_number": {
              "type": "string",
              "description": "Pasaport No."
            }
          },
          "required": [
            "passport_number"
          ]
        }
      }
    ],
    "id": 88
  },
  {
    "messages": [
      {
        "role": "user",
        "content": "Can I submit my visa application now? I have all the documents ready."
      },
      {
        "role": "function call",
        "content": {
          "name": "ConvenientLiving.GovernmentServices.applyForVisa",
          "arguments": {}
        }
      },
      {
        "role": "assistant",
        "content": "Please provide your passport number"
      },
      {
        "role": "user",
        "content": "My passport number is A12345678.I'm sorry, Pasaport No. is B87654321. "
      },
      {
        "role": "function call",
        "content": {
          "name": "ConvenientLiving.GovernmentServices.applyForVisa",
          "arguments": {
            "passport_number": "B87654321"
          }
        }
      }
    ],
    "multiple_tools": [
      {
        "name": "Navigation.TrainTickets.addTrainWaitlistOrder",
        "description": "User submits train ticket standby order",
        "parameters": {
          "type": "object",
          "properties": {
            "train_number": {
              "type": "string",
              "description": "Number of trips to book; select all by default, up to 6"
            },
            "passenger_name": {
              "type": "string",
              "description": "Rider's name"
            },
            "passenger_id": {
              "type": "string",
              "description": "Rider ID number"
            },
            "ride_date": {
              "type": "string",
              "description": "Trip date in YYYY-MM-DD format"
            },
            "departure_station": {
              "type": "string",
              "description": "Departure Station"
            },
            "destination_station": {
              "type": "string",
              "description": "arrival station"
            },
            "seat_type": {
              "type": "string",
              "description": "Seat Type"
            }
          },
          "required": [
            "train_number",
            "passenger_name",
            "passenger_id",
            "ride_date",
            "departure_station",
            "destination_station",
            "seat_type"
          ]
        }
      },
      {
        "name": "SocialCommunication.SocialMedia.collectMediumTrends",
        "description": "Favorite specified activity in specified media",
        "parameters": {
          "type": "object",
          "properties": {
            "medium_name": {
              "type": "string",
              "description": "Media name"
            },
            "correlation": {
              "type": "string",
              "description": "Dynamic Related Content"
            },
            "publisher": {
              "type": "string",
              "description": "Posted by/publisher?"
            },
            "publish_time": {
              "type": "string",
              "description": "Release Date"
            }
          },
          "required": [
            "medium_name",
            "correlation",
            "publisher",
            "publish_time"
          ]
        }
      },
      {
        "name": "ConvenientLiving.GovernmentServices.applyForEducationGrant",
        "description": "Submit an application for an education grant",
        "parameters": {
          "type": "object",
          "properties": {
            "name": {
              "type": "string",
              "description": "Applicant, default user self"
            },
            "school": {
              "type": "string",
              "description": "Schools"
            }
          },
          "required": [
            "name",
            "school"
          ]
        }
      },
      {
        "name": "ConvenientLiving.JobRecruitment.collectJob",
        "description": "Favorite posts of interest",
        "parameters": {
          "type": "object",
          "properties": {
            "job_name": {
              "type": "string",
              "description": "Position name"
            },
            "company_name": {
              "type": "string",
              "description": "Company name"
            }
          },
          "required": [
            "job_name",
            "company_name"
          ]
        }
      },
      {
        "name": "ConvenientLiving.GovernmentServices.applyForVisa",
        "description": "Submit Visa Application",
        "parameters": {
          "type": "object",
          "properties": {
            "passport_number": {
              "type": "string",
              "description": "Pasaport No."
            }
          },
          "required": [
            "passport_number"
          ]
        }
      }
    ],
    "single_tool": [
      {
        "name": "ConvenientLiving.GovernmentServices.applyForVisa",
        "description": "Submit Visa Application",
        "parameters": {
          "type": "object",
          "properties": {
            "passport_number": {
              "type": "string",
              "description": "Pasaport No."
            }
          },
          "required": [
            "passport_number"
          ]
        }
      }
    ],
    "id": 89
  },
  {
    "messages": [
      {
        "role": "user",
        "content": "Can you help me see what I need to do to apply for an education grant?"
      },
      {
        "role": "function call",
        "content": {
          "name": "ConvenientLiving.GovernmentServices.applyForEducationGrant",
          "arguments": {}
        }
      },
      {
        "role": "assistant",
        "content": "Please provide your name and contact information so we can process your education grant request"
      },
      {
        "role": "user",
        "content": "My name is Li Si."
      },
      {
        "role": "function call",
        "content": {
          "name": "ConvenientLiving.GovernmentServices.applyForEducationGrant",
          "arguments": {
            "name": "Li Si"
          }
        }
      },
      {
        "role": "assistant",
        "content": "Which school is it?"
      },
      {
        "role": "user",
        "content": "I am applying to Tsinghua University.I'm sorry, Schools is Stanford University. "
      },
      {
        "role": "function call",
        "content": {
          "name": "ConvenientLiving.GovernmentServices.applyForEducationGrant",
          "arguments": {
            "name": "Li Si",
            "school": "Stanford University"
          }
        }
      }
    ],
    "multiple_tools": [
      {
        "name": "ConvenientLiving.JobRecruitment.setJobPositionVisibility",
        "description": "Set if the position is visible to the candidate",
        "parameters": {
          "type": "object",
          "properties": {
            "position_name": {
              "type": "string",
              "description": "Job title, required"
            },
            "visibility": {
              "type": "boolean",
              "description": "Visibility, required"
            }
          },
          "required": [
            "position_name",
            "visibility"
          ]
        }
      },
      {
        "name": "OnlineShopping.Mall.searchCommodityOrders",
        "description": "Query all eligible orders by commodity name and other criteria",
        "parameters": {
          "type": "object",
          "properties": {
            "goods": {
              "type": "string",
              "description": "Product Name"
            },
            "order_stage": {
              "type": "string",
              "description": "Order status, e.g. Pending Payment, Pending Receipt, Completed, Cancelled, Refund/After Sales"
            },
            "evaluate_stage": {
              "type": "string",
              "description": "Review status, e.g. reviewed, pending review"
            }
          },
          "required": [
            "goods",
            "order_stage",
            "evaluate_stage"
          ]
        }
      },
      {
        "name": "ConvenientLiving.JobRecruitment.applyForJob",
        "description": "Submitting an Application to a Designated Position",
        "parameters": {
          "type": "object",
          "properties": {
            "job_name": {
              "type": "string",
              "description": "Position name"
            },
            "company_name": {
              "type": "string",
              "description": "Company name"
            }
          },
          "required": [
            "job_name",
            "company_name"
          ]
        }
      },
      {
        "name": "UtilityTools.FileManagement.editFileProperty",
        "description": "Setting the properties of a file",
        "parameters": {
          "type": "object",
          "properties": {
            "filename": {
              "type": "string",
              "description": "Document Name"
            },
            "property": {
              "type": "string",
              "description": "Contents of the property setting"
            }
          },
          "required": [
            "filename",
            "property"
          ]
        }
      },
      {
        "name": "ConvenientLiving.GovernmentServices.applyForEducationGrant",
        "description": "Submit an application for an education grant",
        "parameters": {
          "type": "object",
          "properties": {
            "name": {
              "type": "string",
              "description": "Applicant, default user self"
            },
            "school": {
              "type": "string",
              "description": "Schools"
            }
          },
          "required": [
            "name",
            "school"
          ]
        }
      }
    ],
    "single_tool": [
      {
        "name": "ConvenientLiving.GovernmentServices.applyForEducationGrant",
        "description": "Submit an application for an education grant",
        "parameters": {
          "type": "object",
          "properties": {
            "name": {
              "type": "string",
              "description": "Applicant, default user self"
            },
            "school": {
              "type": "string",
              "description": "Schools"
            }
          },
          "required": [
            "name",
            "school"
          ]
        }
      }
    ],
    "id": 90
  },
  {
    "messages": [
      {
        "role": "user",
        "content": "Can you guide me on how to submit an education grant application?"
      },
      {
        "role": "function call",
        "content": {
          "name": "ConvenientLiving.GovernmentServices.applyForEducationGrant",
          "arguments": {}
        }
      },
      {
        "role": "assistant",
        "content": "Please provide your name"
      },
      {
        "role": "user",
        "content": "My name is Zhang San.I'm sorry, Applicant, default user self is Li Si. "
      },
      {
        "role": "function call",
        "content": {
          "name": "ConvenientLiving.GovernmentServices.applyForEducationGrant",
          "arguments": {
            "name": "Li Si"
          }
        }
      },
      {
        "role": "assistant",
        "content": "Which school is it?"
      },
      {
        "role": "user",
        "content": "I studied at Stanford."
      },
      {
        "role": "function call",
        "content": {
          "name": "ConvenientLiving.GovernmentServices.applyForEducationGrant",
          "arguments": {
            "name": "Li Si",
            "school": "Stanford University"
          }
        }
      }
    ],
    "multiple_tools": [
      {
        "name": "ConvenientLiving.GovernmentServices.applyForResidentPermit",
        "description": "Provide a residence permit application service for the user",
        "parameters": {
          "type": "object",
          "properties": {
            "identity_card_number": {
              "type": "string",
              "description": "User ID number, default user himself"
            },
            "address": {
              "type": "string",
              "description": "Residential Address"
            }
          },
          "required": [
            "identity_card_number",
            "address"
          ]
        }
      },
      {
        "name": "Navigation.TaxiCarRental.callingTaxi",
        "description": "Send a ride request based on your starting location",
        "parameters": {
          "type": "object",
          "properties": {
            "departure": {
              "type": "string",
              "description": "Pickup location, default current location"
            },
            "destination": {
              "type": "string",
              "description": "Destination"
            },
            "time": {
              "type": "string",
              "description": "Taxi time, default current time"
            }
          },
          "required": [
            "departure",
            "destination",
            "time"
          ]
        }
      },
      {
        "name": "ConvenientLiving.GovernmentServices.applyForEducationGrant",
        "description": "Submit an application for an education grant",
        "parameters": {
          "type": "object",
          "properties": {
            "name": {
              "type": "string",
              "description": "Applicant, default user self"
            },
            "school": {
              "type": "string",
              "description": "Schools"
            }
          },
          "required": [
            "name",
            "school"
          ]
        }
      },
      {
        "name": "ConvenientLiving.GovernmentServices.createServiceRequest",
        "description": "Submit a new city service request",
        "parameters": {
          "type": "object",
          "properties": {
            "city_name": {
              "type": "string",
              "description": "City"
            }
          },
          "required": [
            "city_name"
          ]
        }
      },
      {
        "name": "ConvenientLiving.GovernmentServices.applyForVisa",
        "description": "Submit Visa Application",
        "parameters": {
          "type": "object",
          "properties": {
            "passport_number": {
              "type": "string",
              "description": "Pasaport No."
            }
          },
          "required": [
            "passport_number"
          ]
        }
      }
    ],
    "single_tool": [
      {
        "name": "ConvenientLiving.GovernmentServices.applyForEducationGrant",
        "description": "Submit an application for an education grant",
        "parameters": {
          "type": "object",
          "properties": {
            "name": {
              "type": "string",
              "description": "Applicant, default user self"
            },
            "school": {
              "type": "string",
              "description": "Schools"
            }
          },
          "required": [
            "name",
            "school"
          ]
        }
      }
    ],
    "id": 91
  },
  {
    "messages": [
      {
        "role": "user",
        "content": "Check if the license is still valid?"
      },
      {
        "role": "function call",
        "content": {
          "name": "ConvenientLiving.GovernmentServices.checkLicenseStatus",
          "arguments": {}
        }
      },
      {
        "role": "assistant",
        "content": "Please provide license type"
      },
      {
        "role": "user",
        "content": "My license type is Work Permit.I'm sorry, Type of licence Trainee attorneys is Passport. "
      },
      {
        "role": "function call",
        "content": {
          "name": "ConvenientLiving.GovernmentServices.checkLicenseStatus",
          "arguments": {
            "license_type": "Passport"
          }
        }
      }
    ],
    "multiple_tools": [
      {
        "name": "Navigation.TrafficViolations.viewDriverInfo",
        "description": "View driver's license details",
        "parameters": {
          "type": "object",
          "properties": {
            "driver_license_number": {
              "type": "string",
              "description": "Licence Number:"
            }
          },
          "required": [
            "driver_license_number"
          ]
        }
      },
      {
        "name": "Finance.Banking.viewCreditCardBill",
        "description": "View bank card statement",
        "parameters": {
          "type": "object",
          "properties": {
            "card_no": {
              "type": "string",
              "description": "Credit Card Number"
            },
            "time": {
              "type": "string",
              "description": "Credit Card Statement Month"
            }
          },
          "required": [
            "card_no",
            "time"
          ]
        }
      },
      {
        "name": "ConvenientLiving.GovernmentServices.queryBusinessLicenseInfo",
        "description": "Get information about your business license",
        "parameters": {
          "type": "object",
          "properties": {
            "enterprise_name": {
              "type": "string",
              "description": "Name of the Enterprise"
            }
          },
          "required": [
            "enterprise_name"
          ]
        }
      },
      {
        "name": "ConvenientLiving.GovernmentServices.checkLicenseStatus",
        "description": "Check the validity status of various licenses (such as driver's license)",
        "parameters": {
          "type": "object",
          "properties": {
            "license_type": {
              "type": "string",
              "description": "Type of licence Trainee attorneys"
            },
            "license_number": {
              "type": "string",
              "description": "License number"
            }
          },
          "required": [
            "license_type",
            "license_number"
          ]
        }
      },
      {
        "name": "ConvenientLiving.FoodDelivery.getRestaurantLicense",
        "description": "Get licensing info for select restaurants",
        "parameters": {
          "type": "object",
          "properties": {
            "restaurant_name": {
              "type": "string",
              "description": "Name of the restaurant"
            }
          },
          "required": [
            "restaurant_name"
          ]
        }
      }
    ],
    "single_tool": [
      {
        "name": "ConvenientLiving.GovernmentServices.checkLicenseStatus",
        "description": "Check the validity status of various licenses (such as driver's license)",
        "parameters": {
          "type": "object",
          "properties": {
            "license_type": {
              "type": "string",
              "description": "Type of licence Trainee attorneys"
            },
            "license_number": {
              "type": "string",
              "description": "License number"
            }
          },
          "required": [
            "license_type",
            "license_number"
          ]
        }
      }
    ],
    "id": 92
  },
  {
    "messages": [
      {
        "role": "user",
        "content": "Can I still use this ID?"
      },
      {
        "role": "function call",
        "content": {
          "name": "ConvenientLiving.GovernmentServices.checkLicenseStatus",
          "arguments": {}
        }
      },
      {
        "role": "assistant",
        "content": "What type of license status do you need to check"
      },
      {
        "role": "user",
        "content": "I need to check the validity of my passport.I'm sorry, Type of licence Trainee attorneys is Job Licence. "
      },
      {
        "role": "function call",
        "content": {
          "name": "ConvenientLiving.GovernmentServices.checkLicenseStatus",
          "arguments": {
            "license_type": "Job Licence"
          }
        }
      }
    ],
    "multiple_tools": [
      {
        "name": "OfficeSoftware.Documents.renameDocument",
        "description": "Rename the specified document",
        "parameters": {
          "type": "object",
          "properties": {
            "document_name": {
              "type": "string",
              "description": "Document name to rename, required"
            },
            "new_document_name": {
              "type": "string",
              "description": "New document name, required"
            }
          },
          "required": [
            "document_name",
            "new_document_name"
          ]
        }
      },
      {
        "name": "SocialCommunication.SocialMedia.updateMediumInfo",
        "description": "Edit profile information",
        "parameters": {
          "type": "object",
          "properties": {
            "medium_name": {
              "type": "string",
              "description": "Media name"
            },
            "new_nickname": {
              "type": "string",
              "description": "Updated nickname"
            }
          },
          "required": [
            "medium_name",
            "new_nickname"
          ]
        }
      },
      {
        "name": "ConvenientLiving.GovernmentServices.checkLicenseStatus",
        "description": "Check the validity status of various licenses (such as driver's license)",
        "parameters": {
          "type": "object",
          "properties": {
            "license_type": {
              "type": "string",
              "description": "Type of licence Trainee attorneys"
            },
            "license_number": {
              "type": "string",
              "description": "License number"
            }
          },
          "required": [
            "license_type",
            "license_number"
          ]
        }
      },
      {
        "name": "SystemTools.SystemSettings.modifyuserAccounts",
        "description": "Modify the current user's information",
        "parameters": {
          "type": "object",
          "properties": {
            "phone_number": {
              "type": "string",
              "description": "Phone No."
            },
            "nickname": {
              "type": "string",
              "description": "Nickname"
            }
          },
          "required": [
            "phone_number",
            "nickname"
          ]
        }
      },
      {
        "name": "Finance.Payment.updatePayUserInfo",
        "description": "Update account user information",
        "parameters": {
          "type": "object",
          "properties": {
            "user_name": {
              "type": "string",
              "description": "username"
            },
            "phone": {
              "type": "string",
              "description": "User's phone number"
            },
            "address": {
              "type": "string",
              "description": "User Address"
            }
          },
          "required": [
            "user_name",
            "phone",
            "address"
          ]
        }
      }
    ],
    "single_tool": [
      {
        "name": "ConvenientLiving.GovernmentServices.checkLicenseStatus",
        "description": "Check the validity status of various licenses (such as driver's license)",
        "parameters": {
          "type": "object",
          "properties": {
            "license_type": {
              "type": "string",
              "description": "Type of licence Trainee attorneys"
            },
            "license_number": {
              "type": "string",
              "description": "License number"
            }
          },
          "required": [
            "license_type",
            "license_number"
          ]
        }
      }
    ],
    "id": 93
  },
  {
    "messages": [
      {
        "role": "user",
        "content": "Take a look at the specifics of the position"
      },
      {
        "role": "function call",
        "content": {
          "name": "ConvenientLiving.JobRecruitment.getJobDetails",
          "arguments": {}
        }
      },
      {
        "role": "assistant",
        "content": "Please provide a job title"
      },
      {
        "role": "user",
        "content": "Front-end Development EngineerI'm sorry, Position name is Product Manager. "
      },
      {
        "role": "function call",
        "content": {
          "name": "ConvenientLiving.JobRecruitment.getJobDetails",
          "arguments": {
            "job_name": "Product Manager"
          }
        }
      }
    ],
    "multiple_tools": [
      {
        "name": "Navigation.TaxiCarRental.searchCarRental",
        "description": "See cars available in your location",
        "parameters": {
          "type": "object",
          "properties": {
            "location": {
              "type": "string",
              "description": "Pick-up from"
            },
            "start_time": {
              "type": "string",
              "description": "Start Time "
            },
            "end_time": {
              "type": "string",
              "description": "drop-off date"
            }
          },
          "required": [
            "location",
            "start_time",
            "end_time"
          ]
        }
      },
      {
        "name": "Finance.Stocks.getStockPosition",
        "description": "Query the position status of designated stocks",
        "parameters": {
          "type": "object",
          "properties": {
            "stock_code": {
              "type": "string",
              "description": "Ticker"
            },
            "stock_name": {
              "type": "string",
              "description": "Stock Key Name"
            }
          },
          "required": [
            "stock_code",
            "stock_name"
          ]
        }
      },
      {
        "name": "ConvenientLiving.JobRecruitment.getJobDetails",
        "description": "Get job-specific details based on job relevance",
        "parameters": {
          "type": "object",
          "properties": {
            "job_name": {
              "type": "string",
              "description": "Position name"
            },
            "company_name": {
              "type": "string",
              "description": "Company name"
            }
          },
          "required": [
            "job_name",
            "company_name"
          ]
        }
      },
      {
        "name": "UtilityTools.Calendar.viewCalendareschedule",
        "description": "View information for a specific schedule",
        "parameters": {
          "type": "object",
          "properties": {
            "date_name": {
              "type": "string",
              "description": "Visiting program name"
            },
            "start_date": {
              "type": "string",
              "description": "Schedule start time; default current date"
            },
            "end_date": {
              "type": "string",
              "description": "Schedule end time; do not write the default start time 24 o'clock on the same day"
            },
            "schedule": {
              "type": "string",
              "description": "Schedule Related Descriptions"
            }
          },
          "required": [
            "date_name",
            "start_date",
            "end_date",
            "schedule"
          ]
        }
      },
      {
        "name": "SocialCommunication.Calling.queryPhoneCallCharges",
        "description": "View charges for this or a recent call",
        "parameters": {
          "type": "object",
          "properties": {
            "query_period": {
              "type": "string",
              "description": "The time period of the query, such as this month, this week, etc."
            }
          },
          "required": [
            "query_period"
          ]
        }
      }
    ],
    "single_tool": [
      {
        "name": "ConvenientLiving.JobRecruitment.getJobDetails",
        "description": "Get job-specific details based on job relevance",
        "parameters": {
          "type": "object",
          "properties": {
            "job_name": {
              "type": "string",
              "description": "Position name"
            },
            "company_name": {
              "type": "string",
              "description": "Company name"
            }
          },
          "required": [
            "job_name",
            "company_name"
          ]
        }
      }
    ],
    "id": 96
  },
  {
    "messages": [
      {
        "role": "user",
        "content": "What exactly is this position?"
      },
      {
        "role": "function call",
        "content": {
          "name": "ConvenientLiving.JobRecruitment.getJobDetails",
          "arguments": {}
        }
      },
      {
        "role": "assistant",
        "content": "Please provide a job title"
      },
      {
        "role": "user",
        "content": "Product ManagerI'm sorry, Position name is Front-end development. "
      },
      {
        "role": "function call",
        "content": {
          "name": "ConvenientLiving.JobRecruitment.getJobDetails",
          "arguments": {
            "job_name": "Front-end development"
          }
        }
      }
    ],
    "multiple_tools": [
      {
        "name": "Finance.Stocks.getStockPosition",
        "description": "Query the position status of designated stocks",
        "parameters": {
          "type": "object",
          "properties": {
            "stock_code": {
              "type": "string",
              "description": "Ticker"
            },
            "stock_name": {
              "type": "string",
              "description": "Stock Key Name"
            }
          },
          "required": [
            "stock_code",
            "stock_name"
          ]
        }
      },
      {
        "name": "ConvenientLiving.JobRecruitment.checkJobPositionAvailability",
        "description": "Check if a specific position is still being recruited",
        "parameters": {
          "type": "object",
          "properties": {
            "job_name": {
              "type": "string",
              "description": "Position name"
            },
            "company_name": {
              "type": "string",
              "description": "Company name"
            }
          },
          "required": [
            "job_name",
            "company_name"
          ]
        }
      },
      {
        "name": "ConvenientLiving.JobRecruitment.getJobDetails",
        "description": "Get job-specific details based on job relevance",
        "parameters": {
          "type": "object",
          "properties": {
            "job_name": {
              "type": "string",
              "description": "Position name"
            },
            "company_name": {
              "type": "string",
              "description": "Company name"
            }
          },
          "required": [
            "job_name",
            "company_name"
          ]
        }
      },
      {
        "name": "OfficeSoftware.Conferencing.updateParticipantStatus",
        "description": "Update the status of assigned participants in the meeting",
        "parameters": {
          "type": "object",
          "properties": {
            "meeting_id": {
              "type": "string",
              "description": "Conference No."
            },
            "title": {
              "type": "string",
              "description": "Meeting Title:"
            },
            "time": {
              "type": "string",
              "description": "Meeting Date"
            },
            "status": {
              "type": "string",
              "description": "Person Status"
            }
          },
          "required": [
            "meeting_id",
            "title",
            "time",
            "status"
          ]
        }
      },
      {
        "name": "ConvenientLiving.GovernmentServices.checkImmigrationStatus",
        "description": "Inquire about an individual's immigration status",
        "parameters": {
          "type": "object",
          "properties": {
            "passport_number": {
              "type": "string",
              "description": "Pasaport No."
            },
            "full_name": {
              "type": "string",
              "description": "User name, default user himself"
            }
          },
          "required": [
            "passport_number",
            "full_name"
          ]
        }
      }
    ],
    "single_tool": [
      {
        "name": "ConvenientLiving.JobRecruitment.getJobDetails",
        "description": "Get job-specific details based on job relevance",
        "parameters": {
          "type": "object",
          "properties": {
            "job_name": {
              "type": "string",
              "description": "Position name"
            },
            "company_name": {
              "type": "string",
              "description": "Company name"
            }
          },
          "required": [
            "job_name",
            "company_name"
          ]
        }
      }
    ],
    "id": 97
  },
  {
    "messages": [
      {
        "role": "user",
        "content": "Submit an application for a position you want to be interviewed for"
      },
      {
        "role": "function call",
        "content": {
          "name": "ConvenientLiving.JobRecruitment.applyForJob",
          "arguments": {}
        }
      },
      {
        "role": "assistant",
        "content": "Please provide a job title"
      },
      {
        "role": "user",
        "content": "CFOI'm sorry, Position name is Product Manager. "
      },
      {
        "role": "function call",
        "content": {
          "name": "ConvenientLiving.JobRecruitment.applyForJob",
          "arguments": {
            "job_name": "Product Manager"
          }
        }
      },
      {
        "role": "assistant",
        "content": "Please provide a company name"
      },
      {
        "role": "user",
        "content": "Global Investment Group"
      },
      {
        "role": "function call",
        "content": {
          "name": "ConvenientLiving.JobRecruitment.applyForJob",
          "arguments": {
            "job_name": "Product Manager",
            "company_name": "Global Investment Group"
          }
        }
      }
    ],
    "multiple_tools": [
      {
        "name": "SocialCommunication.Community.markCommunityNotificationRead",
        "description": "Mark notifications for the specified community as read (defaults to all read)",
        "parameters": {
          "type": "object",
          "properties": {
            "community_name": {
              "type": "string",
              "description": "The name of the community to be notified"
            },
            "notification_name": {
              "type": "string",
              "description": "Notifications to mark as read"
            }
          },
          "required": [
            "community_name",
            "notification_name"
          ]
        }
      },
      {
        "name": "ConvenientLiving.JobRecruitment.applyForJob",
        "description": "Submitting an Application to a Designated Position",
        "parameters": {
          "type": "object",
          "properties": {
            "job_name": {
              "type": "string",
              "description": "Position name"
            },
            "company_name": {
              "type": "string",
              "description": "Company name"
            }
          },
          "required": [
            "job_name",
            "company_name"
          ]
        }
      },
      {
        "name": "SocialCommunication.SocialMedia.collectMediumTrends",
        "description": "Favorite specified activity in specified media",
        "parameters": {
          "type": "object",
          "properties": {
            "medium_name": {
              "type": "string",
              "description": "Media name"
            },
            "correlation": {
              "type": "string",
              "description": "Dynamic Related Content"
            },
            "publisher": {
              "type": "string",
              "description": "Posted by/publisher?"
            },
            "publish_time": {
              "type": "string",
              "description": "Release Date"
            }
          },
          "required": [
            "medium_name",
            "correlation",
            "publisher",
            "publish_time"
          ]
        }
      },
      {
        "name": "ConvenientLiving.JobRecruitment.collectJob",
        "description": "Favorite posts of interest",
        "parameters": {
          "type": "object",
          "properties": {
            "job_name": {
              "type": "string",
              "description": "Position name"
            },
            "company_name": {
              "type": "string",
              "description": "Company name"
            }
          },
          "required": [
            "job_name",
            "company_name"
          ]
        }
      },
      {
        "name": "NewsMagazines.NewspapersMagazines.collectMagazine",
        "description": "Collect magazines or articles by name or journal",
        "parameters": {
          "type": "object",
          "properties": {
            "name": {
              "type": "string",
              "description": "Magazine Name"
            },
            "issue": {
              "type": "string",
              "description": "Number of periods"
            }
          },
          "required": [
            "name",
            "issue"
          ]
        }
      }
    ],
    "single_tool": [
      {
        "name": "ConvenientLiving.JobRecruitment.applyForJob",
        "description": "Submitting an Application to a Designated Position",
        "parameters": {
          "type": "object",
          "properties": {
            "job_name": {
              "type": "string",
              "description": "Position name"
            },
            "company_name": {
              "type": "string",
              "description": "Company name"
            }
          },
          "required": [
            "job_name",
            "company_name"
          ]
        }
      }
    ],
    "id": 98
  },
  {
    "messages": [
      {
        "role": "user",
        "content": "Submit an application to that position"
      },
      {
        "role": "function call",
        "content": {
          "name": "ConvenientLiving.JobRecruitment.applyForJob",
          "arguments": {}
        }
      },
      {
        "role": "assistant",
        "content": "Please provide the job title you wish to apply for"
      },
      {
        "role": "user",
        "content": "Product ManagerI'm sorry, Position name is Data analyst . "
      },
      {
        "role": "function call",
        "content": {
          "name": "ConvenientLiving.JobRecruitment.applyForJob",
          "arguments": {
            "job_name": "Data analyst "
          }
        }
      }
    ],
    "multiple_tools": [
      {
        "name": "Navigation.TrainTickets.addTrainWaitlistOrder",
        "description": "User submits train ticket standby order",
        "parameters": {
          "type": "object",
          "properties": {
            "train_number": {
              "type": "string",
              "description": "Number of trips to book; select all by default, up to 6"
            },
            "passenger_name": {
              "type": "string",
              "description": "Rider's name"
            },
            "passenger_id": {
              "type": "string",
              "description": "Rider ID number"
            },
            "ride_date": {
              "type": "string",
              "description": "Trip date in YYYY-MM-DD format"
            },
            "departure_station": {
              "type": "string",
              "description": "Departure Station"
            },
            "destination_station": {
              "type": "string",
              "description": "arrival station"
            },
            "seat_type": {
              "type": "string",
              "description": "Seat Type"
            }
          },
          "required": [
            "train_number",
            "passenger_name",
            "passenger_id",
            "ride_date",
            "departure_station",
            "destination_station",
            "seat_type"
          ]
        }
      },
      {
        "name": "SocialCommunication.SocialMedia.collectMediumTrends",
        "description": "Favorite specified activity in specified media",
        "parameters": {
          "type": "object",
          "properties": {
            "medium_name": {
              "type": "string",
              "description": "Media name"
            },
            "correlation": {
              "type": "string",
              "description": "Dynamic Related Content"
            },
            "publisher": {
              "type": "string",
              "description": "Posted by/publisher?"
            },
            "publish_time": {
              "type": "string",
              "description": "Release Date"
            }
          },
          "required": [
            "medium_name",
            "correlation",
            "publisher",
            "publish_time"
          ]
        }
      },
      {
        "name": "ConvenientLiving.JobRecruitment.applyForJob",
        "description": "Submitting an Application to a Designated Position",
        "parameters": {
          "type": "object",
          "properties": {
            "job_name": {
              "type": "string",
              "description": "Position name"
            },
            "company_name": {
              "type": "string",
              "description": "Company name"
            }
          },
          "required": [
            "job_name",
            "company_name"
          ]
        }
      },
      {
        "name": "MusicRadio.Karaoke.publishRecord",
        "description": "Publish recorded or uploaded songs",
        "parameters": {
          "type": "object",
          "properties": {
            "name": {
              "type": "string",
              "description": "Song Name"
            }
          },
          "required": [
            "name"
          ]
        }
      },
      {
        "name": "ConvenientLiving.JobRecruitment.collectJob",
        "description": "Favorite posts of interest",
        "parameters": {
          "type": "object",
          "properties": {
            "job_name": {
              "type": "string",
              "description": "Position name"
            },
            "company_name": {
              "type": "string",
              "description": "Company name"
            }
          },
          "required": [
            "job_name",
            "company_name"
          ]
        }
      }
    ],
    "single_tool": [
      {
        "name": "ConvenientLiving.JobRecruitment.applyForJob",
        "description": "Submitting an Application to a Designated Position",
        "parameters": {
          "type": "object",
          "properties": {
            "job_name": {
              "type": "string",
              "description": "Position name"
            },
            "company_name": {
              "type": "string",
              "description": "Company name"
            }
          },
          "required": [
            "job_name",
            "company_name"
          ]
        }
      }
    ],
    "id": 99
  }
]