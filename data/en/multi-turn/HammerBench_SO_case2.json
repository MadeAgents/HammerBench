[
  {
    "messages": [
      {
        "role": "user",
        "content": "Check if my car has any illegal records"
      },
      {
        "role": "function call",
        "content": {
          "name": "Navigation.TrafficViolations.queryViolation",
          "arguments": {}
        }
      },
      {
        "role": "assistant",
        "content": "What city is the violation located in?"
      },
      {
        "role": "user",
        "content": "The violating city is Guangzhou."
      },
      {
        "role": "function call",
        "content": {
          "name": "Navigation.TrafficViolations.queryViolation",
          "arguments": {
            "city": "Guangzhou"
          }
        }
      },
      {
        "role": "assistant",
        "content": "Please provide the license plate number"
      },
      {
        "role": "user",
        "content": "It was wrong before. Violating city should be Shanghai"
      },
      {
        "role": "function call",
        "content": {
          "name": "Navigation.TrafficViolations.queryViolation",
          "arguments": {
            "city": "Shanghai"
          }
        }
      },
      {
        "role": "assistant",
        "content": "Please provide the license plate number"
      },
      {
        "role": "user",
        "content": "My license plate number is Yue B67890."
      },
      {
        "role": "function call",
        "content": {
          "name": "Navigation.TrafficViolations.queryViolation",
          "arguments": {
            "city": "Shanghai",
            "plate_number": "Yue B67890"
          }
        }
      }
    ],
    "multiple_tools": [
      {
        "name": "Health.HealthManagement.searchDietRecord",
        "description": "Search dietary records by food name, type of meal, etc.",
        "parameters": {
          "type": "object",
          "properties": {
            "food_name": {
              "type": "string",
              "description": "Food Name"
            },
            "meal_type": {
              "type": "string",
              "description": "Types of meals, such as breakfast, lunch, dinner, or add-ons"
            },
            "time": {
              "type": "string",
              "description": "Meal Time"
            }
          },
          "required": [
            "food_name",
            "meal_type",
            "time"
          ]
        }
      },
      {
        "name": "Navigation.TrafficViolations.queryViolation",
        "description": "Query traffic violation records by conditions",
        "parameters": {
          "type": "object",
          "properties": {
            "plate_number": {
              "type": "string",
              "description": "License plate number"
            },
            "city": {
              "type": "string",
              "description": "Violating city"
            },
            "time": {
              "type": "string",
              "description": "Billing Time"
            }
          },
          "required": [
            "plate_number",
            "city",
            "time"
          ]
        }
      },
      {
        "name": "OfficeSoftware.CloudStorage.netdiskGetUploadFilesRecords",
        "description": "Get a list of uploaded files/folders records in Cloud Drive",
        "parameters": {
          "type": "object",
          "properties": {},
          "required": []
        }
      },
      {
        "name": "Travel.HotelServices.getHotelReservationHistory",
        "description": "Get a user's hotel booking history",
        "parameters": {
          "type": "object",
          "properties": {
            "start_date": {
              "type": "string",
              "description": "Start Time "
            },
            "end_date": {
              "type": "string",
              "description": "End Time"
            }
          },
          "required": [
            "start_date",
            "end_date"
          ]
        }
      },
      {
        "name": "Health.MedicalServices.getPatientMedicalRecord",
        "description": "Obtain the patient's medical record information based on the patient's name, etc.",
        "parameters": {
          "type": "object",
          "properties": {
            "patient_name": {
              "type": "string",
              "description": "Patient Name"
            }
          },
          "required": [
            "patient_name"
          ]
        }
      }
    ],
    "single_tool": [
      {
        "name": "Navigation.TrafficViolations.queryViolation",
        "description": "Query traffic violation records by conditions",
        "parameters": {
          "type": "object",
          "properties": {
            "plate_number": {
              "type": "string",
              "description": "License plate number"
            },
            "city": {
              "type": "string",
              "description": "Violating city"
            },
            "time": {
              "type": "string",
              "description": "Billing Time"
            }
          },
          "required": [
            "plate_number",
            "city",
            "time"
          ]
        }
      }
    ],
    "id": 0
  },
  {
    "messages": [
      {
        "role": "user",
        "content": "See what's going on with my traffic violations"
      },
      {
        "role": "function call",
        "content": {
          "name": "Navigation.TrafficViolations.queryViolation",
          "arguments": {}
        }
      },
      {
        "role": "assistant",
        "content": "Please provide the city where the violation occurred"
      },
      {
        "role": "user",
        "content": "The violation occurred in Guangzhou."
      },
      {
        "role": "function call",
        "content": {
          "name": "Navigation.TrafficViolations.queryViolation",
          "arguments": {
            "city": "Guangzhou"
          }
        }
      },
      {
        "role": "assistant",
        "content": "Please provide the license plate number"
      },
      {
        "role": "user",
        "content": "It was wrong before. Violating city should be Shanghai"
      },
      {
        "role": "function call",
        "content": {
          "name": "Navigation.TrafficViolations.queryViolation",
          "arguments": {
            "city": "Shanghai"
          }
        }
      },
      {
        "role": "assistant",
        "content": "Please provide the license plate number"
      },
      {
        "role": "user",
        "content": "My license plate number is Yue B6789X."
      },
      {
        "role": "function call",
        "content": {
          "name": "Navigation.TrafficViolations.queryViolation",
          "arguments": {
            "city": "Shanghai",
            "plate_number": "Yue B6789X"
          }
        }
      }
    ],
    "multiple_tools": [
      {
        "name": "Navigation.TrafficViolations.viewViolationDetail",
        "description": "View details of the specified traffic violation record",
        "parameters": {
          "type": "object",
          "properties": {
            "plate_number": {
              "type": "string",
              "description": "License plate number"
            },
            "city": {
              "type": "string",
              "description": "Violating city"
            },
            "time": {
              "type": "string",
              "description": "Billing Time"
            }
          },
          "required": [
            "plate_number",
            "city",
            "time"
          ]
        }
      },
      {
        "name": "Navigation.TrafficViolations.viewTrafficEvent",
        "description": "View notifications about traffic events",
        "parameters": {
          "type": "object",
          "properties": {
            "keyword": {
              "type": "string",
              "description": "Additional conditions, such as area of occurrence, duration of impact, etc."
            }
          },
          "required": [
            "keyword"
          ]
        }
      },
      {
        "name": "Navigation.TrafficViolations.queryViolation",
        "description": "Query traffic violation records by conditions",
        "parameters": {
          "type": "object",
          "properties": {
            "plate_number": {
              "type": "string",
              "description": "License plate number"
            },
            "city": {
              "type": "string",
              "description": "Violating city"
            },
            "time": {
              "type": "string",
              "description": "Billing Time"
            }
          },
          "required": [
            "plate_number",
            "city",
            "time"
          ]
        }
      },
      {
        "name": "Navigation.Bicycles.viewMileage",
        "description": "View cumulative kilometers cycled",
        "parameters": {
          "type": "object",
          "properties": {},
          "required": []
        }
      },
      {
        "name": "ConvenientLiving.GovernmentServices.queryTrafficViolations",
        "description": "Check the traffic violation information of the user's vehicle",
        "parameters": {
          "type": "object",
          "properties": {
            "plate_number": {
              "type": "string",
              "description": "Vehicle license plate"
            }
          },
          "required": [
            "plate_number"
          ]
        }
      }
    ],
    "single_tool": [
      {
        "name": "Navigation.TrafficViolations.queryViolation",
        "description": "Query traffic violation records by conditions",
        "parameters": {
          "type": "object",
          "properties": {
            "plate_number": {
              "type": "string",
              "description": "License plate number"
            },
            "city": {
              "type": "string",
              "description": "Violating city"
            },
            "time": {
              "type": "string",
              "description": "Billing Time"
            }
          },
          "required": [
            "plate_number",
            "city",
            "time"
          ]
        }
      }
    ],
    "id": 1
  },
  {
    "messages": [
      {
        "role": "user",
        "content": "Share infringement information"
      },
      {
        "role": "function call",
        "content": {
          "name": "Navigation.TrafficViolations.shareViolationDetail",
          "arguments": {}
        }
      },
      {
        "role": "assistant",
        "content": "What city is the violation located in?"
      },
      {
        "role": "user",
        "content": "The violation occurred in Guangzhou."
      },
      {
        "role": "function call",
        "content": {
          "name": "Navigation.TrafficViolations.shareViolationDetail",
          "arguments": {
            "city": "Guangzhou"
          }
        }
      },
      {
        "role": "assistant",
        "content": "Please provide a way to share"
      },
      {
        "role": "user",
        "content": "Share the link via email."
      },
      {
        "role": "function call",
        "content": {
          "name": "Navigation.TrafficViolations.shareViolationDetail",
          "arguments": {
            "city": "Guangzhou",
            "media": "Email"
          }
        }
      },
      {
        "role": "assistant",
        "content": "Please provide recipients for the shared content"
      },
      {
        "role": "user",
        "content": "It was wrong before. Violating city should be Chongqing"
      },
      {
        "role": "function call",
        "content": {
          "name": "Navigation.TrafficViolations.shareViolationDetail",
          "arguments": {
            "city": "Chongqing",
            "media": "Email"
          }
        }
      },
      {
        "role": "assistant",
        "content": "Please provide recipients for the shared content"
      },
      {
        "role": "user",
        "content": "The recipient is Manager Zhang."
      },
      {
        "role": "function call",
        "content": {
          "name": "Navigation.TrafficViolations.shareViolationDetail",
          "arguments": {
            "city": "Chongqing",
            "media": "Email",
            "name": "Manager Zhang"
          }
        }
      },
      {
        "role": "assistant",
        "content": "Please provide the license plate number"
      },
      {
        "role": "user",
        "content": "My license plate number is Yue B6789X."
      },
      {
        "role": "function call",
        "content": {
          "name": "Navigation.TrafficViolations.shareViolationDetail",
          "arguments": {
            "city": "Chongqing",
            "media": "Email",
            "name": "Manager Zhang",
            "plate_number": "Yue B6789X"
          }
        }
      },
      {
        "role": "assistant",
        "content": "When is the order opening time?"
      },
      {
        "role": "user",
        "content": "It is April 1, 2023."
      },
      {
        "role": "function call",
        "content": {
          "name": "Navigation.TrafficViolations.shareViolationDetail",
          "arguments": {
            "city": "Chongqing",
            "media": "Email",
            "name": "Manager Zhang",
            "plate_number": "Yue B6789X",
            "time": "April 1, 2023"
          }
        }
      }
    ],
    "multiple_tools": [
      {
        "name": "ConvenientLiving.UtilityPayments.queryBillInfo",
        "description": "Used to get billing details for utilities, etc.",
        "parameters": {
          "type": "object",
          "properties": {
            "service_type": {
              "type": "string",
              "description": "Types of paid services, such as utilities, gas, etc."
            },
            "user_name": {
              "type": "string",
              "description": "User Name"
            },
            "time": {
              "type": "string",
              "description": "Bill Time"
            }
          },
          "required": [
            "service_type",
            "user_name",
            "time"
          ]
        }
      },
      {
        "name": "ConvenientLiving.FoodDelivery.searchRestaurantDiscounts",
        "description": "Enter keywords to search for deals",
        "parameters": {
          "type": "object",
          "properties": {
            "keyword": {
              "type": "string",
              "description": "Keywords related to offers"
            }
          },
          "required": [
            "keyword"
          ]
        }
      },
      {
        "name": "OfficeSoftware.CloudStorage.viewNetdiskShare",
        "description": "View Drive Share",
        "parameters": {
          "type": "object",
          "properties": {},
          "required": []
        }
      },
      {
        "name": "Travel.ItineraryServices.shareTravelItinerary",
        "description": "Sharing travel itineraries to designated locations",
        "parameters": {
          "type": "object",
          "properties": {
            "name": {
              "type": "string",
              "description": "Trip name or keyword"
            },
            "to": {
              "type": "string",
              "description": "Destination app name"
            }
          },
          "required": [
            "name",
            "to"
          ]
        }
      },
      {
        "name": "Navigation.TrafficViolations.shareViolationDetail",
        "description": "Share Designated Violation Information",
        "parameters": {
          "type": "object",
          "properties": {
            "plate_number": {
              "type": "string",
              "description": "License plate number"
            },
            "city": {
              "type": "string",
              "description": "Violating city"
            },
            "time": {
              "type": "string",
              "description": "Billing Time"
            },
            "media": {
              "type": "string",
              "description": "Ways to share"
            },
            "name": {
              "type": "string",
              "description": "Shared content recipients"
            }
          },
          "required": [
            "plate_number",
            "city",
            "time",
            "media",
            "name"
          ]
        }
      }
    ],
    "single_tool": [
      {
        "name": "Navigation.TrafficViolations.shareViolationDetail",
        "description": "Share Designated Violation Information",
        "parameters": {
          "type": "object",
          "properties": {
            "plate_number": {
              "type": "string",
              "description": "License plate number"
            },
            "city": {
              "type": "string",
              "description": "Violating city"
            },
            "time": {
              "type": "string",
              "description": "Billing Time"
            },
            "media": {
              "type": "string",
              "description": "Ways to share"
            },
            "name": {
              "type": "string",
              "description": "Shared content recipients"
            }
          },
          "required": [
            "plate_number",
            "city",
            "time",
            "media",
            "name"
          ]
        }
      }
    ],
    "id": 2
  },
  {
    "messages": [
      {
        "role": "user",
        "content": "How to pay traffic violation fines online?"
      },
      {
        "role": "function call",
        "content": {
          "name": "Navigation.TrafficViolations.payViolations",
          "arguments": {}
        }
      },
      {
        "role": "assistant",
        "content": "What city is the violation located in?"
      },
      {
        "role": "user",
        "content": "The violation occurred in Guangzhou."
      },
      {
        "role": "function call",
        "content": {
          "name": "Navigation.TrafficViolations.payViolations",
          "arguments": {
            "city": "Guangzhou"
          }
        }
      },
      {
        "role": "assistant",
        "content": "Please provide the license plate number"
      },
      {
        "role": "user",
        "content": "It was wrong before. Violating city should be Hangzhou"
      },
      {
        "role": "function call",
        "content": {
          "name": "Navigation.TrafficViolations.payViolations",
          "arguments": {
            "city": "Hangzhou"
          }
        }
      },
      {
        "role": "assistant",
        "content": "Please provide the license plate number"
      },
      {
        "role": "user",
        "content": "My license plate number is Yue B88888."
      },
      {
        "role": "function call",
        "content": {
          "name": "Navigation.TrafficViolations.payViolations",
          "arguments": {
            "city": "Hangzhou",
            "plate_number": "Yue B88888"
          }
        }
      },
      {
        "role": "assistant",
        "content": "When to start billing"
      },
      {
        "role": "user",
        "content": "Billing starts March 15, 2023 at 2pm."
      },
      {
        "role": "function call",
        "content": {
          "name": "Navigation.TrafficViolations.payViolations",
          "arguments": {
            "city": "Hangzhou",
            "plate_number": "Yue B88888",
            "time": "March 15, 2023"
          }
        }
      }
    ],
    "multiple_tools": [
      {
        "name": "Navigation.TrafficViolations.payViolations",
        "description": "Pay fines for violations online",
        "parameters": {
          "type": "object",
          "properties": {
            "plate_number": {
              "type": "string",
              "description": "License plate number"
            },
            "city": {
              "type": "string",
              "description": "Violating city"
            },
            "time": {
              "type": "string",
              "description": "Billing Time"
            }
          },
          "required": [
            "plate_number",
            "city",
            "time"
          ]
        }
      },
      {
        "name": "ConvenientLiving.UtilityPayments.getDueDate",
        "description": "Deadline for payment of fees for the acquisition of utilities, etc.",
        "parameters": {
          "type": "object",
          "properties": {
            "service_type": {
              "type": "string",
              "description": "Types of paid services, such as utilities, gas, etc."
            },
            "user_name": {
              "type": "string",
              "description": "User Name"
            }
          },
          "required": [
            "service_type",
            "user_name"
          ]
        }
      },
      {
        "name": "Finance.Funds.getFundSubscriptionFee",
        "description": "Query subscription fee information for designated funds",
        "parameters": {
          "type": "object",
          "properties": {
            "fund_name": {
              "type": "string",
              "description": "Fund name"
            },
            "fund_code": {
              "type": "string",
              "description": "Fund  Code"
            }
          },
          "required": [
            "fund_name",
            "fund_code"
          ]
        }
      },
      {
        "name": "Navigation.TaxiCarRental.issueTaxiInvoice",
        "description": "Invoicing taxi rides",
        "parameters": {
          "type": "object",
          "properties": {
            "time": {
              "type": "string",
              "description": "Order time"
            },
            "destination": {
              "type": "string",
              "description": "Destination"
            }
          },
          "required": [
            "time",
            "destination"
          ]
        }
      },
      {
        "name": "ConvenientLiving.UtilityPayments.payBill",
        "description": "Payment of utilities, etc.",
        "parameters": {
          "type": "object",
          "properties": {
            "service_type": {
              "type": "string",
              "description": "Types of paid services, such as utilities, gas, etc."
            },
            "user_name": {
              "type": "string",
              "description": "User Name"
            },
            "pay": {
              "type": "float",
              "description": "Contribution Amount, Default Billing Amount"
            },
            "address": {
              "type": "string",
              "description": "user address, default address"
            }
          },
          "required": [
            "service_type",
            "user_name",
            "pay",
            "address"
          ]
        }
      }
    ],
    "single_tool": [
      {
        "name": "Navigation.TrafficViolations.payViolations",
        "description": "Pay fines for violations online",
        "parameters": {
          "type": "object",
          "properties": {
            "plate_number": {
              "type": "string",
              "description": "License plate number"
            },
            "city": {
              "type": "string",
              "description": "Violating city"
            },
            "time": {
              "type": "string",
              "description": "Billing Time"
            }
          },
          "required": [
            "plate_number",
            "city",
            "time"
          ]
        }
      }
    ],
    "id": 3
  },
  {
    "messages": [
      {
        "role": "user",
        "content": "I want to report a traffic accident, there are no specific details, just want to let the relevant departments know."
      },
      {
        "role": "function call",
        "content": {
          "name": "Navigation.TrafficViolations.reportAccident",
          "arguments": {}
        }
      },
      {
        "role": "assistant",
        "content": "Where was the accident?"
      },
      {
        "role": "user",
        "content": "The location of the accident is near Zhongshan Mausoleum in Nanjing."
      },
      {
        "role": "function call",
        "content": {
          "name": "Navigation.TrafficViolations.reportAccident",
          "arguments": {
            "location": "Near Zhongshan Mausoleum in Nanjing"
          }
        }
      },
      {
        "role": "assistant",
        "content": "Please provide the license plate number"
      },
      {
        "role": "user",
        "content": "It was wrong before. Site should be Near Chaoyang Park, Beijing"
      },
      {
        "role": "function call",
        "content": {
          "name": "Navigation.TrafficViolations.reportAccident",
          "arguments": {
            "location": "Near Chaoyang Park, Beijing"
          }
        }
      },
      {
        "role": "assistant",
        "content": "Please provide the license plate number"
      },
      {
        "role": "user",
        "content": "My license plate number is Su E67890, there is a small problem."
      },
      {
        "role": "function call",
        "content": {
          "name": "Navigation.TrafficViolations.reportAccident",
          "arguments": {
            "location": "Near Chaoyang Park, Beijing",
            "plate_number": "Su E67890"
          }
        }
      }
    ],
    "multiple_tools": [
      {
        "name": "ConvenientLiving.GovernmentServices.reportTaxEvasion",
        "description": "Reporting tax evasion",
        "parameters": {
          "type": "object",
          "properties": {
            "company_name": {
              "type": "string",
              "description": "Company name"
            },
            "description": {
              "type": "string",
              "description": "Problem description"
            }
          },
          "required": [
            "company_name",
            "description"
          ]
        }
      },
      {
        "name": "ConvenientLiving.AutoLife.reportCarProblem",
        "description": "Report a malfunction or problem with your car to the platform.",
        "parameters": {
          "type": "object",
          "properties": {
            "brand": {
              "type": "string",
              "description": "Car Brand"
            },
            "problem_description": {
              "type": "string",
              "description": "Problem description"
            },
            "name": {
              "type": "string",
              "description": "Contact person"
            }
          },
          "required": [
            "brand",
            "problem_description",
            "name"
          ]
        }
      },
      {
        "name": "SocialCommunication.Community.reportCommunityPost",
        "description": "Report a post from a specific community",
        "parameters": {
          "type": "object",
          "properties": {
            "community_name": {
              "type": "string",
              "description": "The name of the community where the post is to be reported"
            },
            "comment_name": {
              "type": "string",
              "description": "Post title to report"
            }
          },
          "required": [
            "community_name",
            "comment_name"
          ]
        }
      },
      {
        "name": "Navigation.TrafficViolations.reportAccident",
        "description": "Report traffic accidents and violations",
        "parameters": {
          "type": "object",
          "properties": {
            "plate_number": {
              "type": "string",
              "description": "License plate number"
            },
            "location": {
              "type": "string",
              "description": "Site"
            }
          },
          "required": [
            "plate_number",
            "location"
          ]
        }
      },
      {
        "name": "Navigation.Bicycles.submitBikeFault",
        "description": "Submit a bicycle malfunction",
        "parameters": {
          "type": "object",
          "properties": {
            "number": {
              "type": "string",
              "description": "Vehicle number"
            }
          },
          "required": [
            "number"
          ]
        }
      }
    ],
    "single_tool": [
      {
        "name": "Navigation.TrafficViolations.reportAccident",
        "description": "Report traffic accidents and violations",
        "parameters": {
          "type": "object",
          "properties": {
            "plate_number": {
              "type": "string",
              "description": "License plate number"
            },
            "location": {
              "type": "string",
              "description": "Site"
            }
          },
          "required": [
            "plate_number",
            "location"
          ]
        }
      }
    ],
    "id": 4
  },
  {
    "messages": [
      {
        "role": "user",
        "content": "Report a traffic accident"
      },
      {
        "role": "function call",
        "content": {
          "name": "Navigation.TrafficViolations.reportAccident",
          "arguments": {}
        }
      },
      {
        "role": "assistant",
        "content": "Where was the accident?"
      },
      {
        "role": "user",
        "content": "The location of the accident is near Chang 'an Street."
      },
      {
        "role": "function call",
        "content": {
          "name": "Navigation.TrafficViolations.reportAccident",
          "arguments": {
            "location": "Changan Street"
          }
        }
      },
      {
        "role": "assistant",
        "content": "Please provide the license plate number"
      },
      {
        "role": "user",
        "content": "It was wrong before. Site should be Near Chaoyang Park, Beijing"
      },
      {
        "role": "function call",
        "content": {
          "name": "Navigation.TrafficViolations.reportAccident",
          "arguments": {
            "location": "Near Chaoyang Park, Beijing"
          }
        }
      },
      {
        "role": "assistant",
        "content": "Please provide the license plate number"
      },
      {
        "role": "user",
        "content": "My license plate number is Beijing C98765."
      },
      {
        "role": "function call",
        "content": {
          "name": "Navigation.TrafficViolations.reportAccident",
          "arguments": {
            "location": "Near Chaoyang Park, Beijing",
            "plate_number": "Beijing C98765"
          }
        }
      }
    ],
    "multiple_tools": [
      {
        "name": "SocialCommunication.Community.reportCommunityPost",
        "description": "Report a post from a specific community",
        "parameters": {
          "type": "object",
          "properties": {
            "community_name": {
              "type": "string",
              "description": "The name of the community where the post is to be reported"
            },
            "comment_name": {
              "type": "string",
              "description": "Post title to report"
            }
          },
          "required": [
            "community_name",
            "comment_name"
          ]
        }
      },
      {
        "name": "Navigation.Bicycles.submitBikeFault",
        "description": "Submit a bicycle malfunction",
        "parameters": {
          "type": "object",
          "properties": {
            "number": {
              "type": "string",
              "description": "Vehicle number"
            }
          },
          "required": [
            "number"
          ]
        }
      },
      {
        "name": "Navigation.TrafficViolations.reportAccident",
        "description": "Report traffic accidents and violations",
        "parameters": {
          "type": "object",
          "properties": {
            "plate_number": {
              "type": "string",
              "description": "License plate number"
            },
            "location": {
              "type": "string",
              "description": "Site"
            }
          },
          "required": [
            "plate_number",
            "location"
          ]
        }
      },
      {
        "name": "ConvenientLiving.AutoLife.reportCarProblem",
        "description": "Report a malfunction or problem with your car to the platform.",
        "parameters": {
          "type": "object",
          "properties": {
            "brand": {
              "type": "string",
              "description": "Car Brand"
            },
            "problem_description": {
              "type": "string",
              "description": "Problem description"
            },
            "name": {
              "type": "string",
              "description": "Contact person"
            }
          },
          "required": [
            "brand",
            "problem_description",
            "name"
          ]
        }
      },
      {
        "name": "ConvenientLiving.GovernmentServices.reportTaxEvasion",
        "description": "Reporting tax evasion",
        "parameters": {
          "type": "object",
          "properties": {
            "company_name": {
              "type": "string",
              "description": "Company name"
            },
            "description": {
              "type": "string",
              "description": "Problem description"
            }
          },
          "required": [
            "company_name",
            "description"
          ]
        }
      }
    ],
    "single_tool": [
      {
        "name": "Navigation.TrafficViolations.reportAccident",
        "description": "Report traffic accidents and violations",
        "parameters": {
          "type": "object",
          "properties": {
            "plate_number": {
              "type": "string",
              "description": "License plate number"
            },
            "location": {
              "type": "string",
              "description": "Site"
            }
          },
          "required": [
            "plate_number",
            "location"
          ]
        }
      }
    ],
    "id": 5
  },
  {
    "messages": [
      {
        "role": "user",
        "content": "Plan a route for me"
      },
      {
        "role": "function call",
        "content": {
          "name": "Navigation.MapNavigation.planNavigationRoute",
          "arguments": {}
        }
      },
      {
        "role": "assistant",
        "content": "Please provide the name or address of the departure location If there is no specific location your current location will be used"
      },
      {
        "role": "user",
        "content": "Shanghai Hongqiao Railway Station"
      },
      {
        "role": "function call",
        "content": {
          "name": "Navigation.MapNavigation.planNavigationRoute",
          "arguments": {
            "departure": "Shanghai Hongqiao Railway Station"
          }
        }
      },
      {
        "role": "assistant",
        "content": "Please provide a name or address for the destination"
      },
      {
        "role": "user",
        "content": "Shanghai Disneyland"
      },
      {
        "role": "function call",
        "content": {
          "name": "Navigation.MapNavigation.planNavigationRoute",
          "arguments": {
            "departure": "Shanghai Hongqiao Railway Station",
            "destination": "Shanghai Disneyland"
          }
        }
      },
      {
        "role": "assistant",
        "content": "What time is your departure? The default is the current time"
      },
      {
        "role": "user",
        "content": "My departure time is 10am."
      },
      {
        "role": "function call",
        "content": {
          "name": "Navigation.MapNavigation.planNavigationRoute",
          "arguments": {
            "departure": "Shanghai Hongqiao Railway Station",
            "destination": "Shanghai Disneyland",
            "time": "10am"
          }
        }
      },
      {
        "role": "assistant",
        "content": "How would you like to get around by car, public transport, bike, or on foot?"
      },
      {
        "role": "user",
        "content": "It was wrong before. Name or address of the destination should be Beijing South Railway Station"
      },
      {
        "role": "function call",
        "content": {
          "name": "Navigation.MapNavigation.planNavigationRoute",
          "arguments": {
            "departure": "Shanghai Hongqiao Railway Station",
            "destination": "Beijing South Railway Station",
            "time": "10am"
          }
        }
      },
      {
        "role": "assistant",
        "content": "How would you like to get around by car, public transport, bike, or on foot?"
      },
      {
        "role": "user",
        "content": "I choose to drive."
      },
      {
        "role": "function call",
        "content": {
          "name": "Navigation.MapNavigation.planNavigationRoute",
          "arguments": {
            "departure": "Shanghai Hongqiao Railway Station",
            "destination": "Beijing South Railway Station",
            "time": "10am",
            "mode": "DRIVING"
          }
        }
      }
    ],
    "multiple_tools": [
      {
        "name": "ConvenientLiving.FoodDelivery.getRestaurantOrderEstimatedDeliveryRoute",
        "description": "Get an estimated delivery route for a given order",
        "parameters": {
          "type": "object",
          "properties": {
            "order_name": {
              "type": "string",
              "description": "Name of the order"
            }
          },
          "required": [
            "order_name"
          ]
        }
      },
      {
        "name": "Navigation.MapNavigation.vehicleNavigationRoute",
        "description": "Specify a vehicle as a way to get around and search for a route",
        "parameters": {
          "type": "object",
          "properties": {
            "departure": {
              "type": "string",
              "description": "The name or address of the departure location, the default current location"
            },
            "destination": {
              "type": "string",
              "description": "Name or address of the destination"
            },
            "vehicle": {
              "type": "string",
              "description": "Specify how you want to travel"
            }
          },
          "required": [
            "departure",
            "destination",
            "vehicle"
          ]
        }
      },
      {
        "name": "SystemTools.SystemSettings.setSystemTurnOnFlashlight",
        "description": "Turn on flashlight",
        "parameters": {
          "type": "object",
          "properties": {},
          "required": []
        }
      },
      {
        "name": "SystemTools.SystemSettings.setSystemTurnOnScreen2TV",
        "description": "Turn on phone projection to TV",
        "parameters": {
          "type": "object",
          "properties": {},
          "required": []
        }
      },
      {
        "name": "Navigation.MapNavigation.planNavigationRoute",
        "description": "Search navigation routes by origin and destination",
        "parameters": {
          "type": "object",
          "properties": {
            "departure": {
              "type": "string",
              "description": "The name or address of the departure location, the default current location"
            },
            "destination": {
              "type": "string",
              "description": "Name or address of the destination"
            },
            "time": {
              "type": "string",
              "description": "Departure time, default current time"
            },
            "mode": {
              "type": "string",
              "description": "Getting around, by car, public transport, bike, or on foot, by default"
            },
            "preferred_route": {
              "type": "string",
              "description": "Preferred route type, such as direct, few transfers, etc., optional"
            }
          },
          "required": [
            "departure",
            "destination",
            "time",
            "mode",
            "preferred_route"
          ]
        }
      }
    ],
    "single_tool": [
      {
        "name": "Navigation.MapNavigation.planNavigationRoute",
        "description": "Search navigation routes by origin and destination",
        "parameters": {
          "type": "object",
          "properties": {
            "departure": {
              "type": "string",
              "description": "The name or address of the departure location, the default current location"
            },
            "destination": {
              "type": "string",
              "description": "Name or address of the destination"
            },
            "time": {
              "type": "string",
              "description": "Departure time, default current time"
            },
            "mode": {
              "type": "string",
              "description": "Getting around, by car, public transport, bike, or on foot, by default"
            },
            "preferred_route": {
              "type": "string",
              "description": "Preferred route type, such as direct, few transfers, etc., optional"
            }
          },
          "required": [
            "departure",
            "destination",
            "time",
            "mode",
            "preferred_route"
          ]
        }
      }
    ],
    "id": 10
  },
  {
    "messages": [
      {
        "role": "user",
        "content": "To share my travel plans"
      },
      {
        "role": "function call",
        "content": {
          "name": "Navigation.MapNavigation.shareTravelRoute",
          "arguments": {}
        }
      },
      {
        "role": "assistant",
        "content": "Where are you departing from If you are not sure you can use your current location"
      },
      {
        "role": "user",
        "content": "My starting place is the office."
      },
      {
        "role": "function call",
        "content": {
          "name": "Navigation.MapNavigation.shareTravelRoute",
          "arguments": {
            "departure": "Offices"
          }
        }
      },
      {
        "role": "assistant",
        "content": "Please provide a name or address for the destination"
      },
      {
        "role": "user",
        "content": "It was wrong before. The name or address of the departure location, the default current location should be Home"
      },
      {
        "role": "function call",
        "content": {
          "name": "Navigation.MapNavigation.shareTravelRoute",
          "arguments": {
            "departure": "Home"
          }
        }
      },
      {
        "role": "assistant",
        "content": "Please provide a name or address for the destination"
      },
      {
        "role": "user",
        "content": "Nearest cafe"
      },
      {
        "role": "function call",
        "content": {
          "name": "Navigation.MapNavigation.shareTravelRoute",
          "arguments": {
            "departure": "Home",
            "destination": "Nearest cafe"
          }
        }
      }
    ],
    "multiple_tools": [
      {
        "name": "SocialCommunication.Community.shareCommunityPost",
        "description": "Share a specific post to a specific medium or to someone",
        "parameters": {
          "type": "object",
          "properties": {
            "community_name": {
              "type": "string",
              "description": "The name of the community where the post is located"
            },
            "title": {
              "type": "string",
              "description": "Prev Post Caption"
            },
            "medium": {
              "type": "string",
              "description": "Share media"
            },
            "user_name": {
              "type": "string",
              "description": "Shared by"
            }
          },
          "required": [
            "community_name",
            "title",
            "medium",
            "user_name"
          ]
        }
      },
      {
        "name": "MusicRadio.Karaoke.shareKsongWorks",
        "description": "Share work based on song name",
        "parameters": {
          "type": "object",
          "properties": {
            "song_name": {
              "type": "string",
              "description": "Song Name"
            },
            "media": {
              "type": "string",
              "description": "Media"
            },
            "name": {
              "type": "string",
              "description": "Friend name"
            }
          },
          "required": [
            "song_name",
            "media",
            "name"
          ]
        }
      },
      {
        "name": "Navigation.MapNavigation.shareTravelRoute",
        "description": "Share travel plans or directions",
        "parameters": {
          "type": "object",
          "properties": {
            "departure": {
              "type": "string",
              "description": "The name or address of the departure location, the default current location"
            },
            "destination": {
              "type": "string",
              "description": "Name or address of the destination"
            },
            "to": {
              "type": "string",
              "description": "Ways to share, like social media, texting, etc."
            }
          },
          "required": [
            "departure",
            "destination",
            "to"
          ]
        }
      },
      {
        "name": "Health.HealthManagement.shareHealthPlan",
        "description": "Share a health plan",
        "parameters": {
          "type": "object",
          "properties": {
            "goal_title": {
              "type": "string",
              "description": "Target Headings"
            },
            "media": {
              "type": "string",
              "description": "Media"
            },
            "name": {
              "type": "string",
              "description": "Friend name"
            }
          },
          "required": [
            "goal_title",
            "media",
            "name"
          ]
        }
      },
      {
        "name": "UtilityTools.Memo.shareNotes",
        "description": "Share a memo",
        "parameters": {
          "type": "object",
          "properties": {
            "title": {
              "type": "string",
              "description": "Title"
            },
            "to": {
              "type": "string",
              "description": "Shared with"
            },
            "category": {
              "type": "string",
              "description": "Classify"
            }
          },
          "required": [
            "title",
            "to",
            "category"
          ]
        }
      }
    ],
    "single_tool": [
      {
        "name": "Navigation.MapNavigation.shareTravelRoute",
        "description": "Share travel plans or directions",
        "parameters": {
          "type": "object",
          "properties": {
            "departure": {
              "type": "string",
              "description": "The name or address of the departure location, the default current location"
            },
            "destination": {
              "type": "string",
              "description": "Name or address of the destination"
            },
            "to": {
              "type": "string",
              "description": "Ways to share, like social media, texting, etc."
            }
          },
          "required": [
            "departure",
            "destination",
            "to"
          ]
        }
      }
    ],
    "id": 11
  },
  {
    "messages": [
      {
        "role": "user",
        "content": "Find me a way. How do I get there?"
      },
      {
        "role": "function call",
        "content": {
          "name": "Navigation.MapNavigation.vehicleNavigationRoute",
          "arguments": {}
        }
      },
      {
        "role": "assistant",
        "content": "Please provide your departure location name or address If using your current location please confirm directly"
      },
      {
        "role": "user",
        "content": "People's Square"
      },
      {
        "role": "function call",
        "content": {
          "name": "Navigation.MapNavigation.vehicleNavigationRoute",
          "arguments": {
            "departure": "People's Square"
          }
        }
      },
      {
        "role": "assistant",
        "content": "Please provide your destination name or address"
      },
      {
        "role": "user",
        "content": "It was wrong before. The name or address of the departure location, the default current location should be Sydney Opera House"
      },
      {
        "role": "function call",
        "content": {
          "name": "Navigation.MapNavigation.vehicleNavigationRoute",
          "arguments": {
            "departure": "Sydney Opera House"
          }
        }
      },
      {
        "role": "assistant",
        "content": "Please provide your destination name or address"
      },
      {
        "role": "user",
        "content": "Shanghai Hongqiao International Airport"
      },
      {
        "role": "function call",
        "content": {
          "name": "Navigation.MapNavigation.vehicleNavigationRoute",
          "arguments": {
            "departure": "Sydney Opera House",
            "destination": "Shanghai Hongqiao International Airport"
          }
        }
      }
    ],
    "multiple_tools": [
      {
        "name": "ConvenientLiving.AutoLife.findCarNearbyDealers",
        "description": "Find a car dealership near you.",
        "parameters": {
          "type": "object",
          "properties": {},
          "required": []
        }
      },
      {
        "name": "Navigation.MapNavigation.vehicleNavigationRoute",
        "description": "Specify a vehicle as a way to get around and search for a route",
        "parameters": {
          "type": "object",
          "properties": {
            "departure": {
              "type": "string",
              "description": "The name or address of the departure location, the default current location"
            },
            "destination": {
              "type": "string",
              "description": "Name or address of the destination"
            },
            "vehicle": {
              "type": "string",
              "description": "Specify how you want to travel"
            }
          },
          "required": [
            "departure",
            "destination",
            "vehicle"
          ]
        }
      },
      {
        "name": "Health.Fitness.searchNearbyGyms",
        "description": "Find a gym near you",
        "parameters": {
          "type": "object",
          "properties": {},
          "required": []
        }
      },
      {
        "name": "ConvenientLiving.GovernmentServices.searchEnterpriseByName",
        "description": "Search related businesses based on keywords entered",
        "parameters": {
          "type": "object",
          "properties": {
            "keyword": {
              "type": "string",
              "description": "Search keywords"
            }
          },
          "required": [
            "keyword"
          ]
        }
      },
      {
        "name": "VideoPlayback.OnlineVideos.searchOnlineVideo",
        "description": "Search online videos, which can be searched based on keywords (director/publisher/video keywords); can be searched based on categories; can be searched based on AI smart search",
        "parameters": {
          "type": "object",
          "properties": {
            "keyword": {
              "type": "array",
              "description": "Director/Publisher/Video Keyword Search"
            },
            "video_type": {
              "type": "string",
              "description": "Video Type Categories, Recommended, Popular, Chase, Film and Television New Journey"
            },
            "ai_search": {
              "type": "string",
              "description": "Based on search history, viewing history can only be turned off by default"
            }
          },
          "required": [
            "keyword",
            "video_type",
            "ai_search"
          ]
        }
      }
    ],
    "single_tool": [
      {
        "name": "Navigation.MapNavigation.vehicleNavigationRoute",
        "description": "Specify a vehicle as a way to get around and search for a route",
        "parameters": {
          "type": "object",
          "properties": {
            "departure": {
              "type": "string",
              "description": "The name or address of the departure location, the default current location"
            },
            "destination": {
              "type": "string",
              "description": "Name or address of the destination"
            },
            "vehicle": {
              "type": "string",
              "description": "Specify how you want to travel"
            }
          },
          "required": [
            "departure",
            "destination",
            "vehicle"
          ]
        }
      }
    ],
    "id": 13
  },
  {
    "messages": [
      {
        "role": "user",
        "content": "Take a look at the details of your ride"
      },
      {
        "role": "function call",
        "content": {
          "name": "Navigation.TaxiCarRental.viewTaxiOrderDetail",
          "arguments": {}
        }
      },
      {
        "role": "assistant",
        "content": "What is the order time"
      },
      {
        "role": "user",
        "content": "The order was placed last Friday at 8pm."
      },
      {
        "role": "function call",
        "content": {
          "name": "Navigation.TaxiCarRental.viewTaxiOrderDetail",
          "arguments": {
            "time": "Last Friday at 8pm"
          }
        }
      },
      {
        "role": "assistant",
        "content": "Where to"
      },
      {
        "role": "user",
        "content": "It was wrong before. Order time should be 8:00 AM, 10th March"
      },
      {
        "role": "function call",
        "content": {
          "name": "Navigation.TaxiCarRental.viewTaxiOrderDetail",
          "arguments": {
            "time": "8:00 AM, 10th March"
          }
        }
      },
      {
        "role": "assistant",
        "content": "Where to"
      },
      {
        "role": "user",
        "content": "The destination is the library"
      },
      {
        "role": "function call",
        "content": {
          "name": "Navigation.TaxiCarRental.viewTaxiOrderDetail",
          "arguments": {
            "time": "8:00 AM, 10th March",
            "destination": "Library"
          }
        }
      }
    ],
    "multiple_tools": [
      {
        "name": "SocialCommunication.Community.getCommunityUserInfo",
        "description": "Get user details for a specific community based on user nickname",
        "parameters": {
          "type": "object",
          "properties": {
            "community_name": {
              "type": "string",
              "description": "The name of the community where you want to get user information"
            },
            "user_nickname": {
              "type": "string",
              "description": "User's nickname"
            }
          },
          "required": [
            "community_name",
            "user_nickname"
          ]
        }
      },
      {
        "name": "Navigation.TaxiCarRental.viewTaxiOrderDetail",
        "description": "View details of a ride",
        "parameters": {
          "type": "object",
          "properties": {
            "time": {
              "type": "string",
              "description": "Order time"
            },
            "destination": {
              "type": "string",
              "description": "Destination"
            }
          },
          "required": [
            "time",
            "destination"
          ]
        }
      },
      {
        "name": "SocialCommunication.SocialMedia.viewMediumFriendInfo",
        "description": "View details of selected friends in selected media",
        "parameters": {
          "type": "object",
          "properties": {
            "medium_name": {
              "type": "string",
              "description": "Media name"
            },
            "name": {
              "type": "string",
              "description": "Friend's nickname"
            },
            "account_number": {
              "type": "string",
              "description": "Friend's account"
            }
          },
          "required": [
            "medium_name",
            "name",
            "account_number"
          ]
        }
      },
      {
        "name": "MusicRadio.OnlineMusic.getUserInfo",
        "description": "Get user information by username",
        "parameters": {
          "type": "object",
          "properties": {
            "name": {
              "type": "string",
              "description": "Username"
            }
          },
          "required": [
            "name"
          ]
        }
      },
      {
        "name": "Finance.Payment.viewPayUserInfo",
        "description": "View user information for your account",
        "parameters": {
          "type": "object",
          "properties": {},
          "required": []
        }
      }
    ],
    "single_tool": [
      {
        "name": "Navigation.TaxiCarRental.viewTaxiOrderDetail",
        "description": "View details of a ride",
        "parameters": {
          "type": "object",
          "properties": {
            "time": {
              "type": "string",
              "description": "Order time"
            },
            "destination": {
              "type": "string",
              "description": "Destination"
            }
          },
          "required": [
            "time",
            "destination"
          ]
        }
      }
    ],
    "id": 14
  },
  {
    "messages": [
      {
        "role": "user",
        "content": "Share my taxi ride"
      },
      {
        "role": "function call",
        "content": {
          "name": "Navigation.TaxiCarRental.shareTaxiOrder",
          "arguments": {}
        }
      },
      {
        "role": "assistant",
        "content": "What time is the order"
      },
      {
        "role": "user",
        "content": "The order was placed at 3pm today."
      },
      {
        "role": "function call",
        "content": {
          "name": "Navigation.TaxiCarRental.shareTaxiOrder",
          "arguments": {
            "time": "Today at 3pm"
          }
        }
      },
      {
        "role": "assistant",
        "content": "Please provide a taxi destination"
      },
      {
        "role": "user",
        "content": "It was wrong before. Order time should be Last Friday at 8pm"
      },
      {
        "role": "function call",
        "content": {
          "name": "Navigation.TaxiCarRental.shareTaxiOrder",
          "arguments": {
            "time": "Last Friday at 8pm"
          }
        }
      },
      {
        "role": "assistant",
        "content": "Please provide a taxi destination"
      },
      {
        "role": "user",
        "content": "Central Library, please."
      },
      {
        "role": "function call",
        "content": {
          "name": "Navigation.TaxiCarRental.shareTaxiOrder",
          "arguments": {
            "time": "Last Friday at 8pm",
            "destination": "Central Library"
          }
        }
      }
    ],
    "multiple_tools": [
      {
        "name": "MusicRadio.Karaoke.shareKsongWorks",
        "description": "Share work based on song name",
        "parameters": {
          "type": "object",
          "properties": {
            "song_name": {
              "type": "string",
              "description": "Song Name"
            },
            "media": {
              "type": "string",
              "description": "Media"
            },
            "name": {
              "type": "string",
              "description": "Friend name"
            }
          },
          "required": [
            "song_name",
            "media",
            "name"
          ]
        }
      },
      {
        "name": "UtilityTools.Search.shareWebPage",
        "description": "Share the current page to other platforms/media",
        "parameters": {
          "type": "object",
          "properties": {
            "media": {
              "type": "string",
              "description": "Media or platform to share"
            },
            "person": {
              "type": "string",
              "description": "Specify who to share with"
            }
          },
          "required": [
            "media",
            "person"
          ]
        }
      },
      {
        "name": "Navigation.TaxiCarRental.shareTaxiOrder",
        "description": "Share route",
        "parameters": {
          "type": "object",
          "properties": {
            "time": {
              "type": "string",
              "description": "Order time"
            },
            "destination": {
              "type": "string",
              "description": "destination"
            },
            "media": {
              "type": "string",
              "description": "Choose Socials To Share Single Post"
            }
          },
          "required": [
            "time",
            "destination",
            "media"
          ]
        }
      },
      {
        "name": "VideoPlayback.OnlineVideos.shareOnlineVideo",
        "description": "Share a video to other media",
        "parameters": {
          "type": "object",
          "properties": {
            "name": {
              "type": "string",
              "description": "Video Name"
            },
            "media": {
              "type": "string",
              "description": "Share video to: WeChat, etc."
            }
          },
          "required": [
            "name",
            "media"
          ]
        }
      },
      {
        "name": "MusicRadio.RadioStations.radioShareRadio",
        "description": "Share the station to social platforms based on the station name",
        "parameters": {
          "type": "object",
          "properties": {
            "radio_name": {
              "type": "string",
              "description": "Radio Name"
            },
            "to": {
              "type": "string",
              "description": "Sharing platform"
            }
          },
          "required": [
            "radio_name",
            "to"
          ]
        }
      }
    ],
    "single_tool": [
      {
        "name": "Navigation.TaxiCarRental.shareTaxiOrder",
        "description": "Share route",
        "parameters": {
          "type": "object",
          "properties": {
            "time": {
              "type": "string",
              "description": "Order time"
            },
            "destination": {
              "type": "string",
              "description": "destination"
            },
            "media": {
              "type": "string",
              "description": "Choose Socials To Share Single Post"
            }
          },
          "required": [
            "time",
            "destination",
            "media"
          ]
        }
      }
    ],
    "id": 16
  },
  {
    "messages": [
      {
        "role": "user",
        "content": "Rate your driver from a previous trip"
      },
      {
        "role": "function call",
        "content": {
          "name": "Navigation.TaxiCarRental.evaluateTaxiOrder",
          "arguments": {}
        }
      },
      {
        "role": "assistant",
        "content": "What is the order time"
      },
      {
        "role": "user",
        "content": "It was an order placed last Friday night."
      },
      {
        "role": "function call",
        "content": {
          "name": "Navigation.TaxiCarRental.evaluateTaxiOrder",
          "arguments": {
            "time": "Last Friday night"
          }
        }
      },
      {
        "role": "assistant",
        "content": "Please provide a destination for your trip"
      },
      {
        "role": "user",
        "content": "It was wrong before. Order time should be March 10"
      },
      {
        "role": "function call",
        "content": {
          "name": "Navigation.TaxiCarRental.evaluateTaxiOrder",
          "arguments": {
            "time": "March 10"
          }
        }
      },
      {
        "role": "assistant",
        "content": "Please provide a destination for your trip"
      },
      {
        "role": "user",
        "content": "The destination is Friends Café, which is located in the center of the city."
      },
      {
        "role": "function call",
        "content": {
          "name": "Navigation.TaxiCarRental.evaluateTaxiOrder",
          "arguments": {
            "time": "March 10",
            "destination": "Friends Remember Cafe"
          }
        }
      },
      {
        "role": "assistant",
        "content": "Please provide a review score"
      },
      {
        "role": "user",
        "content": "I rated this experience 5 and was very satisfied."
      },
      {
        "role": "function call",
        "content": {
          "name": "Navigation.TaxiCarRental.evaluateTaxiOrder",
          "arguments": {
            "time": "March 10",
            "destination": "Friends Remember Cafe",
            "rating": "5"
          }
        }
      }
    ],
    "multiple_tools": [
      {
        "name": "SocialCommunication.InstantMessaging.receiveFile",
        "description": "Receive files from specified contacts or groups",
        "parameters": {
          "type": "object",
          "properties": {
            "sender_name": {
              "type": "string",
              "description": "The contact or group who sent the file"
            }
          },
          "required": [
            "sender_name"
          ]
        }
      },
      {
        "name": "SystemTools.SystemSettings.setSystemRingtone",
        "description": "set the ringtone",
        "parameters": {
          "type": "object",
          "properties": {
            "ringtoneType": {
              "type": "string",
              "description": "Ringtone type, such as mobile phone ringtone, notification tone, etc."
            },
            "ringtone": {
              "type": "string",
              "description": "Ringtone file path or URL"
            }
          },
          "required": [
            "ringtoneType",
            "ringtone"
          ]
        }
      },
      {
        "name": "Navigation.TaxiCarRental.evaluateTaxiOrder",
        "description": "Rate the driver who completed the trip",
        "parameters": {
          "type": "object",
          "properties": {
            "time": {
              "type": "string",
              "description": "Order time"
            },
            "destination": {
              "type": "string",
              "description": "Destination"
            },
            "rating": {
              "type": "string",
              "description": "Review Score"
            }
          },
          "required": [
            "time",
            "destination",
            "rating"
          ]
        }
      },
      {
        "name": "UtilityTools.AlarmClock.restartTimer",
        "description": "Reset the current timer or continue with the paused timer",
        "parameters": {
          "type": "object",
          "properties": {},
          "required": []
        }
      },
      {
        "name": "OnlineShopping.ExpressDelivery.returnExpressPreOrder",
        "description": "Specify a time to initiate the shipment to the courier",
        "parameters": {
          "type": "object",
          "properties": {
            "date": {
              "type": "string",
              "description": "Shipping time"
            },
            "recipient_address": {
              "type": "string",
              "description": "<g id=\"Bold\">Receiver's</g> <g id=\"Bold\">Address:</g>"
            }
          },
          "required": [
            "date",
            "recipient_address"
          ]
        }
      }
    ],
    "single_tool": [
      {
        "name": "Navigation.TaxiCarRental.evaluateTaxiOrder",
        "description": "Rate the driver who completed the trip",
        "parameters": {
          "type": "object",
          "properties": {
            "time": {
              "type": "string",
              "description": "Order time"
            },
            "destination": {
              "type": "string",
              "description": "Destination"
            },
            "rating": {
              "type": "string",
              "description": "Review Score"
            }
          },
          "required": [
            "time",
            "destination",
            "rating"
          ]
        }
      }
    ],
    "id": 17
  },
  {
    "messages": [
      {
        "role": "user",
        "content": "I need an invoice for my ride"
      },
      {
        "role": "function call",
        "content": {
          "name": "Navigation.TaxiCarRental.issueTaxiInvoice",
          "arguments": {}
        }
      },
      {
        "role": "assistant",
        "content": "What time is the order"
      },
      {
        "role": "user",
        "content": "The order was placed on March 1st."
      },
      {
        "role": "function call",
        "content": {
          "name": "Navigation.TaxiCarRental.issueTaxiInvoice",
          "arguments": {
            "time": "March 1"
          }
        }
      },
      {
        "role": "assistant",
        "content": "Where to"
      },
      {
        "role": "user",
        "content": "It was wrong before. Order time should be Yesterday at 9pm"
      },
      {
        "role": "function call",
        "content": {
          "name": "Navigation.TaxiCarRental.issueTaxiInvoice",
          "arguments": {
            "time": "Yesterday at 9pm"
          }
        }
      },
      {
        "role": "assistant",
        "content": "Where to"
      },
      {
        "role": "user",
        "content": "The destination is Beijing International Convention Center, located in Chaoyang District, Beijing."
      },
      {
        "role": "function call",
        "content": {
          "name": "Navigation.TaxiCarRental.issueTaxiInvoice",
          "arguments": {
            "time": "Yesterday at 9pm",
            "destination": "Beijing International Convention Center"
          }
        }
      }
    ],
    "multiple_tools": [
      {
        "name": "Finance.Funds.recommendFunds",
        "description": "Recommend user-friendly funds based on investment objectives and duration",
        "parameters": {
          "type": "object",
          "properties": {
            "objective": {
              "type": "string",
              "description": "Investment objectives such as robust, aggressive"
            },
            "investment_term": {
              "type": "string",
              "description": "Investment term, e.g. short term, long term"
            }
          },
          "required": [
            "objective",
            "investment_term"
          ]
        }
      },
      {
        "name": "Navigation.TaxiCarRental.createCarRentalOrder",
        "description": "Book a rental car",
        "parameters": {
          "type": "object",
          "properties": {
            "location": {
              "type": "string",
              "description": "Pick-up from"
            },
            "start_time": {
              "type": "string",
              "description": "Start Time "
            },
            "end_time": {
              "type": "string",
              "description": "drop-off date"
            }
          },
          "required": [
            "location",
            "start_time",
            "end_time"
          ]
        }
      },
      {
        "name": "Navigation.TaxiCarRental.issueTaxiInvoice",
        "description": "Invoicing taxi rides",
        "parameters": {
          "type": "object",
          "properties": {
            "time": {
              "type": "string",
              "description": "Order time"
            },
            "destination": {
              "type": "string",
              "description": "Destination"
            }
          },
          "required": [
            "time",
            "destination"
          ]
        }
      },
      {
        "name": "ConvenientLiving.JobRecruitment.getJobSalaryRange",
        "description": "Enter the job title to get its approximate salary range",
        "parameters": {
          "type": "object",
          "properties": {
            "job_title": {
              "type": "string",
              "description": "Position name"
            }
          },
          "required": [
            "job_title"
          ]
        }
      },
      {
        "name": "Education.ChildrenEducation.getChildLearningProgress",
        "description": "Get your child's progress",
        "parameters": {
          "type": "object",
          "properties": {},
          "required": []
        }
      }
    ],
    "single_tool": [
      {
        "name": "Navigation.TaxiCarRental.issueTaxiInvoice",
        "description": "Invoicing taxi rides",
        "parameters": {
          "type": "object",
          "properties": {
            "time": {
              "type": "string",
              "description": "Order time"
            },
            "destination": {
              "type": "string",
              "description": "Destination"
            }
          },
          "required": [
            "time",
            "destination"
          ]
        }
      }
    ],
    "id": 18
  },
  {
    "messages": [
      {
        "role": "user",
        "content": "Find out where's available car right now"
      },
      {
        "role": "function call",
        "content": {
          "name": "Navigation.TaxiCarRental.searchCarRental",
          "arguments": {}
        }
      },
      {
        "role": "assistant",
        "content": "Where is your pickup location?"
      },
      {
        "role": "user",
        "content": "The pick-up location is Beijing Capital International Airport."
      },
      {
        "role": "function call",
        "content": {
          "name": "Navigation.TaxiCarRental.searchCarRental",
          "arguments": {
            "location": "Beijing Capital International Airport"
          }
        }
      },
      {
        "role": "assistant",
        "content": "What time does it start?"
      },
      {
        "role": "user",
        "content": "The start time is 8am on April 5, 2023, remember to set a reminder."
      },
      {
        "role": "function call",
        "content": {
          "name": "Navigation.TaxiCarRental.searchCarRental",
          "arguments": {
            "location": "Beijing Capital International Airport",
            "start_time": "04/05/2023 08:00"
          }
        }
      },
      {
        "role": "assistant",
        "content": "What is the return time?"
      },
      {
        "role": "user",
        "content": "It was wrong before. Pick-up from should be Sanlitun, Chaoyang District, Beijing"
      },
      {
        "role": "function call",
        "content": {
          "name": "Navigation.TaxiCarRental.searchCarRental",
          "arguments": {
            "location": "Sanlitun, Chaoyang District, Beijing",
            "start_time": "04/05/2023 08:00"
          }
        }
      },
      {
        "role": "assistant",
        "content": "What is the return time?"
      },
      {
        "role": "user",
        "content": "Please remind me that the return time is 6pm on April 10, 2023."
      },
      {
        "role": "function call",
        "content": {
          "name": "Navigation.TaxiCarRental.searchCarRental",
          "arguments": {
            "location": "Sanlitun, Chaoyang District, Beijing",
            "start_time": "04/05/2023 08:00",
            "end_time": "April 10, 2023 at 6pm"
          }
        }
      }
    ],
    "multiple_tools": [
      {
        "name": "ConvenientLiving.JobRecruitment.checkJobPositionAvailability",
        "description": "Check if a specific position is still being recruited",
        "parameters": {
          "type": "object",
          "properties": {
            "job_name": {
              "type": "string",
              "description": "Position name"
            },
            "company_name": {
              "type": "string",
              "description": "Company name"
            }
          },
          "required": [
            "job_name",
            "company_name"
          ]
        }
      },
      {
        "name": "OfficeSoftware.Conferencing.viewParticipants",
        "description": "Get a list of participants for the current meeting",
        "parameters": {
          "type": "object",
          "properties": {
            "meeting_id": {
              "type": "string",
              "description": "Conference No."
            },
            "title": {
              "type": "string",
              "description": "Meeting Title:"
            },
            "time": {
              "type": "string",
              "description": "Meeting Date"
            }
          },
          "required": [
            "meeting_id",
            "title",
            "time"
          ]
        }
      },
      {
        "name": "MusicRadio.OnlineMusic.getRecommendedPlaylists",
        "description": "Get recommended songs by mood and scene",
        "parameters": {
          "type": "object",
          "properties": {
            "mood": {
              "type": "string",
              "description": "Emotions"
            },
            "scene": {
              "type": "string",
              "description": "setting"
            }
          },
          "required": [
            "mood",
            "scene"
          ]
        }
      },
      {
        "name": "ConvenientLiving.BuyingRentingHomes.searchRentingHouses",
        "description": "Search for rentals by criteria",
        "parameters": {
          "type": "object",
          "properties": {
            "price": {
              "type": "string",
              "description": "Rents"
            },
            "house_area": {
              "type": "string",
              "description": "Area"
            },
            "level": {
              "type": "string",
              "description": "Floor"
            },
            "age": {
              "type": "integer",
              "description": "fixed number of years"
            },
            "house_type": {
              "type": "string",
              "description": "Layout"
            },
            "housing_estate": {
              "type": "string",
              "description": "Community"
            },
            "location": {
              "type": "string",
              "description": "Position"
            },
            "indoor_decoration": {
              "type": "string",
              "description": "decorate"
            },
            "furniture": {
              "type": "string",
              "description": "Furniture"
            }
          },
          "required": [
            "price",
            "house_area",
            "level",
            "age",
            "house_type",
            "housing_estate",
            "location",
            "indoor_decoration",
            "furniture"
          ]
        }
      },
      {
        "name": "Navigation.TaxiCarRental.searchCarRental",
        "description": "See cars available in your location",
        "parameters": {
          "type": "object",
          "properties": {
            "location": {
              "type": "string",
              "description": "Pick-up from"
            },
            "start_time": {
              "type": "string",
              "description": "Start Time "
            },
            "end_time": {
              "type": "string",
              "description": "drop-off date"
            }
          },
          "required": [
            "location",
            "start_time",
            "end_time"
          ]
        }
      }
    ],
    "single_tool": [
      {
        "name": "Navigation.TaxiCarRental.searchCarRental",
        "description": "See cars available in your location",
        "parameters": {
          "type": "object",
          "properties": {
            "location": {
              "type": "string",
              "description": "Pick-up from"
            },
            "start_time": {
              "type": "string",
              "description": "Start Time "
            },
            "end_time": {
              "type": "string",
              "description": "drop-off date"
            }
          },
          "required": [
            "location",
            "start_time",
            "end_time"
          ]
        }
      }
    ],
    "id": 19
  },
  {
    "messages": [
      {
        "role": "user",
        "content": "I need to rent a car and book it for me"
      },
      {
        "role": "function call",
        "content": {
          "name": "Navigation.TaxiCarRental.createCarRentalOrder",
          "arguments": {}
        }
      },
      {
        "role": "assistant",
        "content": "Where to pick up your car"
      },
      {
        "role": "user",
        "content": "Pick up at Beijing Capital International Airport."
      },
      {
        "role": "function call",
        "content": {
          "name": "Navigation.TaxiCarRental.createCarRentalOrder",
          "arguments": {
            "location": "Beijing Capital International Airport"
          }
        }
      },
      {
        "role": "assistant",
        "content": "What time does it start?"
      },
      {
        "role": "user",
        "content": "It started at 9 am on April 10th."
      },
      {
        "role": "function call",
        "content": {
          "name": "Navigation.TaxiCarRental.createCarRentalOrder",
          "arguments": {
            "location": "Beijing Capital International Airport",
            "start_time": "9 am on April 10th"
          }
        }
      },
      {
        "role": "assistant",
        "content": "When is the dropoff time?"
      },
      {
        "role": "user",
        "content": "It was wrong before. Pick-up from should be Shanghai Pudong Railway Station"
      },
      {
        "role": "function call",
        "content": {
          "name": "Navigation.TaxiCarRental.createCarRentalOrder",
          "arguments": {
            "location": "Shanghai Pudong Railway Station",
            "start_time": "9 am on April 10th"
          }
        }
      },
      {
        "role": "assistant",
        "content": "When is the dropoff time?"
      },
      {
        "role": "user",
        "content": "The return time is 6:00 pm on April 15th, remember to return it on time."
      },
      {
        "role": "function call",
        "content": {
          "name": "Navigation.TaxiCarRental.createCarRentalOrder",
          "arguments": {
            "location": "Shanghai Pudong Railway Station",
            "start_time": "9 am on April 10th",
            "end_time": "April 15th at 6pm"
          }
        }
      }
    ],
    "multiple_tools": [
      {
        "name": "UtilityTools.AlarmClock.restartTimer",
        "description": "Reset the current timer or continue with the paused timer",
        "parameters": {
          "type": "object",
          "properties": {},
          "required": []
        }
      },
      {
        "name": "OfficeSoftware.CloudStorage.netdiskRenameFiles",
        "description": "Renaming Files in Cloud Drive",
        "parameters": {
          "type": "object",
          "properties": {
            "origin_name": {
              "type": "string",
              "description": "Original filename"
            },
            "target_name": {
              "type": "string",
              "description": "New file name"
            }
          },
          "required": [
            "origin_name",
            "target_name"
          ]
        }
      },
      {
        "name": "OnlineShopping.ExpressDelivery.returnExpressPreOrder",
        "description": "Specify a time to initiate the shipment to the courier",
        "parameters": {
          "type": "object",
          "properties": {
            "date": {
              "type": "string",
              "description": "Shipping time"
            },
            "recipient_address": {
              "type": "string",
              "description": "<g id=\"Bold\">Receiver's</g> <g id=\"Bold\">Address:</g>"
            }
          },
          "required": [
            "date",
            "recipient_address"
          ]
        }
      },
      {
        "name": "Navigation.TaxiCarRental.createCarRentalOrder",
        "description": "Book a rental car",
        "parameters": {
          "type": "object",
          "properties": {
            "location": {
              "type": "string",
              "description": "Pick-up from"
            },
            "start_time": {
              "type": "string",
              "description": "Start Time "
            },
            "end_time": {
              "type": "string",
              "description": "drop-off date"
            }
          },
          "required": [
            "location",
            "start_time",
            "end_time"
          ]
        }
      },
      {
        "name": "SystemTools.SystemSettings.resetMobilePhone",
        "description": "Restore phone factory settings",
        "parameters": {
          "type": "object",
          "properties": {},
          "required": []
        }
      }
    ],
    "single_tool": [
      {
        "name": "Navigation.TaxiCarRental.createCarRentalOrder",
        "description": "Book a rental car",
        "parameters": {
          "type": "object",
          "properties": {
            "location": {
              "type": "string",
              "description": "Pick-up from"
            },
            "start_time": {
              "type": "string",
              "description": "Start Time "
            },
            "end_time": {
              "type": "string",
              "description": "drop-off date"
            }
          },
          "required": [
            "location",
            "start_time",
            "end_time"
          ]
        }
      }
    ],
    "id": 20
  },
  {
    "messages": [
      {
        "role": "user",
        "content": "Search a flight for me"
      },
      {
        "role": "function call",
        "content": {
          "name": "Navigation.FlightTickets.searchFlight",
          "arguments": {}
        }
      },
      {
        "role": "assistant",
        "content": "What time is your departure time"
      },
      {
        "role": "user",
        "content": "I plan to leave on May 1st."
      },
      {
        "role": "function call",
        "content": {
          "name": "Navigation.FlightTickets.searchFlight",
          "arguments": {
            "date": "May 1st"
          }
        }
      },
      {
        "role": "assistant",
        "content": "Please provide your departure location"
      },
      {
        "role": "user",
        "content": "It was wrong before. Trip start time should be Next year's Spring Festival"
      },
      {
        "role": "function call",
        "content": {
          "name": "Navigation.FlightTickets.searchFlight",
          "arguments": {
            "date": "Next year's Spring Festival"
          }
        }
      },
      {
        "role": "assistant",
        "content": "Please provide your departure location"
      },
      {
        "role": "user",
        "content": "I leave from London."
      },
      {
        "role": "function call",
        "content": {
          "name": "Navigation.FlightTickets.searchFlight",
          "arguments": {
            "date": "Next year's Spring Festival",
            "departure": "Londorn"
          }
        }
      },
      {
        "role": "assistant",
        "content": "Where will this one-way trip <g id=\"20\">end</g>?"
      },
      {
        "role": "user",
        "content": "My destination is Paris."
      },
      {
        "role": "function call",
        "content": {
          "name": "Navigation.FlightTickets.searchFlight",
          "arguments": {
            "date": "Next year's Spring Festival",
            "departure": "Londorn",
            "destination": "Paris"
          }
        }
      },
      {
        "role": "assistant",
        "content": "Do you need economy or business class"
      },
      {
        "role": "user",
        "content": "I need economy class."
      },
      {
        "role": "function call",
        "content": {
          "name": "Navigation.FlightTickets.searchFlight",
          "arguments": {
            "date": "Next year's Spring Festival",
            "departure": "Londorn",
            "destination": "Paris",
            "site_type": "Economy Class"
          }
        }
      }
    ],
    "multiple_tools": [
      {
        "name": "ConvenientLiving.GovernmentServices.searchEnterpriseByName",
        "description": "Search related businesses based on keywords entered",
        "parameters": {
          "type": "object",
          "properties": {
            "keyword": {
              "type": "string",
              "description": "Search keywords"
            }
          },
          "required": [
            "keyword"
          ]
        }
      },
      {
        "name": "Travel.ItineraryServices.searchTravelRoute",
        "description": "Search for relevant travel itineraries based on keywords",
        "parameters": {
          "type": "object",
          "properties": {
            "keyword": {
              "type": "string",
              "description": "Search keywords"
            }
          },
          "required": [
            "keyword"
          ]
        }
      },
      {
        "name": "Navigation.FlightTickets.searchCheapFlights",
        "description": "Search cheap flights by specified criteria",
        "parameters": {
          "type": "object",
          "properties": {
            "type": {
              "type": "string",
              "description": "One way, round trip"
            },
            "departure": {
              "type": "string",
              "description": "Origination"
            },
            "destination": {
              "type": "string",
              "description": "Reach ground"
            },
            "travel_date": {
              "type": "string",
              "description": "Specify date, next month, next three months, etc."
            }
          },
          "required": [
            "type",
            "departure",
            "destination",
            "travel_date"
          ]
        }
      },
      {
        "name": "Navigation.FlightTickets.searchFlight",
        "description": "Find tickets for specific dates",
        "parameters": {
          "type": "object",
          "properties": {
            "date": {
              "type": "string",
              "description": "Trip start time"
            },
            "departure": {
              "type": "string",
              "description": "Origination"
            },
            "destination": {
              "type": "string",
              "description": "Reach ground"
            },
            "type": {
              "type": "string",
              "description": "One-way, round-trip, multi-trip"
            },
            "site_type": {
              "type": "string",
              "description": "Economy, Business"
            }
          },
          "required": [
            "date",
            "departure",
            "destination",
            "type",
            "site_type"
          ]
        }
      },
      {
        "name": "ConvenientLiving.BuyingRentingHomes.searchRentingHouses",
        "description": "Search for rentals by criteria",
        "parameters": {
          "type": "object",
          "properties": {
            "price": {
              "type": "string",
              "description": "Rents"
            },
            "house_area": {
              "type": "string",
              "description": "Area"
            },
            "level": {
              "type": "string",
              "description": "Floor"
            },
            "age": {
              "type": "integer",
              "description": "fixed number of years"
            },
            "house_type": {
              "type": "string",
              "description": "Layout"
            },
            "housing_estate": {
              "type": "string",
              "description": "Community"
            },
            "location": {
              "type": "string",
              "description": "Position"
            },
            "indoor_decoration": {
              "type": "string",
              "description": "decorate"
            },
            "furniture": {
              "type": "string",
              "description": "Furniture"
            }
          },
          "required": [
            "price",
            "house_area",
            "level",
            "age",
            "house_type",
            "housing_estate",
            "location",
            "indoor_decoration",
            "furniture"
          ]
        }
      }
    ],
    "single_tool": [
      {
        "name": "Navigation.FlightTickets.searchFlight",
        "description": "Find tickets for specific dates",
        "parameters": {
          "type": "object",
          "properties": {
            "date": {
              "type": "string",
              "description": "Trip start time"
            },
            "departure": {
              "type": "string",
              "description": "Origination"
            },
            "destination": {
              "type": "string",
              "description": "Reach ground"
            },
            "type": {
              "type": "string",
              "description": "One-way, round-trip, multi-trip"
            },
            "site_type": {
              "type": "string",
              "description": "Economy, Business"
            }
          },
          "required": [
            "date",
            "departure",
            "destination",
            "type",
            "site_type"
          ]
        }
      }
    ],
    "id": 24
  },
  {
    "messages": [
      {
        "role": "user",
        "content": "See if there are any plane tickets left"
      },
      {
        "role": "function call",
        "content": {
          "name": "Navigation.FlightTickets.searchFlight",
          "arguments": {}
        }
      },
      {
        "role": "assistant",
        "content": "What time is your departure time"
      },
      {
        "role": "user",
        "content": "I plan to leave next Spring Festival."
      },
      {
        "role": "function call",
        "content": {
          "name": "Navigation.FlightTickets.searchFlight",
          "arguments": {
            "date": "Next year's Spring Festival"
          }
        }
      },
      {
        "role": "assistant",
        "content": "Where do you come from?"
      },
      {
        "role": "user",
        "content": "My starting place is Beijing."
      },
      {
        "role": "function call",
        "content": {
          "name": "Navigation.FlightTickets.searchFlight",
          "arguments": {
            "date": "Next year's Spring Festival",
            "departure": "Beijing"
          }
        }
      },
      {
        "role": "assistant",
        "content": "Where to"
      },
      {
        "role": "user",
        "content": "The destination is Bangkok."
      },
      {
        "role": "function call",
        "content": {
          "name": "Navigation.FlightTickets.searchFlight",
          "arguments": {
            "date": "Next year's Spring Festival",
            "departure": "Beijing",
            "destination": "Bangkok"
          }
        }
      },
      {
        "role": "assistant",
        "content": "Do you need economy or business class"
      },
      {
        "role": "user",
        "content": "It was wrong before. Trip start time should be Somalia"
      },
      {
        "role": "function call",
        "content": {
          "name": "Navigation.FlightTickets.searchFlight",
          "arguments": {
            "date": "May 1st",
            "departure": "Beijing",
            "destination": "Bangkok"
          }
        }
      },
      {
        "role": "assistant",
        "content": "Do you need economy or business class"
      },
      {
        "role": "user",
        "content": "I need business class."
      },
      {
        "role": "function call",
        "content": {
          "name": "Navigation.FlightTickets.searchFlight",
          "arguments": {
            "date": "May 1st",
            "departure": "Beijing",
            "destination": "Bangkok",
            "site_type": "- business class"
          }
        }
      }
    ],
    "multiple_tools": [
      {
        "name": "UtilityTools.Memo.searchNotes",
        "description": "Search memos by keyword (see all by default)",
        "parameters": {
          "type": "object",
          "properties": {
            "key_words": {
              "type": "string",
              "description": "KEYWORDS"
            }
          },
          "required": [
            "key_words"
          ]
        }
      },
      {
        "name": "ConvenientLiving.BuyingRentingHomes.searchRentingHouses",
        "description": "Search for rentals by criteria",
        "parameters": {
          "type": "object",
          "properties": {
            "price": {
              "type": "string",
              "description": "Rents"
            },
            "house_area": {
              "type": "string",
              "description": "Area"
            },
            "level": {
              "type": "string",
              "description": "Floor"
            },
            "age": {
              "type": "integer",
              "description": "fixed number of years"
            },
            "house_type": {
              "type": "string",
              "description": "Layout"
            },
            "housing_estate": {
              "type": "string",
              "description": "Community"
            },
            "location": {
              "type": "string",
              "description": "Position"
            },
            "indoor_decoration": {
              "type": "string",
              "description": "decorate"
            },
            "furniture": {
              "type": "string",
              "description": "Furniture"
            }
          },
          "required": [
            "price",
            "house_area",
            "level",
            "age",
            "house_type",
            "housing_estate",
            "location",
            "indoor_decoration",
            "furniture"
          ]
        }
      },
      {
        "name": "Travel.ItineraryServices.searchTravelRoute",
        "description": "Search for relevant travel itineraries based on keywords",
        "parameters": {
          "type": "object",
          "properties": {
            "keyword": {
              "type": "string",
              "description": "Search keywords"
            }
          },
          "required": [
            "keyword"
          ]
        }
      },
      {
        "name": "Navigation.FlightTickets.searchFlight",
        "description": "Find tickets for specific dates",
        "parameters": {
          "type": "object",
          "properties": {
            "date": {
              "type": "string",
              "description": "Trip start time"
            },
            "departure": {
              "type": "string",
              "description": "Origination"
            },
            "destination": {
              "type": "string",
              "description": "Reach ground"
            },
            "type": {
              "type": "string",
              "description": "One-way, round-trip, multi-trip"
            },
            "site_type": {
              "type": "string",
              "description": "Economy, Business"
            }
          },
          "required": [
            "date",
            "departure",
            "destination",
            "type",
            "site_type"
          ]
        }
      },
      {
        "name": "ConvenientLiving.FoodDelivery.searchRestaurantDiscounts",
        "description": "Enter keywords to search for deals",
        "parameters": {
          "type": "object",
          "properties": {
            "keyword": {
              "type": "string",
              "description": "Keywords related to offers"
            }
          },
          "required": [
            "keyword"
          ]
        }
      }
    ],
    "single_tool": [
      {
        "name": "Navigation.FlightTickets.searchFlight",
        "description": "Find tickets for specific dates",
        "parameters": {
          "type": "object",
          "properties": {
            "date": {
              "type": "string",
              "description": "Trip start time"
            },
            "departure": {
              "type": "string",
              "description": "Origination"
            },
            "destination": {
              "type": "string",
              "description": "Reach ground"
            },
            "type": {
              "type": "string",
              "description": "One-way, round-trip, multi-trip"
            },
            "site_type": {
              "type": "string",
              "description": "Economy, Business"
            }
          },
          "required": [
            "date",
            "departure",
            "destination",
            "type",
            "site_type"
          ]
        }
      }
    ],
    "id": 25
  },
  {
    "messages": [
      {
        "role": "user",
        "content": "Find flight details"
      },
      {
        "role": "function call",
        "content": {
          "name": "Navigation.FlightTickets.getFlightDetails",
          "arguments": {}
        }
      },
      {
        "role": "assistant",
        "content": "Please provide the specified date"
      },
      {
        "role": "user",
        "content": "Christmas Day"
      },
      {
        "role": "function call",
        "content": {
          "name": "Navigation.FlightTickets.getFlightDetails",
          "arguments": {
            "date": "Christmas Day"
          }
        }
      },
      {
        "role": "assistant",
        "content": "Please provide flight number"
      },
      {
        "role": "user",
        "content": "It was wrong before. Specify a date, such as 2024-07-05 should be October 11"
      },
      {
        "role": "function call",
        "content": {
          "name": "Navigation.FlightTickets.getFlightDetails",
          "arguments": {
            "date": "October 11"
          }
        }
      },
      {
        "role": "assistant",
        "content": "Please provide flight number"
      },
      {
        "role": "user",
        "content": "My flight number is CZ330 and I need information."
      },
      {
        "role": "function call",
        "content": {
          "name": "Navigation.FlightTickets.getFlightDetails",
          "arguments": {
            "date": "October 11",
            "flight_number": "CZ330"
          }
        }
      }
    ],
    "multiple_tools": [
      {
        "name": "OnlineShopping.SecondhandTrading.searchSecondhandSaleCommodity",
        "description": "Query the product by the specified commodity category; name; or picture QR code query",
        "parameters": {
          "type": "object",
          "properties": {
            "search_name": {
              "type": "string",
              "description": "Trade Name/Keywords"
            },
            "type": {
              "type": "string",
              "description": ": Guess what you like, latest release, save money group, fish coins for money"
            }
          },
          "required": [
            "search_name",
            "type"
          ]
        }
      },
      {
        "name": "Finance.Funds.getFundInfo",
        "description": "Query specific fund details based on specific fund name or code",
        "parameters": {
          "type": "object",
          "properties": {
            "fund_name": {
              "type": "string",
              "description": "Fund name"
            },
            "fund_code": {
              "type": "string",
              "description": "Fund  Code"
            }
          },
          "required": [
            "fund_name",
            "fund_code"
          ]
        }
      },
      {
        "name": "OfficeSoftware.Documents.searchDocuments",
        "description": "Search documents by keyword",
        "parameters": {
          "type": "object",
          "properties": {
            "keyword": {
              "type": "string",
              "description": "Search keywords, required"
            }
          },
          "required": [
            "keyword"
          ]
        }
      },
      {
        "name": "Navigation.TaxiCarRental.viewTaxiOrderDetail",
        "description": "View details of a ride",
        "parameters": {
          "type": "object",
          "properties": {
            "time": {
              "type": "string",
              "description": "Order time"
            },
            "destination": {
              "type": "string",
              "description": "Destination"
            }
          },
          "required": [
            "time",
            "destination"
          ]
        }
      },
      {
        "name": "Navigation.FlightTickets.getFlightDetails",
        "description": "Get details for a specific flight, including takeoff and landing times, fares, and more",
        "parameters": {
          "type": "object",
          "properties": {
            "flight_number": {
              "type": "string",
              "description": "e.g. CA1234"
            },
            "date": {
              "type": "string",
              "description": "Specify a date, such as 2024-07-05"
            },
            "line": {
              "type": "string",
              "description": "Routes such as Beijing-Shanghai"
            }
          },
          "required": [
            "flight_number",
            "date",
            "line"
          ]
        }
      }
    ],
    "single_tool": [
      {
        "name": "Navigation.FlightTickets.getFlightDetails",
        "description": "Get details for a specific flight, including takeoff and landing times, fares, and more",
        "parameters": {
          "type": "object",
          "properties": {
            "flight_number": {
              "type": "string",
              "description": "e.g. CA1234"
            },
            "date": {
              "type": "string",
              "description": "Specify a date, such as 2024-07-05"
            },
            "line": {
              "type": "string",
              "description": "Routes such as Beijing-Shanghai"
            }
          },
          "required": [
            "flight_number",
            "date",
            "line"
          ]
        }
      }
    ],
    "id": 26
  },
  {
    "messages": [
      {
        "role": "user",
        "content": "Can you help me find the details of the flight I'm following? I just want to see when it takes off, when it lands, and how much it costs."
      },
      {
        "role": "function call",
        "content": {
          "name": "Navigation.FlightTickets.getFlightDetails",
          "arguments": {}
        }
      },
      {
        "role": "assistant",
        "content": "When to specify the date"
      },
      {
        "role": "user",
        "content": "The specified date is October 11th"
      },
      {
        "role": "function call",
        "content": {
          "name": "Navigation.FlightTickets.getFlightDetails",
          "arguments": {
            "date": "October 11th"
          }
        }
      },
      {
        "role": "assistant",
        "content": "Please provide flight number"
      },
      {
        "role": "user",
        "content": "It was wrong before. Specify a date, such as 2024-07-05 should be October 11"
      },
      {
        "role": "function call",
        "content": {
          "name": "Navigation.FlightTickets.getFlightDetails",
          "arguments": {
            "date": "October 11"
          }
        }
      },
      {
        "role": "assistant",
        "content": "Please provide flight number"
      },
      {
        "role": "user",
        "content": "My flight number is MU5678."
      },
      {
        "role": "function call",
        "content": {
          "name": "Navigation.FlightTickets.getFlightDetails",
          "arguments": {
            "date": "October 11",
            "flight_number": "MU5678"
          }
        }
      }
    ],
    "multiple_tools": [
      {
        "name": "MusicRadio.OnlineMusic.getSongDetails",
        "description": "Get song details by song name",
        "parameters": {
          "type": "object",
          "properties": {
            "name": {
              "type": "string",
              "description": "Song Name"
            }
          },
          "required": [
            "name"
          ]
        }
      },
      {
        "name": "Education.OnlineClasses.viewCourseDetails",
        "description": "View course details by course name",
        "parameters": {
          "type": "object",
          "properties": {
            "course_name": {
              "type": "string",
              "description": "Course Title"
            }
          },
          "required": [
            "course_name"
          ]
        }
      },
      {
        "name": "Navigation.TaxiCarRental.viewTaxiOrderDetail",
        "description": "View details of a ride",
        "parameters": {
          "type": "object",
          "properties": {
            "time": {
              "type": "string",
              "description": "Order time"
            },
            "destination": {
              "type": "string",
              "description": "Destination"
            }
          },
          "required": [
            "time",
            "destination"
          ]
        }
      },
      {
        "name": "Navigation.FlightTickets.getFlightDetails",
        "description": "Get details for a specific flight, including takeoff and landing times, fares, and more",
        "parameters": {
          "type": "object",
          "properties": {
            "flight_number": {
              "type": "string",
              "description": "e.g. CA1234"
            },
            "date": {
              "type": "string",
              "description": "Specify a date, such as 2024-07-05"
            },
            "line": {
              "type": "string",
              "description": "Routes such as Beijing-Shanghai"
            }
          },
          "required": [
            "flight_number",
            "date",
            "line"
          ]
        }
      },
      {
        "name": "ConvenientLiving.AutoLife.viewCarDetails",
        "description": "View the details of the specified car model.",
        "parameters": {
          "type": "object",
          "properties": {
            "brand": {
              "type": "string",
              "description": "Car Brand"
            }
          },
          "required": [
            "brand"
          ]
        }
      }
    ],
    "single_tool": [
      {
        "name": "Navigation.FlightTickets.getFlightDetails",
        "description": "Get details for a specific flight, including takeoff and landing times, fares, and more",
        "parameters": {
          "type": "object",
          "properties": {
            "flight_number": {
              "type": "string",
              "description": "e.g. CA1234"
            },
            "date": {
              "type": "string",
              "description": "Specify a date, such as 2024-07-05"
            },
            "line": {
              "type": "string",
              "description": "Routes such as Beijing-Shanghai"
            }
          },
          "required": [
            "flight_number",
            "date",
            "line"
          ]
        }
      }
    ],
    "id": 27
  },
  {
    "messages": [
      {
        "role": "user",
        "content": "Help me find any cheap flight tickets I can pick up"
      },
      {
        "role": "function call",
        "content": {
          "name": "Navigation.FlightTickets.searchCheapFlights",
          "arguments": {}
        }
      },
      {
        "role": "assistant",
        "content": "Where you're flying from"
      },
      {
        "role": "user",
        "content": "I'm leaving from New York."
      },
      {
        "role": "function call",
        "content": {
          "name": "Navigation.FlightTickets.searchCheapFlights",
          "arguments": {
            "departure": "Neo-York"
          }
        }
      },
      {
        "role": "assistant",
        "content": "What's the destination"
      },
      {
        "role": "user",
        "content": "London is my destination."
      },
      {
        "role": "function call",
        "content": {
          "name": "Navigation.FlightTickets.searchCheapFlights",
          "arguments": {
            "departure": "Neo-York",
            "destination": "Londorn"
          }
        }
      },
      {
        "role": "assistant",
        "content": "When are you traveling?"
      },
      {
        "role": "user",
        "content": "It was wrong before. Origination should be Guangzhou"
      },
      {
        "role": "function call",
        "content": {
          "name": "Navigation.FlightTickets.searchCheapFlights",
          "arguments": {
            "departure": "Guangzhou",
            "destination": "Londorn"
          }
        }
      },
      {
        "role": "assistant",
        "content": "When are you traveling?"
      },
      {
        "role": "user",
        "content": "Departure this July 15th"
      },
      {
        "role": "function call",
        "content": {
          "name": "Navigation.FlightTickets.searchCheapFlights",
          "arguments": {
            "departure": "Guangzhou",
            "destination": "Londorn",
            "travel_date": "July of this year"
          }
        }
      }
    ],
    "multiple_tools": [
      {
        "name": "Navigation.FlightTickets.searchCheapFlights",
        "description": "Search cheap flights by specified criteria",
        "parameters": {
          "type": "object",
          "properties": {
            "type": {
              "type": "string",
              "description": "One way, round trip"
            },
            "departure": {
              "type": "string",
              "description": "Origination"
            },
            "destination": {
              "type": "string",
              "description": "Reach ground"
            },
            "travel_date": {
              "type": "string",
              "description": "Specify date, next month, next three months, etc."
            }
          },
          "required": [
            "type",
            "departure",
            "destination",
            "travel_date"
          ]
        }
      },
      {
        "name": "Navigation.Bicycles.viewBikeCoupons",
        "description": "View riding-related vouchers",
        "parameters": {
          "type": "object",
          "properties": {},
          "required": []
        }
      },
      {
        "name": "UtilityTools.Memo.searchNotes",
        "description": "Search memos by keyword (see all by default)",
        "parameters": {
          "type": "object",
          "properties": {
            "key_words": {
              "type": "string",
              "description": "KEYWORDS"
            }
          },
          "required": [
            "key_words"
          ]
        }
      },
      {
        "name": "Travel.ItineraryServices.searchTravelRoute",
        "description": "Search for relevant travel itineraries based on keywords",
        "parameters": {
          "type": "object",
          "properties": {
            "keyword": {
              "type": "string",
              "description": "Search keywords"
            }
          },
          "required": [
            "keyword"
          ]
        }
      },
      {
        "name": "ConvenientLiving.BuyingRentingHomes.searchRentingHouses",
        "description": "Search for rentals by criteria",
        "parameters": {
          "type": "object",
          "properties": {
            "price": {
              "type": "string",
              "description": "Rents"
            },
            "house_area": {
              "type": "string",
              "description": "Area"
            },
            "level": {
              "type": "string",
              "description": "Floor"
            },
            "age": {
              "type": "integer",
              "description": "fixed number of years"
            },
            "house_type": {
              "type": "string",
              "description": "Layout"
            },
            "housing_estate": {
              "type": "string",
              "description": "Community"
            },
            "location": {
              "type": "string",
              "description": "Position"
            },
            "indoor_decoration": {
              "type": "string",
              "description": "decorate"
            },
            "furniture": {
              "type": "string",
              "description": "Furniture"
            }
          },
          "required": [
            "price",
            "house_area",
            "level",
            "age",
            "house_type",
            "housing_estate",
            "location",
            "indoor_decoration",
            "furniture"
          ]
        }
      }
    ],
    "single_tool": [
      {
        "name": "Navigation.FlightTickets.searchCheapFlights",
        "description": "Search cheap flights by specified criteria",
        "parameters": {
          "type": "object",
          "properties": {
            "type": {
              "type": "string",
              "description": "One way, round trip"
            },
            "departure": {
              "type": "string",
              "description": "Origination"
            },
            "destination": {
              "type": "string",
              "description": "Reach ground"
            },
            "travel_date": {
              "type": "string",
              "description": "Specify date, next month, next three months, etc."
            }
          },
          "required": [
            "type",
            "departure",
            "destination",
            "travel_date"
          ]
        }
      }
    ],
    "id": 28
  },
  {
    "messages": [
      {
        "role": "user",
        "content": "To cancel a previously booked flight"
      },
      {
        "role": "function call",
        "content": {
          "name": "Navigation.FlightTickets.cancelFlightBooking",
          "arguments": {}
        }
      },
      {
        "role": "assistant",
        "content": "Where you're flying from"
      },
      {
        "role": "user",
        "content": "I leave from Guangzhou."
      },
      {
        "role": "function call",
        "content": {
          "name": "Navigation.FlightTickets.cancelFlightBooking",
          "arguments": {
            "departure": "Guangzhou"
          }
        }
      },
      {
        "role": "assistant",
        "content": "Where to"
      },
      {
        "role": "user",
        "content": "It was wrong before. Origination should be Beijing"
      },
      {
        "role": "function call",
        "content": {
          "name": "Navigation.FlightTickets.cancelFlightBooking",
          "arguments": {
            "departure": "Beijing"
          }
        }
      },
      {
        "role": "assistant",
        "content": "Where to"
      },
      {
        "role": "user",
        "content": "Chengdu"
      },
      {
        "role": "function call",
        "content": {
          "name": "Navigation.FlightTickets.cancelFlightBooking",
          "arguments": {
            "departure": "Beijing",
            "destination": "Chengdu"
          }
        }
      },
      {
        "role": "assistant",
        "content": "What's the name of the person who booked the reservation"
      },
      {
        "role": "user",
        "content": "The name of the booker is Li Si."
      },
      {
        "role": "function call",
        "content": {
          "name": "Navigation.FlightTickets.cancelFlightBooking",
          "arguments": {
            "departure": "Beijing",
            "destination": "Chengdu",
            "name": "Li Si"
          }
        }
      },
      {
        "role": "assistant",
        "content": "What time does the flight leave?"
      },
      {
        "role": "user",
        "content": "My flight departs the day after tomorrow at 4pm."
      },
      {
        "role": "function call",
        "content": {
          "name": "Navigation.FlightTickets.cancelFlightBooking",
          "arguments": {
            "departure": "Beijing",
            "destination": "Chengdu",
            "name": "Li Si",
            "time": "The day after tomorrow at 4pm"
          }
        }
      }
    ],
    "multiple_tools": [
      {
        "name": "Health.MedicalServices.cancelDoctorAppointment",
        "description": "Cancelling an appointment with a doctor",
        "parameters": {
          "type": "object",
          "properties": {
            "doctor_name": {
              "type": "string",
              "description": "Doctor Name"
            },
            "appointment_time": {
              "type": "string",
              "description": "Specific time of appointment '"
            }
          },
          "required": [
            "doctor_name",
            "appointment_time"
          ]
        }
      },
      {
        "name": "Navigation.FlightTickets.cancelFlightBooking",
        "description": "Cancelling a flight for a specific reservation",
        "parameters": {
          "type": "object",
          "properties": {
            "departure": {
              "type": "string",
              "description": "Origination"
            },
            "destination": {
              "type": "string",
              "description": "Reach ground"
            },
            "name": {
              "type": "string",
              "description": "Name of person who booked"
            },
            "time": {
              "type": "string",
              "description": "Flight departure time"
            },
            "passenger_id": {
              "type": "string",
              "description": "Rider ID number"
            }
          },
          "required": [
            "departure",
            "destination",
            "name",
            "time",
            "passenger_id"
          ]
        }
      },
      {
        "name": "Navigation.TrainTickets.cancelTrainTicket",
        "description": "Cancelling a booked train ticket",
        "parameters": {
          "type": "object",
          "properties": {
            "train_number": {
              "type": "string",
              "description": "Wagon Number"
            },
            "name": {
              "type": "string",
              "description": "Rider's name"
            },
            "time": {
              "type": "string",
              "description": "To cancel a reservation for a certain time"
            },
            "departure_station": {
              "type": "string",
              "description": "Departure Station"
            },
            "destination_station": {
              "type": "string",
              "description": "arrival station"
            }
          },
          "required": [
            "train_number",
            "name",
            "time",
            "departure_station",
            "destination_station"
          ]
        }
      },
      {
        "name": "Education.OnlineClasses.cancelCourse",
        "description": "Cancel Enrolled Courses",
        "parameters": {
          "type": "object",
          "properties": {
            "course_name": {
              "type": "string",
              "description": "Course Title"
            }
          },
          "required": [
            "course_name"
          ]
        }
      },
      {
        "name": "Navigation.TaxiCarRental.cancelCarRentalOrder",
        "description": "Cancel the rental (all pending reservations are canceled by default)",
        "parameters": {
          "type": "object",
          "properties": {
            "time": {
              "type": "string",
              "description": "Release Date"
            }
          },
          "required": [
            "time"
          ]
        }
      }
    ],
    "single_tool": [
      {
        "name": "Navigation.FlightTickets.cancelFlightBooking",
        "description": "Cancelling a flight for a specific reservation",
        "parameters": {
          "type": "object",
          "properties": {
            "departure": {
              "type": "string",
              "description": "Origination"
            },
            "destination": {
              "type": "string",
              "description": "Reach ground"
            },
            "name": {
              "type": "string",
              "description": "Name of person who booked"
            },
            "time": {
              "type": "string",
              "description": "Flight departure time"
            },
            "passenger_id": {
              "type": "string",
              "description": "Rider ID number"
            }
          },
          "required": [
            "departure",
            "destination",
            "name",
            "time",
            "passenger_id"
          ]
        }
      }
    ],
    "id": 29
  },
  {
    "messages": [
      {
        "role": "user",
        "content": "I want to change the departure time of the flight I have booked, but the origin and destination cannot be changed."
      },
      {
        "role": "function call",
        "content": {
          "name": "Navigation.FlightTickets.modifyFlightBooking",
          "arguments": {}
        }
      },
      {
        "role": "assistant",
        "content": "Please provide a departure location"
      },
      {
        "role": "user",
        "content": "I leave from Guangzhou."
      },
      {
        "role": "function call",
        "content": {
          "name": "Navigation.FlightTickets.modifyFlightBooking",
          "arguments": {
            "departure": "Guangzhou"
          }
        }
      },
      {
        "role": "assistant",
        "content": "Where to"
      },
      {
        "role": "user",
        "content": "Chengdu"
      },
      {
        "role": "function call",
        "content": {
          "name": "Navigation.FlightTickets.modifyFlightBooking",
          "arguments": {
            "departure": "Guangzhou",
            "destination": "Chengdu"
          }
        }
      },
      {
        "role": "assistant",
        "content": "What's the name of the person who booked the reservation"
      },
      {
        "role": "user",
        "content": "It was wrong before. Origination should be Shenzhen"
      },
      {
        "role": "function call",
        "content": {
          "name": "Navigation.FlightTickets.modifyFlightBooking",
          "arguments": {
            "departure": "Shenzhen",
            "destination": "Chengdu"
          }
        }
      },
      {
        "role": "assistant",
        "content": "What's the name of the person who booked the reservation"
      },
      {
        "role": "user",
        "content": "The booker's name is Li Si"
      },
      {
        "role": "function call",
        "content": {
          "name": "Navigation.FlightTickets.modifyFlightBooking",
          "arguments": {
            "departure": "Shenzhen",
            "destination": "Chengdu",
            "name": "Li Si"
          }
        }
      },
      {
        "role": "assistant",
        "content": "Please provide the flight time before the change and the flight time you would like to change"
      },
      {
        "role": "user",
        "content": "My original flight time was 5pm and I would like to change it to 8pm."
      },
      {
        "role": "function call",
        "content": {
          "name": "Navigation.FlightTickets.modifyFlightBooking",
          "arguments": {
            "departure": "Shenzhen",
            "destination": "Chengdu",
            "name": "Li Si",
            "time": "5pm"
          }
        }
      },
      {
        "role": "assistant",
        "content": "Please provide the revised flight time"
      },
      {
        "role": "user",
        "content": "The new flight time is 8pm."
      },
      {
        "role": "function call",
        "content": {
          "name": "Navigation.FlightTickets.modifyFlightBooking",
          "arguments": {
            "departure": "Shenzhen",
            "destination": "Chengdu",
            "name": "Li Si",
            "time": "5pm",
            "alter_time": "8pm"
          }
        }
      }
    ],
    "multiple_tools": [
      {
        "name": "Navigation.FlightTickets.modifyFlightBooking",
        "description": "Changing the departure time of a booked flight is not supported for departure and destination changes",
        "parameters": {
          "type": "object",
          "properties": {
            "departure": {
              "type": "string",
              "description": "Origination"
            },
            "destination": {
              "type": "string",
              "description": "Reach ground"
            },
            "name": {
              "type": "string",
              "description": "Name of person who booked"
            },
            "time": {
              "type": "string",
              "description": "Flight duration before modification"
            },
            "alter_time": {
              "type": "string",
              "description": "Revised flight time"
            },
            "alter_seat": {
              "type": "string",
              "description": "Class Selection"
            }
          },
          "required": [
            "departure",
            "destination",
            "name",
            "time",
            "alter_time",
            "alter_seat"
          ]
        }
      },
      {
        "name": "Navigation.TaxiCarRental.modifyCarRentalOrder",
        "description": "Modify the contents of a rental order, such as pick-up time, drop-off time, pick-up person, pick-up location, etc.",
        "parameters": {
          "type": "object",
          "properties": {
            "time": {
              "type": "string",
              "description": "Release Date"
            }
          },
          "required": [
            "time"
          ]
        }
      },
      {
        "name": "UtilityTools.AlarmClock.alterAlarm",
        "description": "Modify the alarm clock, including alarm time, ringing method, etc.",
        "parameters": {
          "type": "object",
          "properties": {
            "clock_time_name": {
              "type": "string",
              "description": "Alarm name, defaults to all alarms"
            },
            "clock_time": {
              "type": "string",
              "description": "Alarm time"
            },
            "target_time": {
              "type": "string",
              "description": "Modified target time"
            }
          },
          "required": [
            "clock_time_name",
            "clock_time",
            "target_time"
          ]
        }
      },
      {
        "name": "UtilityTools.Calendar.alterCalendarschedule",
        "description": "Modify a schedule",
        "parameters": {
          "type": "object",
          "properties": {
            "date_name": {
              "type": "string",
              "description": "Visiting program name"
            },
            "date_name_before": {
              "type": "string",
              "description": "Modified Schedule Name"
            },
            "start_date": {
              "type": "string",
              "description": "Schedule start time"
            },
            "start_date_before": {
              "type": "string",
              "description": "Modified Schedule Start Time"
            }
          },
          "required": [
            "date_name",
            "date_name_before",
            "start_date",
            "start_date_before"
          ]
        }
      },
      {
        "name": "Health.HealthManagement.updateHealthGoal",
        "description": "Update health goals based on goal type, goal content, target time, etc.",
        "parameters": {
          "type": "object",
          "properties": {
            "goal_title": {
              "type": "string",
              "description": "Target Headings"
            },
            "goal_content": {
              "type": "string",
              "description": "Detailed description of the goal, such as weight loss of 10kg, body fat rate reduction of 5%, etc."
            },
            "time_limit": {
              "type": "string",
              "description": "Time to complete goal"
            },
            "update_content": {
              "type": "string",
              "description": "Updated content description"
            }
          },
          "required": [
            "goal_title",
            "goal_content",
            "time_limit",
            "update_content"
          ]
        }
      }
    ],
    "single_tool": [
      {
        "name": "Navigation.FlightTickets.modifyFlightBooking",
        "description": "Changing the departure time of a booked flight is not supported for departure and destination changes",
        "parameters": {
          "type": "object",
          "properties": {
            "departure": {
              "type": "string",
              "description": "Origination"
            },
            "destination": {
              "type": "string",
              "description": "Reach ground"
            },
            "name": {
              "type": "string",
              "description": "Name of person who booked"
            },
            "time": {
              "type": "string",
              "description": "Flight duration before modification"
            },
            "alter_time": {
              "type": "string",
              "description": "Revised flight time"
            },
            "alter_seat": {
              "type": "string",
              "description": "Class Selection"
            }
          },
          "required": [
            "departure",
            "destination",
            "name",
            "time",
            "alter_time",
            "alter_seat"
          ]
        }
      }
    ],
    "id": 30
  },
  {
    "messages": [
      {
        "role": "user",
        "content": "Change booking info for your flight"
      },
      {
        "role": "function call",
        "content": {
          "name": "Navigation.FlightTickets.modifyFlightBooking",
          "arguments": {}
        }
      },
      {
        "role": "assistant",
        "content": "Please provide a departure location"
      },
      {
        "role": "user",
        "content": "I leave from Beijing."
      },
      {
        "role": "function call",
        "content": {
          "name": "Navigation.FlightTickets.modifyFlightBooking",
          "arguments": {
            "departure": "Beijing"
          }
        }
      },
      {
        "role": "assistant",
        "content": "What's the destination"
      },
      {
        "role": "user",
        "content": "It was wrong before. Origination should be Shenzhen"
      },
      {
        "role": "function call",
        "content": {
          "name": "Navigation.FlightTickets.modifyFlightBooking",
          "arguments": {
            "departure": "Shenzhen"
          }
        }
      },
      {
        "role": "assistant",
        "content": "What's the destination"
      },
      {
        "role": "user",
        "content": "Shanghai is my destination for this trip."
      },
      {
        "role": "function call",
        "content": {
          "name": "Navigation.FlightTickets.modifyFlightBooking",
          "arguments": {
            "departure": "Shenzhen",
            "destination": "Shanghai"
          }
        }
      },
      {
        "role": "assistant",
        "content": "What's the name of the person who booked the reservation"
      },
      {
        "role": "user",
        "content": "The name of the booker is Zhang San."
      },
      {
        "role": "function call",
        "content": {
          "name": "Navigation.FlightTickets.modifyFlightBooking",
          "arguments": {
            "departure": "Shenzhen",
            "destination": "Shanghai",
            "name": "Zhang San"
          }
        }
      },
      {
        "role": "assistant",
        "content": "Please provide the flight time before the change"
      },
      {
        "role": "user",
        "content": "My original flight was at 10 a.m."
      },
      {
        "role": "function call",
        "content": {
          "name": "Navigation.FlightTickets.modifyFlightBooking",
          "arguments": {
            "departure": "Shenzhen",
            "destination": "Shanghai",
            "name": "Zhang San",
            "time": "10am"
          }
        }
      },
      {
        "role": "assistant",
        "content": "Please provide the revised flight time"
      },
      {
        "role": "user",
        "content": "The revised flight time is 2pm."
      },
      {
        "role": "function call",
        "content": {
          "name": "Navigation.FlightTickets.modifyFlightBooking",
          "arguments": {
            "departure": "Shenzhen",
            "destination": "Shanghai",
            "name": "Zhang San",
            "time": "10am",
            "alter_time": "14:00"
          }
        }
      }
    ],
    "multiple_tools": [
      {
        "name": "Finance.Payment.updatePayUserInfo",
        "description": "Update account user information",
        "parameters": {
          "type": "object",
          "properties": {
            "user_name": {
              "type": "string",
              "description": "username"
            },
            "phone": {
              "type": "string",
              "description": "User's phone number"
            },
            "address": {
              "type": "string",
              "description": "User Address"
            }
          },
          "required": [
            "user_name",
            "phone",
            "address"
          ]
        }
      },
      {
        "name": "SocialCommunication.SocialMedia.updateMediumInfo",
        "description": "Edit profile information",
        "parameters": {
          "type": "object",
          "properties": {
            "medium_name": {
              "type": "string",
              "description": "Media name"
            },
            "new_nickname": {
              "type": "string",
              "description": "Updated nickname"
            }
          },
          "required": [
            "medium_name",
            "new_nickname"
          ]
        }
      },
      {
        "name": "SystemTools.SystemSettings.modifyuserAccounts",
        "description": "Modify the current user's information",
        "parameters": {
          "type": "object",
          "properties": {
            "phone_number": {
              "type": "string",
              "description": "Phone No."
            },
            "nickname": {
              "type": "string",
              "description": "Nickname"
            }
          },
          "required": [
            "phone_number",
            "nickname"
          ]
        }
      },
      {
        "name": "SocialCommunication.Calling.modifyContact",
        "description": "Modify the information for the specified contact",
        "parameters": {
          "type": "object",
          "properties": {
            "contact_name": {
              "type": "string",
              "description": "Contact name to modify"
            },
            "new_contact_name": {
              "type": "string",
              "description": "New contact name (optional)"
            },
            "new_phone_number": {
              "type": "string",
              "description": "New contact phone number (optional)"
            },
            "phone_number": {
              "type": "string",
              "description": "Contact phone number to modify"
            }
          },
          "required": [
            "contact_name",
            "new_contact_name",
            "new_phone_number",
            "phone_number"
          ]
        }
      },
      {
        "name": "Navigation.FlightTickets.modifyFlightBooking",
        "description": "Changing the departure time of a booked flight is not supported for departure and destination changes",
        "parameters": {
          "type": "object",
          "properties": {
            "departure": {
              "type": "string",
              "description": "Origination"
            },
            "destination": {
              "type": "string",
              "description": "Reach ground"
            },
            "name": {
              "type": "string",
              "description": "Name of person who booked"
            },
            "time": {
              "type": "string",
              "description": "Flight duration before modification"
            },
            "alter_time": {
              "type": "string",
              "description": "Revised flight time"
            },
            "alter_seat": {
              "type": "string",
              "description": "Class Selection"
            }
          },
          "required": [
            "departure",
            "destination",
            "name",
            "time",
            "alter_time",
            "alter_seat"
          ]
        }
      }
    ],
    "single_tool": [
      {
        "name": "Navigation.FlightTickets.modifyFlightBooking",
        "description": "Changing the departure time of a booked flight is not supported for departure and destination changes",
        "parameters": {
          "type": "object",
          "properties": {
            "departure": {
              "type": "string",
              "description": "Origination"
            },
            "destination": {
              "type": "string",
              "description": "Reach ground"
            },
            "name": {
              "type": "string",
              "description": "Name of person who booked"
            },
            "time": {
              "type": "string",
              "description": "Flight duration before modification"
            },
            "alter_time": {
              "type": "string",
              "description": "Revised flight time"
            },
            "alter_seat": {
              "type": "string",
              "description": "Class Selection"
            }
          },
          "required": [
            "departure",
            "destination",
            "name",
            "time",
            "alter_time",
            "alter_seat"
          ]
        }
      }
    ],
    "id": 31
  },
  {
    "messages": [
      {
        "role": "user",
        "content": "Check-in online for my flight"
      },
      {
        "role": "function call",
        "content": {
          "name": "Navigation.FlightTickets.checkInOnlineFlight",
          "arguments": {}
        }
      },
      {
        "role": "assistant",
        "content": "What's the flight number"
      },
      {
        "role": "user",
        "content": "My flight number is CA8888, anything else I need to know?"
      },
      {
        "role": "function call",
        "content": {
          "name": "Navigation.FlightTickets.checkInOnlineFlight",
          "arguments": {
            "flight_number": "CA8888"
          }
        }
      },
      {
        "role": "assistant",
        "content": "Please provide your name to complete online check-in"
      },
      {
        "role": "user",
        "content": "It was wrong before. e.g. CA1234 should be HU7788"
      },
      {
        "role": "function call",
        "content": {
          "name": "Navigation.FlightTickets.checkInOnlineFlight",
          "arguments": {
            "flight_number": "HU7788"
          }
        }
      },
      {
        "role": "assistant",
        "content": "Please provide your name to complete online check-in"
      },
      {
        "role": "user",
        "content": "My name is Sun Li, please help me check in online."
      },
      {
        "role": "function call",
        "content": {
          "name": "Navigation.FlightTickets.checkInOnlineFlight",
          "arguments": {
            "flight_number": "HU7788",
            "name": "Sun Li"
          }
        }
      }
    ],
    "multiple_tools": [
      {
        "name": "Finance.Stocks.viewStockstrategy",
        "description": "View investment playbook",
        "parameters": {
          "type": "object",
          "properties": {},
          "required": []
        }
      },
      {
        "name": "MusicRadio.OnlineMusic.bindSocialPlatforms",
        "description": "Link your account to a social platform",
        "parameters": {
          "type": "object",
          "properties": {
            "platforms": {
              "type": "string",
              "description": "Social platforms to be linked"
            }
          },
          "required": [
            "platforms"
          ]
        }
      },
      {
        "name": "NewsMagazines.NewspapersMagazines.subscribeMagazine",
        "description": "Subscribe to magazine by magazine name",
        "parameters": {
          "type": "object",
          "properties": {
            "name": {
              "type": "string",
              "description": "Magazine Name"
            }
          },
          "required": [
            "name"
          ]
        }
      },
      {
        "name": "MusicRadio.Karaoke.manageAccount",
        "description": "Manage your account by following the steps in Account Management",
        "parameters": {
          "type": "object",
          "properties": {
            "action": {
              "type": "string",
              "description": "Account management actions"
            }
          },
          "required": [
            "action"
          ]
        }
      },
      {
        "name": "Navigation.FlightTickets.checkInOnlineFlight",
        "description": "Online check-in for selected flights",
        "parameters": {
          "type": "object",
          "properties": {
            "flight_number": {
              "type": "string",
              "description": "e.g. CA1234"
            },
            "name": {
              "type": "string",
              "description": "Name"
            },
            "passenger_id": {
              "type": "string",
              "description": "Rider ID number"
            }
          },
          "required": [
            "flight_number",
            "name",
            "passenger_id"
          ]
        }
      }
    ],
    "single_tool": [
      {
        "name": "Navigation.FlightTickets.checkInOnlineFlight",
        "description": "Online check-in for selected flights",
        "parameters": {
          "type": "object",
          "properties": {
            "flight_number": {
              "type": "string",
              "description": "e.g. CA1234"
            },
            "name": {
              "type": "string",
              "description": "Name"
            },
            "passenger_id": {
              "type": "string",
              "description": "Rider ID number"
            }
          },
          "required": [
            "flight_number",
            "name",
            "passenger_id"
          ]
        }
      }
    ],
    "id": 32
  },
  {
    "messages": [
      {
        "role": "user",
        "content": "Help me check in to my flight on my phone"
      },
      {
        "role": "function call",
        "content": {
          "name": "Navigation.FlightTickets.checkInOnlineFlight",
          "arguments": {}
        }
      },
      {
        "role": "assistant",
        "content": "What's the flight number"
      },
      {
        "role": "user",
        "content": "Flight number is CZ330 from Guangzhou to Beijing."
      },
      {
        "role": "function call",
        "content": {
          "name": "Navigation.FlightTickets.checkInOnlineFlight",
          "arguments": {
            "flight_number": "CZ330"
          }
        }
      },
      {
        "role": "assistant",
        "content": "What's the name?"
      },
      {
        "role": "user",
        "content": "It was wrong before. e.g. CA1234 should be HU7788"
      },
      {
        "role": "function call",
        "content": {
          "name": "Navigation.FlightTickets.checkInOnlineFlight",
          "arguments": {
            "flight_number": "HU7788"
          }
        }
      },
      {
        "role": "assistant",
        "content": "What's the name?"
      },
      {
        "role": "user",
        "content": "My name is Wang Xiaomei."
      },
      {
        "role": "function call",
        "content": {
          "name": "Navigation.FlightTickets.checkInOnlineFlight",
          "arguments": {
            "flight_number": "HU7788",
            "name": "Wang Xiaomei"
          }
        }
      }
    ],
    "multiple_tools": [
      {
        "name": "OfficeSoftware.CloudStorage.netdiskDownLoadFiles",
        "description": "Download specified files/folders to local in cloud drive",
        "parameters": {
          "type": "object",
          "properties": {
            "file_path": {
              "type": "string",
              "description": "File Path"
            },
            "target_path": {
              "type": "string",
              "description": "Direct Download"
            }
          },
          "required": [
            "file_path",
            "target_path"
          ]
        }
      },
      {
        "name": "UtilityTools.Reading.downloadReadingBook",
        "description": "Download books by title",
        "parameters": {
          "type": "object",
          "properties": {
            "book_name": {
              "type": "string",
              "description": "title of a book"
            },
            "book_author": {
              "type": "string",
              "description": "Author name"
            }
          },
          "required": [
            "book_name",
            "book_author"
          ]
        }
      },
      {
        "name": "Navigation.FlightTickets.checkInOnlineFlight",
        "description": "Online check-in for selected flights",
        "parameters": {
          "type": "object",
          "properties": {
            "flight_number": {
              "type": "string",
              "description": "e.g. CA1234"
            },
            "name": {
              "type": "string",
              "description": "Name"
            },
            "passenger_id": {
              "type": "string",
              "description": "Rider ID number"
            }
          },
          "required": [
            "flight_number",
            "name",
            "passenger_id"
          ]
        }
      },
      {
        "name": "MusicRadio.OnlineMusic.bindSocialPlatforms",
        "description": "Link your account to a social platform",
        "parameters": {
          "type": "object",
          "properties": {
            "platforms": {
              "type": "string",
              "description": "Social platforms to be linked"
            }
          },
          "required": [
            "platforms"
          ]
        }
      },
      {
        "name": "SystemTools.SystemSettings.OpenApp",
        "description": "Open the specified App on your phone",
        "parameters": {
          "type": "object",
          "properties": {
            "app_name": {
              "type": "string",
              "description": "App name"
            }
          },
          "required": [
            "app_name"
          ]
        }
      }
    ],
    "single_tool": [
      {
        "name": "Navigation.FlightTickets.checkInOnlineFlight",
        "description": "Online check-in for selected flights",
        "parameters": {
          "type": "object",
          "properties": {
            "flight_number": {
              "type": "string",
              "description": "e.g. CA1234"
            },
            "name": {
              "type": "string",
              "description": "Name"
            },
            "passenger_id": {
              "type": "string",
              "description": "Rider ID number"
            }
          },
          "required": [
            "flight_number",
            "name",
            "passenger_id"
          ]
        }
      }
    ],
    "id": 33
  },
  {
    "messages": [
      {
        "role": "user",
        "content": "See how much airline credit I have"
      },
      {
        "role": "function call",
        "content": {
          "name": "Navigation.FlightTickets.getFlightAirlinePoints",
          "arguments": {}
        }
      },
      {
        "role": "assistant",
        "content": "Provide the rider's ID number"
      },
      {
        "role": "user",
        "content": "My ID number is 876543210987654321, please."
      },
      {
        "role": "function call",
        "content": {
          "name": "Navigation.FlightTickets.getFlightAirlinePoints",
          "arguments": {
            "passenger_id": "876543210987654321"
          }
        }
      },
      {
        "role": "assistant",
        "content": "What's your rider's name"
      },
      {
        "role": "user",
        "content": "It was wrong before. Rider ID number should be 1357924680123456"
      },
      {
        "role": "function call",
        "content": {
          "name": "Navigation.FlightTickets.getFlightAirlinePoints",
          "arguments": {
            "passenger_id": "1357924680123456"
          }
        }
      },
      {
        "role": "assistant",
        "content": "What's your rider's name"
      },
      {
        "role": "user",
        "content": "The passenger's name is Li Si."
      },
      {
        "role": "function call",
        "content": {
          "name": "Navigation.FlightTickets.getFlightAirlinePoints",
          "arguments": {
            "passenger_id": "1357924680123456",
            "name": "Li Si"
          }
        }
      }
    ],
    "multiple_tools": [
      {
        "name": "Navigation.FlightTickets.getFlightAirlinePoints",
        "description": "Earn airline credits",
        "parameters": {
          "type": "object",
          "properties": {
            "passenger_id": {
              "type": "string",
              "description": "Rider ID number"
            },
            "name": {
              "type": "string",
              "description": "Passenger's Name"
            },
            "airline": {
              "type": "string",
              "description": "Airline Name"
            }
          },
          "required": [
            "passenger_id",
            "name",
            "airline"
          ]
        }
      },
      {
        "name": "ConvenientLiving.JobRecruitment.getJobApplicantsForPosition",
        "description": "Get information about people applying for specific roles",
        "parameters": {
          "type": "object",
          "properties": {
            "position_name": {
              "type": "string",
              "description": "Job title, required"
            }
          },
          "required": [
            "position_name"
          ]
        }
      },
      {
        "name": "ConvenientLiving.FoodDelivery.getRestaurantLicense",
        "description": "Get licensing info for select restaurants",
        "parameters": {
          "type": "object",
          "properties": {
            "restaurant_name": {
              "type": "string",
              "description": "Name of the restaurant"
            }
          },
          "required": [
            "restaurant_name"
          ]
        }
      },
      {
        "name": "ConvenientLiving.UtilityPayments.queryBillInfo",
        "description": "Used to get billing details for utilities, etc.",
        "parameters": {
          "type": "object",
          "properties": {
            "service_type": {
              "type": "string",
              "description": "Types of paid services, such as utilities, gas, etc."
            },
            "user_name": {
              "type": "string",
              "description": "User Name"
            },
            "time": {
              "type": "string",
              "description": "Bill Time"
            }
          },
          "required": [
            "service_type",
            "user_name",
            "time"
          ]
        }
      },
      {
        "name": "ConvenientLiving.GovernmentServices.queryBusinessLicenseInfo",
        "description": "Get information about your business license",
        "parameters": {
          "type": "object",
          "properties": {
            "enterprise_name": {
              "type": "string",
              "description": "Name of the Enterprise"
            }
          },
          "required": [
            "enterprise_name"
          ]
        }
      }
    ],
    "single_tool": [
      {
        "name": "Navigation.FlightTickets.getFlightAirlinePoints",
        "description": "Earn airline credits",
        "parameters": {
          "type": "object",
          "properties": {
            "passenger_id": {
              "type": "string",
              "description": "Rider ID number"
            },
            "name": {
              "type": "string",
              "description": "Passenger's Name"
            },
            "airline": {
              "type": "string",
              "description": "Airline Name"
            }
          },
          "required": [
            "passenger_id",
            "name",
            "airline"
          ]
        }
      }
    ],
    "id": 36
  },
  {
    "messages": [
      {
        "role": "user",
        "content": "Can you check my airline credit balance?"
      },
      {
        "role": "function call",
        "content": {
          "name": "Navigation.FlightTickets.getFlightAirlinePoints",
          "arguments": {}
        }
      },
      {
        "role": "assistant",
        "content": "Provide the rider's ID number"
      },
      {
        "role": "user",
        "content": "123456789012345678 This is the first 18 digits of my ID number."
      },
      {
        "role": "function call",
        "content": {
          "name": "Navigation.FlightTickets.getFlightAirlinePoints",
          "arguments": {
            "passenger_id": "123456789012345678"
          }
        }
      },
      {
        "role": "assistant",
        "content": "What's your rider's name"
      },
      {
        "role": "user",
        "content": "It was wrong before. Rider ID number should be 876543210987654321"
      },
      {
        "role": "function call",
        "content": {
          "name": "Navigation.FlightTickets.getFlightAirlinePoints",
          "arguments": {
            "passenger_id": "876543210987654321"
          }
        }
      },
      {
        "role": "assistant",
        "content": "What's your rider's name"
      },
      {
        "role": "user",
        "content": "The rider's name is Zhang San, do you need me to provide any additional information?"
      },
      {
        "role": "function call",
        "content": {
          "name": "Navigation.FlightTickets.getFlightAirlinePoints",
          "arguments": {
            "passenger_id": "876543210987654321",
            "name": "Zhang San"
          }
        }
      }
    ],
    "multiple_tools": [
      {
        "name": "OnlineShopping.ExpressDelivery.rateExpressService",
        "description": "Rate courier service",
        "parameters": {
          "type": "object",
          "properties": {
            "express_id": {
              "type": "string",
              "description": "Tracking Number"
            },
            "signing_date": {
              "type": "string",
              "description": "The date of signing"
            },
            "rating": {
              "type": "string",
              "description": "Rating, 1-5 points"
            },
            "comment": {
              "type": "string",
              "description": "Scoring contents"
            }
          },
          "required": [
            "express_id",
            "signing_date",
            "rating",
            "comment"
          ]
        }
      },
      {
        "name": "Navigation.FlightTickets.getFlightAirlinePoints",
        "description": "Earn airline credits",
        "parameters": {
          "type": "object",
          "properties": {
            "passenger_id": {
              "type": "string",
              "description": "Rider ID number"
            },
            "name": {
              "type": "string",
              "description": "Passenger's Name"
            },
            "airline": {
              "type": "string",
              "description": "Airline Name"
            }
          },
          "required": [
            "passenger_id",
            "name",
            "airline"
          ]
        }
      },
      {
        "name": "Travel.ItineraryServices.getTravelTransportationOptions",
        "description": "Provide transportation and directions to your destination",
        "parameters": {
          "type": "object",
          "properties": {
            "origin": {
              "type": "string",
              "description": "Origination"
            },
            "destination": {
              "type": "string",
              "description": "destination"
            }
          },
          "required": [
            "origin",
            "destination"
          ]
        }
      },
      {
        "name": "Finance.Banking.viewBalance",
        "description": "Check the current balance of your bank account",
        "parameters": {
          "type": "object",
          "properties": {
            "account_number": {
              "type": "string",
              "description": "Inquired account number"
            }
          },
          "required": [
            "account_number"
          ]
        }
      },
      {
        "name": "Finance.Payment.getPayBalance",
        "description": "Check the current balance of the account",
        "parameters": {
          "type": "object",
          "properties": {},
          "required": []
        }
      }
    ],
    "single_tool": [
      {
        "name": "Navigation.FlightTickets.getFlightAirlinePoints",
        "description": "Earn airline credits",
        "parameters": {
          "type": "object",
          "properties": {
            "passenger_id": {
              "type": "string",
              "description": "Rider ID number"
            },
            "name": {
              "type": "string",
              "description": "Passenger's Name"
            },
            "airline": {
              "type": "string",
              "description": "Airline Name"
            }
          },
          "required": [
            "passenger_id",
            "name",
            "airline"
          ]
        }
      }
    ],
    "id": 37
  },
  {
    "messages": [
      {
        "role": "user",
        "content": "See how to redeem my Loyalty Points"
      },
      {
        "role": "function call",
        "content": {
          "name": "Navigation.FlightTickets.useFlightAirlinePoints",
          "arguments": {}
        }
      },
      {
        "role": "assistant",
        "content": "What is the rider's ID number"
      },
      {
        "role": "user",
        "content": "The rider's ID number is 440106198612020056."
      },
      {
        "role": "function call",
        "content": {
          "name": "Navigation.FlightTickets.useFlightAirlinePoints",
          "arguments": {
            "passenger_id": "440106198612020056"
          }
        }
      },
      {
        "role": "assistant",
        "content": "What's your rider's name"
      },
      {
        "role": "user",
        "content": "It was wrong before. Rider ID number should be 123456"
      },
      {
        "role": "function call",
        "content": {
          "name": "Navigation.FlightTickets.useFlightAirlinePoints",
          "arguments": {
            "passenger_id": "123456"
          }
        }
      },
      {
        "role": "assistant",
        "content": "What's your rider's name"
      },
      {
        "role": "user",
        "content": "The passenger's name is Zhou Wuzheng"
      },
      {
        "role": "function call",
        "content": {
          "name": "Navigation.FlightTickets.useFlightAirlinePoints",
          "arguments": {
            "passenger_id": "123456",
            "name": "Zhou Wuzheng"
          }
        }
      }
    ],
    "multiple_tools": [
      {
        "name": "Travel.ScenicAreaServices.getScenicSpotRating",
        "description": "Get user ratings for selected scenic spots",
        "parameters": {
          "type": "object",
          "properties": {
            "name": {
              "type": "string",
              "description": "Name of the tourist area"
            }
          },
          "required": [
            "name"
          ]
        }
      },
      {
        "name": "Navigation.FlightTickets.getFlightAirlinePoints",
        "description": "Earn airline credits",
        "parameters": {
          "type": "object",
          "properties": {
            "passenger_id": {
              "type": "string",
              "description": "Rider ID number"
            },
            "name": {
              "type": "string",
              "description": "Passenger's Name"
            },
            "airline": {
              "type": "string",
              "description": "Airline Name"
            }
          },
          "required": [
            "passenger_id",
            "name",
            "airline"
          ]
        }
      },
      {
        "name": "Education.OnlineClasses.evaluateCourse",
        "description": "Rate a course",
        "parameters": {
          "type": "object",
          "properties": {
            "course_name": {
              "type": "string",
              "description": "Course Title"
            },
            "rating": {
              "type": "string",
              "description": "Rating"
            }
          },
          "required": [
            "course_name",
            "rating"
          ]
        }
      },
      {
        "name": "Navigation.FlightTickets.useFlightAirlinePoints",
        "description": "Redeem frequent flyer points",
        "parameters": {
          "type": "object",
          "properties": {
            "passenger_id": {
              "type": "string",
              "description": "Rider ID number"
            },
            "name": {
              "type": "string",
              "description": "Passenger's Name"
            },
            "points_to_redeem": {
              "type": "string",
              "description": "Items to redeem"
            }
          },
          "required": [
            "passenger_id",
            "name",
            "points_to_redeem"
          ]
        }
      },
      {
        "name": "Navigation.TrafficViolations.queryDrivingLicensePoints",
        "description": "Check the remaining points on your driver's license",
        "parameters": {
          "type": "object",
          "properties": {
            "driving_license_number": {
              "type": "string",
              "description": "Licence Number:"
            }
          },
          "required": [
            "driving_license_number"
          ]
        }
      }
    ],
    "single_tool": [
      {
        "name": "Navigation.FlightTickets.useFlightAirlinePoints",
        "description": "Redeem frequent flyer points",
        "parameters": {
          "type": "object",
          "properties": {
            "passenger_id": {
              "type": "string",
              "description": "Rider ID number"
            },
            "name": {
              "type": "string",
              "description": "Passenger's Name"
            },
            "points_to_redeem": {
              "type": "string",
              "description": "Items to redeem"
            }
          },
          "required": [
            "passenger_id",
            "name",
            "points_to_redeem"
          ]
        }
      }
    ],
    "id": 38
  },
  {
    "messages": [
      {
        "role": "user",
        "content": "Look at my past flight booking records, remember to be more detailed"
      },
      {
        "role": "function call",
        "content": {
          "name": "Navigation.FlightTickets.viewBookingFlightHistory",
          "arguments": {}
        }
      },
      {
        "role": "assistant",
        "content": "Provide the rider's ID number"
      },
      {
        "role": "user",
        "content": "987654321098765432, which is the rider's ID number."
      },
      {
        "role": "function call",
        "content": {
          "name": "Navigation.FlightTickets.viewBookingFlightHistory",
          "arguments": {
            "passenger_id": "987654321098765432"
          }
        }
      },
      {
        "role": "assistant",
        "content": "What's your rider's name"
      },
      {
        "role": "user",
        "content": "The rider's name is Li Si."
      },
      {
        "role": "function call",
        "content": {
          "name": "Navigation.FlightTickets.viewBookingFlightHistory",
          "arguments": {
            "passenger_id": "987654321098765432",
            "name": "Li Si"
          }
        }
      },
      {
        "role": "assistant",
        "content": "Please provide a start time."
      },
      {
        "role": "user",
        "content": "It was wrong before. Passenger's Name should be Zhang San"
      },
      {
        "role": "function call",
        "content": {
          "name": "Navigation.FlightTickets.viewBookingFlightHistory",
          "arguments": {
            "passenger_id": "987654321098765432",
            "name": "Zhang San"
          }
        }
      },
      {
        "role": "assistant",
        "content": "Please provide a start time."
      },
      {
        "role": "user",
        "content": "Started in January of this year."
      },
      {
        "role": "function call",
        "content": {
          "name": "Navigation.FlightTickets.viewBookingFlightHistory",
          "arguments": {
            "passenger_id": "987654321098765432",
            "name": "Zhang San",
            "start_time": "January of this year"
          }
        }
      }
    ],
    "multiple_tools": [
      {
        "name": "Navigation.FlightTickets.viewBookingFlightHistory",
        "description": "View user's past flight bookings",
        "parameters": {
          "type": "object",
          "properties": {
            "passenger_id": {
              "type": "string",
              "description": "Rider ID number"
            },
            "name": {
              "type": "string",
              "description": "Passenger's Name"
            },
            "start_time": {
              "type": "string",
              "description": "Start Time "
            },
            "end_time": {
              "type": "string",
              "description": "End Time"
            }
          },
          "required": [
            "passenger_id",
            "name",
            "start_time",
            "end_time"
          ]
        }
      },
      {
        "name": "OfficeSoftware.Documents.getDocumentHistory",
        "description": "Get the action history of the specified document",
        "parameters": {
          "type": "object",
          "properties": {
            "document_name": {
              "type": "string",
              "description": "To get the document name of the history, it is required"
            }
          },
          "required": [
            "document_name"
          ]
        }
      },
      {
        "name": "SocialCommunication.Calling.viewPhoneCallRecords",
        "description": "View all call logs; view assigned call logs",
        "parameters": {
          "type": "object",
          "properties": {
            "contact_name": {
              "type": "string",
              "description": "Name of the contact to view; defaults to all records"
            }
          },
          "required": [
            "contact_name"
          ]
        }
      },
      {
        "name": "Navigation.TrainTickets.viewBookingTrainHistory",
        "description": "View user's past booking history",
        "parameters": {
          "type": "object",
          "properties": {},
          "required": []
        }
      },
      {
        "name": "Travel.HotelServices.getHotelReservationHistory",
        "description": "Get a user's hotel booking history",
        "parameters": {
          "type": "object",
          "properties": {
            "start_date": {
              "type": "string",
              "description": "Start Time "
            },
            "end_date": {
              "type": "string",
              "description": "End Time"
            }
          },
          "required": [
            "start_date",
            "end_date"
          ]
        }
      }
    ],
    "single_tool": [
      {
        "name": "Navigation.FlightTickets.viewBookingFlightHistory",
        "description": "View user's past flight bookings",
        "parameters": {
          "type": "object",
          "properties": {
            "passenger_id": {
              "type": "string",
              "description": "Rider ID number"
            },
            "name": {
              "type": "string",
              "description": "Passenger's Name"
            },
            "start_time": {
              "type": "string",
              "description": "Start Time "
            },
            "end_time": {
              "type": "string",
              "description": "End Time"
            }
          },
          "required": [
            "passenger_id",
            "name",
            "start_time",
            "end_time"
          ]
        }
      }
    ],
    "id": 41
  },
  {
    "messages": [
      {
        "role": "user",
        "content": "Flip through my previous flights and see what's on the record"
      },
      {
        "role": "function call",
        "content": {
          "name": "Navigation.FlightTickets.viewBookingFlightHistory",
          "arguments": {}
        }
      },
      {
        "role": "assistant",
        "content": "Provide the rider's ID number"
      },
      {
        "role": "user",
        "content": "123456789012345678"
      },
      {
        "role": "function call",
        "content": {
          "name": "Navigation.FlightTickets.viewBookingFlightHistory",
          "arguments": {
            "passenger_id": "123456789012345678"
          }
        }
      },
      {
        "role": "assistant",
        "content": "What's your rider's name"
      },
      {
        "role": "user",
        "content": "It was wrong before. Rider ID number should be 876543210987654321"
      },
      {
        "role": "function call",
        "content": {
          "name": "Navigation.FlightTickets.viewBookingFlightHistory",
          "arguments": {
            "passenger_id": "876543210987654321"
          }
        }
      },
      {
        "role": "assistant",
        "content": "What's your rider's name"
      },
      {
        "role": "user",
        "content": "The passenger's name is Zhang San."
      },
      {
        "role": "function call",
        "content": {
          "name": "Navigation.FlightTickets.viewBookingFlightHistory",
          "arguments": {
            "passenger_id": "876543210987654321",
            "name": "Zhang San"
          }
        }
      },
      {
        "role": "assistant",
        "content": "Please provide a start time."
      },
      {
        "role": "user",
        "content": "It started in Specifically, December 5th."
      },
      {
        "role": "function call",
        "content": {
          "name": "Navigation.FlightTickets.viewBookingFlightHistory",
          "arguments": {
            "passenger_id": "876543210987654321",
            "name": "Zhang San",
            "start_time": "December 5th"
          }
        }
      }
    ],
    "multiple_tools": [
      {
        "name": "Health.MedicalServices.getPatientMedicalRecord",
        "description": "Obtain the patient's medical record information based on the patient's name, etc.",
        "parameters": {
          "type": "object",
          "properties": {
            "patient_name": {
              "type": "string",
              "description": "Patient Name"
            }
          },
          "required": [
            "patient_name"
          ]
        }
      },
      {
        "name": "SocialCommunication.Calling.viewPhoneCallRecords",
        "description": "View all call logs; view assigned call logs",
        "parameters": {
          "type": "object",
          "properties": {
            "contact_name": {
              "type": "string",
              "description": "Name of the contact to view; defaults to all records"
            }
          },
          "required": [
            "contact_name"
          ]
        }
      },
      {
        "name": "Navigation.FlightTickets.viewBookingFlightHistory",
        "description": "View user's past flight bookings",
        "parameters": {
          "type": "object",
          "properties": {
            "passenger_id": {
              "type": "string",
              "description": "Rider ID number"
            },
            "name": {
              "type": "string",
              "description": "Passenger's Name"
            },
            "start_time": {
              "type": "string",
              "description": "Start Time "
            },
            "end_time": {
              "type": "string",
              "description": "End Time"
            }
          },
          "required": [
            "passenger_id",
            "name",
            "start_time",
            "end_time"
          ]
        }
      },
      {
        "name": "OfficeSoftware.CloudStorage.netdiskGetUploadFilesRecords",
        "description": "Get a list of uploaded files/folders records in Cloud Drive",
        "parameters": {
          "type": "object",
          "properties": {},
          "required": []
        }
      },
      {
        "name": "Travel.HotelServices.getHotelReservationHistory",
        "description": "Get a user's hotel booking history",
        "parameters": {
          "type": "object",
          "properties": {
            "start_date": {
              "type": "string",
              "description": "Start Time "
            },
            "end_date": {
              "type": "string",
              "description": "End Time"
            }
          },
          "required": [
            "start_date",
            "end_date"
          ]
        }
      }
    ],
    "single_tool": [
      {
        "name": "Navigation.FlightTickets.viewBookingFlightHistory",
        "description": "View user's past flight bookings",
        "parameters": {
          "type": "object",
          "properties": {
            "passenger_id": {
              "type": "string",
              "description": "Rider ID number"
            },
            "name": {
              "type": "string",
              "description": "Passenger's Name"
            },
            "start_time": {
              "type": "string",
              "description": "Start Time "
            },
            "end_time": {
              "type": "string",
              "description": "End Time"
            }
          },
          "required": [
            "passenger_id",
            "name",
            "start_time",
            "end_time"
          ]
        }
      }
    ],
    "id": 42
  },
  {
    "messages": [
      {
        "role": "user",
        "content": "Find out how many train tickets are left"
      },
      {
        "role": "function call",
        "content": {
          "name": "Navigation.TrainTickets.queryTrainTicket",
          "arguments": {}
        }
      },
      {
        "role": "assistant",
        "content": "Where is your departure station?"
      },
      {
        "role": "user",
        "content": "My departure station is Xi 'an North."
      },
      {
        "role": "function call",
        "content": {
          "name": "Navigation.TrainTickets.queryTrainTicket",
          "arguments": {
            "departure_station": "Xi 'an North Railway"
          }
        }
      },
      {
        "role": "assistant",
        "content": "Where is your arrival station?"
      },
      {
        "role": "user",
        "content": "My arrival station is Lanzhou West Railway Station."
      },
      {
        "role": "function call",
        "content": {
          "name": "Navigation.TrainTickets.queryTrainTicket",
          "arguments": {
            "departure_station": "Xi 'an North Railway",
            "destination_station": "Lanzhou West Railway Station"
          }
        }
      },
      {
        "role": "assistant",
        "content": "What's the date of your trip?"
      },
      {
        "role": "user",
        "content": "It was wrong before. arrival station should be Changsha South"
      },
      {
        "role": "function call",
        "content": {
          "name": "Navigation.TrainTickets.queryTrainTicket",
          "arguments": {
            "departure_station": "Xi 'an North Railway",
            "destination_station": "Changsha South"
          }
        }
      },
      {
        "role": "assistant",
        "content": "What's the date of your trip?"
      },
      {
        "role": "user",
        "content": "I plan to leave this Saturday."
      },
      {
        "role": "function call",
        "content": {
          "name": "Navigation.TrainTickets.queryTrainTicket",
          "arguments": {
            "departure_station": "Xi 'an North Railway",
            "destination_station": "Changsha South",
            "ride_date": "Saturday"
          }
        }
      },
      {
        "role": "assistant",
        "content": "Please provide the type of seat you would like to inquire about"
      },
      {
        "role": "user",
        "content": "I would like to check the fare and availability of Softbeds."
      },
      {
        "role": "function call",
        "content": {
          "name": "Navigation.TrainTickets.queryTrainTicket",
          "arguments": {
            "departure_station": "Xi 'an North Railway",
            "destination_station": "Changsha South",
            "ride_date": "Saturday",
            "seat_type": "Softbed"
          }
        }
      }
    ],
    "multiple_tools": [
      {
        "name": "Navigation.Bicycles.searchBikesOrders",
        "description": "See a list of bike rides",
        "parameters": {
          "type": "object",
          "properties": {},
          "required": []
        }
      },
      {
        "name": "UtilityTools.Memo.searchNotes",
        "description": "Search memos by keyword (see all by default)",
        "parameters": {
          "type": "object",
          "properties": {
            "key_words": {
              "type": "string",
              "description": "KEYWORDS"
            }
          },
          "required": [
            "key_words"
          ]
        }
      },
      {
        "name": "Navigation.TrainTickets.searchWaitlistTrain",
        "description": "Search for alternate train numbers based on the criteria entered by the user",
        "parameters": {
          "type": "object",
          "properties": {
            "ride_date": {
              "type": "string",
              "description": "Date of trip"
            },
            "departure_station": {
              "type": "string",
              "description": "Departure Station"
            },
            "destination_station": {
              "type": "string",
              "description": "arrival station"
            }
          },
          "required": [
            "ride_date",
            "departure_station",
            "destination_station"
          ]
        }
      },
      {
        "name": "Navigation.TrainTickets.queryTrainTicket",
        "description": "Check the status of the remaining train tickets for the specified date, departure place, and destination",
        "parameters": {
          "type": "object",
          "properties": {
            "ride_date": {
              "type": "string",
              "description": "Date of trip"
            },
            "departure_station": {
              "type": "string",
              "description": "Departure Station"
            },
            "destination_station": {
              "type": "string",
              "description": "arrival station"
            },
            "train_type": {
              "type": "string",
              "description": "Train type, optional types are high-speed rail, motor vehicles, general express, express, etc."
            },
            "seat_type": {
              "type": "string",
              "description": "Seat Type"
            }
          },
          "required": [
            "ride_date",
            "departure_station",
            "destination_station",
            "train_type",
            "seat_type"
          ]
        }
      },
      {
        "name": "MusicRadio.RadioStations.radioSearchPlaylist",
        "description": "Search Playlists",
        "parameters": {
          "type": "object",
          "properties": {
            "keyword": {
              "type": "string",
              "description": "category"
            }
          },
          "required": [
            "keyword"
          ]
        }
      }
    ],
    "single_tool": [
      {
        "name": "Navigation.TrainTickets.queryTrainTicket",
        "description": "Check the status of the remaining train tickets for the specified date, departure place, and destination",
        "parameters": {
          "type": "object",
          "properties": {
            "ride_date": {
              "type": "string",
              "description": "Date of trip"
            },
            "departure_station": {
              "type": "string",
              "description": "Departure Station"
            },
            "destination_station": {
              "type": "string",
              "description": "arrival station"
            },
            "train_type": {
              "type": "string",
              "description": "Train type, optional types are high-speed rail, motor vehicles, general express, express, etc."
            },
            "seat_type": {
              "type": "string",
              "description": "Seat Type"
            }
          },
          "required": [
            "ride_date",
            "departure_station",
            "destination_station",
            "train_type",
            "seat_type"
          ]
        }
      }
    ],
    "id": 43
  },
  {
    "messages": [
      {
        "role": "user",
        "content": "Do you still have tickets for the train?"
      },
      {
        "role": "function call",
        "content": {
          "name": "Navigation.TrainTickets.queryTrainTicket",
          "arguments": {}
        }
      },
      {
        "role": "assistant",
        "content": "Where is your departure station?"
      },
      {
        "role": "user",
        "content": "My departure station is Guangzhou South Station."
      },
      {
        "role": "function call",
        "content": {
          "name": "Navigation.TrainTickets.queryTrainTicket",
          "arguments": {
            "departure_station": "Guangzhou South"
          }
        }
      },
      {
        "role": "assistant",
        "content": "Where is your arrival station?"
      },
      {
        "role": "user",
        "content": "It was wrong before. Departure Station should be Xi 'an North Railway"
      },
      {
        "role": "function call",
        "content": {
          "name": "Navigation.TrainTickets.queryTrainTicket",
          "arguments": {
            "departure_station": "Xi 'an North Railway"
          }
        }
      },
      {
        "role": "assistant",
        "content": "Where is your arrival station?"
      },
      {
        "role": "user",
        "content": "My arrival station is Changsha South."
      },
      {
        "role": "function call",
        "content": {
          "name": "Navigation.TrainTickets.queryTrainTicket",
          "arguments": {
            "departure_station": "Xi 'an North Railway",
            "destination_station": "Changsha South"
          }
        }
      },
      {
        "role": "assistant",
        "content": "When do you take the train?"
      },
      {
        "role": "user",
        "content": "The date of the trip is April 10th."
      },
      {
        "role": "function call",
        "content": {
          "name": "Navigation.TrainTickets.queryTrainTicket",
          "arguments": {
            "departure_station": "Xi 'an North Railway",
            "destination_station": "Changsha South",
            "ride_date": "April 10th"
          }
        }
      },
      {
        "role": "assistant",
        "content": "Please provide the type of seat you would like to inquire about"
      },
      {
        "role": "user",
        "content": "I would like to inquire about second class seats."
      },
      {
        "role": "function call",
        "content": {
          "name": "Navigation.TrainTickets.queryTrainTicket",
          "arguments": {
            "departure_station": "Xi 'an North Railway",
            "destination_station": "Changsha South",
            "ride_date": "April 10th",
            "seat_type": "Second class"
          }
        }
      }
    ],
    "multiple_tools": [
      {
        "name": "OnlineShopping.Mall.searchCommodityOrders",
        "description": "Query all eligible orders by commodity name and other criteria",
        "parameters": {
          "type": "object",
          "properties": {
            "goods": {
              "type": "string",
              "description": "Product Name"
            },
            "order_stage": {
              "type": "string",
              "description": "Order status, e.g. Pending Payment, Pending Receipt, Completed, Cancelled, Refund/After Sales"
            },
            "evaluate_stage": {
              "type": "string",
              "description": "Review status, e.g. reviewed, pending review"
            }
          },
          "required": [
            "goods",
            "order_stage",
            "evaluate_stage"
          ]
        }
      },
      {
        "name": "Navigation.TrainTickets.queryTrainTicket",
        "description": "Check the status of the remaining train tickets for the specified date, departure place, and destination",
        "parameters": {
          "type": "object",
          "properties": {
            "ride_date": {
              "type": "string",
              "description": "Date of trip"
            },
            "departure_station": {
              "type": "string",
              "description": "Departure Station"
            },
            "destination_station": {
              "type": "string",
              "description": "arrival station"
            },
            "train_type": {
              "type": "string",
              "description": "Train type, optional types are high-speed rail, motor vehicles, general express, express, etc."
            },
            "seat_type": {
              "type": "string",
              "description": "Seat Type"
            }
          },
          "required": [
            "ride_date",
            "departure_station",
            "destination_station",
            "train_type",
            "seat_type"
          ]
        }
      },
      {
        "name": "Navigation.TrainTickets.queryPassengerTrainOrder",
        "description": "Check the passenger's train ticket reservation information",
        "parameters": {
          "type": "object",
          "properties": {
            "passenger_id": {
              "type": "string",
              "description": "Rider ID number"
            },
            "name": {
              "type": "string",
              "description": "Name of person to query"
            },
            "time": {
              "type": "string",
              "description": "Release Date"
            }
          },
          "required": [
            "passenger_id",
            "name",
            "time"
          ]
        }
      },
      {
        "name": "Finance.Stocks.getStockPosition",
        "description": "Query the position status of designated stocks",
        "parameters": {
          "type": "object",
          "properties": {
            "stock_code": {
              "type": "string",
              "description": "Ticker"
            },
            "stock_name": {
              "type": "string",
              "description": "Stock Key Name"
            }
          },
          "required": [
            "stock_code",
            "stock_name"
          ]
        }
      },
      {
        "name": "ConvenientLiving.JobRecruitment.checkJobPositionAvailability",
        "description": "Check if a specific position is still being recruited",
        "parameters": {
          "type": "object",
          "properties": {
            "job_name": {
              "type": "string",
              "description": "Position name"
            },
            "company_name": {
              "type": "string",
              "description": "Company name"
            }
          },
          "required": [
            "job_name",
            "company_name"
          ]
        }
      }
    ],
    "single_tool": [
      {
        "name": "Navigation.TrainTickets.queryTrainTicket",
        "description": "Check the status of the remaining train tickets for the specified date, departure place, and destination",
        "parameters": {
          "type": "object",
          "properties": {
            "ride_date": {
              "type": "string",
              "description": "Date of trip"
            },
            "departure_station": {
              "type": "string",
              "description": "Departure Station"
            },
            "destination_station": {
              "type": "string",
              "description": "arrival station"
            },
            "train_type": {
              "type": "string",
              "description": "Train type, optional types are high-speed rail, motor vehicles, general express, express, etc."
            },
            "seat_type": {
              "type": "string",
              "description": "Seat Type"
            }
          },
          "required": [
            "ride_date",
            "departure_station",
            "destination_station",
            "train_type",
            "seat_type"
          ]
        }
      }
    ],
    "id": 44
  },
  {
    "messages": [
      {
        "role": "user",
        "content": "Hey, I'm planning a trip, can you check the train ticket information for me? Although I have not yet determined the city of departure and arrival, as well as the specific date."
      },
      {
        "role": "function call",
        "content": {
          "name": "Navigation.TrainTickets.bookTrainTicket",
          "arguments": {}
        }
      },
      {
        "role": "assistant",
        "content": "Please provide departure station information"
      },
      {
        "role": "user",
        "content": "The departure station is Beijing West Station."
      },
      {
        "role": "function call",
        "content": {
          "name": "Navigation.TrainTickets.bookTrainTicket",
          "arguments": {
            "departure_station": "Beijing West Railway Station"
          }
        }
      },
      {
        "role": "assistant",
        "content": "Please provide arrival station"
      },
      {
        "role": "user",
        "content": "The arrival station is Hangzhou East."
      },
      {
        "role": "function call",
        "content": {
          "name": "Navigation.TrainTickets.bookTrainTicket",
          "arguments": {
            "departure_station": "Beijing West Railway Station",
            "destination_station": "Hangzhou East"
          }
        }
      },
      {
        "role": "assistant",
        "content": "Provide the rider's ID number"
      },
      {
        "role": "user",
        "content": "It was wrong before. Departure Station should be Shanghai"
      },
      {
        "role": "function call",
        "content": {
          "name": "Navigation.TrainTickets.bookTrainTicket",
          "arguments": {
            "departure_station": "Shanghai",
            "destination_station": "Hangzhou East"
          }
        }
      },
      {
        "role": "assistant",
        "content": "Provide the rider's ID number"
      },
      {
        "role": "user",
        "content": "The ID number is 234567890123456789."
      },
      {
        "role": "function call",
        "content": {
          "name": "Navigation.TrainTickets.bookTrainTicket",
          "arguments": {
            "departure_station": "Shanghai",
            "destination_station": "Hangzhou East",
            "passenger_id": "234567890123456789"
          }
        }
      },
      {
        "role": "assistant",
        "content": "What's the rider's name"
      },
      {
        "role": "user",
        "content": "The passenger's name was Li Si."
      },
      {
        "role": "function call",
        "content": {
          "name": "Navigation.TrainTickets.bookTrainTicket",
          "arguments": {
            "departure_station": "Shanghai",
            "destination_station": "Hangzhou East",
            "passenger_id": "234567890123456789",
            "passenger_name": "Li Si"
          }
        }
      },
      {
        "role": "assistant",
        "content": "When do you take the train?"
      },
      {
        "role": "user",
        "content": "October 5th, I plan to travel that day."
      },
      {
        "role": "function call",
        "content": {
          "name": "Navigation.TrainTickets.bookTrainTicket",
          "arguments": {
            "departure_station": "Shanghai",
            "destination_station": "Hangzhou East",
            "passenger_id": "234567890123456789",
            "passenger_name": "Li Si",
            "ride_date": "October 5th"
          }
        }
      },
      {
        "role": "assistant",
        "content": "What type of seat would you like to book"
      },
      {
        "role": "user",
        "content": "I would like to book a second class seat at a moderate and comfortable price."
      },
      {
        "role": "function call",
        "content": {
          "name": "Navigation.TrainTickets.bookTrainTicket",
          "arguments": {
            "departure_station": "Shanghai",
            "destination_station": "Hangzhou East",
            "passenger_id": "234567890123456789",
            "passenger_name": "Li Si",
            "ride_date": "October 5th",
            "seat_type": "Second class"
          }
        }
      }
    ],
    "multiple_tools": [
      {
        "name": "Finance.Insurance.getInsuranceFAQ",
        "description": "Frequently asked questions and answers about insurance",
        "parameters": {
          "type": "object",
          "properties": {
            "keyword": {
              "type": "string",
              "description": "Question Keywords"
            }
          },
          "required": [
            "keyword"
          ]
        }
      },
      {
        "name": "Navigation.TrainTickets.queryTrainDelayInfo",
        "description": "Check if the specified train is late and how long it is",
        "parameters": {
          "type": "object",
          "properties": {
            "train_number": {
              "type": "string",
              "description": "Trips to inquire about"
            }
          },
          "required": [
            "train_number"
          ]
        }
      },
      {
        "name": "Navigation.TrainTickets.bookTrainTicket",
        "description": "Book a train ticket for a specific time, origin, or destination for a specific rider",
        "parameters": {
          "type": "object",
          "properties": {
            "ride_date": {
              "type": "string",
              "description": "Date of trip"
            },
            "departure_station": {
              "type": "string",
              "description": "Departure Station"
            },
            "destination_station": {
              "type": "string",
              "description": "arrival station"
            },
            "train_type": {
              "type": "string",
              "description": "Train type, optional types are high-speed rail, motor vehicles, general express, express, etc."
            },
            "seat_type": {
              "type": "string",
              "description": "Seat Type"
            },
            "passenger_name": {
              "type": "string",
              "description": "Rider's name"
            },
            "passenger_id": {
              "type": "string",
              "description": "Rider ID number"
            }
          },
          "required": [
            "ride_date",
            "departure_station",
            "destination_station",
            "train_type",
            "seat_type",
            "passenger_name",
            "passenger_id"
          ]
        }
      },
      {
        "name": "Navigation.TrainTickets.queryTrainTicket",
        "description": "Check the status of the remaining train tickets for the specified date, departure place, and destination",
        "parameters": {
          "type": "object",
          "properties": {
            "ride_date": {
              "type": "string",
              "description": "Date of trip"
            },
            "departure_station": {
              "type": "string",
              "description": "Departure Station"
            },
            "destination_station": {
              "type": "string",
              "description": "arrival station"
            },
            "train_type": {
              "type": "string",
              "description": "Train type, optional types are high-speed rail, motor vehicles, general express, express, etc."
            },
            "seat_type": {
              "type": "string",
              "description": "Seat Type"
            }
          },
          "required": [
            "ride_date",
            "departure_station",
            "destination_station",
            "train_type",
            "seat_type"
          ]
        }
      },
      {
        "name": "ConvenientLiving.JobRecruitment.checkJobPositionAvailability",
        "description": "Check if a specific position is still being recruited",
        "parameters": {
          "type": "object",
          "properties": {
            "job_name": {
              "type": "string",
              "description": "Position name"
            },
            "company_name": {
              "type": "string",
              "description": "Company name"
            }
          },
          "required": [
            "job_name",
            "company_name"
          ]
        }
      }
    ],
    "single_tool": [
      {
        "name": "Navigation.TrainTickets.bookTrainTicket",
        "description": "Book a train ticket for a specific time, origin, or destination for a specific rider",
        "parameters": {
          "type": "object",
          "properties": {
            "ride_date": {
              "type": "string",
              "description": "Date of trip"
            },
            "departure_station": {
              "type": "string",
              "description": "Departure Station"
            },
            "destination_station": {
              "type": "string",
              "description": "arrival station"
            },
            "train_type": {
              "type": "string",
              "description": "Train type, optional types are high-speed rail, motor vehicles, general express, express, etc."
            },
            "seat_type": {
              "type": "string",
              "description": "Seat Type"
            },
            "passenger_name": {
              "type": "string",
              "description": "Rider's name"
            },
            "passenger_id": {
              "type": "string",
              "description": "Rider ID number"
            }
          },
          "required": [
            "ride_date",
            "departure_station",
            "destination_station",
            "train_type",
            "seat_type",
            "passenger_name",
            "passenger_id"
          ]
        }
      }
    ],
    "id": 45
  },
  {
    "messages": [
      {
        "role": "user",
        "content": "Check my train ticket booking information to see if there are any anomalies"
      },
      {
        "role": "function call",
        "content": {
          "name": "Navigation.TrainTickets.queryPassengerTrainOrder",
          "arguments": {}
        }
      },
      {
        "role": "assistant",
        "content": "Provide the rider's ID number"
      },
      {
        "role": "user",
        "content": "987654321098765432, which is the rider's ID number."
      },
      {
        "role": "function call",
        "content": {
          "name": "Navigation.TrainTickets.queryPassengerTrainOrder",
          "arguments": {
            "passenger_id": "987654321098765432"
          }
        }
      },
      {
        "role": "assistant",
        "content": "Please provide the rider's name"
      },
      {
        "role": "user",
        "content": "It was wrong before. Rider ID number should be 310101198501012345"
      },
      {
        "role": "function call",
        "content": {
          "name": "Navigation.TrainTickets.queryPassengerTrainOrder",
          "arguments": {
            "passenger_id": "310101198501012345"
          }
        }
      },
      {
        "role": "assistant",
        "content": "Please provide the rider's name"
      },
      {
        "role": "user",
        "content": "The passenger's name is Li Si."
      },
      {
        "role": "function call",
        "content": {
          "name": "Navigation.TrainTickets.queryPassengerTrainOrder",
          "arguments": {
            "passenger_id": "310101198501012345",
            "name": "Li Si"
          }
        }
      }
    ],
    "multiple_tools": [
      {
        "name": "Navigation.TrafficViolations.viewTrafficEvent",
        "description": "View notifications about traffic events",
        "parameters": {
          "type": "object",
          "properties": {
            "keyword": {
              "type": "string",
              "description": "Additional conditions, such as area of occurrence, duration of impact, etc."
            }
          },
          "required": [
            "keyword"
          ]
        }
      },
      {
        "name": "SystemTools.SystemOptimization.scanForSystemVulnerabilities",
        "description": "Detect possible security flaws in your phone's system",
        "parameters": {
          "type": "object",
          "properties": {},
          "required": []
        }
      },
      {
        "name": "Navigation.TrainTickets.queryPassengerTrainOrder",
        "description": "Check the passenger's train ticket reservation information",
        "parameters": {
          "type": "object",
          "properties": {
            "passenger_id": {
              "type": "string",
              "description": "Rider ID number"
            },
            "name": {
              "type": "string",
              "description": "Name of person to query"
            },
            "time": {
              "type": "string",
              "description": "Release Date"
            }
          },
          "required": [
            "passenger_id",
            "name",
            "time"
          ]
        }
      },
      {
        "name": "Travel.ScenicAreaServices.getScenicSpotEventInfo",
        "description": "Get upcoming event schedules for selected scenic spots",
        "parameters": {
          "type": "object",
          "properties": {
            "name": {
              "type": "string",
              "description": "Name of the tourist area"
            }
          },
          "required": [
            "name"
          ]
        }
      },
      {
        "name": "Navigation.TrainTickets.queryTrainDelayInfo",
        "description": "Check if the specified train is late and how long it is",
        "parameters": {
          "type": "object",
          "properties": {
            "train_number": {
              "type": "string",
              "description": "Trips to inquire about"
            }
          },
          "required": [
            "train_number"
          ]
        }
      }
    ],
    "single_tool": [
      {
        "name": "Navigation.TrainTickets.queryPassengerTrainOrder",
        "description": "Check the passenger's train ticket reservation information",
        "parameters": {
          "type": "object",
          "properties": {
            "passenger_id": {
              "type": "string",
              "description": "Rider ID number"
            },
            "name": {
              "type": "string",
              "description": "Name of person to query"
            },
            "time": {
              "type": "string",
              "description": "Release Date"
            }
          },
          "required": [
            "passenger_id",
            "name",
            "time"
          ]
        }
      }
    ],
    "id": 49
  },
  {
    "messages": [
      {
        "role": "user",
        "content": "Can you confirm the details of the train ticket order for me? "
      },
      {
        "role": "function call",
        "content": {
          "name": "Navigation.TrainTickets.queryPassengerTrainOrder",
          "arguments": {}
        }
      },
      {
        "role": "assistant",
        "content": "Provide the rider's ID number"
      },
      {
        "role": "user",
        "content": "123456789012345678"
      },
      {
        "role": "function call",
        "content": {
          "name": "Navigation.TrainTickets.queryPassengerTrainOrder",
          "arguments": {
            "passenger_id": "123456789012345678"
          }
        }
      },
      {
        "role": "assistant",
        "content": "Please provide the rider's name"
      },
      {
        "role": "user",
        "content": "It was wrong before. Rider ID number should be 310101198501012345"
      },
      {
        "role": "function call",
        "content": {
          "name": "Navigation.TrainTickets.queryPassengerTrainOrder",
          "arguments": {
            "passenger_id": "310101198501012345"
          }
        }
      },
      {
        "role": "assistant",
        "content": "Please provide the rider's name"
      },
      {
        "role": "user",
        "content": "The passenger's name is Zhang San."
      },
      {
        "role": "function call",
        "content": {
          "name": "Navigation.TrainTickets.queryPassengerTrainOrder",
          "arguments": {
            "passenger_id": "310101198501012345",
            "name": "Zhang San"
          }
        }
      }
    ],
    "multiple_tools": [
      {
        "name": "OnlineShopping.SecondhandTrading.searchSecondhandSaleOrdersDetails",
        "description": "View specific item order details based on criteria",
        "parameters": {
          "type": "object",
          "properties": {
            "goods_name": {
              "type": "string",
              "description": "Product name keywords"
            }
          },
          "required": [
            "goods_name"
          ]
        }
      },
      {
        "name": "Navigation.TrainTickets.queryPassengerTrainOrder",
        "description": "Check the passenger's train ticket reservation information",
        "parameters": {
          "type": "object",
          "properties": {
            "passenger_id": {
              "type": "string",
              "description": "Rider ID number"
            },
            "name": {
              "type": "string",
              "description": "Name of person to query"
            },
            "time": {
              "type": "string",
              "description": "Release Date"
            }
          },
          "required": [
            "passenger_id",
            "name",
            "time"
          ]
        }
      },
      {
        "name": "Navigation.Bicycles.searchBikesOrderDetails",
        "description": "View bike order details",
        "parameters": {
          "type": "object",
          "properties": {},
          "required": []
        }
      },
      {
        "name": "Navigation.TaxiCarRental.viewCarRentalOrdersDetails",
        "description": "Review the details of a rental order",
        "parameters": {
          "type": "object",
          "properties": {
            "time": {
              "type": "string",
              "description": "Release Date"
            }
          },
          "required": [
            "time"
          ]
        }
      },
      {
        "name": "OnlineShopping.Mall.searchCommodityOrderDetails",
        "description": "View details of an item order based on criteria",
        "parameters": {
          "type": "object",
          "properties": {
            "goods": {
              "type": "string",
              "description": "Product Name"
            },
            "order_stage": {
              "type": "string",
              "description": "Order status, e.g. Pending Payment, Pending Receipt, Completed, Cancelled, Refund/After Sales"
            },
            "evaluate_stage": {
              "type": "string",
              "description": "Review status, e.g. reviewed, pending review"
            }
          },
          "required": [
            "goods",
            "order_stage",
            "evaluate_stage"
          ]
        }
      }
    ],
    "single_tool": [
      {
        "name": "Navigation.TrainTickets.queryPassengerTrainOrder",
        "description": "Check the passenger's train ticket reservation information",
        "parameters": {
          "type": "object",
          "properties": {
            "passenger_id": {
              "type": "string",
              "description": "Rider ID number"
            },
            "name": {
              "type": "string",
              "description": "Name of person to query"
            },
            "time": {
              "type": "string",
              "description": "Release Date"
            }
          },
          "required": [
            "passenger_id",
            "name",
            "time"
          ]
        }
      }
    ],
    "id": 50
  },
  {
    "messages": [
      {
        "role": "user",
        "content": "Check the status of the train ticket waiting list"
      },
      {
        "role": "function call",
        "content": {
          "name": "Navigation.TrainTickets.queryTrainWaitlistStatus",
          "arguments": {}
        }
      },
      {
        "role": "assistant",
        "content": "When do you take the train?"
      },
      {
        "role": "user",
        "content": "The date of the trip is June 5."
      },
      {
        "role": "function call",
        "content": {
          "name": "Navigation.TrainTickets.queryTrainWaitlistStatus",
          "arguments": {
            "ride_date": "5 June"
          }
        }
      },
      {
        "role": "assistant",
        "content": "What is the date and time the order was submitted"
      },
      {
        "role": "user",
        "content": "My order was placed on June 1st."
      },
      {
        "role": "function call",
        "content": {
          "name": "Navigation.TrainTickets.queryTrainWaitlistStatus",
          "arguments": {
            "ride_date": "5 June",
            "commit_date": "1 June"
          }
        }
      },
      {
        "role": "assistant",
        "content": "Please provide departure station information"
      },
      {
        "role": "user",
        "content": "It was wrong before. Date of trip should be 10 July."
      },
      {
        "role": "function call",
        "content": {
          "name": "Navigation.TrainTickets.queryTrainWaitlistStatus",
          "arguments": {
            "ride_date": "10 July.",
            "commit_date": "1 June"
          }
        }
      },
      {
        "role": "assistant",
        "content": "Please provide departure station information"
      },
      {
        "role": "user",
        "content": "I leave from Beijing."
      },
      {
        "role": "function call",
        "content": {
          "name": "Navigation.TrainTickets.queryTrainWaitlistStatus",
          "arguments": {
            "ride_date": "10 July.",
            "commit_date": "1 June",
            "departure_station": "Beijing"
          }
        }
      },
      {
        "role": "assistant",
        "content": "Where is your arrival station?"
      },
      {
        "role": "user",
        "content": "My arrival station is Shanghai."
      },
      {
        "role": "function call",
        "content": {
          "name": "Navigation.TrainTickets.queryTrainWaitlistStatus",
          "arguments": {
            "ride_date": "10 July.",
            "commit_date": "1 June",
            "departure_station": "Beijing",
            "destination_station": "Shanghai"
          }
        }
      },
      {
        "role": "assistant",
        "content": "Provide the rider's ID number"
      },
      {
        "role": "user",
        "content": "123456789012345678"
      },
      {
        "role": "function call",
        "content": {
          "name": "Navigation.TrainTickets.queryTrainWaitlistStatus",
          "arguments": {
            "ride_date": "10 July.",
            "commit_date": "1 June",
            "departure_station": "Beijing",
            "destination_station": "Shanghai",
            "passenger_id": "123456789012345678"
          }
        }
      }
    ],
    "multiple_tools": [
      {
        "name": "ConvenientLiving.JobRecruitment.checkJobApplicationStatus",
        "description": "View the status of job applications by position",
        "parameters": {
          "type": "object",
          "properties": {
            "job_name": {
              "type": "string",
              "description": "Position name"
            },
            "company_name": {
              "type": "string",
              "description": "Company name"
            }
          },
          "required": [
            "job_name",
            "company_name"
          ]
        }
      },
      {
        "name": "Navigation.TrainTickets.queryTrainWaitlistStatus",
        "description": "Used to query the current status of train ticket standby orders submitted by users",
        "parameters": {
          "type": "object",
          "properties": {
            "ride_date": {
              "type": "string",
              "description": "Date of trip"
            },
            "commit_date": {
              "type": "string",
              "description": "Date/time the order was submitted"
            },
            "departure_station": {
              "type": "string",
              "description": "Departure Station"
            },
            "destination_station": {
              "type": "string",
              "description": "arrival station"
            },
            "passenger_id": {
              "type": "string",
              "description": "Rider ID number"
            },
            "name": {
              "type": "string",
              "description": "Name of person to query"
            }
          },
          "required": [
            "ride_date",
            "commit_date",
            "departure_station",
            "destination_station",
            "passenger_id",
            "name"
          ]
        }
      },
      {
        "name": "Travel.HotelServices.getHotelCheckInStatus",
        "description": "Check the check-in status of a specific hotel reservation",
        "parameters": {
          "type": "object",
          "properties": {
            "name": {
              "type": "string",
              "description": "Hotel Name"
            },
            "booking_date": {
              "type": "string",
              "description": "Ordered Date"
            }
          },
          "required": [
            "name",
            "booking_date"
          ]
        }
      },
      {
        "name": "ConvenientLiving.GovernmentServices.readServiceRequestStatus",
        "description": "Check the status of city service requests submitted",
        "parameters": {
          "type": "object",
          "properties": {
            "request_name": {
              "type": "string",
              "description": "Service name"
            }
          },
          "required": [
            "request_name"
          ]
        }
      },
      {
        "name": "ConvenientLiving.GovernmentServices.checkImmigrationStatus",
        "description": "Inquire about an individual's immigration status",
        "parameters": {
          "type": "object",
          "properties": {
            "passport_number": {
              "type": "string",
              "description": "Pasaport No."
            },
            "full_name": {
              "type": "string",
              "description": "User name, default user himself"
            }
          },
          "required": [
            "passport_number",
            "full_name"
          ]
        }
      }
    ],
    "single_tool": [
      {
        "name": "Navigation.TrainTickets.queryTrainWaitlistStatus",
        "description": "Used to query the current status of train ticket standby orders submitted by users",
        "parameters": {
          "type": "object",
          "properties": {
            "ride_date": {
              "type": "string",
              "description": "Date of trip"
            },
            "commit_date": {
              "type": "string",
              "description": "Date/time the order was submitted"
            },
            "departure_station": {
              "type": "string",
              "description": "Departure Station"
            },
            "destination_station": {
              "type": "string",
              "description": "arrival station"
            },
            "passenger_id": {
              "type": "string",
              "description": "Rider ID number"
            },
            "name": {
              "type": "string",
              "description": "Name of person to query"
            }
          },
          "required": [
            "ride_date",
            "commit_date",
            "departure_station",
            "destination_station",
            "passenger_id",
            "name"
          ]
        }
      }
    ],
    "id": 51
  },
  {
    "messages": [
      {
        "role": "user",
        "content": "See if I can revise the train ticket waiting list I submitted earlier"
      },
      {
        "role": "function call",
        "content": {
          "name": "Navigation.TrainTickets.updateTrainWaitlistOrder",
          "arguments": {}
        }
      },
      {
        "role": "assistant",
        "content": "What number of trips did you book"
      },
      {
        "role": "user",
        "content": "My train number is D789, from Beijing to Shanghai."
      },
      {
        "role": "function call",
        "content": {
          "name": "Navigation.TrainTickets.updateTrainWaitlistOrder",
          "arguments": {
            "train_number": "D789"
          }
        }
      },
      {
        "role": "assistant",
        "content": "What's the rider's name"
      },
      {
        "role": "user",
        "content": "The passenger's name is Li Si."
      },
      {
        "role": "function call",
        "content": {
          "name": "Navigation.TrainTickets.updateTrainWaitlistOrder",
          "arguments": {
            "train_number": "D789",
            "passenger_name": "Li Si"
          }
        }
      },
      {
        "role": "assistant",
        "content": "What's the number of trips on the modified reservation"
      },
      {
        "role": "user",
        "content": "The number of the modified reservation is D987, please confirm this information."
      },
      {
        "role": "function call",
        "content": {
          "name": "Navigation.TrainTickets.updateTrainWaitlistOrder",
          "arguments": {
            "train_number": "D789",
            "passenger_name": "Li Si",
            "after_number": "D987"
          }
        }
      },
      {
        "role": "assistant",
        "content": "Please provide new departure date format YYYY-MM-DD"
      },
      {
        "role": "user",
        "content": "It was wrong before. Booked trips should be G456"
      },
      {
        "role": "function call",
        "content": {
          "name": "Navigation.TrainTickets.updateTrainWaitlistOrder",
          "arguments": {
            "train_number": "D789",
            "passenger_name": "Li Si",
            "after_number": "G456"
          }
        }
      },
      {
        "role": "assistant",
        "content": "Please provide new departure date format YYYY-MM-DD"
      },
      {
        "role": "user",
        "content": "2023-05-20 I plan to leave on this date."
      },
      {
        "role": "function call",
        "content": {
          "name": "Navigation.TrainTickets.updateTrainWaitlistOrder",
          "arguments": {
            "train_number": "D789",
            "passenger_name": "Li Si",
            "after_number": "G456",
            "new_departure_date": "2023-05-20"
          }
        }
      }
    ],
    "multiple_tools": [
      {
        "name": "Navigation.TrainTickets.updateTrainWaitlistOrder",
        "description": "Used to modify submitted train ticket waiting list information",
        "parameters": {
          "type": "object",
          "properties": {
            "train_number": {
              "type": "string",
              "description": "Booked trips"
            },
            "passenger_name": {
              "type": "string",
              "description": "Rider's name"
            },
            "after_number": {
              "type": "string",
              "description": "Booked trips"
            },
            "new_departure_date": {
              "type": "string",
              "description": "New departure date, format 'YYYY-MM-DD', optional if modified"
            },
            "new_seat_type": {
              "type": "string",
              "description": "Seat Type"
            }
          },
          "required": [
            "train_number",
            "passenger_name",
            "after_number",
            "new_departure_date",
            "new_seat_type"
          ]
        }
      },
      {
        "name": "Education.OnlineClasses.viewCourseOrders",
        "description": "View a list of my orders (including learning, completed, etc.)",
        "parameters": {
          "type": "object",
          "properties": {
            "course_name": {
              "type": "string",
              "description": "Course Title"
            },
            "time": {
              "type": "string",
              "description": "Purchase time"
            },
            "teacher_name": {
              "type": "string",
              "description": "Educator name:"
            }
          },
          "required": [
            "course_name",
            "time",
            "teacher_name"
          ]
        }
      },
      {
        "name": "Navigation.TaxiCarRental.searchCarRentalOrders",
        "description": "View a list of historical car hire orders",
        "parameters": {
          "type": "object",
          "properties": {
            "time": {
              "type": "string",
              "description": "Release Date"
            }
          },
          "required": [
            "time"
          ]
        }
      },
      {
        "name": "Navigation.TrainTickets.queryTrainWaitlistStatus",
        "description": "Used to query the current status of train ticket standby orders submitted by users",
        "parameters": {
          "type": "object",
          "properties": {
            "ride_date": {
              "type": "string",
              "description": "Date of trip"
            },
            "commit_date": {
              "type": "string",
              "description": "Date/time the order was submitted"
            },
            "departure_station": {
              "type": "string",
              "description": "Departure Station"
            },
            "destination_station": {
              "type": "string",
              "description": "arrival station"
            },
            "passenger_id": {
              "type": "string",
              "description": "Rider ID number"
            },
            "name": {
              "type": "string",
              "description": "Name of person to query"
            }
          },
          "required": [
            "ride_date",
            "commit_date",
            "departure_station",
            "destination_station",
            "passenger_id",
            "name"
          ]
        }
      },
      {
        "name": "OnlineShopping.SecondhandTrading.searchSecondhandSaleOrders",
        "description": "Search for item orders by keyword, and query all current status orders directly by default",
        "parameters": {
          "type": "object",
          "properties": {
            "goods_order": {
              "type": "string",
              "description": "Product name keywords"
            }
          },
          "required": [
            "goods_order"
          ]
        }
      }
    ],
    "single_tool": [
      {
        "name": "Navigation.TrainTickets.updateTrainWaitlistOrder",
        "description": "Used to modify submitted train ticket waiting list information",
        "parameters": {
          "type": "object",
          "properties": {
            "train_number": {
              "type": "string",
              "description": "Booked trips"
            },
            "passenger_name": {
              "type": "string",
              "description": "Rider's name"
            },
            "after_number": {
              "type": "string",
              "description": "Booked trips"
            },
            "new_departure_date": {
              "type": "string",
              "description": "New departure date, format 'YYYY-MM-DD', optional if modified"
            },
            "new_seat_type": {
              "type": "string",
              "description": "Seat Type"
            }
          },
          "required": [
            "train_number",
            "passenger_name",
            "after_number",
            "new_departure_date",
            "new_seat_type"
          ]
        }
      }
    ],
    "id": 52
  },
  {
    "messages": [
      {
        "role": "user",
        "content": "Is there any way to change the train ticket standby order I applied for previously?"
      },
      {
        "role": "function call",
        "content": {
          "name": "Navigation.TrainTickets.updateTrainWaitlistOrder",
          "arguments": {}
        }
      },
      {
        "role": "assistant",
        "content": "What number of trips did you book"
      },
      {
        "role": "user",
        "content": "The number I booked is G123."
      },
      {
        "role": "function call",
        "content": {
          "name": "Navigation.TrainTickets.updateTrainWaitlistOrder",
          "arguments": {
            "train_number": "G123"
          }
        }
      },
      {
        "role": "assistant",
        "content": "What's the rider's name"
      },
      {
        "role": "user",
        "content": "The passenger's name is Zhang San."
      },
      {
        "role": "function call",
        "content": {
          "name": "Navigation.TrainTickets.updateTrainWaitlistOrder",
          "arguments": {
            "train_number": "G123",
            "passenger_name": "Zhang San"
          }
        }
      },
      {
        "role": "assistant",
        "content": "What's the number of trips on the modified reservation"
      },
      {
        "role": "user",
        "content": "I rebooked to train G456."
      },
      {
        "role": "function call",
        "content": {
          "name": "Navigation.TrainTickets.updateTrainWaitlistOrder",
          "arguments": {
            "train_number": "G123",
            "passenger_name": "Zhang San",
            "after_number": "G456"
          }
        }
      },
      {
        "role": "assistant",
        "content": "Please provide new departure date format YYYY-MM-DD"
      },
      {
        "role": "user",
        "content": "It was wrong before. Rider's name should be Wang Xiaoming"
      },
      {
        "role": "function call",
        "content": {
          "name": "Navigation.TrainTickets.updateTrainWaitlistOrder",
          "arguments": {
            "train_number": "G123",
            "passenger_name": "Wang Xiaoming",
            "after_number": "G456"
          }
        }
      },
      {
        "role": "assistant",
        "content": "Please provide new departure date format YYYY-MM-DD"
      },
      {
        "role": "user",
        "content": "2023-04-15 I plan to leave on this day."
      },
      {
        "role": "function call",
        "content": {
          "name": "Navigation.TrainTickets.updateTrainWaitlistOrder",
          "arguments": {
            "train_number": "G123",
            "passenger_name": "Wang Xiaoming",
            "after_number": "G456",
            "new_departure_date": "2023-04-15"
          }
        }
      }
    ],
    "multiple_tools": [
      {
        "name": "Navigation.TrainTickets.updateTrainWaitlistOrder",
        "description": "Used to modify submitted train ticket waiting list information",
        "parameters": {
          "type": "object",
          "properties": {
            "train_number": {
              "type": "string",
              "description": "Booked trips"
            },
            "passenger_name": {
              "type": "string",
              "description": "Rider's name"
            },
            "after_number": {
              "type": "string",
              "description": "Booked trips"
            },
            "new_departure_date": {
              "type": "string",
              "description": "New departure date, format 'YYYY-MM-DD', optional if modified"
            },
            "new_seat_type": {
              "type": "string",
              "description": "Seat Type"
            }
          },
          "required": [
            "train_number",
            "passenger_name",
            "after_number",
            "new_departure_date",
            "new_seat_type"
          ]
        }
      },
      {
        "name": "ConvenientLiving.FoodDelivery.updateRestaurantOrder",
        "description": "Updating order information based on the order, such as delivery address, notes, etc.",
        "parameters": {
          "type": "object",
          "properties": {
            "order_name": {
              "type": "string",
              "description": "Contents of the order"
            },
            "delivery_address": {
              "type": "string",
              "description": "Delivery address"
            },
            "delivery_time": {
              "type": "string",
              "description": "Expected delivery time in HH: mm format"
            },
            "note": {
              "type": "string",
              "description": "Remarks"
            }
          },
          "required": [
            "order_name",
            "delivery_address",
            "delivery_time",
            "note"
          ]
        }
      },
      {
        "name": "Finance.Banking.modifyFinancialProductOrder",
        "description": "Modify a subscribed order for a bank wealth management product",
        "parameters": {
          "type": "object",
          "properties": {
            "order_id": {
              "type": "string",
              "description": "Purchase Order Number"
            },
            "product": {
              "type": "string",
              "description": "Financing product"
            },
            "modify": {
              "type": "string",
              "description": "Modified content, such as additional amount, revision deadline, etc."
            }
          },
          "required": [
            "order_id",
            "product",
            "modify"
          ]
        }
      },
      {
        "name": "OnlineShopping.Mall.modifyCommodityOrders",
        "description": "Modify the contents of the order according to the product name and other conditions",
        "parameters": {
          "type": "object",
          "properties": {
            "goods": {
              "type": "string",
              "description": "Product Name"
            }
          },
          "required": [
            "goods"
          ]
        }
      },
      {
        "name": "Navigation.TaxiCarRental.modifyCarRentalOrder",
        "description": "Modify the contents of a rental order, such as pick-up time, drop-off time, pick-up person, pick-up location, etc.",
        "parameters": {
          "type": "object",
          "properties": {
            "time": {
              "type": "string",
              "description": "Release Date"
            }
          },
          "required": [
            "time"
          ]
        }
      }
    ],
    "single_tool": [
      {
        "name": "Navigation.TrainTickets.updateTrainWaitlistOrder",
        "description": "Used to modify submitted train ticket waiting list information",
        "parameters": {
          "type": "object",
          "properties": {
            "train_number": {
              "type": "string",
              "description": "Booked trips"
            },
            "passenger_name": {
              "type": "string",
              "description": "Rider's name"
            },
            "after_number": {
              "type": "string",
              "description": "Booked trips"
            },
            "new_departure_date": {
              "type": "string",
              "description": "New departure date, format 'YYYY-MM-DD', optional if modified"
            },
            "new_seat_type": {
              "type": "string",
              "description": "Seat Type"
            }
          },
          "required": [
            "train_number",
            "passenger_name",
            "after_number",
            "new_departure_date",
            "new_seat_type"
          ]
        }
      }
    ],
    "id": 53
  },
  {
    "messages": [
      {
        "role": "user",
        "content": "Can you help me cancel a train ticket standby order, I don't plan to travel right now."
      },
      {
        "role": "function call",
        "content": {
          "name": "Navigation.TrainTickets.cancelTrainWaitlistOrder",
          "arguments": {}
        }
      },
      {
        "role": "assistant",
        "content": "What's the date of the trip"
      },
      {
        "role": "user",
        "content": "May 15, 2023."
      },
      {
        "role": "function call",
        "content": {
          "name": "Navigation.TrainTickets.cancelTrainWaitlistOrder",
          "arguments": {
            "ride_date": "May 15, 2023."
          }
        }
      },
      {
        "role": "assistant",
        "content": "What is the date and time the order was submitted"
      },
      {
        "role": "user",
        "content": "It was wrong before. Date of trip should be 20.07.2023"
      },
      {
        "role": "function call",
        "content": {
          "name": "Navigation.TrainTickets.cancelTrainWaitlistOrder",
          "arguments": {
            "ride_date": "20.07.2023"
          }
        }
      },
      {
        "role": "assistant",
        "content": "What is the date and time the order was submitted"
      },
      {
        "role": "user",
        "content": "The order was placed on May 10, 2023."
      },
      {
        "role": "function call",
        "content": {
          "name": "Navigation.TrainTickets.cancelTrainWaitlistOrder",
          "arguments": {
            "ride_date": "20.07.2023",
            "commit_date": "May 10, 2023"
          }
        }
      },
      {
        "role": "assistant",
        "content": "Please provide departure station information"
      },
      {
        "role": "user",
        "content": "I leave from Beijing."
      },
      {
        "role": "function call",
        "content": {
          "name": "Navigation.TrainTickets.cancelTrainWaitlistOrder",
          "arguments": {
            "ride_date": "20.07.2023",
            "commit_date": "May 10, 2023",
            "departure_station": "Beijing"
          }
        }
      }
    ],
    "multiple_tools": [
      {
        "name": "Finance.Banking.cancelFinancialProductOrder",
        "description": "Cancel Subscribed Banking Products",
        "parameters": {
          "type": "object",
          "properties": {
            "order_id": {
              "type": "string",
              "description": "Purchase Order Number"
            },
            "product": {
              "type": "string",
              "description": "Financing product"
            }
          },
          "required": [
            "order_id",
            "product"
          ]
        }
      },
      {
        "name": "ConvenientLiving.FoodDelivery.cancelRestaurantOrder",
        "description": "Canceling an order based on an order",
        "parameters": {
          "type": "object",
          "properties": {
            "order_name": {
              "type": "string",
              "description": "Contents of the order"
            }
          },
          "required": [
            "order_name"
          ]
        }
      },
      {
        "name": "Navigation.TrainTickets.cancelTrainTicket",
        "description": "Cancelling a booked train ticket",
        "parameters": {
          "type": "object",
          "properties": {
            "train_number": {
              "type": "string",
              "description": "Wagon Number"
            },
            "name": {
              "type": "string",
              "description": "Rider's name"
            },
            "time": {
              "type": "string",
              "description": "To cancel a reservation for a certain time"
            },
            "departure_station": {
              "type": "string",
              "description": "Departure Station"
            },
            "destination_station": {
              "type": "string",
              "description": "arrival station"
            }
          },
          "required": [
            "train_number",
            "name",
            "time",
            "departure_station",
            "destination_station"
          ]
        }
      },
      {
        "name": "Navigation.TrainTickets.cancelTrainWaitlistOrder",
        "description": "Help the user cancel the specified train ticket standby order",
        "parameters": {
          "type": "object",
          "properties": {
            "ride_date": {
              "type": "string",
              "description": "Date of trip"
            },
            "commit_date": {
              "type": "string",
              "description": "Date/time the order was submitted"
            },
            "departure_station": {
              "type": "string",
              "description": "Departure Station"
            },
            "destination_station": {
              "type": "string",
              "description": "arrival station"
            }
          },
          "required": [
            "ride_date",
            "commit_date",
            "departure_station",
            "destination_station"
          ]
        }
      },
      {
        "name": "ConvenientLiving.GovernmentServices.deleteServiceRequest",
        "description": "Remove city service requests that are no longer needed",
        "parameters": {
          "type": "object",
          "properties": {
            "request_name": {
              "type": "string",
              "description": "Name of the service request"
            }
          },
          "required": [
            "request_name"
          ]
        }
      }
    ],
    "single_tool": [
      {
        "name": "Navigation.TrainTickets.cancelTrainWaitlistOrder",
        "description": "Help the user cancel the specified train ticket standby order",
        "parameters": {
          "type": "object",
          "properties": {
            "ride_date": {
              "type": "string",
              "description": "Date of trip"
            },
            "commit_date": {
              "type": "string",
              "description": "Date/time the order was submitted"
            },
            "departure_station": {
              "type": "string",
              "description": "Departure Station"
            },
            "destination_station": {
              "type": "string",
              "description": "arrival station"
            }
          },
          "required": [
            "ride_date",
            "commit_date",
            "departure_station",
            "destination_station"
          ]
        }
      }
    ],
    "id": 54
  },
  {
    "messages": [
      {
        "role": "user",
        "content": "Help me find out if there are train numbers that can be substituted"
      },
      {
        "role": "function call",
        "content": {
          "name": "Navigation.TrainTickets.searchWaitlistTrain",
          "arguments": {}
        }
      },
      {
        "role": "assistant",
        "content": "Where is your departure station?"
      },
      {
        "role": "user",
        "content": "My departure station is Guangzhou."
      },
      {
        "role": "function call",
        "content": {
          "name": "Navigation.TrainTickets.searchWaitlistTrain",
          "arguments": {
            "departure_station": "Guangzhou"
          }
        }
      },
      {
        "role": "assistant",
        "content": "Please provide arrival station"
      },
      {
        "role": "user",
        "content": "It was wrong before. Departure Station should be Beijing South Railway Station"
      },
      {
        "role": "function call",
        "content": {
          "name": "Navigation.TrainTickets.searchWaitlistTrain",
          "arguments": {
            "departure_station": "Beijing South Railway Station"
          }
        }
      },
      {
        "role": "assistant",
        "content": "Please provide arrival station"
      },
      {
        "role": "user",
        "content": "Wuhan"
      },
      {
        "role": "function call",
        "content": {
          "name": "Navigation.TrainTickets.searchWaitlistTrain",
          "arguments": {
            "departure_station": "Beijing South Railway Station",
            "destination_station": "Wuhan"
          }
        }
      }
    ],
    "multiple_tools": [
      {
        "name": "Navigation.TaxiCarRental.searchCarRentalOrders",
        "description": "View a list of historical car hire orders",
        "parameters": {
          "type": "object",
          "properties": {
            "time": {
              "type": "string",
              "description": "Release Date"
            }
          },
          "required": [
            "time"
          ]
        }
      },
      {
        "name": "Navigation.Bicycles.viewFrequency",
        "description": "See total rides",
        "parameters": {
          "type": "object",
          "properties": {},
          "required": []
        }
      },
      {
        "name": "Navigation.Bicycles.searchBikesOrders",
        "description": "See a list of bike rides",
        "parameters": {
          "type": "object",
          "properties": {},
          "required": []
        }
      },
      {
        "name": "NewsMagazines.NewspapersMagazines.getSubscribedMagazines",
        "description": "Get all subscription magazines for a user",
        "parameters": {
          "type": "object",
          "properties": {},
          "required": []
        }
      },
      {
        "name": "Navigation.TrainTickets.searchWaitlistTrain",
        "description": "Search for alternate train numbers based on the criteria entered by the user",
        "parameters": {
          "type": "object",
          "properties": {
            "ride_date": {
              "type": "string",
              "description": "Date of trip"
            },
            "departure_station": {
              "type": "string",
              "description": "Departure Station"
            },
            "destination_station": {
              "type": "string",
              "description": "arrival station"
            }
          },
          "required": [
            "ride_date",
            "departure_station",
            "destination_station"
          ]
        }
      }
    ],
    "single_tool": [
      {
        "name": "Navigation.TrainTickets.searchWaitlistTrain",
        "description": "Search for alternate train numbers based on the criteria entered by the user",
        "parameters": {
          "type": "object",
          "properties": {
            "ride_date": {
              "type": "string",
              "description": "Date of trip"
            },
            "departure_station": {
              "type": "string",
              "description": "Departure Station"
            },
            "destination_station": {
              "type": "string",
              "description": "arrival station"
            }
          },
          "required": [
            "ride_date",
            "departure_station",
            "destination_station"
          ]
        }
      }
    ],
    "id": 55
  },
  {
    "messages": [
      {
        "role": "user",
        "content": "Find out which trains can be backed up"
      },
      {
        "role": "function call",
        "content": {
          "name": "Navigation.TrainTickets.searchWaitlistTrain",
          "arguments": {}
        }
      },
      {
        "role": "assistant",
        "content": "Please provide departure station information"
      },
      {
        "role": "user",
        "content": "I start from Chengdu."
      },
      {
        "role": "function call",
        "content": {
          "name": "Navigation.TrainTickets.searchWaitlistTrain",
          "arguments": {
            "departure_station": "Chengdu"
          }
        }
      },
      {
        "role": "assistant",
        "content": "What is the arrival station"
      },
      {
        "role": "user",
        "content": "It was wrong before. Departure Station should be Beijing South Railway Station"
      },
      {
        "role": "function call",
        "content": {
          "name": "Navigation.TrainTickets.searchWaitlistTrain",
          "arguments": {
            "departure_station": "Beijing South Railway Station"
          }
        }
      },
      {
        "role": "assistant",
        "content": "What is the arrival station"
      },
      {
        "role": "user",
        "content": "The arrival station is Chongqing"
      },
      {
        "role": "function call",
        "content": {
          "name": "Navigation.TrainTickets.searchWaitlistTrain",
          "arguments": {
            "departure_station": "Beijing South Railway Station",
            "destination_station": "Chongqing"
          }
        }
      }
    ],
    "multiple_tools": [
      {
        "name": "OfficeSoftware.Conferencing.viewParticipants",
        "description": "Get a list of participants for the current meeting",
        "parameters": {
          "type": "object",
          "properties": {
            "meeting_id": {
              "type": "string",
              "description": "Conference No."
            },
            "title": {
              "type": "string",
              "description": "Meeting Title:"
            },
            "time": {
              "type": "string",
              "description": "Meeting Date"
            }
          },
          "required": [
            "meeting_id",
            "title",
            "time"
          ]
        }
      },
      {
        "name": "OfficeSoftware.CloudStorage.netdiskRestoreDeletedFile",
        "description": "Recover Specified Files from Drive Recycle Bin",
        "parameters": {
          "type": "object",
          "properties": {
            "file_name": {
              "type": "string",
              "description": "File name to recover"
            }
          },
          "required": [
            "file_name"
          ]
        }
      },
      {
        "name": "Navigation.TrainTickets.searchWaitlistTrain",
        "description": "Search for alternate train numbers based on the criteria entered by the user",
        "parameters": {
          "type": "object",
          "properties": {
            "ride_date": {
              "type": "string",
              "description": "Date of trip"
            },
            "departure_station": {
              "type": "string",
              "description": "Departure Station"
            },
            "destination_station": {
              "type": "string",
              "description": "arrival station"
            }
          },
          "required": [
            "ride_date",
            "departure_station",
            "destination_station"
          ]
        }
      },
      {
        "name": "OfficeSoftware.CloudStorage.netdiskSearchDeletedFile",
        "description": "Search for files by keyword in the Drive Recycle Bin",
        "parameters": {
          "type": "object",
          "properties": {
            "keyword": {
              "type": "string",
              "description": "Keywords Search"
            }
          },
          "required": [
            "keyword"
          ]
        }
      },
      {
        "name": "Finance.Payment.viewPayRefundHistory",
        "description": "View refund history on your account",
        "parameters": {
          "type": "object",
          "properties": {
            "start_date": {
              "type": "string",
              "description": "Start date"
            },
            "end_date": {
              "type": "string",
              "description": "结束日期"
            }
          },
          "required": [
            "start_date",
            "end_date"
          ]
        }
      }
    ],
    "single_tool": [
      {
        "name": "Navigation.TrainTickets.searchWaitlistTrain",
        "description": "Search for alternate train numbers based on the criteria entered by the user",
        "parameters": {
          "type": "object",
          "properties": {
            "ride_date": {
              "type": "string",
              "description": "Date of trip"
            },
            "departure_station": {
              "type": "string",
              "description": "Departure Station"
            },
            "destination_station": {
              "type": "string",
              "description": "arrival station"
            }
          },
          "required": [
            "ride_date",
            "departure_station",
            "destination_station"
          ]
        }
      }
    ],
    "id": 56
  },
  {
    "messages": [
      {
        "role": "user",
        "content": "I want to take the high-speed train, check the route"
      },
      {
        "role": "function call",
        "content": {
          "name": "Navigation.TrainTickets.queryHighSpeedRailRoutes",
          "arguments": {}
        }
      },
      {
        "role": "assistant",
        "content": "Please provide departure station information"
      },
      {
        "role": "user",
        "content": "I leave from Beijing."
      },
      {
        "role": "function call",
        "content": {
          "name": "Navigation.TrainTickets.queryHighSpeedRailRoutes",
          "arguments": {
            "departure_station": "Beijing"
          }
        }
      },
      {
        "role": "assistant",
        "content": "Where is your arrival station?"
      },
      {
        "role": "user",
        "content": "It was wrong before. Departure Station should be Nanjing"
      },
      {
        "role": "function call",
        "content": {
          "name": "Navigation.TrainTickets.queryHighSpeedRailRoutes",
          "arguments": {
            "departure_station": "Nanjing"
          }
        }
      },
      {
        "role": "assistant",
        "content": "Where is your arrival station?"
      },
      {
        "role": "user",
        "content": "My arrival station is Tianjin."
      },
      {
        "role": "function call",
        "content": {
          "name": "Navigation.TrainTickets.queryHighSpeedRailRoutes",
          "arguments": {
            "departure_station": "Nanjing",
            "destination_station": "Tianjin"
          }
        }
      }
    ],
    "multiple_tools": [
      {
        "name": "Navigation.MapNavigation.vehicleNavigationRoute",
        "description": "Specify a vehicle as a way to get around and search for a route",
        "parameters": {
          "type": "object",
          "properties": {
            "departure": {
              "type": "string",
              "description": "The name or address of the departure location, the default current location"
            },
            "destination": {
              "type": "string",
              "description": "Name or address of the destination"
            },
            "vehicle": {
              "type": "string",
              "description": "Specify how you want to travel"
            }
          },
          "required": [
            "departure",
            "destination",
            "vehicle"
          ]
        }
      },
      {
        "name": "UtilityTools.Memo.viewUpcoming",
        "description": "View current to-do",
        "parameters": {
          "type": "object",
          "properties": {},
          "required": []
        }
      },
      {
        "name": "Navigation.TrainTickets.queryHighSpeedRailRoutes",
        "description": "Find high-speeded rail routes from and to specific destinations",
        "parameters": {
          "type": "object",
          "properties": {
            "departure_station": {
              "type": "string",
              "description": "Departure Station"
            },
            "destination_station": {
              "type": "string",
              "description": "arrival station"
            },
            "max_results": {
              "type": "integer",
              "description": "Returns the maximum number of results, optional, default is 5"
            }
          },
          "required": [
            "departure_station",
            "destination_station",
            "max_results"
          ]
        }
      },
      {
        "name": "SystemTools.SystemSettings.setSystemTurnOnScreen2TV",
        "description": "Turn on phone projection to TV",
        "parameters": {
          "type": "object",
          "properties": {},
          "required": []
        }
      },
      {
        "name": "Navigation.MapNavigation.planNavigationRoute",
        "description": "Search navigation routes by origin and destination",
        "parameters": {
          "type": "object",
          "properties": {
            "departure": {
              "type": "string",
              "description": "The name or address of the departure location, the default current location"
            },
            "destination": {
              "type": "string",
              "description": "Name or address of the destination"
            },
            "time": {
              "type": "string",
              "description": "Departure time, default current time"
            },
            "mode": {
              "type": "string",
              "description": "Getting around, by car, public transport, bike, or on foot, by default"
            },
            "preferred_route": {
              "type": "string",
              "description": "Preferred route type, such as direct, few transfers, etc., optional"
            }
          },
          "required": [
            "departure",
            "destination",
            "time",
            "mode",
            "preferred_route"
          ]
        }
      }
    ],
    "single_tool": [
      {
        "name": "Navigation.TrainTickets.queryHighSpeedRailRoutes",
        "description": "Find high-speeded rail routes from and to specific destinations",
        "parameters": {
          "type": "object",
          "properties": {
            "departure_station": {
              "type": "string",
              "description": "Departure Station"
            },
            "destination_station": {
              "type": "string",
              "description": "arrival station"
            },
            "max_results": {
              "type": "integer",
              "description": "Returns the maximum number of results, optional, default is 5"
            }
          },
          "required": [
            "departure_station",
            "destination_station",
            "max_results"
          ]
        }
      }
    ],
    "id": 57
  },
  {
    "messages": [
      {
        "role": "user",
        "content": "I've been looking for a place recently, can you help me search for suitable listings?"
      },
      {
        "role": "function call",
        "content": {
          "name": "ConvenientLiving.BuyingRentingHomes.searchSalingHouses",
          "arguments": {}
        }
      },
      {
        "role": "assistant",
        "content": "What's the minimum price"
      },
      {
        "role": "user",
        "content": "The minimum price is from 1.5 million."
      },
      {
        "role": "function call",
        "content": {
          "name": "ConvenientLiving.BuyingRentingHomes.searchSalingHouses",
          "arguments": {
            "min_price": "1,500,000"
          }
        }
      },
      {
        "role": "assistant",
        "content": "What's the highest price you'd like"
      },
      {
        "role": "user",
        "content": "I would like the maximum price to be 2.5 million."
      },
      {
        "role": "function call",
        "content": {
          "name": "ConvenientLiving.BuyingRentingHomes.searchSalingHouses",
          "arguments": {
            "min_price": "1,500,000",
            "max_price": "2.5 million"
          }
        }
      },
      {
        "role": "assistant",
        "content": "How many square meters do you want the house to be?"
      },
      {
        "role": "user",
        "content": "The size of the house I want is about 80 square meters."
      },
      {
        "role": "function call",
        "content": {
          "name": "ConvenientLiving.BuyingRentingHomes.searchSalingHouses",
          "arguments": {
            "min_price": "1,500,000",
            "max_price": "2.5 million",
            "house_area": "80 sqm"
          }
        }
      },
      {
        "role": "assistant",
        "content": "What floor is the house you want to buy located on?"
      },
      {
        "role": "user",
        "content": "I tend to be higher up and have a wider view."
      },
      {
        "role": "function call",
        "content": {
          "name": "ConvenientLiving.BuyingRentingHomes.searchSalingHouses",
          "arguments": {
            "min_price": "1,500,000",
            "max_price": "2.5 million",
            "house_area": "80 sqm",
            "level": "Higher-up"
          }
        }
      },
      {
        "role": "assistant",
        "content": "What is the age of the home?"
      },
      {
        "role": "user",
        "content": "It was wrong before. Max Price should be 5 million"
      },
      {
        "role": "function call",
        "content": {
          "name": "ConvenientLiving.BuyingRentingHomes.searchSalingHouses",
          "arguments": {
            "min_price": "1,500,000",
            "max_price": "5 million",
            "house_area": "80 sqm",
            "level": "Higher-up"
          }
        }
      },
      {
        "role": "assistant",
        "content": "What is the age of the home?"
      },
      {
        "role": "user",
        "content": "The house was built 5 years ago."
      },
      {
        "role": "function call",
        "content": {
          "name": "ConvenientLiving.BuyingRentingHomes.searchSalingHouses",
          "arguments": {
            "min_price": "1,500,000",
            "max_price": "5 million",
            "house_area": "80 sqm",
            "level": "Higher-up",
            "age": 5
          }
        }
      },
      {
        "role": "assistant",
        "content": "What do you want your home to look like?"
      },
      {
        "role": "user",
        "content": "What I want is a two-bedroom apartment with better lighting."
      },
      {
        "role": "function call",
        "content": {
          "name": "ConvenientLiving.BuyingRentingHomes.searchSalingHouses",
          "arguments": {
            "min_price": "1,500,000",
            "max_price": "5 million",
            "house_area": "80 sqm",
            "level": "Higher-up",
            "age": 5,
            "house_type": "2 bedrooms & 1 living room"
          }
        }
      },
      {
        "role": "assistant",
        "content": "Please provide the name of the community you are interested in"
      },
      {
        "role": "user",
        "content": "I am very interested in the Cuihu District, can you give me some information?"
      },
      {
        "role": "function call",
        "content": {
          "name": "ConvenientLiving.BuyingRentingHomes.searchSalingHouses",
          "arguments": {
            "min_price": "1,500,000",
            "max_price": "5 million",
            "house_area": "80 sqm",
            "level": "Higher-up",
            "age": 5,
            "house_type": "2 bedrooms & 1 living room",
            "housing_estate": "Cuihu District"
          }
        }
      },
      {
        "role": "assistant",
        "content": "What is the area of ​​the property you are interested in?"
      },
      {
        "role": "user",
        "content": "Shanghai."
      },
      {
        "role": "function call",
        "content": {
          "name": "ConvenientLiving.BuyingRentingHomes.searchSalingHouses",
          "arguments": {
            "min_price": "1,500,000",
            "max_price": "5 million",
            "house_area": "80 sqm",
            "level": "Higher-up",
            "age": 5,
            "house_type": "2 bedrooms & 1 living room",
            "housing_estate": "Cuihu District",
            "location": "Shanghai"
          }
        }
      }
    ],
    "multiple_tools": [
      {
        "name": "OnlineShopping.Mall.searchCommodity",
        "description": "Query products by specified commodity category name",
        "parameters": {
          "type": "object",
          "properties": {
            "goods": {
              "type": "string",
              "description": "Product Name"
            },
            "sales_volume": {
              "type": "string",
              "description": "Merchandise sales"
            },
            "price_range": {
              "type": "string",
              "description": "Price Range"
            }
          },
          "required": [
            "goods",
            "sales_volume",
            "price_range"
          ]
        }
      },
      {
        "name": "VideoPlayback.OnlineVideos.searchOnlineVideo",
        "description": "Search online videos, which can be searched based on keywords (director/publisher/video keywords); can be searched based on categories; can be searched based on AI smart search",
        "parameters": {
          "type": "object",
          "properties": {
            "keyword": {
              "type": "array",
              "description": "Director/Publisher/Video Keyword Search"
            },
            "video_type": {
              "type": "string",
              "description": "Video Type Categories, Recommended, Popular, Chase, Film and Television New Journey"
            },
            "ai_search": {
              "type": "string",
              "description": "Based on search history, viewing history can only be turned off by default"
            }
          },
          "required": [
            "keyword",
            "video_type",
            "ai_search"
          ]
        }
      },
      {
        "name": "ConvenientLiving.BuyingRentingHomes.searchSalingHouses",
        "description": "Search for properties based on user needs",
        "parameters": {
          "type": "object",
          "properties": {
            "min_price": {
              "type": "string",
              "description": "rock-bottom prices"
            },
            "max_price": {
              "type": "string",
              "description": "Max Price"
            },
            "house_area": {
              "type": "string",
              "description": "Area"
            },
            "level": {
              "type": "string",
              "description": "Floor"
            },
            "age": {
              "type": "integer",
              "description": "fixed number of years"
            },
            "house_type": {
              "type": "string",
              "description": "Layout"
            },
            "housing_estate": {
              "type": "string",
              "description": "Community"
            },
            "location": {
              "type": "string",
              "description": "Position"
            }
          },
          "required": [
            "min_price",
            "max_price",
            "house_area",
            "level",
            "age",
            "house_type",
            "housing_estate",
            "location"
          ]
        }
      },
      {
        "name": "ConvenientLiving.BuyingRentingHomes.searchRentingHouses",
        "description": "Search for rentals by criteria",
        "parameters": {
          "type": "object",
          "properties": {
            "price": {
              "type": "string",
              "description": "Rents"
            },
            "house_area": {
              "type": "string",
              "description": "Area"
            },
            "level": {
              "type": "string",
              "description": "Floor"
            },
            "age": {
              "type": "integer",
              "description": "fixed number of years"
            },
            "house_type": {
              "type": "string",
              "description": "Layout"
            },
            "housing_estate": {
              "type": "string",
              "description": "Community"
            },
            "location": {
              "type": "string",
              "description": "Position"
            },
            "indoor_decoration": {
              "type": "string",
              "description": "decorate"
            },
            "furniture": {
              "type": "string",
              "description": "Furniture"
            }
          },
          "required": [
            "price",
            "house_area",
            "level",
            "age",
            "house_type",
            "housing_estate",
            "location",
            "indoor_decoration",
            "furniture"
          ]
        }
      },
      {
        "name": "UtilityTools.Memo.searchNotes",
        "description": "Search memos by keyword (see all by default)",
        "parameters": {
          "type": "object",
          "properties": {
            "key_words": {
              "type": "string",
              "description": "KEYWORDS"
            }
          },
          "required": [
            "key_words"
          ]
        }
      }
    ],
    "single_tool": [
      {
        "name": "ConvenientLiving.BuyingRentingHomes.searchSalingHouses",
        "description": "Search for properties based on user needs",
        "parameters": {
          "type": "object",
          "properties": {
            "min_price": {
              "type": "string",
              "description": "rock-bottom prices"
            },
            "max_price": {
              "type": "string",
              "description": "Max Price"
            },
            "house_area": {
              "type": "string",
              "description": "Area"
            },
            "level": {
              "type": "string",
              "description": "Floor"
            },
            "age": {
              "type": "integer",
              "description": "fixed number of years"
            },
            "house_type": {
              "type": "string",
              "description": "Layout"
            },
            "housing_estate": {
              "type": "string",
              "description": "Community"
            },
            "location": {
              "type": "string",
              "description": "Position"
            }
          },
          "required": [
            "min_price",
            "max_price",
            "house_area",
            "level",
            "age",
            "house_type",
            "housing_estate",
            "location"
          ]
        }
      }
    ],
    "id": 58
  },
  {
    "messages": [
      {
        "role": "user",
        "content": "Find out if there's a suitable place to rent"
      },
      {
        "role": "function call",
        "content": {
          "name": "ConvenientLiving.BuyingRentingHomes.searchRentingHouses",
          "arguments": {}
        }
      },
      {
        "role": "assistant",
        "content": "What is your rental budget"
      },
      {
        "role": "user",
        "content": "My rent budget is about 2500 yuan."
      },
      {
        "role": "function call",
        "content": {
          "name": "ConvenientLiving.BuyingRentingHomes.searchRentingHouses",
          "arguments": {
            "price": "$2,500"
          }
        }
      },
      {
        "role": "assistant",
        "content": "Need to know how much square meter you want your house to be"
      },
      {
        "role": "user",
        "content": "I would like the house to be about 60 square meters."
      },
      {
        "role": "function call",
        "content": {
          "name": "ConvenientLiving.BuyingRentingHomes.searchRentingHouses",
          "arguments": {
            "price": "$2,500",
            "house_area": "60 sqm"
          }
        }
      },
      {
        "role": "assistant",
        "content": "What floor would you like the house to be located on?"
      },
      {
        "role": "user",
        "content": "I would like the house to be on a high floor."
      },
      {
        "role": "function call",
        "content": {
          "name": "ConvenientLiving.BuyingRentingHomes.searchRentingHouses",
          "arguments": {
            "price": "$2,500",
            "house_area": "60 sqm",
            "level": "Higher-up"
          }
        }
      },
      {
        "role": "assistant",
        "content": "What is the age of the house"
      },
      {
        "role": "user",
        "content": "The house was built 10 years ago."
      },
      {
        "role": "function call",
        "content": {
          "name": "ConvenientLiving.BuyingRentingHomes.searchRentingHouses",
          "arguments": {
            "price": "$2,500",
            "house_area": "60 sqm",
            "level": "Higher-up",
            "age": 10
          }
        }
      },
      {
        "role": "assistant",
        "content": "What do you want your home to look like?"
      },
      {
        "role": "user",
        "content": "I want one bedroom and one living room."
      },
      {
        "role": "function call",
        "content": {
          "name": "ConvenientLiving.BuyingRentingHomes.searchRentingHouses",
          "arguments": {
            "price": "$2,500",
            "house_area": "60 sqm",
            "level": "Higher-up",
            "age": 10,
            "house_type": "1 bedroom & 1 living room"
          }
        }
      },
      {
        "role": "assistant",
        "content": "What is the cell name"
      },
      {
        "role": "user",
        "content": "It was wrong before. Layout should be 2 bedrooms & 1 living room"
      },
      {
        "role": "function call",
        "content": {
          "name": "ConvenientLiving.BuyingRentingHomes.searchRentingHouses",
          "arguments": {
            "price": "$2,500",
            "house_area": "60 sqm",
            "level": "Higher-up",
            "age": 10,
            "house_type": "2 bedrooms & 1 living room"
          }
        }
      },
      {
        "role": "assistant",
        "content": "What is the cell name"
      },
      {
        "role": "user",
        "content": "Want to see Green Homes."
      },
      {
        "role": "function call",
        "content": {
          "name": "ConvenientLiving.BuyingRentingHomes.searchRentingHouses",
          "arguments": {
            "price": "$2,500",
            "house_area": "60 sqm",
            "level": "Higher-up",
            "age": 10,
            "house_type": "2 bedrooms & 1 living room",
            "housing_estate": "Green Homes"
          }
        }
      },
      {
        "role": "assistant",
        "content": "Please provide the location of the house"
      },
      {
        "role": "user",
        "content": "The house is located on the outskirts of the city in a quiet environment with good transportation."
      },
      {
        "role": "function call",
        "content": {
          "name": "ConvenientLiving.BuyingRentingHomes.searchRentingHouses",
          "arguments": {
            "price": "$2,500",
            "house_area": "60 sqm",
            "level": "Higher-up",
            "age": 10,
            "house_type": "2 bedrooms & 1 living room",
            "housing_estate": "Green Homes",
            "location": "suburbs"
          }
        }
      },
      {
        "role": "assistant",
        "content": "What is the decoration of the house like?"
      },
      {
        "role": "user",
        "content": "The house is simply decorated with all the basic amenities and can be checked in directly."
      },
      {
        "role": "function call",
        "content": {
          "name": "ConvenientLiving.BuyingRentingHomes.searchRentingHouses",
          "arguments": {
            "price": "$2,500",
            "house_area": "60 sqm",
            "level": "Higher-up",
            "age": 10,
            "house_type": "2 bedrooms & 1 living room",
            "housing_estate": "Green Homes",
            "location": "suburbs",
            "indoor_decoration": "Simple decoration"
          }
        }
      },
      {
        "role": "assistant",
        "content": "Whether the house needs to be furnished"
      },
      {
        "role": "user",
        "content": "Yes, the house needs to be equipped with basic furniture."
      },
      {
        "role": "function call",
        "content": {
          "name": "ConvenientLiving.BuyingRentingHomes.searchRentingHouses",
          "arguments": {
            "price": "$2,500",
            "house_area": "60 sqm",
            "level": "Higher-up",
            "age": 10,
            "house_type": "2 bedrooms & 1 living room",
            "housing_estate": "Green Homes",
            "location": "suburbs",
            "indoor_decoration": "Simple decoration",
            "furniture": "Basic furniture"
          }
        }
      }
    ],
    "multiple_tools": [
      {
        "name": "NewsMagazines.NewspapersMagazines.getRecommendedMagazines",
        "description": "Recommend newspapers and magazines according to user preferences",
        "parameters": {
          "type": "object",
          "properties": {},
          "required": []
        }
      },
      {
        "name": "ConvenientLiving.BuyingRentingHomes.searchRentingHouses",
        "description": "Search for rentals by criteria",
        "parameters": {
          "type": "object",
          "properties": {
            "price": {
              "type": "string",
              "description": "Rents"
            },
            "house_area": {
              "type": "string",
              "description": "Area"
            },
            "level": {
              "type": "string",
              "description": "Floor"
            },
            "age": {
              "type": "integer",
              "description": "fixed number of years"
            },
            "house_type": {
              "type": "string",
              "description": "Layout"
            },
            "housing_estate": {
              "type": "string",
              "description": "Community"
            },
            "location": {
              "type": "string",
              "description": "Position"
            },
            "indoor_decoration": {
              "type": "string",
              "description": "decorate"
            },
            "furniture": {
              "type": "string",
              "description": "Furniture"
            }
          },
          "required": [
            "price",
            "house_area",
            "level",
            "age",
            "house_type",
            "housing_estate",
            "location",
            "indoor_decoration",
            "furniture"
          ]
        }
      },
      {
        "name": "MusicRadio.OnlineMusic.getRecommendedPlaylists",
        "description": "Get recommended songs by mood and scene",
        "parameters": {
          "type": "object",
          "properties": {
            "mood": {
              "type": "string",
              "description": "Emotions"
            },
            "scene": {
              "type": "string",
              "description": "setting"
            }
          },
          "required": [
            "mood",
            "scene"
          ]
        }
      },
      {
        "name": "MusicRadio.RadioStations.radioGetRecommendedSongs",
        "description": "Get a list of recommended songs based on the user's historical preferences",
        "parameters": {
          "type": "object",
          "properties": {},
          "required": []
        }
      },
      {
        "name": "ConvenientLiving.JobRecruitment.getRecommendedJobs",
        "description": "Suggest a position based on the user's resume and preferences",
        "parameters": {
          "type": "object",
          "properties": {
            "resume_path": {
              "type": "string",
              "description": "Local path to resume file"
            }
          },
          "required": [
            "resume_path"
          ]
        }
      }
    ],
    "single_tool": [
      {
        "name": "ConvenientLiving.BuyingRentingHomes.searchRentingHouses",
        "description": "Search for rentals by criteria",
        "parameters": {
          "type": "object",
          "properties": {
            "price": {
              "type": "string",
              "description": "Rents"
            },
            "house_area": {
              "type": "string",
              "description": "Area"
            },
            "level": {
              "type": "string",
              "description": "Floor"
            },
            "age": {
              "type": "integer",
              "description": "fixed number of years"
            },
            "house_type": {
              "type": "string",
              "description": "Layout"
            },
            "housing_estate": {
              "type": "string",
              "description": "Community"
            },
            "location": {
              "type": "string",
              "description": "Position"
            },
            "indoor_decoration": {
              "type": "string",
              "description": "decorate"
            },
            "furniture": {
              "type": "string",
              "description": "Furniture"
            }
          },
          "required": [
            "price",
            "house_area",
            "level",
            "age",
            "house_type",
            "housing_estate",
            "location",
            "indoor_decoration",
            "furniture"
          ]
        }
      }
    ],
    "id": 59
  },
  {
    "messages": [
      {
        "role": "user",
        "content": "I am thinking about calculating the amount of mortgage to buy a new house, can you help me calculate it?"
      },
      {
        "role": "function call",
        "content": {
          "name": "ConvenientLiving.BuyingRentingHomes.calculateHousingMortgage",
          "arguments": {}
        }
      },
      {
        "role": "assistant",
        "content": "What's the down payment"
      },
      {
        "role": "user",
        "content": "The down payment is 360000 yuan."
      },
      {
        "role": "function call",
        "content": {
          "name": "ConvenientLiving.BuyingRentingHomes.calculateHousingMortgage",
          "arguments": {
            "down_payment": 360000
          }
        }
      },
      {
        "role": "assistant",
        "content": "What is the price of the house"
      },
      {
        "role": "user",
        "content": "The house price is 1.2 million."
      },
      {
        "role": "function call",
        "content": {
          "name": "ConvenientLiving.BuyingRentingHomes.calculateHousingMortgage",
          "arguments": {
            "down_payment": 360000,
            "house_price": 1200000
          }
        }
      },
      {
        "role": "assistant",
        "content": "What is the loan interest rate"
      },
      {
        "role": "user",
        "content": "It was wrong before. First installment payment should be 200000"
      },
      {
        "role": "function call",
        "content": {
          "name": "ConvenientLiving.BuyingRentingHomes.calculateHousingMortgage",
          "arguments": {
            "down_payment": 200000,
            "house_price": 1200000
          }
        }
      },
      {
        "role": "assistant",
        "content": "What is the loan interest rate"
      },
      {
        "role": "user",
        "content": "The lending rate is 0.029, or 2.9%."
      },
      {
        "role": "function call",
        "content": {
          "name": "ConvenientLiving.BuyingRentingHomes.calculateHousingMortgage",
          "arguments": {
            "down_payment": 200000,
            "house_price": 1200000,
            "interest_rate": 0.029
          }
        }
      }
    ],
    "multiple_tools": [
      {
        "name": "OfficeSoftware.Documents.getDocumentStatistics",
        "description": "Get statistics for a given document, such as the number of words, pages, etc.",
        "parameters": {
          "type": "object",
          "properties": {
            "document_name": {
              "type": "string",
              "description": "To get the document name of the statistic, it is required"
            }
          },
          "required": [
            "document_name"
          ]
        }
      },
      {
        "name": "Photography.VideoEditing.videoEditCut",
        "description": "Capture clips from specific time periods in the video",
        "parameters": {
          "type": "object",
          "properties": {
            "name_or_path": {
              "type": "string",
              "description": "The name or path of the video"
            },
            "start_time": {
              "type": "integer",
              "description": "Start time period for capturing video, in seconds"
            },
            "end_time": {
              "type": "integer",
              "description": "End time period for intercepted video, in seconds"
            }
          },
          "required": [
            "name_or_path",
            "start_time",
            "end_time"
          ]
        }
      },
      {
        "name": "VideoPlayback.ShortVideos.playShortVideo",
        "description": "Watch the short video, watch from scratch by default",
        "parameters": {
          "type": "object",
          "properties": {
            "video_name": {
              "type": "string",
              "description": "Short video name"
            },
            "full_screen": {
              "type": "boolean",
              "description": "Full Screen"
            },
            "playback_speed": {
              "type": "float",
              "description": "Playback Speed"
            },
            "danmaku": {
              "type": "boolean",
              "description": "enable bullet text"
            }
          },
          "required": [
            "video_name",
            "full_screen",
            "playback_speed",
            "danmaku"
          ]
        }
      },
      {
        "name": "ConvenientLiving.BuyingRentingHomes.calculateHousingMortgage",
        "description": "Calculate Home Purchase Loan Amount",
        "parameters": {
          "type": "object",
          "properties": {
            "house_price": {
              "type": "integer",
              "description": "house prices "
            },
            "down_payment": {
              "type": "integer",
              "description": "First installment payment"
            },
            "interest_rate": {
              "type": "integer",
              "description": "Interest Rate"
            },
            "loan_term": {
              "type": "integer",
              "description": "Mortgage term"
            }
          },
          "required": [
            "house_price",
            "down_payment",
            "interest_rate",
            "loan_term"
          ]
        }
      },
      {
        "name": "ConvenientLiving.AutoLife.calculateCarLoan",
        "description": "The loan program is calculated based on information such as the purchase price of the car.",
        "parameters": {
          "type": "object",
          "properties": {
            "car_price": {
              "type": "float",
              "description": "Car price, required"
            },
            "down_payment": {
              "type": "float",
              "description": "First installment payment"
            }
          },
          "required": [
            "car_price",
            "down_payment"
          ]
        }
      }
    ],
    "single_tool": [
      {
        "name": "ConvenientLiving.BuyingRentingHomes.calculateHousingMortgage",
        "description": "Calculate Home Purchase Loan Amount",
        "parameters": {
          "type": "object",
          "properties": {
            "house_price": {
              "type": "integer",
              "description": "house prices "
            },
            "down_payment": {
              "type": "integer",
              "description": "First installment payment"
            },
            "interest_rate": {
              "type": "integer",
              "description": "Interest Rate"
            },
            "loan_term": {
              "type": "integer",
              "description": "Mortgage term"
            }
          },
          "required": [
            "house_price",
            "down_payment",
            "interest_rate",
            "loan_term"
          ]
        }
      }
    ],
    "id": 60
  },
  {
    "messages": [
      {
        "role": "user",
        "content": "I want to know how much I need to pay for my mortgage, can you give me an approximate number?"
      },
      {
        "role": "function call",
        "content": {
          "name": "ConvenientLiving.BuyingRentingHomes.calculateHousingMortgage",
          "arguments": {}
        }
      },
      {
        "role": "assistant",
        "content": "What's the down payment"
      },
      {
        "role": "user",
        "content": "The down payment is 200000 yuan."
      },
      {
        "role": "function call",
        "content": {
          "name": "ConvenientLiving.BuyingRentingHomes.calculateHousingMortgage",
          "arguments": {
            "down_payment": 200000
          }
        }
      },
      {
        "role": "assistant",
        "content": "What is the price of the house"
      },
      {
        "role": "user",
        "content": "The house price is 800000 yuan."
      },
      {
        "role": "function call",
        "content": {
          "name": "ConvenientLiving.BuyingRentingHomes.calculateHousingMortgage",
          "arguments": {
            "down_payment": 200000,
            "house_price": 800000
          }
        }
      },
      {
        "role": "assistant",
        "content": "What is the loan interest rate"
      },
      {
        "role": "user",
        "content": "It was wrong before. First installment payment should be 360000"
      },
      {
        "role": "function call",
        "content": {
          "name": "ConvenientLiving.BuyingRentingHomes.calculateHousingMortgage",
          "arguments": {
            "down_payment": 360000,
            "house_price": 800000
          }
        }
      },
      {
        "role": "assistant",
        "content": "What is the loan interest rate"
      },
      {
        "role": "user",
        "content": "The lending rate is 0.035, or 3.5%."
      },
      {
        "role": "function call",
        "content": {
          "name": "ConvenientLiving.BuyingRentingHomes.calculateHousingMortgage",
          "arguments": {
            "down_payment": 360000,
            "house_price": 800000,
            "interest_rate": 0.035
          }
        }
      }
    ],
    "multiple_tools": [
      {
        "name": "ConvenientLiving.AutoLife.calculateCarLoan",
        "description": "The loan program is calculated based on information such as the purchase price of the car.",
        "parameters": {
          "type": "object",
          "properties": {
            "car_price": {
              "type": "float",
              "description": "Car price, required"
            },
            "down_payment": {
              "type": "float",
              "description": "First installment payment"
            }
          },
          "required": [
            "car_price",
            "down_payment"
          ]
        }
      },
      {
        "name": "Navigation.TrainTickets.searchWaitlistTrain",
        "description": "Search for alternate train numbers based on the criteria entered by the user",
        "parameters": {
          "type": "object",
          "properties": {
            "ride_date": {
              "type": "string",
              "description": "Date of trip"
            },
            "departure_station": {
              "type": "string",
              "description": "Departure Station"
            },
            "destination_station": {
              "type": "string",
              "description": "arrival station"
            }
          },
          "required": [
            "ride_date",
            "departure_station",
            "destination_station"
          ]
        }
      },
      {
        "name": "OnlineShopping.ExpressDelivery.searchExpress",
        "description": "Search courier logistics based on information such as designated courier number, recipient, address, etc.",
        "parameters": {
          "type": "object",
          "properties": {
            "express_id": {
              "type": "string",
              "description": "Tracking Number"
            },
            "date": {
              "type": "string",
              "description": "Shipping date"
            },
            "send_name": {
              "type": "string",
              "description": "Name Of Sender"
            },
            "recipient_name": {
              "type": "string",
              "description": "Recipient's name"
            }
          },
          "required": [
            "express_id",
            "date",
            "send_name",
            "recipient_name"
          ]
        }
      },
      {
        "name": "SocialCommunication.InstantMessaging.getUnreadMessageCount",
        "description": "View the number of unread messages for a given group or contact",
        "parameters": {
          "type": "object",
          "properties": {
            "receiver_name": {
              "type": "string",
              "description": "Contacts or groups"
            }
          },
          "required": [
            "receiver_name"
          ]
        }
      },
      {
        "name": "ConvenientLiving.BuyingRentingHomes.calculateHousingMortgage",
        "description": "Calculate Home Purchase Loan Amount",
        "parameters": {
          "type": "object",
          "properties": {
            "house_price": {
              "type": "integer",
              "description": "house prices "
            },
            "down_payment": {
              "type": "integer",
              "description": "First installment payment"
            },
            "interest_rate": {
              "type": "integer",
              "description": "Interest Rate"
            },
            "loan_term": {
              "type": "integer",
              "description": "Mortgage term"
            }
          },
          "required": [
            "house_price",
            "down_payment",
            "interest_rate",
            "loan_term"
          ]
        }
      }
    ],
    "single_tool": [
      {
        "name": "ConvenientLiving.BuyingRentingHomes.calculateHousingMortgage",
        "description": "Calculate Home Purchase Loan Amount",
        "parameters": {
          "type": "object",
          "properties": {
            "house_price": {
              "type": "integer",
              "description": "house prices "
            },
            "down_payment": {
              "type": "integer",
              "description": "First installment payment"
            },
            "interest_rate": {
              "type": "integer",
              "description": "Interest Rate"
            },
            "loan_term": {
              "type": "integer",
              "description": "Mortgage term"
            }
          },
          "required": [
            "house_price",
            "down_payment",
            "interest_rate",
            "loan_term"
          ]
        }
      }
    ],
    "id": 61
  },
  {
    "messages": [
      {
        "role": "user",
        "content": "Find out what's around my place"
      },
      {
        "role": "function call",
        "content": {
          "name": "ConvenientLiving.BuyingRentingHomes.getHouseSurroundings",
          "arguments": {}
        }
      },
      {
        "role": "assistant",
        "content": "What's the name of the property"
      },
      {
        "role": "user",
        "content": "Known as the Sea View Villa, this property is located on the picturesque coastline."
      },
      {
        "role": "function call",
        "content": {
          "name": "ConvenientLiving.BuyingRentingHomes.getHouseSurroundings",
          "arguments": {
            "house_name": "sea-viewing villa"
          }
        }
      },
      {
        "role": "assistant",
        "content": "Please provide a cell name"
      },
      {
        "role": "user",
        "content": "It was wrong before. Property name should be The Pinnacle"
      },
      {
        "role": "function call",
        "content": {
          "name": "ConvenientLiving.BuyingRentingHomes.getHouseSurroundings",
          "arguments": {
            "house_name": "The Pinnacle"
          }
        }
      },
      {
        "role": "assistant",
        "content": "Please provide a cell name"
      },
      {
        "role": "user",
        "content": "Blue Water Bay is my neighborhood."
      },
      {
        "role": "function call",
        "content": {
          "name": "ConvenientLiving.BuyingRentingHomes.getHouseSurroundings",
          "arguments": {
            "house_name": "The Pinnacle",
            "housing_estate": "Jade Water Bay"
          }
        }
      }
    ],
    "multiple_tools": [
      {
        "name": "UtilityTools.Memo.searchNotes",
        "description": "Search memos by keyword (see all by default)",
        "parameters": {
          "type": "object",
          "properties": {
            "key_words": {
              "type": "string",
              "description": "KEYWORDS"
            }
          },
          "required": [
            "key_words"
          ]
        }
      },
      {
        "name": "ConvenientLiving.BuyingRentingHomes.getHouseSurroundings",
        "description": "Check the amenities around the house",
        "parameters": {
          "type": "object",
          "properties": {
            "house_name": {
              "type": "string",
              "description": "Property name"
            },
            "housing_estate": {
              "type": "string",
              "description": "Community"
            },
            "location": {
              "type": "string",
              "description": "Position"
            }
          },
          "required": [
            "house_name",
            "housing_estate",
            "location"
          ]
        }
      },
      {
        "name": "OfficeSoftware.Conferencing.viewParticipants",
        "description": "Get a list of participants for the current meeting",
        "parameters": {
          "type": "object",
          "properties": {
            "meeting_id": {
              "type": "string",
              "description": "Conference No."
            },
            "title": {
              "type": "string",
              "description": "Meeting Title:"
            },
            "time": {
              "type": "string",
              "description": "Meeting Date"
            }
          },
          "required": [
            "meeting_id",
            "title",
            "time"
          ]
        }
      },
      {
        "name": "Travel.ItineraryServices.searchTravelRoute",
        "description": "Search for relevant travel itineraries based on keywords",
        "parameters": {
          "type": "object",
          "properties": {
            "keyword": {
              "type": "string",
              "description": "Search keywords"
            }
          },
          "required": [
            "keyword"
          ]
        }
      },
      {
        "name": "ConvenientLiving.BuyingRentingHomes.searchRentingHouses",
        "description": "Search for rentals by criteria",
        "parameters": {
          "type": "object",
          "properties": {
            "price": {
              "type": "string",
              "description": "Rents"
            },
            "house_area": {
              "type": "string",
              "description": "Area"
            },
            "level": {
              "type": "string",
              "description": "Floor"
            },
            "age": {
              "type": "integer",
              "description": "fixed number of years"
            },
            "house_type": {
              "type": "string",
              "description": "Layout"
            },
            "housing_estate": {
              "type": "string",
              "description": "Community"
            },
            "location": {
              "type": "string",
              "description": "Position"
            },
            "indoor_decoration": {
              "type": "string",
              "description": "decorate"
            },
            "furniture": {
              "type": "string",
              "description": "Furniture"
            }
          },
          "required": [
            "price",
            "house_area",
            "level",
            "age",
            "house_type",
            "housing_estate",
            "location",
            "indoor_decoration",
            "furniture"
          ]
        }
      }
    ],
    "single_tool": [
      {
        "name": "ConvenientLiving.BuyingRentingHomes.getHouseSurroundings",
        "description": "Check the amenities around the house",
        "parameters": {
          "type": "object",
          "properties": {
            "house_name": {
              "type": "string",
              "description": "Property name"
            },
            "housing_estate": {
              "type": "string",
              "description": "Community"
            },
            "location": {
              "type": "string",
              "description": "Position"
            }
          },
          "required": [
            "house_name",
            "housing_estate",
            "location"
          ]
        }
      }
    ],
    "id": 64
  },
  {
    "messages": [
      {
        "role": "user",
        "content": "Help me see how to apply for a business license online?"
      },
      {
        "role": "function call",
        "content": {
          "name": "ConvenientLiving.GovernmentServices.applyForBusinessLicense",
          "arguments": {}
        }
      },
      {
        "role": "assistant",
        "content": "Please provide the business name"
      },
      {
        "role": "user",
        "content": "Future Technology Innovation Co., Ltd."
      },
      {
        "role": "function call",
        "content": {
          "name": "ConvenientLiving.GovernmentServices.applyForBusinessLicense",
          "arguments": {
            "business_name": "Future Technology Innovation Co., Ltd."
          }
        }
      },
      {
        "role": "assistant",
        "content": "Please provide the business owner's name"
      },
      {
        "role": "user",
        "content": "It was wrong before. Name of the Enterprise should be Lantian Technology Co., Ltd."
      },
      {
        "role": "function call",
        "content": {
          "name": "ConvenientLiving.GovernmentServices.applyForBusinessLicense",
          "arguments": {
            "business_name": "Lantian Technology Co., Ltd."
          }
        }
      },
      {
        "role": "assistant",
        "content": "Please provide the business owner's name"
      },
      {
        "role": "user",
        "content": "Zhang San."
      },
      {
        "role": "function call",
        "content": {
          "name": "ConvenientLiving.GovernmentServices.applyForBusinessLicense",
          "arguments": {
            "business_name": "Lantian Technology Co., Ltd.",
            "name": "Zhang San"
          }
        }
      },
      {
        "role": "assistant",
        "content": "Please provide your ID number"
      },
      {
        "role": "user",
        "content": "My ID number is 440582199001011234"
      },
      {
        "role": "function call",
        "content": {
          "name": "ConvenientLiving.GovernmentServices.applyForBusinessLicense",
          "arguments": {
            "business_name": "Lantian Technology Co., Ltd.",
            "name": "Zhang San",
            "id_card": "440582199001011234"
          }
        }
      }
    ],
    "multiple_tools": [
      {
        "name": "MusicRadio.OnlineMusic.bindSocialPlatforms",
        "description": "Link your account to a social platform",
        "parameters": {
          "type": "object",
          "properties": {
            "platforms": {
              "type": "string",
              "description": "Social platforms to be linked"
            }
          },
          "required": [
            "platforms"
          ]
        }
      },
      {
        "name": "Finance.Payment.linkPayBankCard",
        "description": "Link your card to your account",
        "parameters": {
          "type": "object",
          "properties": {
            "card_number": {
              "type": "string",
              "description": "Bank Card Number"
            },
            "card_holder_name": {
              "type": "string",
              "description": "Card holder name"
            },
            "bank_name": {
              "type": "string",
              "description": "Bank Name"
            }
          },
          "required": [
            "card_number",
            "card_holder_name",
            "bank_name"
          ]
        }
      },
      {
        "name": "ConvenientLiving.GovernmentServices.applyForBusinessLicense",
        "description": "Apply for a business license online",
        "parameters": {
          "type": "object",
          "properties": {
            "business_name": {
              "type": "string",
              "description": "Name of the Enterprise"
            },
            "name": {
              "type": "string",
              "description": "Objects that contain information about the business owner, such as name, ID number, etc."
            },
            "id_card": {
              "type": "string",
              "description": "ID No."
            }
          },
          "required": [
            "business_name",
            "name",
            "id_card"
          ]
        }
      },
      {
        "name": "SystemTools.SystemSettings.OpenApp",
        "description": "Open the specified App on your phone",
        "parameters": {
          "type": "object",
          "properties": {
            "app_name": {
              "type": "string",
              "description": "App name"
            }
          },
          "required": [
            "app_name"
          ]
        }
      },
      {
        "name": "SystemTools.SystemSettings.setSystemTurnOnConnect2Win",
        "description": "Open connection to windows",
        "parameters": {
          "type": "object",
          "properties": {},
          "required": []
        }
      }
    ],
    "single_tool": [
      {
        "name": "ConvenientLiving.GovernmentServices.applyForBusinessLicense",
        "description": "Apply for a business license online",
        "parameters": {
          "type": "object",
          "properties": {
            "business_name": {
              "type": "string",
              "description": "Name of the Enterprise"
            },
            "name": {
              "type": "string",
              "description": "Objects that contain information about the business owner, such as name, ID number, etc."
            },
            "id_card": {
              "type": "string",
              "description": "ID No."
            }
          },
          "required": [
            "business_name",
            "name",
            "id_card"
          ]
        }
      }
    ],
    "id": 83
  },
  {
    "messages": [
      {
        "role": "user",
        "content": "Check on my immigration status"
      },
      {
        "role": "function call",
        "content": {
          "name": "ConvenientLiving.GovernmentServices.checkImmigrationStatus",
          "arguments": {}
        }
      },
      {
        "role": "assistant",
        "content": "Please provide your passport number"
      },
      {
        "role": "user",
        "content": "My passport number is G12345678."
      },
      {
        "role": "function call",
        "content": {
          "name": "ConvenientLiving.GovernmentServices.checkImmigrationStatus",
          "arguments": {
            "passport_number": "G12345678"
          }
        }
      },
      {
        "role": "assistant",
        "content": "Please provide your username"
      },
      {
        "role": "user",
        "content": "It was wrong before. Pasaport No. should be G87654321"
      },
      {
        "role": "function call",
        "content": {
          "name": "ConvenientLiving.GovernmentServices.checkImmigrationStatus",
          "arguments": {
            "passport_number": "G87654321"
          }
        }
      },
      {
        "role": "assistant",
        "content": "Please provide your username"
      },
      {
        "role": "user",
        "content": "My name is Zhang San, how can I help you?"
      },
      {
        "role": "function call",
        "content": {
          "name": "ConvenientLiving.GovernmentServices.checkImmigrationStatus",
          "arguments": {
            "passport_number": "G87654321",
            "full_name": "Zhang San"
          }
        }
      }
    ],
    "multiple_tools": [
      {
        "name": "Navigation.TrainTickets.queryTrainWaitlistStatus",
        "description": "Used to query the current status of train ticket standby orders submitted by users",
        "parameters": {
          "type": "object",
          "properties": {
            "ride_date": {
              "type": "string",
              "description": "Date of trip"
            },
            "commit_date": {
              "type": "string",
              "description": "Date/time the order was submitted"
            },
            "departure_station": {
              "type": "string",
              "description": "Departure Station"
            },
            "destination_station": {
              "type": "string",
              "description": "arrival station"
            },
            "passenger_id": {
              "type": "string",
              "description": "Rider ID number"
            },
            "name": {
              "type": "string",
              "description": "Name of person to query"
            }
          },
          "required": [
            "ride_date",
            "commit_date",
            "departure_station",
            "destination_station",
            "passenger_id",
            "name"
          ]
        }
      },
      {
        "name": "ConvenientLiving.JobRecruitment.checkJobApplicationStatus",
        "description": "View the status of job applications by position",
        "parameters": {
          "type": "object",
          "properties": {
            "job_name": {
              "type": "string",
              "description": "Position name"
            },
            "company_name": {
              "type": "string",
              "description": "Company name"
            }
          },
          "required": [
            "job_name",
            "company_name"
          ]
        }
      },
      {
        "name": "Travel.HotelServices.getHotelCheckInStatus",
        "description": "Check the check-in status of a specific hotel reservation",
        "parameters": {
          "type": "object",
          "properties": {
            "name": {
              "type": "string",
              "description": "Hotel Name"
            },
            "booking_date": {
              "type": "string",
              "description": "Ordered Date"
            }
          },
          "required": [
            "name",
            "booking_date"
          ]
        }
      },
      {
        "name": "ConvenientLiving.GovernmentServices.checkImmigrationStatus",
        "description": "Inquire about an individual's immigration status",
        "parameters": {
          "type": "object",
          "properties": {
            "passport_number": {
              "type": "string",
              "description": "Pasaport No."
            },
            "full_name": {
              "type": "string",
              "description": "User name, default user himself"
            }
          },
          "required": [
            "passport_number",
            "full_name"
          ]
        }
      },
      {
        "name": "ConvenientLiving.JobRecruitment.checkJobPositionAvailability",
        "description": "Check if a specific position is still being recruited",
        "parameters": {
          "type": "object",
          "properties": {
            "job_name": {
              "type": "string",
              "description": "Position name"
            },
            "company_name": {
              "type": "string",
              "description": "Company name"
            }
          },
          "required": [
            "job_name",
            "company_name"
          ]
        }
      }
    ],
    "single_tool": [
      {
        "name": "ConvenientLiving.GovernmentServices.checkImmigrationStatus",
        "description": "Inquire about an individual's immigration status",
        "parameters": {
          "type": "object",
          "properties": {
            "passport_number": {
              "type": "string",
              "description": "Pasaport No."
            },
            "full_name": {
              "type": "string",
              "description": "User name, default user himself"
            }
          },
          "required": [
            "passport_number",
            "full_name"
          ]
        }
      }
    ],
    "id": 86
  },
  {
    "messages": [
      {
        "role": "user",
        "content": "Can you take a look at my current immigration situation?"
      },
      {
        "role": "function call",
        "content": {
          "name": "ConvenientLiving.GovernmentServices.checkImmigrationStatus",
          "arguments": {}
        }
      },
      {
        "role": "assistant",
        "content": "Please provide your passport number"
      },
      {
        "role": "user",
        "content": "My passport number is G12345678."
      },
      {
        "role": "function call",
        "content": {
          "name": "ConvenientLiving.GovernmentServices.checkImmigrationStatus",
          "arguments": {
            "passport_number": "G12345678"
          }
        }
      },
      {
        "role": "assistant",
        "content": "Please provide your username to check immigration status"
      },
      {
        "role": "user",
        "content": "It was wrong before. Pasaport No. should be G87654321"
      },
      {
        "role": "function call",
        "content": {
          "name": "ConvenientLiving.GovernmentServices.checkImmigrationStatus",
          "arguments": {
            "passport_number": "G87654321"
          }
        }
      },
      {
        "role": "assistant",
        "content": "Please provide your username to check immigration status"
      },
      {
        "role": "user",
        "content": "My name is Zhang San, and I need to check my immigration status."
      },
      {
        "role": "function call",
        "content": {
          "name": "ConvenientLiving.GovernmentServices.checkImmigrationStatus",
          "arguments": {
            "passport_number": "G87654321",
            "full_name": "Zhang San"
          }
        }
      }
    ],
    "multiple_tools": [
      {
        "name": "OnlineShopping.Mall.viewMessage",
        "description": "View messages for a specific friend or time, and see the entire list of messages by default",
        "parameters": {
          "type": "object",
          "properties": {},
          "required": []
        }
      },
      {
        "name": "SocialCommunication.SocialMedia.viewMediumMessage",
        "description": "View messages for specified friends in specified media (defaults to last week)",
        "parameters": {
          "type": "object",
          "properties": {
            "medium_name": {
              "type": "string",
              "description": "Media name"
            },
            "name": {
              "type": "string",
              "description": "Friend's nickname"
            },
            "account_number": {
              "type": "string",
              "description": "Friend's account"
            },
            "time": {
              "type": "string",
              "description": "Release Date"
            }
          },
          "required": [
            "medium_name",
            "name",
            "account_number",
            "time"
          ]
        }
      },
      {
        "name": "ConvenientLiving.GovernmentServices.checkImmigrationStatus",
        "description": "Inquire about an individual's immigration status",
        "parameters": {
          "type": "object",
          "properties": {
            "passport_number": {
              "type": "string",
              "description": "Pasaport No."
            },
            "full_name": {
              "type": "string",
              "description": "User name, default user himself"
            }
          },
          "required": [
            "passport_number",
            "full_name"
          ]
        }
      },
      {
        "name": "ConvenientLiving.JobRecruitment.checkJobPositionAvailability",
        "description": "Check if a specific position is still being recruited",
        "parameters": {
          "type": "object",
          "properties": {
            "job_name": {
              "type": "string",
              "description": "Position name"
            },
            "company_name": {
              "type": "string",
              "description": "Company name"
            }
          },
          "required": [
            "job_name",
            "company_name"
          ]
        }
      },
      {
        "name": "OnlineShopping.SecondhandTrading.viewSecondhandSaleMessage",
        "description": "View message list by default",
        "parameters": {
          "type": "object",
          "properties": {},
          "required": []
        }
      }
    ],
    "single_tool": [
      {
        "name": "ConvenientLiving.GovernmentServices.checkImmigrationStatus",
        "description": "Inquire about an individual's immigration status",
        "parameters": {
          "type": "object",
          "properties": {
            "passport_number": {
              "type": "string",
              "description": "Pasaport No."
            },
            "full_name": {
              "type": "string",
              "description": "User name, default user himself"
            }
          },
          "required": [
            "passport_number",
            "full_name"
          ]
        }
      }
    ],
    "id": 87
  },
  {
    "messages": [
      {
        "role": "user",
        "content": "Can you help me see what I need to do to apply for an education grant?"
      },
      {
        "role": "function call",
        "content": {
          "name": "ConvenientLiving.GovernmentServices.applyForEducationGrant",
          "arguments": {}
        }
      },
      {
        "role": "assistant",
        "content": "Please provide your name and contact information so we can process your education grant request"
      },
      {
        "role": "user",
        "content": "My name is Li Si."
      },
      {
        "role": "function call",
        "content": {
          "name": "ConvenientLiving.GovernmentServices.applyForEducationGrant",
          "arguments": {
            "name": "Li Si"
          }
        }
      },
      {
        "role": "assistant",
        "content": "Which school is it?"
      },
      {
        "role": "user",
        "content": "It was wrong before. Applicant, default user self should be Zhang San"
      },
      {
        "role": "function call",
        "content": {
          "name": "ConvenientLiving.GovernmentServices.applyForEducationGrant",
          "arguments": {
            "name": "Zhang San"
          }
        }
      },
      {
        "role": "assistant",
        "content": "Which school is it?"
      },
      {
        "role": "user",
        "content": "I am applying to Tsinghua University."
      },
      {
        "role": "function call",
        "content": {
          "name": "ConvenientLiving.GovernmentServices.applyForEducationGrant",
          "arguments": {
            "name": "Zhang San",
            "school": "Tsinghua University"
          }
        }
      }
    ],
    "multiple_tools": [
      {
        "name": "ConvenientLiving.JobRecruitment.setJobPositionVisibility",
        "description": "Set if the position is visible to the candidate",
        "parameters": {
          "type": "object",
          "properties": {
            "position_name": {
              "type": "string",
              "description": "Job title, required"
            },
            "visibility": {
              "type": "boolean",
              "description": "Visibility, required"
            }
          },
          "required": [
            "position_name",
            "visibility"
          ]
        }
      },
      {
        "name": "OnlineShopping.Mall.searchCommodityOrders",
        "description": "Query all eligible orders by commodity name and other criteria",
        "parameters": {
          "type": "object",
          "properties": {
            "goods": {
              "type": "string",
              "description": "Product Name"
            },
            "order_stage": {
              "type": "string",
              "description": "Order status, e.g. Pending Payment, Pending Receipt, Completed, Cancelled, Refund/After Sales"
            },
            "evaluate_stage": {
              "type": "string",
              "description": "Review status, e.g. reviewed, pending review"
            }
          },
          "required": [
            "goods",
            "order_stage",
            "evaluate_stage"
          ]
        }
      },
      {
        "name": "ConvenientLiving.JobRecruitment.applyForJob",
        "description": "Submitting an Application to a Designated Position",
        "parameters": {
          "type": "object",
          "properties": {
            "job_name": {
              "type": "string",
              "description": "Position name"
            },
            "company_name": {
              "type": "string",
              "description": "Company name"
            }
          },
          "required": [
            "job_name",
            "company_name"
          ]
        }
      },
      {
        "name": "UtilityTools.FileManagement.editFileProperty",
        "description": "Setting the properties of a file",
        "parameters": {
          "type": "object",
          "properties": {
            "filename": {
              "type": "string",
              "description": "Document Name"
            },
            "property": {
              "type": "string",
              "description": "Contents of the property setting"
            }
          },
          "required": [
            "filename",
            "property"
          ]
        }
      },
      {
        "name": "ConvenientLiving.GovernmentServices.applyForEducationGrant",
        "description": "Submit an application for an education grant",
        "parameters": {
          "type": "object",
          "properties": {
            "name": {
              "type": "string",
              "description": "Applicant, default user self"
            },
            "school": {
              "type": "string",
              "description": "Schools"
            }
          },
          "required": [
            "name",
            "school"
          ]
        }
      }
    ],
    "single_tool": [
      {
        "name": "ConvenientLiving.GovernmentServices.applyForEducationGrant",
        "description": "Submit an application for an education grant",
        "parameters": {
          "type": "object",
          "properties": {
            "name": {
              "type": "string",
              "description": "Applicant, default user self"
            },
            "school": {
              "type": "string",
              "description": "Schools"
            }
          },
          "required": [
            "name",
            "school"
          ]
        }
      }
    ],
    "id": 90
  },
  {
    "messages": [
      {
        "role": "user",
        "content": "Can you guide me on how to submit an education grant application?"
      },
      {
        "role": "function call",
        "content": {
          "name": "ConvenientLiving.GovernmentServices.applyForEducationGrant",
          "arguments": {}
        }
      },
      {
        "role": "assistant",
        "content": "Please provide your name"
      },
      {
        "role": "user",
        "content": "My name is Zhang San."
      },
      {
        "role": "function call",
        "content": {
          "name": "ConvenientLiving.GovernmentServices.applyForEducationGrant",
          "arguments": {
            "name": "Zhang San"
          }
        }
      },
      {
        "role": "assistant",
        "content": "Which school is it?"
      },
      {
        "role": "user",
        "content": "It was wrong before. Applicant, default user self should be Li Si"
      },
      {
        "role": "function call",
        "content": {
          "name": "ConvenientLiving.GovernmentServices.applyForEducationGrant",
          "arguments": {
            "name": "Li Si"
          }
        }
      },
      {
        "role": "assistant",
        "content": "Which school is it?"
      },
      {
        "role": "user",
        "content": "I studied at Stanford."
      },
      {
        "role": "function call",
        "content": {
          "name": "ConvenientLiving.GovernmentServices.applyForEducationGrant",
          "arguments": {
            "name": "Li Si",
            "school": "Stanford University"
          }
        }
      }
    ],
    "multiple_tools": [
      {
        "name": "ConvenientLiving.GovernmentServices.applyForResidentPermit",
        "description": "Provide a residence permit application service for the user",
        "parameters": {
          "type": "object",
          "properties": {
            "identity_card_number": {
              "type": "string",
              "description": "User ID number, default user himself"
            },
            "address": {
              "type": "string",
              "description": "Residential Address"
            }
          },
          "required": [
            "identity_card_number",
            "address"
          ]
        }
      },
      {
        "name": "Navigation.TaxiCarRental.callingTaxi",
        "description": "Send a ride request based on your starting location",
        "parameters": {
          "type": "object",
          "properties": {
            "departure": {
              "type": "string",
              "description": "Pickup location, default current location"
            },
            "destination": {
              "type": "string",
              "description": "Destination"
            },
            "time": {
              "type": "string",
              "description": "Taxi time, default current time"
            }
          },
          "required": [
            "departure",
            "destination",
            "time"
          ]
        }
      },
      {
        "name": "ConvenientLiving.GovernmentServices.applyForEducationGrant",
        "description": "Submit an application for an education grant",
        "parameters": {
          "type": "object",
          "properties": {
            "name": {
              "type": "string",
              "description": "Applicant, default user self"
            },
            "school": {
              "type": "string",
              "description": "Schools"
            }
          },
          "required": [
            "name",
            "school"
          ]
        }
      },
      {
        "name": "ConvenientLiving.GovernmentServices.createServiceRequest",
        "description": "Submit a new city service request",
        "parameters": {
          "type": "object",
          "properties": {
            "city_name": {
              "type": "string",
              "description": "City"
            }
          },
          "required": [
            "city_name"
          ]
        }
      },
      {
        "name": "ConvenientLiving.GovernmentServices.applyForVisa",
        "description": "Submit Visa Application",
        "parameters": {
          "type": "object",
          "properties": {
            "passport_number": {
              "type": "string",
              "description": "Pasaport No."
            }
          },
          "required": [
            "passport_number"
          ]
        }
      }
    ],
    "single_tool": [
      {
        "name": "ConvenientLiving.GovernmentServices.applyForEducationGrant",
        "description": "Submit an application for an education grant",
        "parameters": {
          "type": "object",
          "properties": {
            "name": {
              "type": "string",
              "description": "Applicant, default user self"
            },
            "school": {
              "type": "string",
              "description": "Schools"
            }
          },
          "required": [
            "name",
            "school"
          ]
        }
      }
    ],
    "id": 91
  },
  {
    "messages": [
      {
        "role": "user",
        "content": "Submit an application for a position you want to be interviewed for"
      },
      {
        "role": "function call",
        "content": {
          "name": "ConvenientLiving.JobRecruitment.applyForJob",
          "arguments": {}
        }
      },
      {
        "role": "assistant",
        "content": "Please provide a job title"
      },
      {
        "role": "user",
        "content": "CFO"
      },
      {
        "role": "function call",
        "content": {
          "name": "ConvenientLiving.JobRecruitment.applyForJob",
          "arguments": {
            "job_name": "CFO"
          }
        }
      },
      {
        "role": "assistant",
        "content": "Please provide a company name"
      },
      {
        "role": "user",
        "content": "It was wrong before. Position name should be Product Manager"
      },
      {
        "role": "function call",
        "content": {
          "name": "ConvenientLiving.JobRecruitment.applyForJob",
          "arguments": {
            "job_name": "Product Manager"
          }
        }
      },
      {
        "role": "assistant",
        "content": "Please provide a company name"
      },
      {
        "role": "user",
        "content": "Global Investment Group"
      },
      {
        "role": "function call",
        "content": {
          "name": "ConvenientLiving.JobRecruitment.applyForJob",
          "arguments": {
            "job_name": "Product Manager",
            "company_name": "Global Investment Group"
          }
        }
      }
    ],
    "multiple_tools": [
      {
        "name": "SocialCommunication.Community.markCommunityNotificationRead",
        "description": "Mark notifications for the specified community as read (defaults to all read)",
        "parameters": {
          "type": "object",
          "properties": {
            "community_name": {
              "type": "string",
              "description": "The name of the community to be notified"
            },
            "notification_name": {
              "type": "string",
              "description": "Notifications to mark as read"
            }
          },
          "required": [
            "community_name",
            "notification_name"
          ]
        }
      },
      {
        "name": "ConvenientLiving.JobRecruitment.applyForJob",
        "description": "Submitting an Application to a Designated Position",
        "parameters": {
          "type": "object",
          "properties": {
            "job_name": {
              "type": "string",
              "description": "Position name"
            },
            "company_name": {
              "type": "string",
              "description": "Company name"
            }
          },
          "required": [
            "job_name",
            "company_name"
          ]
        }
      },
      {
        "name": "SocialCommunication.SocialMedia.collectMediumTrends",
        "description": "Favorite specified activity in specified media",
        "parameters": {
          "type": "object",
          "properties": {
            "medium_name": {
              "type": "string",
              "description": "Media name"
            },
            "correlation": {
              "type": "string",
              "description": "Dynamic Related Content"
            },
            "publisher": {
              "type": "string",
              "description": "Posted by/publisher?"
            },
            "publish_time": {
              "type": "string",
              "description": "Release Date"
            }
          },
          "required": [
            "medium_name",
            "correlation",
            "publisher",
            "publish_time"
          ]
        }
      },
      {
        "name": "ConvenientLiving.JobRecruitment.collectJob",
        "description": "Favorite posts of interest",
        "parameters": {
          "type": "object",
          "properties": {
            "job_name": {
              "type": "string",
              "description": "Position name"
            },
            "company_name": {
              "type": "string",
              "description": "Company name"
            }
          },
          "required": [
            "job_name",
            "company_name"
          ]
        }
      },
      {
        "name": "NewsMagazines.NewspapersMagazines.collectMagazine",
        "description": "Collect magazines or articles by name or journal",
        "parameters": {
          "type": "object",
          "properties": {
            "name": {
              "type": "string",
              "description": "Magazine Name"
            },
            "issue": {
              "type": "string",
              "description": "Number of periods"
            }
          },
          "required": [
            "name",
            "issue"
          ]
        }
      }
    ],
    "single_tool": [
      {
        "name": "ConvenientLiving.JobRecruitment.applyForJob",
        "description": "Submitting an Application to a Designated Position",
        "parameters": {
          "type": "object",
          "properties": {
            "job_name": {
              "type": "string",
              "description": "Position name"
            },
            "company_name": {
              "type": "string",
              "description": "Company name"
            }
          },
          "required": [
            "job_name",
            "company_name"
          ]
        }
      }
    ],
    "id": 98
  },
  {
    "messages": [
      {
        "role": "user",
        "content": "See what loan options are available based on my car purchase price"
      },
      {
        "role": "function call",
        "content": {
          "name": "ConvenientLiving.AutoLife.calculateCarLoan",
          "arguments": {}
        }
      },
      {
        "role": "assistant",
        "content": "What is the price of the car"
      },
      {
        "role": "user",
        "content": "The price of this car is 450000 yuan."
      },
      {
        "role": "function call",
        "content": {
          "name": "ConvenientLiving.AutoLife.calculateCarLoan",
          "arguments": {
            "car_price": 450000
          }
        }
      },
      {
        "role": "assistant",
        "content": "What's the down payment"
      },
      {
        "role": "user",
        "content": "It was wrong before. Car price, required should be 380000"
      },
      {
        "role": "function call",
        "content": {
          "name": "ConvenientLiving.AutoLife.calculateCarLoan",
          "arguments": {
            "car_price": 380000
          }
        }
      },
      {
        "role": "assistant",
        "content": "What's the down payment"
      },
      {
        "role": "user",
        "content": "The down payment is 150000 yuan."
      },
      {
        "role": "function call",
        "content": {
          "name": "ConvenientLiving.AutoLife.calculateCarLoan",
          "arguments": {
            "car_price": 380000,
            "down_payment": 150000
          }
        }
      }
    ],
    "multiple_tools": [
      {
        "name": "ConvenientLiving.GovernmentServices.queryHousingSubsidyInfo",
        "description": "Find out about housing allowances",
        "parameters": {
          "type": "object",
          "properties": {
            "user_name": {
              "type": "string",
              "description": "User name, default user himself"
            }
          },
          "required": [
            "user_name"
          ]
        }
      },
      {
        "name": "ConvenientLiving.AutoLife.calculateCarLoan",
        "description": "The loan program is calculated based on information such as the purchase price of the car.",
        "parameters": {
          "type": "object",
          "properties": {
            "car_price": {
              "type": "float",
              "description": "Car price, required"
            },
            "down_payment": {
              "type": "float",
              "description": "First installment payment"
            }
          },
          "required": [
            "car_price",
            "down_payment"
          ]
        }
      },
      {
        "name": "Navigation.TrafficViolations.viewTrafficEvent",
        "description": "View notifications about traffic events",
        "parameters": {
          "type": "object",
          "properties": {
            "keyword": {
              "type": "string",
              "description": "Additional conditions, such as area of occurrence, duration of impact, etc."
            }
          },
          "required": [
            "keyword"
          ]
        }
      },
      {
        "name": "Finance.Stocks.viewStockoperate",
        "description": "Query the stock market on the day of trading; the day of consignment; historical trading; historical consignment; T operation",
        "parameters": {
          "type": "object",
          "properties": {
            "transaction_today": {
              "type": "boolean",
              "description": "Deal of the day Default: 0 No"
            },
            "entrust_today": {
              "type": "boolean",
              "description": "Delegation of the day default: 0 No"
            },
            "transaction_his": {
              "type": "boolean",
              "description": "History Closing Default: 0 No"
            },
            "entrust_his": {
              "type": "boolean",
              "description": "Historical delegation default: 0 No"
            },
            "T_operate": {
              "type": "boolean",
              "description": "T Operation default: 0 No"
            }
          },
          "required": [
            "transaction_today",
            "entrust_today",
            "transaction_his",
            "entrust_his",
            "T_operate"
          ]
        }
      },
      {
        "name": "Travel.ScenicAreaServices.getScenicSpotEventInfo",
        "description": "Get upcoming event schedules for selected scenic spots",
        "parameters": {
          "type": "object",
          "properties": {
            "name": {
              "type": "string",
              "description": "Name of the tourist area"
            }
          },
          "required": [
            "name"
          ]
        }
      }
    ],
    "single_tool": [
      {
        "name": "ConvenientLiving.AutoLife.calculateCarLoan",
        "description": "The loan program is calculated based on information such as the purchase price of the car.",
        "parameters": {
          "type": "object",
          "properties": {
            "car_price": {
              "type": "float",
              "description": "Car price, required"
            },
            "down_payment": {
              "type": "float",
              "description": "First installment payment"
            }
          },
          "required": [
            "car_price",
            "down_payment"
          ]
        }
      }
    ],
    "id": 114
  },
  {
    "messages": [
      {
        "role": "user",
        "content": "Give me a plan to calculate a car loan"
      },
      {
        "role": "function call",
        "content": {
          "name": "ConvenientLiving.AutoLife.calculateCarLoan",
          "arguments": {}
        }
      },
      {
        "role": "assistant",
        "content": "What is the price of the car"
      },
      {
        "role": "user",
        "content": "The price of this car is 380000 yuan."
      },
      {
        "role": "function call",
        "content": {
          "name": "ConvenientLiving.AutoLife.calculateCarLoan",
          "arguments": {
            "car_price": 380000
          }
        }
      },
      {
        "role": "assistant",
        "content": "What's the down payment"
      },
      {
        "role": "user",
        "content": "It was wrong before. Car price, required should be 200000.0"
      },
      {
        "role": "function call",
        "content": {
          "name": "ConvenientLiving.AutoLife.calculateCarLoan",
          "arguments": {
            "car_price": 200000.0
          }
        }
      },
      {
        "role": "assistant",
        "content": "What's the down payment"
      },
      {
        "role": "user",
        "content": "The down payment is 80,000 yuan."
      },
      {
        "role": "function call",
        "content": {
          "name": "ConvenientLiving.AutoLife.calculateCarLoan",
          "arguments": {
            "car_price": 200000.0,
            "down_payment": 80000
          }
        }
      }
    ],
    "multiple_tools": [
      {
        "name": "Finance.Funds.purchaseFund",
        "description": "Subscription for designated funds",
        "parameters": {
          "type": "object",
          "properties": {
            "fund_name": {
              "type": "string",
              "description": "Fund name"
            },
            "fund_code": {
              "type": "string",
              "description": "Fund  Code"
            },
            "amount": {
              "type": "float",
              "description": "Amount"
            }
          },
          "required": [
            "fund_name",
            "fund_code",
            "amount"
          ]
        }
      },
      {
        "name": "UtilityTools.AIGC.aigcPicture2Pictrue",
        "description": "Generate a new image based on the input image, and realize the conversion and creation of the image to the image.",
        "parameters": {
          "type": "object",
          "properties": {
            "file": {
              "type": "string",
              "description": "Enter the URL for your photo"
            }
          },
          "required": [
            "file"
          ]
        }
      },
      {
        "name": "UtilityTools.AIGC.aigcText2Pictrue",
        "description": "Based on the text description entered, the corresponding image content is generated, and the text is converted into an image.",
        "parameters": {
          "type": "object",
          "properties": {
            "text": {
              "type": "string",
              "description": "literal content"
            }
          },
          "required": [
            "text"
          ]
        }
      },
      {
        "name": "ConvenientLiving.AutoLife.calculateCarLoan",
        "description": "The loan program is calculated based on information such as the purchase price of the car.",
        "parameters": {
          "type": "object",
          "properties": {
            "car_price": {
              "type": "float",
              "description": "Car price, required"
            },
            "down_payment": {
              "type": "float",
              "description": "First installment payment"
            }
          },
          "required": [
            "car_price",
            "down_payment"
          ]
        }
      },
      {
        "name": "UtilityTools.Reading.downloadReadingBook",
        "description": "Download books by title",
        "parameters": {
          "type": "object",
          "properties": {
            "book_name": {
              "type": "string",
              "description": "title of a book"
            },
            "book_author": {
              "type": "string",
              "description": "Author name"
            }
          },
          "required": [
            "book_name",
            "book_author"
          ]
        }
      }
    ],
    "single_tool": [
      {
        "name": "ConvenientLiving.AutoLife.calculateCarLoan",
        "description": "The loan program is calculated based on information such as the purchase price of the car.",
        "parameters": {
          "type": "object",
          "properties": {
            "car_price": {
              "type": "float",
              "description": "Car price, required"
            },
            "down_payment": {
              "type": "float",
              "description": "First installment payment"
            }
          },
          "required": [
            "car_price",
            "down_payment"
          ]
        }
      }
    ],
    "id": 115
  },
  {
    "messages": [
      {
        "role": "user",
        "content": "Help me find a car in the garage that meets my requirements"
      },
      {
        "role": "function call",
        "content": {
          "name": "ConvenientLiving.AutoLife.searchUsedCars",
          "arguments": {}
        }
      },
      {
        "role": "assistant",
        "content": "What vehicle type would you like to search for e.g. Sedan SUV What are your specific requirements for the vehicle's yearly mileage price?"
      },
      {
        "role": "user",
        "content": "I want to find an SUV."
      },
      {
        "role": "function call",
        "content": {
          "name": "ConvenientLiving.AutoLife.searchUsedCars",
          "arguments": {
            "keywords": "SUV"
          }
        }
      },
      {
        "role": "assistant",
        "content": "Please provide the car brand you are interested in"
      },
      {
        "role": "user",
        "content": "I am very interested in BMW."
      },
      {
        "role": "function call",
        "content": {
          "name": "ConvenientLiving.AutoLife.searchUsedCars",
          "arguments": {
            "keywords": "SUV",
            "brand": "BMW"
          }
        }
      },
      {
        "role": "assistant",
        "content": "What is the price of the car"
      },
      {
        "role": "user",
        "content": "It was wrong before. Search criteria, type, etc. should be Limousine"
      },
      {
        "role": "function call",
        "content": {
          "name": "ConvenientLiving.AutoLife.searchUsedCars",
          "arguments": {
            "keywords": "Limousine",
            "brand": "BMW"
          }
        }
      },
      {
        "role": "assistant",
        "content": "What is the price of the car"
      },
      {
        "role": "user",
        "content": "The price of the car I intend to buy is between 300,000 and 400,000."
      },
      {
        "role": "function call",
        "content": {
          "name": "ConvenientLiving.AutoLife.searchUsedCars",
          "arguments": {
            "keywords": "Limousine",
            "brand": "BMW",
            "price": "300,000 to 400,000"
          }
        }
      }
    ],
    "multiple_tools": [
      {
        "name": "ConvenientLiving.BuyingRentingHomes.searchRentingHouses",
        "description": "Search for rentals by criteria",
        "parameters": {
          "type": "object",
          "properties": {
            "price": {
              "type": "string",
              "description": "Rents"
            },
            "house_area": {
              "type": "string",
              "description": "Area"
            },
            "level": {
              "type": "string",
              "description": "Floor"
            },
            "age": {
              "type": "integer",
              "description": "fixed number of years"
            },
            "house_type": {
              "type": "string",
              "description": "Layout"
            },
            "housing_estate": {
              "type": "string",
              "description": "Community"
            },
            "location": {
              "type": "string",
              "description": "Position"
            },
            "indoor_decoration": {
              "type": "string",
              "description": "decorate"
            },
            "furniture": {
              "type": "string",
              "description": "Furniture"
            }
          },
          "required": [
            "price",
            "house_area",
            "level",
            "age",
            "house_type",
            "housing_estate",
            "location",
            "indoor_decoration",
            "furniture"
          ]
        }
      },
      {
        "name": "ConvenientLiving.AutoLife.searchUsedCars",
        "description": "Enter specific criteria to search for eligible vehicles",
        "parameters": {
          "type": "object",
          "properties": {
            "keywords": {
              "type": "string",
              "description": "Search criteria, type, etc."
            },
            "brand": {
              "type": "string",
              "description": "Car Brand"
            },
            "price": {
              "type": "string",
              "description": "Bid vehicle price"
            },
            "mileage": {
              "type": "string",
              "description": "Mileage"
            }
          },
          "required": [
            "keywords",
            "brand",
            "price",
            "mileage"
          ]
        }
      },
      {
        "name": "Navigation.FlightTickets.searchCheapFlights",
        "description": "Search cheap flights by specified criteria",
        "parameters": {
          "type": "object",
          "properties": {
            "type": {
              "type": "string",
              "description": "One way, round trip"
            },
            "departure": {
              "type": "string",
              "description": "Origination"
            },
            "destination": {
              "type": "string",
              "description": "Reach ground"
            },
            "travel_date": {
              "type": "string",
              "description": "Specify date, next month, next three months, etc."
            }
          },
          "required": [
            "type",
            "departure",
            "destination",
            "travel_date"
          ]
        }
      },
      {
        "name": "Travel.ItineraryServices.searchTravelRoute",
        "description": "Search for relevant travel itineraries based on keywords",
        "parameters": {
          "type": "object",
          "properties": {
            "keyword": {
              "type": "string",
              "description": "Search keywords"
            }
          },
          "required": [
            "keyword"
          ]
        }
      },
      {
        "name": "Navigation.TaxiCarRental.searchCarRental",
        "description": "See cars available in your location",
        "parameters": {
          "type": "object",
          "properties": {
            "location": {
              "type": "string",
              "description": "Pick-up from"
            },
            "start_time": {
              "type": "string",
              "description": "Start Time "
            },
            "end_time": {
              "type": "string",
              "description": "drop-off date"
            }
          },
          "required": [
            "location",
            "start_time",
            "end_time"
          ]
        }
      }
    ],
    "single_tool": [
      {
        "name": "ConvenientLiving.AutoLife.searchUsedCars",
        "description": "Enter specific criteria to search for eligible vehicles",
        "parameters": {
          "type": "object",
          "properties": {
            "keywords": {
              "type": "string",
              "description": "Search criteria, type, etc."
            },
            "brand": {
              "type": "string",
              "description": "Car Brand"
            },
            "price": {
              "type": "string",
              "description": "Bid vehicle price"
            },
            "mileage": {
              "type": "string",
              "description": "Mileage"
            }
          },
          "required": [
            "keywords",
            "brand",
            "price",
            "mileage"
          ]
        }
      }
    ],
    "id": 127
  },
  {
    "messages": [
      {
        "role": "user",
        "content": "See if we have that car in the garage that I want."
      },
      {
        "role": "function call",
        "content": {
          "name": "ConvenientLiving.AutoLife.searchUsedCars",
          "arguments": {}
        }
      },
      {
        "role": "assistant",
        "content": "What vehicle type would you like to search for e.g. Sedan SUV What are your specific requirements for the vehicle's yearly mileage price?"
      },
      {
        "role": "user",
        "content": "I want to find a limousine, preferably in recent years, with a lower mileage and a reasonable price range."
      },
      {
        "role": "function call",
        "content": {
          "name": "ConvenientLiving.AutoLife.searchUsedCars",
          "arguments": {
            "keywords": "Limousine"
          }
        }
      },
      {
        "role": "assistant",
        "content": "Please provide the car brand you are interested in"
      },
      {
        "role": "user",
        "content": "It was wrong before. Search criteria, type, etc. should be SUV"
      },
      {
        "role": "function call",
        "content": {
          "name": "ConvenientLiving.AutoLife.searchUsedCars",
          "arguments": {
            "keywords": "SUV"
          }
        }
      },
      {
        "role": "assistant",
        "content": "Please provide the car brand you are interested in"
      },
      {
        "role": "user",
        "content": "I am interested in Mercedes."
      },
      {
        "role": "function call",
        "content": {
          "name": "ConvenientLiving.AutoLife.searchUsedCars",
          "arguments": {
            "keywords": "SUV",
            "brand": "Mercedez-Benz"
          }
        }
      },
      {
        "role": "assistant",
        "content": "What is the price of the car"
      },
      {
        "role": "user",
        "content": "The model I am considering is over half a million."
      },
      {
        "role": "function call",
        "content": {
          "name": "ConvenientLiving.AutoLife.searchUsedCars",
          "arguments": {
            "keywords": "SUV",
            "brand": "Mercedez-Benz",
            "price": "500k +"
          }
        }
      }
    ],
    "multiple_tools": [
      {
        "name": "Navigation.TaxiCarRental.searchCarRental",
        "description": "See cars available in your location",
        "parameters": {
          "type": "object",
          "properties": {
            "location": {
              "type": "string",
              "description": "Pick-up from"
            },
            "start_time": {
              "type": "string",
              "description": "Start Time "
            },
            "end_time": {
              "type": "string",
              "description": "drop-off date"
            }
          },
          "required": [
            "location",
            "start_time",
            "end_time"
          ]
        }
      },
      {
        "name": "ConvenientLiving.AutoLife.searchUsedCars",
        "description": "Enter specific criteria to search for eligible vehicles",
        "parameters": {
          "type": "object",
          "properties": {
            "keywords": {
              "type": "string",
              "description": "Search criteria, type, etc."
            },
            "brand": {
              "type": "string",
              "description": "Car Brand"
            },
            "price": {
              "type": "string",
              "description": "Bid vehicle price"
            },
            "mileage": {
              "type": "string",
              "description": "Mileage"
            }
          },
          "required": [
            "keywords",
            "brand",
            "price",
            "mileage"
          ]
        }
      },
      {
        "name": "OnlineShopping.Mall.searchCoupons",
        "description": "Check the coupons list",
        "parameters": {
          "type": "object",
          "properties": {},
          "required": []
        }
      },
      {
        "name": "Travel.ItineraryServices.searchTravelRoute",
        "description": "Search for relevant travel itineraries based on keywords",
        "parameters": {
          "type": "object",
          "properties": {
            "keyword": {
              "type": "string",
              "description": "Search keywords"
            }
          },
          "required": [
            "keyword"
          ]
        }
      },
      {
        "name": "Navigation.FlightTickets.searchCheapFlights",
        "description": "Search cheap flights by specified criteria",
        "parameters": {
          "type": "object",
          "properties": {
            "type": {
              "type": "string",
              "description": "One way, round trip"
            },
            "departure": {
              "type": "string",
              "description": "Origination"
            },
            "destination": {
              "type": "string",
              "description": "Reach ground"
            },
            "travel_date": {
              "type": "string",
              "description": "Specify date, next month, next three months, etc."
            }
          },
          "required": [
            "type",
            "departure",
            "destination",
            "travel_date"
          ]
        }
      }
    ],
    "single_tool": [
      {
        "name": "ConvenientLiving.AutoLife.searchUsedCars",
        "description": "Enter specific criteria to search for eligible vehicles",
        "parameters": {
          "type": "object",
          "properties": {
            "keywords": {
              "type": "string",
              "description": "Search criteria, type, etc."
            },
            "brand": {
              "type": "string",
              "description": "Car Brand"
            },
            "price": {
              "type": "string",
              "description": "Bid vehicle price"
            },
            "mileage": {
              "type": "string",
              "description": "Mileage"
            }
          },
          "required": [
            "keywords",
            "brand",
            "price",
            "mileage"
          ]
        }
      }
    ],
    "id": 128
  },
  {
    "messages": [
      {
        "role": "user",
        "content": "Share car"
      },
      {
        "role": "function call",
        "content": {
          "name": "ConvenientLiving.AutoLife.shareCarModels",
          "arguments": {}
        }
      },
      {
        "role": "assistant",
        "content": "What is a car brand?"
      },
      {
        "role": "user",
        "content": "I'm thinking of Mercedes."
      },
      {
        "role": "function call",
        "content": {
          "name": "ConvenientLiving.AutoLife.shareCarModels",
          "arguments": {
            "brand": "Mercedez-Benz"
          }
        }
      },
      {
        "role": "assistant",
        "content": "Please provide the media you share, such as WeChat, Xiaohongshu, Weibo, etc."
      },
      {
        "role": "user",
        "content": "It was wrong before. Car Brand should be BMW"
      },
      {
        "role": "function call",
        "content": {
          "name": "ConvenientLiving.AutoLife.shareCarModels",
          "arguments": {
            "brand": "BMW"
          }
        }
      },
      {
        "role": "assistant",
        "content": "Please provide the media you share, such as WeChat, Xiaohongshu, Weibo, etc."
      },
      {
        "role": "user",
        "content": "I chose to share using WeChat."
      },
      {
        "role": "function call",
        "content": {
          "name": "ConvenientLiving.AutoLife.shareCarModels",
          "arguments": {
            "brand": "BMW",
            "to": "WeChat"
          }
        }
      },
      {
        "role": "assistant",
        "content": "Who to share with"
      },
      {
        "role": "user",
        "content": "The goal of the sharing is Manager Wang, who needs this information to prepare for tomorrow's meeting."
      },
      {
        "role": "function call",
        "content": {
          "name": "ConvenientLiving.AutoLife.shareCarModels",
          "arguments": {
            "brand": "BMW",
            "to": "WeChat",
            "name": "Manager Wang"
          }
        }
      }
    ],
    "multiple_tools": [
      {
        "name": "ConvenientLiving.AutoLife.shareCarModels",
        "description": "Share Selected Cars",
        "parameters": {
          "type": "object",
          "properties": {
            "brand": {
              "type": "string",
              "description": "Car Brand"
            },
            "to": {
              "type": "string",
              "description": "Media, such as WeChat, Xiaohongshu, Weibo, etc."
            },
            "name": {
              "type": "string",
              "description": "Shared goals"
            }
          },
          "required": [
            "brand",
            "to",
            "name"
          ]
        }
      },
      {
        "name": "Navigation.TaxiCarRental.shareTaxiOrder",
        "description": "Share route",
        "parameters": {
          "type": "object",
          "properties": {
            "time": {
              "type": "string",
              "description": "Order time"
            },
            "destination": {
              "type": "string",
              "description": "destination"
            },
            "media": {
              "type": "string",
              "description": "Choose Socials To Share Single Post"
            }
          },
          "required": [
            "time",
            "destination",
            "media"
          ]
        }
      },
      {
        "name": "Navigation.MapNavigation.shareTravelRoute",
        "description": "Share travel plans or directions",
        "parameters": {
          "type": "object",
          "properties": {
            "departure": {
              "type": "string",
              "description": "The name or address of the departure location, the default current location"
            },
            "destination": {
              "type": "string",
              "description": "Name or address of the destination"
            },
            "to": {
              "type": "string",
              "description": "Ways to share, like social media, texting, etc."
            }
          },
          "required": [
            "departure",
            "destination",
            "to"
          ]
        }
      },
      {
        "name": "UtilityTools.Search.shareWebPage",
        "description": "Share the current page to other platforms/media",
        "parameters": {
          "type": "object",
          "properties": {
            "media": {
              "type": "string",
              "description": "Media or platform to share"
            },
            "person": {
              "type": "string",
              "description": "Specify who to share with"
            }
          },
          "required": [
            "media",
            "person"
          ]
        }
      },
      {
        "name": "VideoPlayback.OnlineVideos.shareOnlineVideo",
        "description": "Share a video to other media",
        "parameters": {
          "type": "object",
          "properties": {
            "name": {
              "type": "string",
              "description": "Video Name"
            },
            "media": {
              "type": "string",
              "description": "Share video to: WeChat, etc."
            }
          },
          "required": [
            "name",
            "media"
          ]
        }
      }
    ],
    "single_tool": [
      {
        "name": "ConvenientLiving.AutoLife.shareCarModels",
        "description": "Share Selected Cars",
        "parameters": {
          "type": "object",
          "properties": {
            "brand": {
              "type": "string",
              "description": "Car Brand"
            },
            "to": {
              "type": "string",
              "description": "Media, such as WeChat, Xiaohongshu, Weibo, etc."
            },
            "name": {
              "type": "string",
              "description": "Shared goals"
            }
          },
          "required": [
            "brand",
            "to",
            "name"
          ]
        }
      }
    ],
    "id": 129
  },
  {
    "messages": [
      {
        "role": "user",
        "content": "Take a look at your billing details"
      },
      {
        "role": "function call",
        "content": {
          "name": "ConvenientLiving.UtilityPayments.queryBillInfo",
          "arguments": {}
        }
      },
      {
        "role": "assistant",
        "content": "What type of paid service billing details do you need utilities, gas, etc."
      },
      {
        "role": "user",
        "content": "I need to check the billing details for my gas bill."
      },
      {
        "role": "function call",
        "content": {
          "name": "ConvenientLiving.UtilityPayments.queryBillInfo",
          "arguments": {
            "service_type": "Gas"
          }
        }
      },
      {
        "role": "assistant",
        "content": "What month or date was the bill made"
      },
      {
        "role": "user",
        "content": "Billing date is December 25 of last year"
      },
      {
        "role": "function call",
        "content": {
          "name": "ConvenientLiving.UtilityPayments.queryBillInfo",
          "arguments": {
            "service_type": "Gas",
            "time": "December of last year"
          }
        }
      },
      {
        "role": "assistant",
        "content": "Please provide your name for billing details"
      },
      {
        "role": "user",
        "content": "It was wrong before. Bill Time should be last quarter"
      },
      {
        "role": "function call",
        "content": {
          "name": "ConvenientLiving.UtilityPayments.queryBillInfo",
          "arguments": {
            "service_type": "Gas",
            "time": "last quarter"
          }
        }
      },
      {
        "role": "assistant",
        "content": "Please provide your name for billing details"
      },
      {
        "role": "user",
        "content": "My name is Li Si, please help me check the billing details."
      },
      {
        "role": "function call",
        "content": {
          "name": "ConvenientLiving.UtilityPayments.queryBillInfo",
          "arguments": {
            "service_type": "Gas",
            "time": "last quarter",
            "user_name": "Li Si"
          }
        }
      }
    ],
    "multiple_tools": [
      {
        "name": "ConvenientLiving.UtilityPayments.queryBillInfo",
        "description": "Used to get billing details for utilities, etc.",
        "parameters": {
          "type": "object",
          "properties": {
            "service_type": {
              "type": "string",
              "description": "Types of paid services, such as utilities, gas, etc."
            },
            "user_name": {
              "type": "string",
              "description": "User Name"
            },
            "time": {
              "type": "string",
              "description": "Bill Time"
            }
          },
          "required": [
            "service_type",
            "user_name",
            "time"
          ]
        }
      },
      {
        "name": "Finance.Funds.getFundSectorInfo",
        "description": "Check the details of a fund based on a specific sector",
        "parameters": {
          "type": "object",
          "properties": {
            "sector": {
              "type": "string",
              "description": "Fund Segment Name"
            }
          },
          "required": [
            "sector"
          ]
        }
      },
      {
        "name": "ConvenientLiving.GovernmentServices.queryEnterpriseInfo",
        "description": "Enter the business name to get basic information about the business",
        "parameters": {
          "type": "object",
          "properties": {
            "enterprise_name": {
              "type": "string",
              "description": "Name of the business to query"
            }
          },
          "required": [
            "enterprise_name"
          ]
        }
      },
      {
        "name": "ConvenientLiving.GovernmentServices.queryHousingSubsidyInfo",
        "description": "Find out about housing allowances",
        "parameters": {
          "type": "object",
          "properties": {
            "user_name": {
              "type": "string",
              "description": "User name, default user himself"
            }
          },
          "required": [
            "user_name"
          ]
        }
      },
      {
        "name": "SocialCommunication.SocialMedia.getMediumTrendsDetails",
        "description": "Get the details of a given activity",
        "parameters": {
          "type": "object",
          "properties": {
            "medium_name": {
              "type": "string",
              "description": "Media name"
            },
            "correlation": {
              "type": "string",
              "description": "Dynamic Related Content"
            },
            "publisher": {
              "type": "string",
              "description": "Posted by/publisher?"
            },
            "time": {
              "type": "string",
              "description": "Release Date"
            }
          },
          "required": [
            "medium_name",
            "correlation",
            "publisher",
            "time"
          ]
        }
      }
    ],
    "single_tool": [
      {
        "name": "ConvenientLiving.UtilityPayments.queryBillInfo",
        "description": "Used to get billing details for utilities, etc.",
        "parameters": {
          "type": "object",
          "properties": {
            "service_type": {
              "type": "string",
              "description": "Types of paid services, such as utilities, gas, etc."
            },
            "user_name": {
              "type": "string",
              "description": "User Name"
            },
            "time": {
              "type": "string",
              "description": "Bill Time"
            }
          },
          "required": [
            "service_type",
            "user_name",
            "time"
          ]
        }
      }
    ],
    "id": 130
  },
  {
    "messages": [
      {
        "role": "user",
        "content": "Pay the fee"
      },
      {
        "role": "function call",
        "content": {
          "name": "ConvenientLiving.UtilityPayments.payBill",
          "arguments": {}
        }
      },
      {
        "role": "assistant",
        "content": "Please provide your user address and default address"
      },
      {
        "role": "user",
        "content": "My user address is Unit 101, Unit 1, Building 1, Pearl Garden, Dongcheng District, which is also my default address."
      },
      {
        "role": "function call",
        "content": {
          "name": "ConvenientLiving.UtilityPayments.payBill",
          "arguments": {
            "address": "Unit 101, Unit 1, Building 1, Pearl Garden, Dongcheng District"
          }
        }
      },
      {
        "role": "assistant",
        "content": "Please provide the contribution amount and default bill amount"
      },
      {
        "role": "user",
        "content": "It was wrong before. user address, default address should be Shenzhen Futian"
      },
      {
        "role": "function call",
        "content": {
          "name": "ConvenientLiving.UtilityPayments.payBill",
          "arguments": {
            "address": "Shenzhen Futian"
          }
        }
      },
      {
        "role": "assistant",
        "content": "Please provide the contribution amount and default bill amount"
      },
      {
        "role": "user",
        "content": "The payment amount is 500 yuan."
      },
      {
        "role": "function call",
        "content": {
          "name": "ConvenientLiving.UtilityPayments.payBill",
          "arguments": {
            "address": "Shenzhen Futian",
            "pay": 500
          }
        }
      },
      {
        "role": "assistant",
        "content": "What type of fees you need to pay utilities, etc."
      },
      {
        "role": "user",
        "content": "I need to pay utility bills."
      },
      {
        "role": "function call",
        "content": {
          "name": "ConvenientLiving.UtilityPayments.payBill",
          "arguments": {
            "address": "Shenzhen Futian",
            "pay": 500,
            "service_type": "Hydropower"
          }
        }
      }
    ],
    "multiple_tools": [
      {
        "name": "ConvenientLiving.UtilityPayments.payBill",
        "description": "Payment of utilities, etc.",
        "parameters": {
          "type": "object",
          "properties": {
            "service_type": {
              "type": "string",
              "description": "Types of paid services, such as utilities, gas, etc."
            },
            "user_name": {
              "type": "string",
              "description": "User Name"
            },
            "pay": {
              "type": "float",
              "description": "Contribution Amount, Default Billing Amount"
            },
            "address": {
              "type": "string",
              "description": "user address, default address"
            }
          },
          "required": [
            "service_type",
            "user_name",
            "pay",
            "address"
          ]
        }
      },
      {
        "name": "ConvenientLiving.GovernmentServices.queryPersonalTaxInfo",
        "description": "Inquire about the user's personal tax information",
        "parameters": {
          "type": "object",
          "properties": {
            "user_name": {
              "type": "string",
              "description": "Username"
            }
          },
          "required": [
            "user_name"
          ]
        }
      },
      {
        "name": "Finance.Funds.getFundSubscriptionFee",
        "description": "Query subscription fee information for designated funds",
        "parameters": {
          "type": "object",
          "properties": {
            "fund_name": {
              "type": "string",
              "description": "Fund name"
            },
            "fund_code": {
              "type": "string",
              "description": "Fund  Code"
            }
          },
          "required": [
            "fund_name",
            "fund_code"
          ]
        }
      },
      {
        "name": "ConvenientLiving.GovernmentServices.applyForBusinessLicense",
        "description": "Apply for a business license online",
        "parameters": {
          "type": "object",
          "properties": {
            "business_name": {
              "type": "string",
              "description": "Name of the Enterprise"
            },
            "name": {
              "type": "string",
              "description": "Objects that contain information about the business owner, such as name, ID number, etc."
            },
            "id_card": {
              "type": "string",
              "description": "ID No."
            }
          },
          "required": [
            "business_name",
            "name",
            "id_card"
          ]
        }
      },
      {
        "name": "ConvenientLiving.UtilityPayments.getDueDate",
        "description": "Deadline for payment of fees for the acquisition of utilities, etc.",
        "parameters": {
          "type": "object",
          "properties": {
            "service_type": {
              "type": "string",
              "description": "Types of paid services, such as utilities, gas, etc."
            },
            "user_name": {
              "type": "string",
              "description": "User Name"
            }
          },
          "required": [
            "service_type",
            "user_name"
          ]
        }
      }
    ],
    "single_tool": [
      {
        "name": "ConvenientLiving.UtilityPayments.payBill",
        "description": "Payment of utilities, etc.",
        "parameters": {
          "type": "object",
          "properties": {
            "service_type": {
              "type": "string",
              "description": "Types of paid services, such as utilities, gas, etc."
            },
            "user_name": {
              "type": "string",
              "description": "User Name"
            },
            "pay": {
              "type": "float",
              "description": "Contribution Amount, Default Billing Amount"
            },
            "address": {
              "type": "string",
              "description": "user address, default address"
            }
          },
          "required": [
            "service_type",
            "user_name",
            "pay",
            "address"
          ]
        }
      }
    ],
    "id": 131
  },
  {
    "messages": [
      {
        "role": "user",
        "content": "Take a look at billing history"
      },
      {
        "role": "function call",
        "content": {
          "name": "ConvenientLiving.UtilityPayments.checkPaymentHistory",
          "arguments": {}
        }
      },
      {
        "role": "assistant",
        "content": "You need to inquire which type of paid service records utilities, gas, etc."
      },
      {
        "role": "user",
        "content": "I need to check my utility billing history."
      },
      {
        "role": "function call",
        "content": {
          "name": "ConvenientLiving.UtilityPayments.checkPaymentHistory",
          "arguments": {
            "service_type": "Hydropower"
          }
        }
      },
      {
        "role": "assistant",
        "content": "Please provide your name to check your billing history"
      },
      {
        "role": "user",
        "content": "It was wrong before. Types of paid services, such as utilities, gas, etc. should be Gas"
      },
      {
        "role": "function call",
        "content": {
          "name": "ConvenientLiving.UtilityPayments.checkPaymentHistory",
          "arguments": {
            "service_type": "Gas"
          }
        }
      },
      {
        "role": "assistant",
        "content": "Please provide your name to check your billing history"
      },
      {
        "role": "user",
        "content": "My name is Li Si, please help me find out."
      },
      {
        "role": "function call",
        "content": {
          "name": "ConvenientLiving.UtilityPayments.checkPaymentHistory",
          "arguments": {
            "service_type": "Gas",
            "user_name": "Li Si"
          }
        }
      }
    ],
    "multiple_tools": [
      {
        "name": "Education.ChildrenEducation.getChildLearningProgress",
        "description": "Get your child's progress",
        "parameters": {
          "type": "object",
          "properties": {},
          "required": []
        }
      },
      {
        "name": "NewsMagazines.News.recommendNewsBasedOnHistory",
        "description": "Suggest relevant news to users based on their browsing history",
        "parameters": {
          "type": "object",
          "properties": {},
          "required": []
        }
      },
      {
        "name": "ConvenientLiving.UtilityPayments.checkPaymentHistory",
        "description": "View payment records for utilities, etc.",
        "parameters": {
          "type": "object",
          "properties": {
            "service_type": {
              "type": "string",
              "description": "Types of paid services, such as utilities, gas, etc."
            },
            "user_name": {
              "type": "string",
              "description": "User Name"
            }
          },
          "required": [
            "service_type",
            "user_name"
          ]
        }
      },
      {
        "name": "ConvenientLiving.JobRecruitment.getJobSalaryRange",
        "description": "Enter the job title to get its approximate salary range",
        "parameters": {
          "type": "object",
          "properties": {
            "job_title": {
              "type": "string",
              "description": "Position name"
            }
          },
          "required": [
            "job_title"
          ]
        }
      },
      {
        "name": "Health.HealthManagement.getDietHistory",
        "description": "Get dietary history based on timeframe, etc.",
        "parameters": {
          "type": "object",
          "properties": {
            "time": {
              "type": "string",
              "description": "Time range"
            }
          },
          "required": [
            "time"
          ]
        }
      }
    ],
    "single_tool": [
      {
        "name": "ConvenientLiving.UtilityPayments.checkPaymentHistory",
        "description": "View payment records for utilities, etc.",
        "parameters": {
          "type": "object",
          "properties": {
            "service_type": {
              "type": "string",
              "description": "Types of paid services, such as utilities, gas, etc."
            },
            "user_name": {
              "type": "string",
              "description": "User Name"
            }
          },
          "required": [
            "service_type",
            "user_name"
          ]
        }
      }
    ],
    "id": 132
  },
  {
    "messages": [
      {
        "role": "user",
        "content": "When can I pay the fee at the latest?"
      },
      {
        "role": "function call",
        "content": {
          "name": "ConvenientLiving.UtilityPayments.getDueDate",
          "arguments": {}
        }
      },
      {
        "role": "assistant",
        "content": "What type of paid service deadline do you need utilities, gas, etc."
      },
      {
        "role": "user",
        "content": "I need to check the payment deadline for utilities."
      },
      {
        "role": "function call",
        "content": {
          "name": "ConvenientLiving.UtilityPayments.getDueDate",
          "arguments": {
            "service_type": "Hydropower"
          }
        }
      },
      {
        "role": "assistant",
        "content": "Please provide your name so we can check the billing deadline"
      },
      {
        "role": "user",
        "content": "It was wrong before. Types of paid services, such as utilities, gas, etc. should be Gas"
      },
      {
        "role": "function call",
        "content": {
          "name": "ConvenientLiving.UtilityPayments.getDueDate",
          "arguments": {
            "service_type": "Gas"
          }
        }
      },
      {
        "role": "assistant",
        "content": "Please provide your name so we can check the billing deadline"
      },
      {
        "role": "user",
        "content": "My name is Zhang San, please check my payment deadline."
      },
      {
        "role": "function call",
        "content": {
          "name": "ConvenientLiving.UtilityPayments.getDueDate",
          "arguments": {
            "service_type": "Gas",
            "user_name": "Zhang San"
          }
        }
      }
    ],
    "multiple_tools": [
      {
        "name": "ConvenientLiving.UtilityPayments.payBill",
        "description": "Payment of utilities, etc.",
        "parameters": {
          "type": "object",
          "properties": {
            "service_type": {
              "type": "string",
              "description": "Types of paid services, such as utilities, gas, etc."
            },
            "user_name": {
              "type": "string",
              "description": "User Name"
            },
            "pay": {
              "type": "float",
              "description": "Contribution Amount, Default Billing Amount"
            },
            "address": {
              "type": "string",
              "description": "user address, default address"
            }
          },
          "required": [
            "service_type",
            "user_name",
            "pay",
            "address"
          ]
        }
      },
      {
        "name": "ConvenientLiving.UtilityPayments.getDueDate",
        "description": "Deadline for payment of fees for the acquisition of utilities, etc.",
        "parameters": {
          "type": "object",
          "properties": {
            "service_type": {
              "type": "string",
              "description": "Types of paid services, such as utilities, gas, etc."
            },
            "user_name": {
              "type": "string",
              "description": "User Name"
            }
          },
          "required": [
            "service_type",
            "user_name"
          ]
        }
      },
      {
        "name": "Finance.Insurance.getInsuranceRenewalPaymentDate",
        "description": "Check policy renewal date",
        "parameters": {
          "type": "object",
          "properties": {
            "insurance_name": {
              "type": "string",
              "description": "Insurance Product Name"
            }
          },
          "required": [
            "insurance_name"
          ]
        }
      },
      {
        "name": "ConvenientLiving.FoodDelivery.getRestaurantLicense",
        "description": "Get licensing info for select restaurants",
        "parameters": {
          "type": "object",
          "properties": {
            "restaurant_name": {
              "type": "string",
              "description": "Name of the restaurant"
            }
          },
          "required": [
            "restaurant_name"
          ]
        }
      },
      {
        "name": "Health.MedicalServices.getDoctorAvailability",
        "description": "Check the doctor's available appointment time according to the doctor's name, hospital name and other conditions",
        "parameters": {
          "type": "object",
          "properties": {
            "doctor_name": {
              "type": "string",
              "description": "Doctor Name"
            },
            "hospital_name": {
              "type": "string",
              "description": "Hospital Name"
            }
          },
          "required": [
            "doctor_name",
            "hospital_name"
          ]
        }
      }
    ],
    "single_tool": [
      {
        "name": "ConvenientLiving.UtilityPayments.getDueDate",
        "description": "Deadline for payment of fees for the acquisition of utilities, etc.",
        "parameters": {
          "type": "object",
          "properties": {
            "service_type": {
              "type": "string",
              "description": "Types of paid services, such as utilities, gas, etc."
            },
            "user_name": {
              "type": "string",
              "description": "User Name"
            }
          },
          "required": [
            "service_type",
            "user_name"
          ]
        }
      }
    ],
    "id": 134
  },
  {
    "messages": [
      {
        "role": "user",
        "content": "Check my bills for any issues this month"
      },
      {
        "role": "function call",
        "content": {
          "name": "ConvenientLiving.UtilityPayments.verifyBill",
          "arguments": {}
        }
      },
      {
        "role": "assistant",
        "content": "Please provide the type of bill that needs to be verified, such as water, electricity, gas, etc., and the specific amount of the bill"
      },
      {
        "role": "user",
        "content": "What needs to be checked is the gas bill, the amount is 150 yuan."
      },
      {
        "role": "function call",
        "content": {
          "name": "ConvenientLiving.UtilityPayments.verifyBill",
          "arguments": {
            "service_type": "Gas"
          }
        }
      },
      {
        "role": "assistant",
        "content": "What is the user's name"
      },
      {
        "role": "user",
        "content": "It was wrong before. Types of paid services, such as utilities, gas, etc. should be Electric"
      },
      {
        "role": "function call",
        "content": {
          "name": "ConvenientLiving.UtilityPayments.verifyBill",
          "arguments": {
            "service_type": "Electric"
          }
        }
      },
      {
        "role": "assistant",
        "content": "What is the user's name"
      },
      {
        "role": "user",
        "content": "My name is Li Si."
      },
      {
        "role": "function call",
        "content": {
          "name": "ConvenientLiving.UtilityPayments.verifyBill",
          "arguments": {
            "service_type": "Electric",
            "user_name": "Li Si"
          }
        }
      }
    ],
    "multiple_tools": [
      {
        "name": "ConvenientLiving.UtilityPayments.verifyBill",
        "description": "Verify the accuracy of bills such as utilities",
        "parameters": {
          "type": "object",
          "properties": {
            "service_type": {
              "type": "string",
              "description": "Types of paid services, such as utilities, gas, etc."
            },
            "user_name": {
              "type": "string",
              "description": "User Name"
            }
          },
          "required": [
            "service_type",
            "user_name"
          ]
        }
      },
      {
        "name": "ConvenientLiving.UtilityPayments.queryBillInfo",
        "description": "Used to get billing details for utilities, etc.",
        "parameters": {
          "type": "object",
          "properties": {
            "service_type": {
              "type": "string",
              "description": "Types of paid services, such as utilities, gas, etc."
            },
            "user_name": {
              "type": "string",
              "description": "User Name"
            },
            "time": {
              "type": "string",
              "description": "Bill Time"
            }
          },
          "required": [
            "service_type",
            "user_name",
            "time"
          ]
        }
      },
      {
        "name": "ConvenientLiving.FoodDelivery.searchRestaurantDiscounts",
        "description": "Enter keywords to search for deals",
        "parameters": {
          "type": "object",
          "properties": {
            "keyword": {
              "type": "string",
              "description": "Keywords related to offers"
            }
          },
          "required": [
            "keyword"
          ]
        }
      },
      {
        "name": "OfficeSoftware.Email.searchMail",
        "description": "Search messages by email keyword",
        "parameters": {
          "type": "object",
          "properties": {
            "keyword": {
              "type": "string",
              "description": "KEYWORDS"
            },
            "max_results": {
              "type": "integer",
              "description": "Maximum number of returned results, default is 10"
            }
          },
          "required": [
            "keyword",
            "max_results"
          ]
        }
      },
      {
        "name": "SocialCommunication.InstantMessaging.searchMessage",
        "description": "Search historical messages for a specific contact or group based on keywords",
        "parameters": {
          "type": "object",
          "properties": {
            "receiver_name": {
              "type": "string",
              "description": "Name of the contact or group to search for the message"
            },
            "keyword": {
              "type": "string",
              "description": "Keywords for search"
            }
          },
          "required": [
            "receiver_name",
            "keyword"
          ]
        }
      }
    ],
    "single_tool": [
      {
        "name": "ConvenientLiving.UtilityPayments.verifyBill",
        "description": "Verify the accuracy of bills such as utilities",
        "parameters": {
          "type": "object",
          "properties": {
            "service_type": {
              "type": "string",
              "description": "Types of paid services, such as utilities, gas, etc."
            },
            "user_name": {
              "type": "string",
              "description": "User Name"
            }
          },
          "required": [
            "service_type",
            "user_name"
          ]
        }
      }
    ],
    "id": 135
  },
  {
    "messages": [
      {
        "role": "user",
        "content": "Find something tasty nearby at Meituan"
      },
      {
        "role": "function call",
        "content": {
          "name": "ConvenientLiving.FoodDelivery.searchRestaurants",
          "arguments": {}
        }
      },
      {
        "role": "assistant",
        "content": "Where would you like to search for restaurants"
      },
      {
        "role": "user",
        "content": "I want to find a restaurant near Wudaokou."
      },
      {
        "role": "function call",
        "content": {
          "name": "ConvenientLiving.FoodDelivery.searchRestaurants",
          "arguments": {
            "location": "Wudaokou"
          }
        }
      },
      {
        "role": "assistant",
        "content": "Which cuisine do you want to search for?"
      },
      {
        "role": "user",
        "content": "It was wrong before. Location should be Pudong New Area of Shanghai City"
      },
      {
        "role": "function call",
        "content": {
          "name": "ConvenientLiving.FoodDelivery.searchRestaurants",
          "arguments": {
            "location": "Pudong New Area of Shanghai City"
          }
        }
      },
      {
        "role": "assistant",
        "content": "Which cuisine do you want to search for?"
      },
      {
        "role": "user",
        "content": "I'm looking for a hot pot shop, what do you recommend?"
      },
      {
        "role": "function call",
        "content": {
          "name": "ConvenientLiving.FoodDelivery.searchRestaurants",
          "arguments": {
            "location": "Pudong New Area of Shanghai City",
            "name": "Hot Pot"
          }
        }
      }
    ],
    "multiple_tools": [
      {
        "name": "VideoPlayback.OnlineVideos.searchOnlineVideo",
        "description": "Search online videos, which can be searched based on keywords (director/publisher/video keywords); can be searched based on categories; can be searched based on AI smart search",
        "parameters": {
          "type": "object",
          "properties": {
            "keyword": {
              "type": "array",
              "description": "Director/Publisher/Video Keyword Search"
            },
            "video_type": {
              "type": "string",
              "description": "Video Type Categories, Recommended, Popular, Chase, Film and Television New Journey"
            },
            "ai_search": {
              "type": "string",
              "description": "Based on search history, viewing history can only be turned off by default"
            }
          },
          "required": [
            "keyword",
            "video_type",
            "ai_search"
          ]
        }
      },
      {
        "name": "ConvenientLiving.GovernmentServices.searchEnterpriseByName",
        "description": "Search related businesses based on keywords entered",
        "parameters": {
          "type": "object",
          "properties": {
            "keyword": {
              "type": "string",
              "description": "Search keywords"
            }
          },
          "required": [
            "keyword"
          ]
        }
      },
      {
        "name": "ConvenientLiving.FoodDelivery.searchRestaurants",
        "description": "Search for restaurants on Meituan based on user input",
        "parameters": {
          "type": "object",
          "properties": {
            "location": {
              "type": "string",
              "description": "Location"
            },
            "name": {
              "type": "string",
              "description": "regional cuisine"
            },
            "order": {
              "type": "string",
              "description": "Sort by e.g. rating, distance, average spend"
            }
          },
          "required": [
            "location",
            "name",
            "order"
          ]
        }
      },
      {
        "name": "UtilityTools.FileManagement.searchFiles",
        "description": "Search for relevant documents based on keywords",
        "parameters": {
          "type": "object",
          "properties": {
            "keyword": {
              "type": "string",
              "description": "Keywords Search"
            },
            "type": {
              "type": "string",
              "description": "files, tags, recently deleted, tencent documents, device storage, pictures, videos, audio, documents, installation package, compressed package, cloud disk, private safe, download, search in bluetooth; default file search"
            },
            "time": {
              "type": "string",
              "description": "Search by time"
            },
            "size": {
              "type": "string",
              "description": "File size"
            }
          },
          "required": [
            "keyword",
            "type",
            "time",
            "size"
          ]
        }
      },
      {
        "name": "Navigation.MapNavigation.searchLocation",
        "description": "Search for a location by keyword, which can be a location, a point of interest such as a gas station, a charging pile, etc., and return a list of address information",
        "parameters": {
          "type": "object",
          "properties": {
            "keyword": {
              "type": "string",
              "description": "Keywords for search"
            }
          },
          "required": [
            "keyword"
          ]
        }
      }
    ],
    "single_tool": [
      {
        "name": "ConvenientLiving.FoodDelivery.searchRestaurants",
        "description": "Search for restaurants on Meituan based on user input",
        "parameters": {
          "type": "object",
          "properties": {
            "location": {
              "type": "string",
              "description": "Location"
            },
            "name": {
              "type": "string",
              "description": "regional cuisine"
            },
            "order": {
              "type": "string",
              "description": "Sort by e.g. rating, distance, average spend"
            }
          },
          "required": [
            "location",
            "name",
            "order"
          ]
        }
      }
    ],
    "id": 142
  },
  {
    "messages": [
      {
        "role": "user",
        "content": "I need to get a shared link to a cloud disk document, but I did not specify the document, see what advice you can give me."
      },
      {
        "role": "function call",
        "content": {
          "name": "OfficeSoftware.CloudStorage.netdiskGetShareLink",
          "arguments": {}
        }
      },
      {
        "role": "assistant",
        "content": "The validity period of the share link you want to set is 1 day 7 days 30 days or permanent is -1"
      },
      {
        "role": "user",
        "content": "I choose 7 days."
      },
      {
        "role": "function call",
        "content": {
          "name": "OfficeSoftware.CloudStorage.netdiskGetShareLink",
          "arguments": {
            "date": "7 days"
          }
        }
      },
      {
        "role": "assistant",
        "content": "What is the file password?"
      },
      {
        "role": "user",
        "content": "It was wrong before. Validity period (1 day, 7 days, 30 days, permanent validity is -1) should be 30 days"
      },
      {
        "role": "function call",
        "content": {
          "name": "OfficeSoftware.CloudStorage.netdiskGetShareLink",
          "arguments": {
            "date": "30 days"
          }
        }
      },
      {
        "role": "assistant",
        "content": "What is the file password?"
      },
      {
        "role": "user",
        "content": "The password for the file is pwd789."
      },
      {
        "role": "function call",
        "content": {
          "name": "OfficeSoftware.CloudStorage.netdiskGetShareLink",
          "arguments": {
            "date": "30 days",
            "password": "pwd789"
          }
        }
      }
    ],
    "multiple_tools": [
      {
        "name": "MusicRadio.OnlineMusic.bindSocialPlatforms",
        "description": "Link your account to a social platform",
        "parameters": {
          "type": "object",
          "properties": {
            "platforms": {
              "type": "string",
              "description": "Social platforms to be linked"
            }
          },
          "required": [
            "platforms"
          ]
        }
      },
      {
        "name": "OfficeSoftware.CloudStorage.netdiskGetShareLink",
        "description": "Get a shareable link to a cloud drive document",
        "parameters": {
          "type": "object",
          "properties": {
            "date": {
              "type": "string",
              "description": "Validity period (1 day, 7 days, 30 days, permanent validity is -1)"
            },
            "password": {
              "type": "string",
              "description": "File Password"
            },
            "file_name": {
              "type": "string",
              "description": "Document Name"
            }
          },
          "required": [
            "date",
            "password",
            "file_name"
          ]
        }
      },
      {
        "name": "OfficeSoftware.Conferencing.shareMeetingLink",
        "description": "Generate share links for specific meetings",
        "parameters": {
          "type": "object",
          "properties": {
            "meeting_id": {
              "type": "string",
              "description": "Conference No."
            },
            "title": {
              "type": "string",
              "description": "Meeting Title:"
            },
            "time": {
              "type": "string",
              "description": "Meeting Date"
            }
          },
          "required": [
            "meeting_id",
            "title",
            "time"
          ]
        }
      },
      {
        "name": "Finance.Payment.linkPayBankCard",
        "description": "Link your card to your account",
        "parameters": {
          "type": "object",
          "properties": {
            "card_number": {
              "type": "string",
              "description": "Bank Card Number"
            },
            "card_holder_name": {
              "type": "string",
              "description": "Card holder name"
            },
            "bank_name": {
              "type": "string",
              "description": "Bank Name"
            }
          },
          "required": [
            "card_number",
            "card_holder_name",
            "bank_name"
          ]
        }
      },
      {
        "name": "OfficeSoftware.Documents.getDocumentLinks",
        "description": "Get all links in the specified document",
        "parameters": {
          "type": "object",
          "properties": {
            "document_name": {
              "type": "string",
              "description": "To get the linked document name, required"
            }
          },
          "required": [
            "document_name"
          ]
        }
      }
    ],
    "single_tool": [
      {
        "name": "OfficeSoftware.CloudStorage.netdiskGetShareLink",
        "description": "Get a shareable link to a cloud drive document",
        "parameters": {
          "type": "object",
          "properties": {
            "date": {
              "type": "string",
              "description": "Validity period (1 day, 7 days, 30 days, permanent validity is -1)"
            },
            "password": {
              "type": "string",
              "description": "File Password"
            },
            "file_name": {
              "type": "string",
              "description": "Document Name"
            }
          },
          "required": [
            "date",
            "password",
            "file_name"
          ]
        }
      }
    ],
    "id": 149
  },
  {
    "messages": [
      {
        "role": "user",
        "content": "Send a meeting invitation"
      },
      {
        "role": "function call",
        "content": {
          "name": "OfficeSoftware.Conferencing.inviteParticipants",
          "arguments": {}
        }
      },
      {
        "role": "assistant",
        "content": "What is the conference number"
      },
      {
        "role": "user",
        "content": "The meeting number is 2333."
      },
      {
        "role": "function call",
        "content": {
          "name": "OfficeSoftware.Conferencing.inviteParticipants",
          "arguments": {
            "meeting_id": "2333"
          }
        }
      },
      {
        "role": "assistant",
        "content": "What's the title of the meeting"
      },
      {
        "role": "user",
        "content": "CRM System Training Session"
      },
      {
        "role": "function call",
        "content": {
          "name": "OfficeSoftware.Conferencing.inviteParticipants",
          "arguments": {
            "meeting_id": "2333",
            "title": "CRM System Training"
          }
        }
      },
      {
        "role": "assistant",
        "content": "What time is the meeting?"
      },
      {
        "role": "user",
        "content": "It was wrong before. Conference No. should be 404"
      },
      {
        "role": "function call",
        "content": {
          "name": "OfficeSoftware.Conferencing.inviteParticipants",
          "arguments": {
            "meeting_id": "404",
            "title": "CRM System Training"
          }
        }
      },
      {
        "role": "assistant",
        "content": "What time is the meeting?"
      },
      {
        "role": "user",
        "content": "The meeting time is 2:30 pm on Wednesday, right?"
      },
      {
        "role": "function call",
        "content": {
          "name": "OfficeSoftware.Conferencing.inviteParticipants",
          "arguments": {
            "meeting_id": "404",
            "title": "CRM System Training",
            "time": "Wed 2:30 pm"
          }
        }
      }
    ],
    "multiple_tools": [
      {
        "name": "OnlineShopping.ExpressDelivery.contactCustomerService",
        "description": "Contact Live Chat for courier related questions",
        "parameters": {
          "type": "object",
          "properties": {},
          "required": []
        }
      },
      {
        "name": "OnlineShopping.Mall.createChat",
        "description": "Open the conversation with the seller",
        "parameters": {
          "type": "object",
          "properties": {
            "name": {
              "type": "string",
              "description": "Conversation Objects"
            }
          },
          "required": [
            "name"
          ]
        }
      },
      {
        "name": "OfficeSoftware.Conferencing.inviteParticipants",
        "description": "Send meeting invitations to designated people",
        "parameters": {
          "type": "object",
          "properties": {
            "meeting_id": {
              "type": "string",
              "description": "Conference No."
            },
            "title": {
              "type": "string",
              "description": "Meeting Title:"
            },
            "time": {
              "type": "string",
              "description": "Meeting Date"
            },
            "participant_list": {
              "type": "string",
              "description": "Invitee List"
            }
          },
          "required": [
            "meeting_id",
            "title",
            "time",
            "participant_list"
          ]
        }
      },
      {
        "name": "SocialCommunication.InstantMessaging.sendMessage",
        "description": "Send a text message to a specific contact or group",
        "parameters": {
          "type": "object",
          "properties": {
            "receiver_name": {
              "type": "string",
              "description": "Name of the contact or group receiving the message"
            },
            "message_content": {
              "type": "string",
              "description": "Text content to send"
            }
          },
          "required": [
            "receiver_name",
            "message_content"
          ]
        }
      },
      {
        "name": "SocialCommunication.SocialMedia.sendMediumMessage",
        "description": "Send a message to a specific friend in a specific medium",
        "parameters": {
          "type": "object",
          "properties": {
            "medium_name": {
              "type": "string",
              "description": "Media name"
            },
            "name": {
              "type": "string",
              "description": "Friend's nickname"
            },
            "content": {
              "type": "string",
              "description": "Content "
            },
            "account_number": {
              "type": "string",
              "description": "Friend's account"
            }
          },
          "required": [
            "medium_name",
            "name",
            "content",
            "account_number"
          ]
        }
      }
    ],
    "single_tool": [
      {
        "name": "OfficeSoftware.Conferencing.inviteParticipants",
        "description": "Send meeting invitations to designated people",
        "parameters": {
          "type": "object",
          "properties": {
            "meeting_id": {
              "type": "string",
              "description": "Conference No."
            },
            "title": {
              "type": "string",
              "description": "Meeting Title:"
            },
            "time": {
              "type": "string",
              "description": "Meeting Date"
            },
            "participant_list": {
              "type": "string",
              "description": "Invitee List"
            }
          },
          "required": [
            "meeting_id",
            "title",
            "time",
            "participant_list"
          ]
        }
      }
    ],
    "id": 151
  },
  {
    "messages": [
      {
        "role": "user",
        "content": "I need to change the meeting settings, but I haven't figured out how to do it yet."
      },
      {
        "role": "function call",
        "content": {
          "name": "OfficeSoftware.Conferencing.setMeetingOptions",
          "arguments": {}
        }
      },
      {
        "role": "assistant",
        "content": "What is the conference number"
      },
      {
        "role": "user",
        "content": "The conference number is 789012."
      },
      {
        "role": "function call",
        "content": {
          "name": "OfficeSoftware.Conferencing.setMeetingOptions",
          "arguments": {
            "meeting_id": "789012"
          }
        }
      },
      {
        "role": "assistant",
        "content": "What is the title of the meeting Do you want to change the time of the meeting Do you need to turn on the video Do you need to turn on the audio"
      },
      {
        "role": "user",
        "content": "It was wrong before. Conference No. should be 78910"
      },
      {
        "role": "function call",
        "content": {
          "name": "OfficeSoftware.Conferencing.setMeetingOptions",
          "arguments": {
            "meeting_id": "78910"
          }
        }
      },
      {
        "role": "assistant",
        "content": "What is the title of the meeting Do you want to change the time of the meeting Do you need to turn on the video Do you need to turn on the audio"
      },
      {
        "role": "user",
        "content": "The title of the meeting is a marketing strategy discussion, I don't want to change the meeting time, I need to turn on the video and audio."
      },
      {
        "role": "function call",
        "content": {
          "name": "OfficeSoftware.Conferencing.setMeetingOptions",
          "arguments": {
            "meeting_id": "78910",
            "title": "Market Strategy Discussion"
          }
        }
      },
      {
        "role": "assistant",
        "content": "What the meeting time is Whether the video is turned on Whether the audio is turned on"
      },
      {
        "role": "user",
        "content": "The meeting time is 10am the day after tomorrow, video and audio need to be turned on."
      },
      {
        "role": "function call",
        "content": {
          "name": "OfficeSoftware.Conferencing.setMeetingOptions",
          "arguments": {
            "meeting_id": "78910",
            "title": "Market Strategy Discussion",
            "time": "10am the day after tomorrow"
          }
        }
      }
    ],
    "multiple_tools": [
      {
        "name": "Education.OnlineClasses.setLearningStage",
        "description": "Set the current learning phase to find exactly what you need",
        "parameters": {
          "type": "object",
          "properties": {
            "location": {
              "type": "string",
              "description": "Area"
            },
            "stage": {
              "type": "string",
              "description": "Set Learning Stage"
            }
          },
          "required": [
            "location",
            "stage"
          ]
        }
      },
      {
        "name": "Photography.PhotoEditing.adjustPicture",
        "description": "Comprehensive photo beautification, including style, brightness, filters, beauty, etc.",
        "parameters": {
          "type": "object",
          "properties": {
            "name_or_path": {
              "type": "string",
              "description": "Photo name or path"
            }
          },
          "required": [
            "name_or_path"
          ]
        }
      },
      {
        "name": "Health.HealthManagement.getHealthIndex",
        "description": "Obtain the user's current health index, including key metrics such as heart rate and blood pressure.",
        "parameters": {
          "type": "object",
          "properties": {
            "index_name": {
              "type": "array",
              "description": "Health index name, including heart rate, blood pressure, blood sugar, blood lipids, etc., all indicators are returned by default"
            }
          },
          "required": [
            "index_name"
          ]
        }
      },
      {
        "name": "OfficeSoftware.Conferencing.setMeetingOptions",
        "description": "Change the title, time, whether the video is turned on, whether the audio is turned on, etc. settings of the meeting",
        "parameters": {
          "type": "object",
          "properties": {
            "meeting_id": {
              "type": "string",
              "description": "Conference No."
            },
            "title": {
              "type": "string",
              "description": "Meeting Title:"
            },
            "time": {
              "type": "string",
              "description": "Meeting Date"
            }
          },
          "required": [
            "meeting_id",
            "title",
            "time"
          ]
        }
      },
      {
        "name": "Photography.VideoEditing.videoSplit",
        "description": "Split video into multiple segments",
        "parameters": {
          "type": "object",
          "properties": {
            "name_or_path": {
              "type": "string",
              "description": "The name or path of the video"
            },
            "count": {
              "type": "integer",
              "description": "Number of Split Fragments"
            }
          },
          "required": [
            "name_or_path",
            "count"
          ]
        }
      }
    ],
    "single_tool": [
      {
        "name": "OfficeSoftware.Conferencing.setMeetingOptions",
        "description": "Change the title, time, whether the video is turned on, whether the audio is turned on, etc. settings of the meeting",
        "parameters": {
          "type": "object",
          "properties": {
            "meeting_id": {
              "type": "string",
              "description": "Conference No."
            },
            "title": {
              "type": "string",
              "description": "Meeting Title:"
            },
            "time": {
              "type": "string",
              "description": "Meeting Date"
            }
          },
          "required": [
            "meeting_id",
            "title",
            "time"
          ]
        }
      }
    ],
    "id": 152
  },
  {
    "messages": [
      {
        "role": "user",
        "content": "I plan to adjust a few details of the meeting, and I will tell you how to change it when I am sure."
      },
      {
        "role": "function call",
        "content": {
          "name": "OfficeSoftware.Conferencing.setMeetingOptions",
          "arguments": {}
        }
      },
      {
        "role": "assistant",
        "content": "What is the conference number"
      },
      {
        "role": "user",
        "content": "The meeting number is 78910, but please make sure you are using the correct link to enter."
      },
      {
        "role": "function call",
        "content": {
          "name": "OfficeSoftware.Conferencing.setMeetingOptions",
          "arguments": {
            "meeting_id": "78910"
          }
        }
      },
      {
        "role": "assistant",
        "content": "What is the title of the meeting Do you want to change the time of the meeting Do you need to turn on the video Do you need to turn on the audio"
      },
      {
        "role": "user",
        "content": "The title of the meeting is a Friday team building event, no need to change the time, video and audio need to be turned on."
      },
      {
        "role": "function call",
        "content": {
          "name": "OfficeSoftware.Conferencing.setMeetingOptions",
          "arguments": {
            "meeting_id": "78910",
            "title": "Friday team building activities"
          }
        }
      },
      {
        "role": "assistant",
        "content": "What the meeting time is Whether the video is turned on Whether the audio is turned on"
      },
      {
        "role": "user",
        "content": "It was wrong before. Meeting Title: should be Market Strategy Discussion"
      },
      {
        "role": "function call",
        "content": {
          "name": "OfficeSoftware.Conferencing.setMeetingOptions",
          "arguments": {
            "meeting_id": "78910",
            "title": "Market Strategy Discussion"
          }
        }
      },
      {
        "role": "assistant",
        "content": "What the meeting time is Whether the video is turned on Whether the audio is turned on"
      },
      {
        "role": "user",
        "content": "Video and audio will need to be on next Friday at 3pm."
      },
      {
        "role": "function call",
        "content": {
          "name": "OfficeSoftware.Conferencing.setMeetingOptions",
          "arguments": {
            "meeting_id": "78910",
            "title": "Market Strategy Discussion",
            "time": "Next Friday at 3pm"
          }
        }
      }
    ],
    "multiple_tools": [
      {
        "name": "OfficeSoftware.Email.updateMailDraft",
        "description": "Update specified message draft",
        "parameters": {
          "type": "object",
          "properties": {
            "mail_title": {
              "type": "string",
              "description": "Draft title to update"
            }
          },
          "required": [
            "mail_title"
          ]
        }
      },
      {
        "name": "ConvenientLiving.GovernmentServices.updateServiceRequestInfo",
        "description": "Make changes to submitted city service request information",
        "parameters": {
          "type": "object",
          "properties": {
            "name": {
              "type": "string",
              "description": "Service Request Name"
            }
          },
          "required": [
            "name"
          ]
        }
      },
      {
        "name": "OfficeSoftware.Conferencing.setMeetingOptions",
        "description": "Change the title, time, whether the video is turned on, whether the audio is turned on, etc. settings of the meeting",
        "parameters": {
          "type": "object",
          "properties": {
            "meeting_id": {
              "type": "string",
              "description": "Conference No."
            },
            "title": {
              "type": "string",
              "description": "Meeting Title:"
            },
            "time": {
              "type": "string",
              "description": "Meeting Date"
            }
          },
          "required": [
            "meeting_id",
            "title",
            "time"
          ]
        }
      },
      {
        "name": "OfficeSoftware.Email.collectMail",
        "description": "Favorite a specified message",
        "parameters": {
          "type": "object",
          "properties": {
            "mail_title": {
              "type": "string",
              "description": "Title of the message to favorite"
            }
          },
          "required": [
            "mail_title"
          ]
        }
      },
      {
        "name": "OfficeSoftware.Email.appendixManageMail",
        "description": "Get all attachments",
        "parameters": {
          "type": "object",
          "properties": {},
          "required": []
        }
      }
    ],
    "single_tool": [
      {
        "name": "OfficeSoftware.Conferencing.setMeetingOptions",
        "description": "Change the title, time, whether the video is turned on, whether the audio is turned on, etc. settings of the meeting",
        "parameters": {
          "type": "object",
          "properties": {
            "meeting_id": {
              "type": "string",
              "description": "Conference No."
            },
            "title": {
              "type": "string",
              "description": "Meeting Title:"
            },
            "time": {
              "type": "string",
              "description": "Meeting Date"
            }
          },
          "required": [
            "meeting_id",
            "title",
            "time"
          ]
        }
      }
    ],
    "id": 153
  },
  {
    "messages": [
      {
        "role": "user",
        "content": "You can now turn off the meeting recording, we've discussed it"
      },
      {
        "role": "function call",
        "content": {
          "name": "OfficeSoftware.Conferencing.stopRecording",
          "arguments": {}
        }
      },
      {
        "role": "assistant",
        "content": "What is the conference number"
      },
      {
        "role": "user",
        "content": "The conference number is 12345678, I will confirm it later."
      },
      {
        "role": "function call",
        "content": {
          "name": "OfficeSoftware.Conferencing.stopRecording",
          "arguments": {
            "meeting_id": "12345678"
          }
        }
      },
      {
        "role": "assistant",
        "content": "Please provide a meeting title"
      },
      {
        "role": "user",
        "content": "It was wrong before. Conference No. should be 87654321"
      },
      {
        "role": "function call",
        "content": {
          "name": "OfficeSoftware.Conferencing.stopRecording",
          "arguments": {
            "meeting_id": "87654321"
          }
        }
      },
      {
        "role": "assistant",
        "content": "Please provide a meeting title"
      },
      {
        "role": "user",
        "content": "Product Review Meeting Discussion Points"
      },
      {
        "role": "function call",
        "content": {
          "name": "OfficeSoftware.Conferencing.stopRecording",
          "arguments": {
            "meeting_id": "87654321",
            "title": "Product Review Meeting"
          }
        }
      }
    ],
    "multiple_tools": [
      {
        "name": "OfficeSoftware.Conferencing.stopRecording",
        "description": "Stop in-progress meeting recording",
        "parameters": {
          "type": "object",
          "properties": {
            "meeting_id": {
              "type": "string",
              "description": "Conference No."
            },
            "title": {
              "type": "string",
              "description": "Meeting Title:"
            },
            "time": {
              "type": "string",
              "description": "Meeting Date"
            }
          },
          "required": [
            "meeting_id",
            "title",
            "time"
          ]
        }
      },
      {
        "name": "UtilityTools.AlarmClock.markStopwatch",
        "description": "Stopwatch markers in progress for",
        "parameters": {
          "type": "object",
          "properties": {},
          "required": []
        }
      },
      {
        "name": "Navigation.PublicTransit.viewBusStopInfo",
        "description": "View designated bus stop information",
        "parameters": {
          "type": "object",
          "properties": {
            "stop_plate": {
              "type": "string",
              "description": "Station Name"
            }
          },
          "required": [
            "stop_plate"
          ]
        }
      },
      {
        "name": "SystemTools.SystemSettings.setSystemStopScreenRecording",
        "description": "Stop phone screen recording",
        "parameters": {
          "type": "object",
          "properties": {},
          "required": []
        }
      },
      {
        "name": "Navigation.PublicTransit.viewNearbyBusStop",
        "description": "Check nearby bus stops",
        "parameters": {
          "type": "object",
          "properties": {
            "location": {
              "type": "string",
              "description": "Default Current Location"
            }
          },
          "required": [
            "location"
          ]
        }
      }
    ],
    "single_tool": [
      {
        "name": "OfficeSoftware.Conferencing.stopRecording",
        "description": "Stop in-progress meeting recording",
        "parameters": {
          "type": "object",
          "properties": {
            "meeting_id": {
              "type": "string",
              "description": "Conference No."
            },
            "title": {
              "type": "string",
              "description": "Meeting Title:"
            },
            "time": {
              "type": "string",
              "description": "Meeting Date"
            }
          },
          "required": [
            "meeting_id",
            "title",
            "time"
          ]
        }
      }
    ],
    "id": 154
  },
  {
    "messages": [
      {
        "role": "user",
        "content": "Share your screen in a meeting"
      },
      {
        "role": "function call",
        "content": {
          "name": "OfficeSoftware.Conferencing.shareScreen",
          "arguments": {}
        }
      },
      {
        "role": "assistant",
        "content": "What is the conference number"
      },
      {
        "role": "user",
        "content": "The meeting number is 78910, but please make sure you are using the correct link to enter."
      },
      {
        "role": "function call",
        "content": {
          "name": "OfficeSoftware.Conferencing.shareScreen",
          "arguments": {
            "meeting_id": "78910"
          }
        }
      },
      {
        "role": "assistant",
        "content": "What's the title of the meeting"
      },
      {
        "role": "user",
        "content": "It was wrong before. Conference No. should be 123ABC"
      },
      {
        "role": "function call",
        "content": {
          "name": "OfficeSoftware.Conferencing.shareScreen",
          "arguments": {
            "meeting_id": "123ABC"
          }
        }
      },
      {
        "role": "assistant",
        "content": "What's the title of the meeting"
      },
      {
        "role": "user",
        "content": "Weekly Newsletter Sharing Session"
      },
      {
        "role": "function call",
        "content": {
          "name": "OfficeSoftware.Conferencing.shareScreen",
          "arguments": {
            "meeting_id": "123ABC",
            "title": "Weekly Newspaper Sharing"
          }
        }
      }
    ],
    "multiple_tools": [
      {
        "name": "MusicRadio.Karaoke.shareKsongWorks",
        "description": "Share work based on song name",
        "parameters": {
          "type": "object",
          "properties": {
            "song_name": {
              "type": "string",
              "description": "Song Name"
            },
            "media": {
              "type": "string",
              "description": "Media"
            },
            "name": {
              "type": "string",
              "description": "Friend name"
            }
          },
          "required": [
            "song_name",
            "media",
            "name"
          ]
        }
      },
      {
        "name": "OfficeSoftware.Conferencing.shareScreen",
        "description": "Share your screen in a meeting",
        "parameters": {
          "type": "object",
          "properties": {
            "meeting_id": {
              "type": "string",
              "description": "Conference No."
            },
            "title": {
              "type": "string",
              "description": "Meeting Title:"
            },
            "time": {
              "type": "string",
              "description": "Meeting Date"
            }
          },
          "required": [
            "meeting_id",
            "title",
            "time"
          ]
        }
      },
      {
        "name": "OnlineShopping.ExpressDelivery.shareExpress",
        "description": "Share specific courier logistics information with the intended audience",
        "parameters": {
          "type": "object",
          "properties": {
            "to": {
              "type": "string",
              "description": "Shared with"
            },
            "date": {
              "type": "string",
              "description": "Shipping date"
            }
          },
          "required": [
            "to",
            "date"
          ]
        }
      },
      {
        "name": "Health.Fitness.shareExerciseProgress",
        "description": "Share your fitness progress with the people you want to share it with",
        "parameters": {
          "type": "object",
          "properties": {
            "target": {
              "type": "string",
              "description": "Share with"
            },
            "exercise_progress": {
              "type": "string",
              "description": "Fitness Progress"
            }
          },
          "required": [
            "target",
            "exercise_progress"
          ]
        }
      },
      {
        "name": "MusicRadio.RadioStations.radioShareRadio",
        "description": "Share the station to social platforms based on the station name",
        "parameters": {
          "type": "object",
          "properties": {
            "radio_name": {
              "type": "string",
              "description": "Radio Name"
            },
            "to": {
              "type": "string",
              "description": "Sharing platform"
            }
          },
          "required": [
            "radio_name",
            "to"
          ]
        }
      }
    ],
    "single_tool": [
      {
        "name": "OfficeSoftware.Conferencing.shareScreen",
        "description": "Share your screen in a meeting",
        "parameters": {
          "type": "object",
          "properties": {
            "meeting_id": {
              "type": "string",
              "description": "Conference No."
            },
            "title": {
              "type": "string",
              "description": "Meeting Title:"
            },
            "time": {
              "type": "string",
              "description": "Meeting Date"
            }
          },
          "required": [
            "meeting_id",
            "title",
            "time"
          ]
        }
      }
    ],
    "id": 155
  },
  {
    "messages": [
      {
        "role": "user",
        "content": "Please mute the participants"
      },
      {
        "role": "function call",
        "content": {
          "name": "OfficeSoftware.Conferencing.muteParticipants",
          "arguments": {}
        }
      },
      {
        "role": "assistant",
        "content": "What is the conference number"
      },
      {
        "role": "user",
        "content": "The conference number is 7891011 and it is ready."
      },
      {
        "role": "function call",
        "content": {
          "name": "OfficeSoftware.Conferencing.muteParticipants",
          "arguments": {
            "meeting_id": "7891011"
          }
        }
      },
      {
        "role": "assistant",
        "content": "What's the title of the meeting"
      },
      {
        "role": "user",
        "content": "It was wrong before. Conference No. should be 556677"
      },
      {
        "role": "function call",
        "content": {
          "name": "OfficeSoftware.Conferencing.muteParticipants",
          "arguments": {
            "meeting_id": "556677"
          }
        }
      },
      {
        "role": "assistant",
        "content": "What's the title of the meeting"
      },
      {
        "role": "user",
        "content": "Product Development Progress Discussion"
      },
      {
        "role": "function call",
        "content": {
          "name": "OfficeSoftware.Conferencing.muteParticipants",
          "arguments": {
            "meeting_id": "556677",
            "title": "Product Development Progress Discussion"
          }
        }
      },
      {
        "role": "assistant",
        "content": "What is the meeting time?"
      },
      {
        "role": "user",
        "content": "The meeting is this Friday at 3pm, right?"
      },
      {
        "role": "function call",
        "content": {
          "name": "OfficeSoftware.Conferencing.muteParticipants",
          "arguments": {
            "meeting_id": "556677",
            "title": "Product Development Progress Discussion",
            "time": "This Friday at 3pm"
          }
        }
      }
    ],
    "multiple_tools": [
      {
        "name": "Photography.VideoEditing.videoMute",
        "description": "Turn off video sound; restore video sound",
        "parameters": {
          "type": "object",
          "properties": {
            "name_or_path": {
              "type": "string",
              "description": "The name or path of the video"
            },
            "open": {
              "type": "boolean",
              "description": "Turn on mute, turn off mute"
            }
          },
          "required": [
            "name_or_path",
            "open"
          ]
        }
      },
      {
        "name": "SystemTools.SystemSettings.setSystemTurnOnSilentMode",
        "description": "Turn on Mute Mode",
        "parameters": {
          "type": "object",
          "properties": {},
          "required": []
        }
      },
      {
        "name": "OfficeSoftware.Conferencing.muteParticipants",
        "description": "Mute Assigned Participants",
        "parameters": {
          "type": "object",
          "properties": {
            "meeting_id": {
              "type": "string",
              "description": "Conference No."
            },
            "title": {
              "type": "string",
              "description": "Meeting Title:"
            },
            "time": {
              "type": "string",
              "description": "Meeting Date"
            },
            "participant_list": {
              "type": "string",
              "description": "List of people to mute, defaults to All People"
            }
          },
          "required": [
            "meeting_id",
            "title",
            "time",
            "participant_list"
          ]
        }
      },
      {
        "name": "SocialCommunication.Calling.mutePhoneCall",
        "description": "Control whether your microphone is muted during the call",
        "parameters": {
          "type": "object",
          "properties": {
            "mute_status": {
              "type": "boolean",
              "description": "true to mute, false to unmute"
            }
          },
          "required": [
            "mute_status"
          ]
        }
      },
      {
        "name": "SystemTools.SystemSettings.setSystemTurnOffSilentMode",
        "description": "Turn off Mute Mode",
        "parameters": {
          "type": "object",
          "properties": {},
          "required": []
        }
      }
    ],
    "single_tool": [
      {
        "name": "OfficeSoftware.Conferencing.muteParticipants",
        "description": "Mute Assigned Participants",
        "parameters": {
          "type": "object",
          "properties": {
            "meeting_id": {
              "type": "string",
              "description": "Conference No."
            },
            "title": {
              "type": "string",
              "description": "Meeting Title:"
            },
            "time": {
              "type": "string",
              "description": "Meeting Date"
            },
            "participant_list": {
              "type": "string",
              "description": "List of people to mute, defaults to All People"
            }
          },
          "required": [
            "meeting_id",
            "title",
            "time",
            "participant_list"
          ]
        }
      }
    ],
    "id": 156
  },
  {
    "messages": [
      {
        "role": "user",
        "content": "The meeting shut down the man's mai"
      },
      {
        "role": "function call",
        "content": {
          "name": "OfficeSoftware.Conferencing.muteParticipants",
          "arguments": {}
        }
      },
      {
        "role": "assistant",
        "content": "What is the conference number"
      },
      {
        "role": "user",
        "content": "The meeting number is 123456, but please be sure to use it safely and don't feel free to share it."
      },
      {
        "role": "function call",
        "content": {
          "name": "OfficeSoftware.Conferencing.muteParticipants",
          "arguments": {
            "meeting_id": "123456"
          }
        }
      },
      {
        "role": "assistant",
        "content": "What's the title of the meeting"
      },
      {
        "role": "user",
        "content": "Quarterly Sales Meeting Summary and Outlook"
      },
      {
        "role": "function call",
        "content": {
          "name": "OfficeSoftware.Conferencing.muteParticipants",
          "arguments": {
            "meeting_id": "123456",
            "title": "Quarterly Sales Meeting"
          }
        }
      },
      {
        "role": "assistant",
        "content": "What is the meeting time?"
      },
      {
        "role": "user",
        "content": "It was wrong before. Meeting Title: should be Monthly Sales Report"
      },
      {
        "role": "function call",
        "content": {
          "name": "OfficeSoftware.Conferencing.muteParticipants",
          "arguments": {
            "meeting_id": "123456",
            "title": "Monthly Sales Report"
          }
        }
      },
      {
        "role": "assistant",
        "content": "What is the meeting time?"
      },
      {
        "role": "user",
        "content": "Tomorrow at 10am, we have a meeting."
      },
      {
        "role": "function call",
        "content": {
          "name": "OfficeSoftware.Conferencing.muteParticipants",
          "arguments": {
            "meeting_id": "123456",
            "title": "Monthly Sales Report",
            "time": "Tomorrow at 10am"
          }
        }
      }
    ],
    "multiple_tools": [
      {
        "name": "SystemTools.SystemSettings.setSystemTurnOffScreen2TV",
        "description": "Turn off phone projection to TV",
        "parameters": {
          "type": "object",
          "properties": {},
          "required": []
        }
      },
      {
        "name": "SystemTools.SystemSettings.CloseApp",
        "description": "Close the specified App on the phone",
        "parameters": {
          "type": "object",
          "properties": {
            "app_name": {
              "type": "string",
              "description": "App name"
            }
          },
          "required": [
            "app_name"
          ]
        }
      },
      {
        "name": "UtilityTools.AlarmClock.markStopwatch",
        "description": "Stopwatch markers in progress for",
        "parameters": {
          "type": "object",
          "properties": {},
          "required": []
        }
      },
      {
        "name": "OfficeSoftware.Conferencing.muteParticipants",
        "description": "Mute Assigned Participants",
        "parameters": {
          "type": "object",
          "properties": {
            "meeting_id": {
              "type": "string",
              "description": "Conference No."
            },
            "title": {
              "type": "string",
              "description": "Meeting Title:"
            },
            "time": {
              "type": "string",
              "description": "Meeting Date"
            },
            "participant_list": {
              "type": "string",
              "description": "List of people to mute, defaults to All People"
            }
          },
          "required": [
            "meeting_id",
            "title",
            "time",
            "participant_list"
          ]
        }
      },
      {
        "name": "Navigation.PublicTransit.viewBusStopInfo",
        "description": "View designated bus stop information",
        "parameters": {
          "type": "object",
          "properties": {
            "stop_plate": {
              "type": "string",
              "description": "Station Name"
            }
          },
          "required": [
            "stop_plate"
          ]
        }
      }
    ],
    "single_tool": [
      {
        "name": "OfficeSoftware.Conferencing.muteParticipants",
        "description": "Mute Assigned Participants",
        "parameters": {
          "type": "object",
          "properties": {
            "meeting_id": {
              "type": "string",
              "description": "Conference No."
            },
            "title": {
              "type": "string",
              "description": "Meeting Title:"
            },
            "time": {
              "type": "string",
              "description": "Meeting Date"
            },
            "participant_list": {
              "type": "string",
              "description": "List of people to mute, defaults to All People"
            }
          },
          "required": [
            "meeting_id",
            "title",
            "time",
            "participant_list"
          ]
        }
      }
    ],
    "id": 157
  },
  {
    "messages": [
      {
        "role": "user",
        "content": "Unmute participants"
      },
      {
        "role": "function call",
        "content": {
          "name": "OfficeSoftware.Conferencing.unmuteParticipants",
          "arguments": {}
        }
      },
      {
        "role": "assistant",
        "content": "What is the conference number"
      },
      {
        "role": "user",
        "content": "The meeting number is 87654321, I will confirm other details later."
      },
      {
        "role": "function call",
        "content": {
          "name": "OfficeSoftware.Conferencing.unmuteParticipants",
          "arguments": {
            "meeting_id": "87654321"
          }
        }
      },
      {
        "role": "assistant",
        "content": "What's the title of the meeting"
      },
      {
        "role": "user",
        "content": "Product Innovation Workshop"
      },
      {
        "role": "function call",
        "content": {
          "name": "OfficeSoftware.Conferencing.unmuteParticipants",
          "arguments": {
            "meeting_id": "87654321",
            "title": "Product Innovation Workshop"
          }
        }
      },
      {
        "role": "assistant",
        "content": "What is the meeting time?"
      },
      {
        "role": "user",
        "content": "It was wrong before. Conference No. should be 12345678"
      },
      {
        "role": "function call",
        "content": {
          "name": "OfficeSoftware.Conferencing.unmuteParticipants",
          "arguments": {
            "meeting_id": "12345678",
            "title": "Product Innovation Workshop"
          }
        }
      },
      {
        "role": "assistant",
        "content": "What is the meeting time?"
      },
      {
        "role": "user",
        "content": "Let's schedule a meeting next Wednesday at 10am."
      },
      {
        "role": "function call",
        "content": {
          "name": "OfficeSoftware.Conferencing.unmuteParticipants",
          "arguments": {
            "meeting_id": "12345678",
            "title": "Product Innovation Workshop",
            "time": "Next Wednesday at 10am"
          }
        }
      }
    ],
    "multiple_tools": [
      {
        "name": "SocialCommunication.Community.unlikeCommunityPost",
        "description": "Unlike a specific post",
        "parameters": {
          "type": "object",
          "properties": {
            "community_name": {
              "type": "string",
              "description": "The name of the community where you want to unlike the post"
            },
            "post_name": {
              "type": "string",
              "description": "Title of the post to unlike"
            }
          },
          "required": [
            "community_name",
            "post_name"
          ]
        }
      },
      {
        "name": "VideoPlayback.ShortVideos.favouriteShortVideo",
        "description": "Favorite or unfavorite a short video",
        "parameters": {
          "type": "object",
          "properties": {
            "name": {
              "type": "string",
              "description": "Short video name"
            },
            "favourite": {
              "type": "boolean",
              "description": "Favorite/Cancel"
            }
          },
          "required": [
            "name",
            "favourite"
          ]
        }
      },
      {
        "name": "OfficeSoftware.Conferencing.unmuteParticipants",
        "description": "Unmute participants",
        "parameters": {
          "type": "object",
          "properties": {
            "meeting_id": {
              "type": "string",
              "description": "Conference No."
            },
            "title": {
              "type": "string",
              "description": "Meeting Title:"
            },
            "time": {
              "type": "string",
              "description": "Meeting Date"
            },
            "participant_list": {
              "type": "string",
              "description": "To unmute a list of people, the default is All People"
            }
          },
          "required": [
            "meeting_id",
            "title",
            "time",
            "participant_list"
          ]
        }
      },
      {
        "name": "NewsMagazines.NewspapersMagazines.unsubscribeMagazine",
        "description": "Unsubscribe from magazines based on their name",
        "parameters": {
          "type": "object",
          "properties": {
            "name": {
              "type": "string",
              "description": "Magazine Name"
            }
          },
          "required": [
            "name"
          ]
        }
      },
      {
        "name": "Education.OnlineClasses.cancelCourse",
        "description": "Cancel Enrolled Courses",
        "parameters": {
          "type": "object",
          "properties": {
            "course_name": {
              "type": "string",
              "description": "Course Title"
            }
          },
          "required": [
            "course_name"
          ]
        }
      }
    ],
    "single_tool": [
      {
        "name": "OfficeSoftware.Conferencing.unmuteParticipants",
        "description": "Unmute participants",
        "parameters": {
          "type": "object",
          "properties": {
            "meeting_id": {
              "type": "string",
              "description": "Conference No."
            },
            "title": {
              "type": "string",
              "description": "Meeting Title:"
            },
            "time": {
              "type": "string",
              "description": "Meeting Date"
            },
            "participant_list": {
              "type": "string",
              "description": "To unmute a list of people, the default is All People"
            }
          },
          "required": [
            "meeting_id",
            "title",
            "time",
            "participant_list"
          ]
        }
      }
    ],
    "id": 158
  },
  {
    "messages": [
      {
        "role": "user",
        "content": "Please unmute some members of the meeting for me"
      },
      {
        "role": "function call",
        "content": {
          "name": "OfficeSoftware.Conferencing.unmuteParticipants",
          "arguments": {}
        }
      },
      {
        "role": "assistant",
        "content": "What is the conference number"
      },
      {
        "role": "user",
        "content": "The meeting number is 12345678, but please make sure to enter using the correct link."
      },
      {
        "role": "function call",
        "content": {
          "name": "OfficeSoftware.Conferencing.unmuteParticipants",
          "arguments": {
            "meeting_id": "12345678"
          }
        }
      },
      {
        "role": "assistant",
        "content": "What's the title of the meeting"
      },
      {
        "role": "user",
        "content": "It was wrong before. Conference No. should be 87654321"
      },
      {
        "role": "function call",
        "content": {
          "name": "OfficeSoftware.Conferencing.unmuteParticipants",
          "arguments": {
            "meeting_id": "87654321"
          }
        }
      },
      {
        "role": "assistant",
        "content": "What's the title of the meeting"
      },
      {
        "role": "user",
        "content": "Quarterly Sales Wrap-up Session"
      },
      {
        "role": "function call",
        "content": {
          "name": "OfficeSoftware.Conferencing.unmuteParticipants",
          "arguments": {
            "meeting_id": "87654321",
            "title": "Quarterly Sales Summary"
          }
        }
      },
      {
        "role": "assistant",
        "content": "What is the meeting time?"
      },
      {
        "role": "user",
        "content": "There is a meeting tomorrow at 2pm."
      },
      {
        "role": "function call",
        "content": {
          "name": "OfficeSoftware.Conferencing.unmuteParticipants",
          "arguments": {
            "meeting_id": "87654321",
            "title": "Quarterly Sales Summary",
            "time": "Tomorrow at 2pm"
          }
        }
      }
    ],
    "multiple_tools": [
      {
        "name": "OfficeSoftware.Conferencing.removeParticipants",
        "description": "Remove participants from the meeting",
        "parameters": {
          "type": "object",
          "properties": {
            "meeting_id": {
              "type": "string",
              "description": "Conference No."
            },
            "title": {
              "type": "string",
              "description": "Meeting Title:"
            },
            "time": {
              "type": "string",
              "description": "Meeting Date"
            },
            "participant_list": {
              "type": "string",
              "description": "Remove people list"
            }
          },
          "required": [
            "meeting_id",
            "title",
            "time",
            "participant_list"
          ]
        }
      },
      {
        "name": "OfficeSoftware.Conferencing.unmuteParticipants",
        "description": "Unmute participants",
        "parameters": {
          "type": "object",
          "properties": {
            "meeting_id": {
              "type": "string",
              "description": "Conference No."
            },
            "title": {
              "type": "string",
              "description": "Meeting Title:"
            },
            "time": {
              "type": "string",
              "description": "Meeting Date"
            },
            "participant_list": {
              "type": "string",
              "description": "To unmute a list of people, the default is All People"
            }
          },
          "required": [
            "meeting_id",
            "title",
            "time",
            "participant_list"
          ]
        }
      },
      {
        "name": "NewsMagazines.News.unfollowNewsSource",
        "description": "Unfollow assigned news source",
        "parameters": {
          "type": "object",
          "properties": {
            "source_name": {
              "type": "string",
              "description": "News Source Name"
            }
          },
          "required": [
            "source_name"
          ]
        }
      },
      {
        "name": "Health.MedicalServices.cancelDoctorAppointment",
        "description": "Cancelling an appointment with a doctor",
        "parameters": {
          "type": "object",
          "properties": {
            "doctor_name": {
              "type": "string",
              "description": "Doctor Name"
            },
            "appointment_time": {
              "type": "string",
              "description": "Specific time of appointment '"
            }
          },
          "required": [
            "doctor_name",
            "appointment_time"
          ]
        }
      },
      {
        "name": "Finance.Payment.unlinkPayBankCard",
        "description": "Unlink card",
        "parameters": {
          "type": "object",
          "properties": {
            "bank_name": {
              "type": "string",
              "description": "Bank Name"
            },
            "card_number": {
              "type": "string",
              "description": "Bank Card Number"
            }
          },
          "required": [
            "bank_name",
            "card_number"
          ]
        }
      }
    ],
    "single_tool": [
      {
        "name": "OfficeSoftware.Conferencing.unmuteParticipants",
        "description": "Unmute participants",
        "parameters": {
          "type": "object",
          "properties": {
            "meeting_id": {
              "type": "string",
              "description": "Conference No."
            },
            "title": {
              "type": "string",
              "description": "Meeting Title:"
            },
            "time": {
              "type": "string",
              "description": "Meeting Date"
            },
            "participant_list": {
              "type": "string",
              "description": "To unmute a list of people, the default is All People"
            }
          },
          "required": [
            "meeting_id",
            "title",
            "time",
            "participant_list"
          ]
        }
      }
    ],
    "id": 159
  },
  {
    "messages": [
      {
        "role": "user",
        "content": "Send me a list of participants for the meeting now."
      },
      {
        "role": "function call",
        "content": {
          "name": "OfficeSoftware.Conferencing.viewParticipants",
          "arguments": {}
        }
      },
      {
        "role": "assistant",
        "content": "Please provide the conference number"
      },
      {
        "role": "user",
        "content": "The meeting number is 123456, but please make sure to use it safely."
      },
      {
        "role": "function call",
        "content": {
          "name": "OfficeSoftware.Conferencing.viewParticipants",
          "arguments": {
            "meeting_id": "123456"
          }
        }
      },
      {
        "role": "assistant",
        "content": "Please provide a meeting title"
      },
      {
        "role": "user",
        "content": "It was wrong before. Conference No. should be 123123"
      },
      {
        "role": "function call",
        "content": {
          "name": "OfficeSoftware.Conferencing.viewParticipants",
          "arguments": {
            "meeting_id": "123123"
          }
        }
      },
      {
        "role": "assistant",
        "content": "Please provide a meeting title"
      },
      {
        "role": "user",
        "content": "Quarterly Sales Wrap-up Session"
      },
      {
        "role": "function call",
        "content": {
          "name": "OfficeSoftware.Conferencing.viewParticipants",
          "arguments": {
            "meeting_id": "123123",
            "title": "Quarterly Sales Summary"
          }
        }
      }
    ],
    "multiple_tools": [
      {
        "name": "Finance.Stocks.viewStockoperate",
        "description": "Query the stock market on the day of trading; the day of consignment; historical trading; historical consignment; T operation",
        "parameters": {
          "type": "object",
          "properties": {
            "transaction_today": {
              "type": "boolean",
              "description": "Deal of the day Default: 0 No"
            },
            "entrust_today": {
              "type": "boolean",
              "description": "Delegation of the day default: 0 No"
            },
            "transaction_his": {
              "type": "boolean",
              "description": "History Closing Default: 0 No"
            },
            "entrust_his": {
              "type": "boolean",
              "description": "Historical delegation default: 0 No"
            },
            "T_operate": {
              "type": "boolean",
              "description": "T Operation default: 0 No"
            }
          },
          "required": [
            "transaction_today",
            "entrust_today",
            "transaction_his",
            "entrust_his",
            "T_operate"
          ]
        }
      },
      {
        "name": "MusicRadio.OnlineMusic.getPersonalizedPlaylists",
        "description": "Get my personalized playlist",
        "parameters": {
          "type": "object",
          "properties": {},
          "required": []
        }
      },
      {
        "name": "OfficeSoftware.Conferencing.viewParticipants",
        "description": "Get a list of participants for the current meeting",
        "parameters": {
          "type": "object",
          "properties": {
            "meeting_id": {
              "type": "string",
              "description": "Conference No."
            },
            "title": {
              "type": "string",
              "description": "Meeting Title:"
            },
            "time": {
              "type": "string",
              "description": "Meeting Date"
            }
          },
          "required": [
            "meeting_id",
            "title",
            "time"
          ]
        }
      },
      {
        "name": "NewsMagazines.News.getTodayTopNews",
        "description": "Provide users with today's important news",
        "parameters": {
          "type": "object",
          "properties": {},
          "required": []
        }
      },
      {
        "name": "OnlineShopping.SecondhandTrading.buySecondhandSaleCommodity",
        "description": "Goods purchased",
        "parameters": {
          "type": "object",
          "properties": {
            "search_name": {
              "type": "string",
              "description": "Trade Name/Keywords"
            }
          },
          "required": [
            "search_name"
          ]
        }
      }
    ],
    "single_tool": [
      {
        "name": "OfficeSoftware.Conferencing.viewParticipants",
        "description": "Get a list of participants for the current meeting",
        "parameters": {
          "type": "object",
          "properties": {
            "meeting_id": {
              "type": "string",
              "description": "Conference No."
            },
            "title": {
              "type": "string",
              "description": "Meeting Title:"
            },
            "time": {
              "type": "string",
              "description": "Meeting Date"
            }
          },
          "required": [
            "meeting_id",
            "title",
            "time"
          ]
        }
      }
    ],
    "id": 160
  },
  {
    "messages": [
      {
        "role": "user",
        "content": "I need to change the moderator of the meeting"
      },
      {
        "role": "function call",
        "content": {
          "name": "OfficeSoftware.Conferencing.changeHost",
          "arguments": {}
        }
      },
      {
        "role": "assistant",
        "content": "What is the conference number"
      },
      {
        "role": "user",
        "content": "The conference number is 87654321, I will confirm it later."
      },
      {
        "role": "function call",
        "content": {
          "name": "OfficeSoftware.Conferencing.changeHost",
          "arguments": {
            "meeting_id": "87654321"
          }
        }
      },
      {
        "role": "assistant",
        "content": "What's the title of the meeting"
      },
      {
        "role": "user",
        "content": "It was wrong before. Conference No. should be 456789"
      },
      {
        "role": "function call",
        "content": {
          "name": "OfficeSoftware.Conferencing.changeHost",
          "arguments": {
            "meeting_id": "456789"
          }
        }
      },
      {
        "role": "assistant",
        "content": "What's the title of the meeting"
      },
      {
        "role": "user",
        "content": "Product Innovation Discussion"
      },
      {
        "role": "function call",
        "content": {
          "name": "OfficeSoftware.Conferencing.changeHost",
          "arguments": {
            "meeting_id": "456789",
            "title": "Product Innovation Discussion"
          }
        }
      },
      {
        "role": "assistant",
        "content": "What time is the meeting?"
      },
      {
        "role": "user",
        "content": "The meeting is this Friday at 2pm, right?"
      },
      {
        "role": "function call",
        "content": {
          "name": "OfficeSoftware.Conferencing.changeHost",
          "arguments": {
            "meeting_id": "456789",
            "title": "Product Innovation Discussion",
            "time": "This Friday at 2pm"
          }
        }
      }
    ],
    "multiple_tools": [
      {
        "name": "UtilityTools.Calendar.alterCalendarschedule",
        "description": "Modify a schedule",
        "parameters": {
          "type": "object",
          "properties": {
            "date_name": {
              "type": "string",
              "description": "Visiting program name"
            },
            "date_name_before": {
              "type": "string",
              "description": "Modified Schedule Name"
            },
            "start_date": {
              "type": "string",
              "description": "Schedule start time"
            },
            "start_date_before": {
              "type": "string",
              "description": "Modified Schedule Start Time"
            }
          },
          "required": [
            "date_name",
            "date_name_before",
            "start_date",
            "start_date_before"
          ]
        }
      },
      {
        "name": "Health.Fitness.modifyExercisePlan",
        "description": "Modify your fitness plan based on your fitness goals",
        "parameters": {
          "type": "object",
          "properties": {
            "old_goal": {
              "type": "string",
              "description": "Original fitness goal"
            },
            "new_goal": {
              "type": "string",
              "description": "New fitness goals"
            }
          },
          "required": [
            "old_goal",
            "new_goal"
          ]
        }
      },
      {
        "name": "Navigation.FlightTickets.modifyFlightBooking",
        "description": "Changing the departure time of a booked flight is not supported for departure and destination changes",
        "parameters": {
          "type": "object",
          "properties": {
            "departure": {
              "type": "string",
              "description": "Origination"
            },
            "destination": {
              "type": "string",
              "description": "Reach ground"
            },
            "name": {
              "type": "string",
              "description": "Name of person who booked"
            },
            "time": {
              "type": "string",
              "description": "Flight duration before modification"
            },
            "alter_time": {
              "type": "string",
              "description": "Revised flight time"
            },
            "alter_seat": {
              "type": "string",
              "description": "Class Selection"
            }
          },
          "required": [
            "departure",
            "destination",
            "name",
            "time",
            "alter_time",
            "alter_seat"
          ]
        }
      },
      {
        "name": "OfficeSoftware.Conferencing.changeHost",
        "description": "Change meeting moderator",
        "parameters": {
          "type": "object",
          "properties": {
            "meeting_id": {
              "type": "string",
              "description": "Conference No."
            },
            "title": {
              "type": "string",
              "description": "Meeting Title:"
            },
            "time": {
              "type": "string",
              "description": "Meeting Date"
            },
            "host": {
              "type": "string",
              "description": "Moderator Name"
            }
          },
          "required": [
            "meeting_id",
            "title",
            "time",
            "host"
          ]
        }
      },
      {
        "name": "Navigation.TrainTickets.modifyTrainPassengerOrder",
        "description": "Modify rider information or seat type for a specific order, etc.",
        "parameters": {
          "type": "object",
          "properties": {
            "before_number": {
              "type": "string",
              "description": "Booked trips"
            },
            "before_name": {
              "type": "string",
              "description": "Original rider name"
            },
            "after_number": {
              "type": "string",
              "description": "Booked trips"
            },
            "after_name": {
              "type": "string",
              "description": "Rider's name"
            },
            "after_ride_date": {
              "type": "string",
              "description": "Date of trip"
            },
            "after_seat_type": {
              "type": "string",
              "description": "Seat Type"
            }
          },
          "required": [
            "before_number",
            "before_name",
            "after_number",
            "after_name",
            "after_ride_date",
            "after_seat_type"
          ]
        }
      }
    ],
    "single_tool": [
      {
        "name": "OfficeSoftware.Conferencing.changeHost",
        "description": "Change meeting moderator",
        "parameters": {
          "type": "object",
          "properties": {
            "meeting_id": {
              "type": "string",
              "description": "Conference No."
            },
            "title": {
              "type": "string",
              "description": "Meeting Title:"
            },
            "time": {
              "type": "string",
              "description": "Meeting Date"
            },
            "host": {
              "type": "string",
              "description": "Moderator Name"
            }
          },
          "required": [
            "meeting_id",
            "title",
            "time",
            "host"
          ]
        }
      }
    ],
    "id": 161
  },
  {
    "messages": [
      {
        "role": "user",
        "content": "Can you help me adjust and change the meeting moderator?"
      },
      {
        "role": "function call",
        "content": {
          "name": "OfficeSoftware.Conferencing.changeHost",
          "arguments": {}
        }
      },
      {
        "role": "assistant",
        "content": "What is the conference number"
      },
      {
        "role": "user",
        "content": "The conference number is 12345678 and it is ready."
      },
      {
        "role": "function call",
        "content": {
          "name": "OfficeSoftware.Conferencing.changeHost",
          "arguments": {
            "meeting_id": "12345678"
          }
        }
      },
      {
        "role": "assistant",
        "content": "What's the title of the meeting"
      },
      {
        "role": "user",
        "content": "Quarterly Sales Wrap-up Session"
      },
      {
        "role": "function call",
        "content": {
          "name": "OfficeSoftware.Conferencing.changeHost",
          "arguments": {
            "meeting_id": "12345678",
            "title": "Quarterly Sales Summary"
          }
        }
      },
      {
        "role": "assistant",
        "content": "What time is the meeting?"
      },
      {
        "role": "user",
        "content": "It was wrong before. Meeting Title: should be Product Innovation Discussion"
      },
      {
        "role": "function call",
        "content": {
          "name": "OfficeSoftware.Conferencing.changeHost",
          "arguments": {
            "meeting_id": "12345678",
            "title": "Product Innovation Discussion"
          }
        }
      },
      {
        "role": "assistant",
        "content": "What time is the meeting?"
      },
      {
        "role": "user",
        "content": "We have a meeting next Monday at 10am."
      },
      {
        "role": "function call",
        "content": {
          "name": "OfficeSoftware.Conferencing.changeHost",
          "arguments": {
            "meeting_id": "12345678",
            "title": "Product Innovation Discussion",
            "time": "Next Monday at 10am"
          }
        }
      }
    ],
    "multiple_tools": [
      {
        "name": "Finance.Funds.recommendFunds",
        "description": "Recommend user-friendly funds based on investment objectives and duration",
        "parameters": {
          "type": "object",
          "properties": {
            "objective": {
              "type": "string",
              "description": "Investment objectives such as robust, aggressive"
            },
            "investment_term": {
              "type": "string",
              "description": "Investment term, e.g. short term, long term"
            }
          },
          "required": [
            "objective",
            "investment_term"
          ]
        }
      },
      {
        "name": "SystemTools.SystemSettings.setSystemGesture",
        "description": "Set custom mobile gesture action",
        "parameters": {
          "type": "object",
          "properties": {
            "gesture_name": {
              "type": "string",
              "description": "The name of the gesture, such as a screenshot gesture"
            },
            "gesture_action": {
              "type": "integer",
              "description": "Corresponding actions, such as taking a screenshot, opening the app"
            }
          },
          "required": [
            "gesture_name",
            "gesture_action"
          ]
        }
      },
      {
        "name": "UtilityTools.Calendar.alterCalendarschedule",
        "description": "Modify a schedule",
        "parameters": {
          "type": "object",
          "properties": {
            "date_name": {
              "type": "string",
              "description": "Visiting program name"
            },
            "date_name_before": {
              "type": "string",
              "description": "Modified Schedule Name"
            },
            "start_date": {
              "type": "string",
              "description": "Schedule start time"
            },
            "start_date_before": {
              "type": "string",
              "description": "Modified Schedule Start Time"
            }
          },
          "required": [
            "date_name",
            "date_name_before",
            "start_date",
            "start_date_before"
          ]
        }
      },
      {
        "name": "Health.Fitness.modifyExercisePlan",
        "description": "Modify your fitness plan based on your fitness goals",
        "parameters": {
          "type": "object",
          "properties": {
            "old_goal": {
              "type": "string",
              "description": "Original fitness goal"
            },
            "new_goal": {
              "type": "string",
              "description": "New fitness goals"
            }
          },
          "required": [
            "old_goal",
            "new_goal"
          ]
        }
      },
      {
        "name": "OfficeSoftware.Conferencing.changeHost",
        "description": "Change meeting moderator",
        "parameters": {
          "type": "object",
          "properties": {
            "meeting_id": {
              "type": "string",
              "description": "Conference No."
            },
            "title": {
              "type": "string",
              "description": "Meeting Title:"
            },
            "time": {
              "type": "string",
              "description": "Meeting Date"
            },
            "host": {
              "type": "string",
              "description": "Moderator Name"
            }
          },
          "required": [
            "meeting_id",
            "title",
            "time",
            "host"
          ]
        }
      }
    ],
    "single_tool": [
      {
        "name": "OfficeSoftware.Conferencing.changeHost",
        "description": "Change meeting moderator",
        "parameters": {
          "type": "object",
          "properties": {
            "meeting_id": {
              "type": "string",
              "description": "Conference No."
            },
            "title": {
              "type": "string",
              "description": "Meeting Title:"
            },
            "time": {
              "type": "string",
              "description": "Meeting Date"
            },
            "host": {
              "type": "string",
              "description": "Moderator Name"
            }
          },
          "required": [
            "meeting_id",
            "title",
            "time",
            "host"
          ]
        }
      }
    ],
    "id": 162
  },
  {
    "messages": [
      {
        "role": "user",
        "content": "Please lock the current meeting to ensure no one is free to join or operate"
      },
      {
        "role": "function call",
        "content": {
          "name": "OfficeSoftware.Conferencing.lockMeeting",
          "arguments": {}
        }
      },
      {
        "role": "assistant",
        "content": "Please provide the conference number"
      },
      {
        "role": "user",
        "content": "The meeting number is 7891011 and is ready."
      },
      {
        "role": "function call",
        "content": {
          "name": "OfficeSoftware.Conferencing.lockMeeting",
          "arguments": {
            "meeting_id": "7891011"
          }
        }
      },
      {
        "role": "assistant",
        "content": "What's the title of the meeting"
      },
      {
        "role": "user",
        "content": "It was wrong before. Conference No. should be 123456"
      },
      {
        "role": "function call",
        "content": {
          "name": "OfficeSoftware.Conferencing.lockMeeting",
          "arguments": {
            "meeting_id": "123456"
          }
        }
      },
      {
        "role": "assistant",
        "content": "What's the title of the meeting"
      },
      {
        "role": "user",
        "content": "Weekly Work Debrief Meeting"
      },
      {
        "role": "function call",
        "content": {
          "name": "OfficeSoftware.Conferencing.lockMeeting",
          "arguments": {
            "meeting_id": "123456",
            "title": "Weekly Work Debrief"
          }
        }
      }
    ],
    "multiple_tools": [
      {
        "name": "OfficeSoftware.Conferencing.lockMeeting",
        "description": "Lock the current meeting to prevent others from joining or manipulating it at will",
        "parameters": {
          "type": "object",
          "properties": {
            "meeting_id": {
              "type": "string",
              "description": "Conference No."
            },
            "title": {
              "type": "string",
              "description": "Meeting Title:"
            },
            "time": {
              "type": "string",
              "description": "Meeting Date"
            }
          },
          "required": [
            "meeting_id",
            "title",
            "time"
          ]
        }
      },
      {
        "name": "Navigation.Bicycles.lockBike",
        "description": "Lock your bike and settle your current bike order",
        "parameters": {
          "type": "object",
          "properties": {
            "order_id": {
              "type": "string",
              "description": "Order number, defaults to an active order"
            }
          },
          "required": [
            "order_id"
          ]
        }
      },
      {
        "name": "SystemTools.SystemSettings.setSystemWallpaperLock",
        "description": "Set your phone's lock screen wallpaper",
        "parameters": {
          "type": "object",
          "properties": {
            "wallpaper_source": {
              "type": "string",
              "description": "Wallpaper sources, such as albums, system defaults"
            }
          },
          "required": [
            "wallpaper_source"
          ]
        }
      },
      {
        "name": "SystemTools.SystemSettings.setSystemSecurityAndPrivacy",
        "description": "Set App Lock",
        "parameters": {
          "type": "object",
          "properties": {
            "lock_type": {
              "type": "string",
              "description": "Screen lock mode, can be \"pattern\", \"password\", \"fingerprint\", etc."
            },
            "app_name": {
              "type": "string",
              "description": "Name of the application to be locked"
            }
          },
          "required": [
            "lock_type",
            "app_name"
          ]
        }
      },
      {
        "name": "Photography.VideoEditing.videoLock",
        "description": "Lock or unlock the video interface",
        "parameters": {
          "type": "object",
          "properties": {
            "name_or_path": {
              "type": "string",
              "description": "The name or path of the video"
            },
            "open": {
              "type": "boolean",
              "description": "unlock/unlock, true unlock"
            }
          },
          "required": [
            "name_or_path",
            "open"
          ]
        }
      }
    ],
    "single_tool": [
      {
        "name": "OfficeSoftware.Conferencing.lockMeeting",
        "description": "Lock the current meeting to prevent others from joining or manipulating it at will",
        "parameters": {
          "type": "object",
          "properties": {
            "meeting_id": {
              "type": "string",
              "description": "Conference No."
            },
            "title": {
              "type": "string",
              "description": "Meeting Title:"
            },
            "time": {
              "type": "string",
              "description": "Meeting Date"
            }
          },
          "required": [
            "meeting_id",
            "title",
            "time"
          ]
        }
      }
    ],
    "id": 163
  },
  {
    "messages": [
      {
        "role": "user",
        "content": "I need to unlock a locked meeting"
      },
      {
        "role": "function call",
        "content": {
          "name": "OfficeSoftware.Conferencing.unlockMeeting",
          "arguments": {}
        }
      },
      {
        "role": "assistant",
        "content": "What is the conference number"
      },
      {
        "role": "user",
        "content": "The meeting number is 321321, but please make sure this is the correct number, sometimes I may remember it incorrectly."
      },
      {
        "role": "function call",
        "content": {
          "name": "OfficeSoftware.Conferencing.unlockMeeting",
          "arguments": {
            "meeting_id": "321321"
          }
        }
      },
      {
        "role": "assistant",
        "content": "Please provide a meeting title"
      },
      {
        "role": "user",
        "content": "It was wrong before. Conference No. should be 556677"
      },
      {
        "role": "function call",
        "content": {
          "name": "OfficeSoftware.Conferencing.unlockMeeting",
          "arguments": {
            "meeting_id": "556677"
          }
        }
      },
      {
        "role": "assistant",
        "content": "Please provide a meeting title"
      },
      {
        "role": "user",
        "content": "Project Review Meeting"
      },
      {
        "role": "function call",
        "content": {
          "name": "OfficeSoftware.Conferencing.unlockMeeting",
          "arguments": {
            "meeting_id": "556677",
            "title": "Project Review"
          }
        }
      }
    ],
    "multiple_tools": [
      {
        "name": "SocialCommunication.Calling.cancleBlockPhoneCall",
        "description": "Unblock set call",
        "parameters": {
          "type": "object",
          "properties": {
            "blocked_number": {
              "type": "string",
              "description": "Phone number to block"
            }
          },
          "required": [
            "blocked_number"
          ]
        }
      },
      {
        "name": "UtilityTools.AlarmClock.restartTimer",
        "description": "Reset the current timer or continue with the paused timer",
        "parameters": {
          "type": "object",
          "properties": {},
          "required": []
        }
      },
      {
        "name": "OfficeSoftware.Conferencing.unlockMeeting",
        "description": "Unlock Locked Meeting",
        "parameters": {
          "type": "object",
          "properties": {
            "meeting_id": {
              "type": "string",
              "description": "Conference No."
            },
            "title": {
              "type": "string",
              "description": "Meeting Title:"
            },
            "time": {
              "type": "string",
              "description": "Meeting Date"
            }
          },
          "required": [
            "meeting_id",
            "title",
            "time"
          ]
        }
      },
      {
        "name": "SocialCommunication.Community.restoreHiddenCommunityPost",
        "description": "Restore hidden posts in selected communities",
        "parameters": {
          "type": "object",
          "properties": {
            "community_name": {
              "type": "string",
              "description": "The name of the community where the post is located"
            },
            "post_name": {
              "type": "string",
              "description": "Title of the hidden post to restore"
            }
          },
          "required": [
            "community_name",
            "post_name"
          ]
        }
      },
      {
        "name": "Navigation.Bicycles.unlockBike",
        "description": "Unlock based on bike number",
        "parameters": {
          "type": "object",
          "properties": {
            "number": {
              "type": "string",
              "description": "Bike number"
            }
          },
          "required": [
            "number"
          ]
        }
      }
    ],
    "single_tool": [
      {
        "name": "OfficeSoftware.Conferencing.unlockMeeting",
        "description": "Unlock Locked Meeting",
        "parameters": {
          "type": "object",
          "properties": {
            "meeting_id": {
              "type": "string",
              "description": "Conference No."
            },
            "title": {
              "type": "string",
              "description": "Meeting Title:"
            },
            "time": {
              "type": "string",
              "description": "Meeting Date"
            }
          },
          "required": [
            "meeting_id",
            "title",
            "time"
          ]
        }
      }
    ],
    "id": 164
  },
  {
    "messages": [
      {
        "role": "user",
        "content": "Please cancel the locked meeting status for me"
      },
      {
        "role": "function call",
        "content": {
          "name": "OfficeSoftware.Conferencing.unlockMeeting",
          "arguments": {}
        }
      },
      {
        "role": "assistant",
        "content": "What is the conference number"
      },
      {
        "role": "user",
        "content": "The meeting number is 2023-04-01-001, but please make sure you are using the latest meeting link."
      },
      {
        "role": "function call",
        "content": {
          "name": "OfficeSoftware.Conferencing.unlockMeeting",
          "arguments": {
            "meeting_id": "2023-04-01-001"
          }
        }
      },
      {
        "role": "assistant",
        "content": "What's the title of the meeting"
      },
      {
        "role": "user",
        "content": "It was wrong before. Conference No. should be 556677"
      },
      {
        "role": "function call",
        "content": {
          "name": "OfficeSoftware.Conferencing.unlockMeeting",
          "arguments": {
            "meeting_id": "556677"
          }
        }
      },
      {
        "role": "assistant",
        "content": "What's the title of the meeting"
      },
      {
        "role": "user",
        "content": "April Fools' Day Event Planning Meeting"
      },
      {
        "role": "function call",
        "content": {
          "name": "OfficeSoftware.Conferencing.unlockMeeting",
          "arguments": {
            "meeting_id": "556677",
            "title": "April Fools' Day Event"
          }
        }
      }
    ],
    "multiple_tools": [
      {
        "name": "OfficeSoftware.Conferencing.unlockMeeting",
        "description": "Unlock Locked Meeting",
        "parameters": {
          "type": "object",
          "properties": {
            "meeting_id": {
              "type": "string",
              "description": "Conference No."
            },
            "title": {
              "type": "string",
              "description": "Meeting Title:"
            },
            "time": {
              "type": "string",
              "description": "Meeting Date"
            }
          },
          "required": [
            "meeting_id",
            "title",
            "time"
          ]
        }
      },
      {
        "name": "SocialCommunication.Calling.cancleBlockPhoneCall",
        "description": "Unblock set call",
        "parameters": {
          "type": "object",
          "properties": {
            "blocked_number": {
              "type": "string",
              "description": "Phone number to block"
            }
          },
          "required": [
            "blocked_number"
          ]
        }
      },
      {
        "name": "Navigation.Bicycles.unlockBike",
        "description": "Unlock based on bike number",
        "parameters": {
          "type": "object",
          "properties": {
            "number": {
              "type": "string",
              "description": "Bike number"
            }
          },
          "required": [
            "number"
          ]
        }
      },
      {
        "name": "SocialCommunication.Community.restoreHiddenCommunityPost",
        "description": "Restore hidden posts in selected communities",
        "parameters": {
          "type": "object",
          "properties": {
            "community_name": {
              "type": "string",
              "description": "The name of the community where the post is located"
            },
            "post_name": {
              "type": "string",
              "description": "Title of the hidden post to restore"
            }
          },
          "required": [
            "community_name",
            "post_name"
          ]
        }
      },
      {
        "name": "UtilityTools.AlarmClock.restartTimer",
        "description": "Reset the current timer or continue with the paused timer",
        "parameters": {
          "type": "object",
          "properties": {},
          "required": []
        }
      }
    ],
    "single_tool": [
      {
        "name": "OfficeSoftware.Conferencing.unlockMeeting",
        "description": "Unlock Locked Meeting",
        "parameters": {
          "type": "object",
          "properties": {
            "meeting_id": {
              "type": "string",
              "description": "Conference No."
            },
            "title": {
              "type": "string",
              "description": "Meeting Title:"
            },
            "time": {
              "type": "string",
              "description": "Meeting Date"
            }
          },
          "required": [
            "meeting_id",
            "title",
            "time"
          ]
        }
      }
    ],
    "id": 165
  },
  {
    "messages": [
      {
        "role": "user",
        "content": "Delete meeting notes."
      },
      {
        "role": "function call",
        "content": {
          "name": "OfficeSoftware.Conferencing.deleteMeetingRecord",
          "arguments": {}
        }
      },
      {
        "role": "assistant",
        "content": "Please provide the conference number"
      },
      {
        "role": "user",
        "content": "The conference number is 789012."
      },
      {
        "role": "function call",
        "content": {
          "name": "OfficeSoftware.Conferencing.deleteMeetingRecord",
          "arguments": {
            "meeting_id": "789012"
          }
        }
      },
      {
        "role": "assistant",
        "content": "Please provide a meeting title"
      },
      {
        "role": "user",
        "content": "It was wrong before. Conference No. should be ABCD1234"
      },
      {
        "role": "function call",
        "content": {
          "name": "OfficeSoftware.Conferencing.deleteMeetingRecord",
          "arguments": {
            "meeting_id": "ABCD1234"
          }
        }
      },
      {
        "role": "assistant",
        "content": "Please provide a meeting title"
      },
      {
        "role": "user",
        "content": "Sales Strategy Meeting Discussion"
      },
      {
        "role": "function call",
        "content": {
          "name": "OfficeSoftware.Conferencing.deleteMeetingRecord",
          "arguments": {
            "meeting_id": "ABCD1234",
            "title": "Sales Strategy Meeting"
          }
        }
      }
    ],
    "multiple_tools": [
      {
        "name": "OfficeSoftware.Documents.deleteDocument",
        "description": "Delete the specified document based on the document name",
        "parameters": {
          "type": "object",
          "properties": {
            "document_name": {
              "type": "string",
              "description": "Name of the document to be deleted, required"
            }
          },
          "required": [
            "document_name"
          ]
        }
      },
      {
        "name": "OfficeSoftware.Conferencing.deleteMeetingRecord",
        "description": "Delete the specified meeting minutes",
        "parameters": {
          "type": "object",
          "properties": {
            "meeting_id": {
              "type": "string",
              "description": "Conference No."
            },
            "title": {
              "type": "string",
              "description": "Meeting Title:"
            },
            "time": {
              "type": "string",
              "description": "Meeting Date"
            }
          },
          "required": [
            "meeting_id",
            "title",
            "time"
          ]
        }
      },
      {
        "name": "Photography.PhotoEditing.removePicture",
        "description": "Delete selected photos",
        "parameters": {
          "type": "object",
          "properties": {
            "name_or_path": {
              "type": "string",
              "description": "Photo names or paths, separated by commas"
            }
          },
          "required": [
            "name_or_path"
          ]
        }
      },
      {
        "name": "VideoPlayback.ShortVideos.deleteShortVideo",
        "description": "Delete short video",
        "parameters": {
          "type": "object",
          "properties": {
            "name": {
              "type": "string",
              "description": "Short video name"
            }
          },
          "required": [
            "name"
          ]
        }
      },
      {
        "name": "ConvenientLiving.JobRecruitment.deleteJobPosition",
        "description": "Delete Published Jobs",
        "parameters": {
          "type": "object",
          "properties": {
            "position_name": {
              "type": "string",
              "description": "Job title, required"
            }
          },
          "required": [
            "position_name"
          ]
        }
      }
    ],
    "single_tool": [
      {
        "name": "OfficeSoftware.Conferencing.deleteMeetingRecord",
        "description": "Delete the specified meeting minutes",
        "parameters": {
          "type": "object",
          "properties": {
            "meeting_id": {
              "type": "string",
              "description": "Conference No."
            },
            "title": {
              "type": "string",
              "description": "Meeting Title:"
            },
            "time": {
              "type": "string",
              "description": "Meeting Date"
            }
          },
          "required": [
            "meeting_id",
            "title",
            "time"
          ]
        }
      }
    ],
    "id": 166
  },
  {
    "messages": [
      {
        "role": "user",
        "content": "Please delete the minutes, they are no longer needed."
      },
      {
        "role": "function call",
        "content": {
          "name": "OfficeSoftware.Conferencing.deleteMeetingRecord",
          "arguments": {}
        }
      },
      {
        "role": "assistant",
        "content": "What is the conference number"
      },
      {
        "role": "user",
        "content": "The meeting number is ABCD1234, but please make sure to enter using the correct link."
      },
      {
        "role": "function call",
        "content": {
          "name": "OfficeSoftware.Conferencing.deleteMeetingRecord",
          "arguments": {
            "meeting_id": "ABCD1234"
          }
        }
      },
      {
        "role": "assistant",
        "content": "Please provide a meeting title"
      },
      {
        "role": "user",
        "content": "It was wrong before. Conference No. should be Q2-456789"
      },
      {
        "role": "function call",
        "content": {
          "name": "OfficeSoftware.Conferencing.deleteMeetingRecord",
          "arguments": {
            "meeting_id": "Q2-456789"
          }
        }
      },
      {
        "role": "assistant",
        "content": "Please provide a meeting title"
      },
      {
        "role": "user",
        "content": "Project Kick-off Meeting"
      },
      {
        "role": "function call",
        "content": {
          "name": "OfficeSoftware.Conferencing.deleteMeetingRecord",
          "arguments": {
            "meeting_id": "Q2-456789",
            "title": "Project Kick-off Meeting"
          }
        }
      }
    ],
    "multiple_tools": [
      {
        "name": "SystemTools.SystemSettings.clearSystemRubbish",
        "description": "Clean your phone's memory",
        "parameters": {
          "type": "object",
          "properties": {},
          "required": []
        }
      },
      {
        "name": "OfficeSoftware.Conferencing.deleteMeetingRecord",
        "description": "Delete the specified meeting minutes",
        "parameters": {
          "type": "object",
          "properties": {
            "meeting_id": {
              "type": "string",
              "description": "Conference No."
            },
            "title": {
              "type": "string",
              "description": "Meeting Title:"
            },
            "time": {
              "type": "string",
              "description": "Meeting Date"
            }
          },
          "required": [
            "meeting_id",
            "title",
            "time"
          ]
        }
      },
      {
        "name": "Travel.ItineraryServices.deleteTravelItinerary",
        "description": "Delete travel itinerary",
        "parameters": {
          "type": "object",
          "properties": {
            "destination": {
              "type": "string",
              "description": "Destination"
            }
          },
          "required": [
            "destination"
          ]
        }
      },
      {
        "name": "Health.HealthManagement.deleteDietRecord",
        "description": "Delete dietary records based on type of exercise, etc.",
        "parameters": {
          "type": "object",
          "properties": {
            "food_name": {
              "type": "string",
              "description": "Food Name"
            },
            "meal_type": {
              "type": "string",
              "description": "Meal Type"
            },
            "time": {
              "type": "string",
              "description": "Meal Time"
            }
          },
          "required": [
            "food_name",
            "meal_type",
            "time"
          ]
        }
      },
      {
        "name": "UtilityTools.AlarmClock.deleteAlarm",
        "description": "Delete alarm time",
        "parameters": {
          "type": "object",
          "properties": {
            "clock_time_name": {
              "type": "string",
              "description": "Alarm name, defaults to all alarms"
            },
            "clock_time": {
              "type": "string",
              "description": "Alarm time"
            }
          },
          "required": [
            "clock_time_name",
            "clock_time"
          ]
        }
      }
    ],
    "single_tool": [
      {
        "name": "OfficeSoftware.Conferencing.deleteMeetingRecord",
        "description": "Delete the specified meeting minutes",
        "parameters": {
          "type": "object",
          "properties": {
            "meeting_id": {
              "type": "string",
              "description": "Conference No."
            },
            "title": {
              "type": "string",
              "description": "Meeting Title:"
            },
            "time": {
              "type": "string",
              "description": "Meeting Date"
            }
          },
          "required": [
            "meeting_id",
            "title",
            "time"
          ]
        }
      }
    ],
    "id": 167
  },
  {
    "messages": [
      {
        "role": "user",
        "content": "Generate a meeting share link for me"
      },
      {
        "role": "function call",
        "content": {
          "name": "OfficeSoftware.Conferencing.shareMeetingLink",
          "arguments": {}
        }
      },
      {
        "role": "assistant",
        "content": "Please provide the conference number"
      },
      {
        "role": "user",
        "content": "The meeting number is 112233, but please make sure this is in the correct format."
      },
      {
        "role": "function call",
        "content": {
          "name": "OfficeSoftware.Conferencing.shareMeetingLink",
          "arguments": {
            "meeting_id": "112233"
          }
        }
      },
      {
        "role": "assistant",
        "content": "What's the title of the meeting"
      },
      {
        "role": "user",
        "content": "It was wrong before. Conference No. should be 78910"
      },
      {
        "role": "function call",
        "content": {
          "name": "OfficeSoftware.Conferencing.shareMeetingLink",
          "arguments": {
            "meeting_id": "78910"
          }
        }
      },
      {
        "role": "assistant",
        "content": "What's the title of the meeting"
      },
      {
        "role": "user",
        "content": "Financial Audit Meeting"
      },
      {
        "role": "function call",
        "content": {
          "name": "OfficeSoftware.Conferencing.shareMeetingLink",
          "arguments": {
            "meeting_id": "78910",
            "title": "Financial Audit Meeting"
          }
        }
      }
    ],
    "multiple_tools": [
      {
        "name": "OfficeSoftware.Documents.getDocumentLinks",
        "description": "Get all links in the specified document",
        "parameters": {
          "type": "object",
          "properties": {
            "document_name": {
              "type": "string",
              "description": "To get the linked document name, required"
            }
          },
          "required": [
            "document_name"
          ]
        }
      },
      {
        "name": "OfficeSoftware.Conferencing.shareMeetingLink",
        "description": "Generate share links for specific meetings",
        "parameters": {
          "type": "object",
          "properties": {
            "meeting_id": {
              "type": "string",
              "description": "Conference No."
            },
            "title": {
              "type": "string",
              "description": "Meeting Title:"
            },
            "time": {
              "type": "string",
              "description": "Meeting Date"
            }
          },
          "required": [
            "meeting_id",
            "title",
            "time"
          ]
        }
      },
      {
        "name": "OfficeSoftware.CloudStorage.netdiskGetShareLink",
        "description": "Get a shareable link to a cloud drive document",
        "parameters": {
          "type": "object",
          "properties": {
            "date": {
              "type": "string",
              "description": "Validity period (1 day, 7 days, 30 days, permanent validity is -1)"
            },
            "password": {
              "type": "string",
              "description": "File Password"
            },
            "file_name": {
              "type": "string",
              "description": "Document Name"
            }
          },
          "required": [
            "date",
            "password",
            "file_name"
          ]
        }
      },
      {
        "name": "Finance.Payment.linkPayBankCard",
        "description": "Link your card to your account",
        "parameters": {
          "type": "object",
          "properties": {
            "card_number": {
              "type": "string",
              "description": "Bank Card Number"
            },
            "card_holder_name": {
              "type": "string",
              "description": "Card holder name"
            },
            "bank_name": {
              "type": "string",
              "description": "Bank Name"
            }
          },
          "required": [
            "card_number",
            "card_holder_name",
            "bank_name"
          ]
        }
      },
      {
        "name": "MusicRadio.OnlineMusic.bindSocialPlatforms",
        "description": "Link your account to a social platform",
        "parameters": {
          "type": "object",
          "properties": {
            "platforms": {
              "type": "string",
              "description": "Social platforms to be linked"
            }
          },
          "required": [
            "platforms"
          ]
        }
      }
    ],
    "single_tool": [
      {
        "name": "OfficeSoftware.Conferencing.shareMeetingLink",
        "description": "Generate share links for specific meetings",
        "parameters": {
          "type": "object",
          "properties": {
            "meeting_id": {
              "type": "string",
              "description": "Conference No."
            },
            "title": {
              "type": "string",
              "description": "Meeting Title:"
            },
            "time": {
              "type": "string",
              "description": "Meeting Date"
            }
          },
          "required": [
            "meeting_id",
            "title",
            "time"
          ]
        }
      }
    ],
    "id": 168
  },
  {
    "messages": [
      {
        "role": "user",
        "content": "Add a few participants to the meeting"
      },
      {
        "role": "function call",
        "content": {
          "name": "OfficeSoftware.Conferencing.addParticipants",
          "arguments": {}
        }
      },
      {
        "role": "assistant",
        "content": "What is the conference number"
      },
      {
        "role": "user",
        "content": "The conference number is 789012."
      },
      {
        "role": "function call",
        "content": {
          "name": "OfficeSoftware.Conferencing.addParticipants",
          "arguments": {
            "meeting_id": "789012"
          }
        }
      },
      {
        "role": "assistant",
        "content": "What's the title of the meeting"
      },
      {
        "role": "user",
        "content": "Market Strategy Meeting"
      },
      {
        "role": "function call",
        "content": {
          "name": "OfficeSoftware.Conferencing.addParticipants",
          "arguments": {
            "meeting_id": "789012",
            "title": "Market Strategy Meeting"
          }
        }
      },
      {
        "role": "assistant",
        "content": "What time is the meeting?"
      },
      {
        "role": "user",
        "content": "It was wrong before. Meeting Title: should be •\t<g id=\"5463\">Technical Exchanges.</g>"
      },
      {
        "role": "function call",
        "content": {
          "name": "OfficeSoftware.Conferencing.addParticipants",
          "arguments": {
            "meeting_id": "789012",
            "title": "•\t<g id=\"5463\">Technical Exchanges.</g>"
          }
        }
      },
      {
        "role": "assistant",
        "content": "What time is the meeting?"
      },
      {
        "role": "user",
        "content": "We scheduled a meeting this Friday at 10am."
      },
      {
        "role": "function call",
        "content": {
          "name": "OfficeSoftware.Conferencing.addParticipants",
          "arguments": {
            "meeting_id": "789012",
            "title": "•\t<g id=\"5463\">Technical Exchanges.</g>",
            "time": "This Friday at 10:00 a.m."
          }
        }
      }
    ],
    "multiple_tools": [
      {
        "name": "Photography.VideoRecording.videoAddSpecialEffects",
        "description": "Adding Effects to Filmed Videos",
        "parameters": {
          "type": "object",
          "properties": {
            "open": {
              "type": "boolean",
              "description": "Whether to turn on special effects"
            }
          },
          "required": [
            "open"
          ]
        }
      },
      {
        "name": "UtilityTools.Memo.addUpcoming",
        "description": "Add a to-do",
        "parameters": {
          "type": "object",
          "properties": {
            "upcoming_name": {
              "type": "string",
              "description": "To-do name"
            }
          },
          "required": [
            "upcoming_name"
          ]
        }
      },
      {
        "name": "OfficeSoftware.Conferencing.addParticipants",
        "description": "Add participants to the meeting",
        "parameters": {
          "type": "object",
          "properties": {
            "meeting_id": {
              "type": "string",
              "description": "Conference No."
            },
            "title": {
              "type": "string",
              "description": "Meeting Title:"
            },
            "time": {
              "type": "string",
              "description": "Meeting Date"
            },
            "participant_list": {
              "type": "string",
              "description": "Add People List"
            }
          },
          "required": [
            "meeting_id",
            "title",
            "time",
            "participant_list"
          ]
        }
      },
      {
        "name": "MusicRadio.OnlineMusic.addSongForPlaylist",
        "description": "Add songs to your playlist by songlist name and song title",
        "parameters": {
          "type": "object",
          "properties": {
            "song_name": {
              "type": "string",
              "description": "Song name"
            },
            "playlist_name": {
              "type": "string",
              "description": "Song List Name"
            }
          },
          "required": [
            "song_name",
            "playlist_name"
          ]
        }
      },
      {
        "name": "Education.OnlineClasses.addCourseSelection",
        "description": "Add courses to my opt-in list",
        "parameters": {
          "type": "object",
          "properties": {
            "course_name": {
              "type": "string",
              "description": "Course Title"
            }
          },
          "required": [
            "course_name"
          ]
        }
      }
    ],
    "single_tool": [
      {
        "name": "OfficeSoftware.Conferencing.addParticipants",
        "description": "Add participants to the meeting",
        "parameters": {
          "type": "object",
          "properties": {
            "meeting_id": {
              "type": "string",
              "description": "Conference No."
            },
            "title": {
              "type": "string",
              "description": "Meeting Title:"
            },
            "time": {
              "type": "string",
              "description": "Meeting Date"
            },
            "participant_list": {
              "type": "string",
              "description": "Add People List"
            }
          },
          "required": [
            "meeting_id",
            "title",
            "time",
            "participant_list"
          ]
        }
      }
    ],
    "id": 169
  },
  {
    "messages": [
      {
        "role": "user",
        "content": "Add a few seats to the workshop"
      },
      {
        "role": "function call",
        "content": {
          "name": "OfficeSoftware.Conferencing.addParticipants",
          "arguments": {}
        }
      },
      {
        "role": "assistant",
        "content": "What is the conference number"
      },
      {
        "role": "user",
        "content": "The meeting number is ABCD1234, but please make sure to enter using the correct link."
      },
      {
        "role": "function call",
        "content": {
          "name": "OfficeSoftware.Conferencing.addParticipants",
          "arguments": {
            "meeting_id": "ABCD1234"
          }
        }
      },
      {
        "role": "assistant",
        "content": "What's the title of the meeting"
      },
      {
        "role": "user",
        "content": "Conference on technical communication."
      },
      {
        "role": "function call",
        "content": {
          "name": "OfficeSoftware.Conferencing.addParticipants",
          "arguments": {
            "meeting_id": "ABCD1234",
            "title": "•\t<g id=\"5463\">Technical Exchanges.</g>"
          }
        }
      },
      {
        "role": "assistant",
        "content": "What time is the meeting?"
      },
      {
        "role": "user",
        "content": "It was wrong before. Meeting Title: should be Product Launch Event"
      },
      {
        "role": "function call",
        "content": {
          "name": "OfficeSoftware.Conferencing.addParticipants",
          "arguments": {
            "meeting_id": "ABCD1234",
            "title": "Product Launch Event"
          }
        }
      },
      {
        "role": "assistant",
        "content": "What time is the meeting?"
      },
      {
        "role": "user",
        "content": "The meeting time is 8:00 this evening, right?"
      },
      {
        "role": "function call",
        "content": {
          "name": "OfficeSoftware.Conferencing.addParticipants",
          "arguments": {
            "meeting_id": "ABCD1234",
            "title": "Product Launch Event",
            "time": "8 o'clock tonight"
          }
        }
      }
    ],
    "multiple_tools": [
      {
        "name": "MusicRadio.OnlineMusic.addSongForPlaylist",
        "description": "Add songs to your playlist by songlist name and song title",
        "parameters": {
          "type": "object",
          "properties": {
            "song_name": {
              "type": "string",
              "description": "Song name"
            },
            "playlist_name": {
              "type": "string",
              "description": "Song List Name"
            }
          },
          "required": [
            "song_name",
            "playlist_name"
          ]
        }
      },
      {
        "name": "UtilityTools.Memo.addUpcoming",
        "description": "Add a to-do",
        "parameters": {
          "type": "object",
          "properties": {
            "upcoming_name": {
              "type": "string",
              "description": "To-do name"
            }
          },
          "required": [
            "upcoming_name"
          ]
        }
      },
      {
        "name": "OfficeSoftware.Conferencing.addParticipants",
        "description": "Add participants to the meeting",
        "parameters": {
          "type": "object",
          "properties": {
            "meeting_id": {
              "type": "string",
              "description": "Conference No."
            },
            "title": {
              "type": "string",
              "description": "Meeting Title:"
            },
            "time": {
              "type": "string",
              "description": "Meeting Date"
            },
            "participant_list": {
              "type": "string",
              "description": "Add People List"
            }
          },
          "required": [
            "meeting_id",
            "title",
            "time",
            "participant_list"
          ]
        }
      },
      {
        "name": "MusicRadio.RadioStations.radioAddSongToPlaylist",
        "description": "Add songs to playlist by playlist name and song name",
        "parameters": {
          "type": "object",
          "properties": {
            "song_name": {
              "type": "string",
              "description": "Song name"
            },
            "playlist_name": {
              "type": "string",
              "description": "Playlist Name"
            }
          },
          "required": [
            "song_name",
            "playlist_name"
          ]
        }
      },
      {
        "name": "OnlineShopping.Mall.addCommodityToCart",
        "description": "Add items to cart based on product name",
        "parameters": {
          "type": "object",
          "properties": {
            "goods": {
              "type": "string",
              "description": "Product Name"
            }
          },
          "required": [
            "goods"
          ]
        }
      }
    ],
    "single_tool": [
      {
        "name": "OfficeSoftware.Conferencing.addParticipants",
        "description": "Add participants to the meeting",
        "parameters": {
          "type": "object",
          "properties": {
            "meeting_id": {
              "type": "string",
              "description": "Conference No."
            },
            "title": {
              "type": "string",
              "description": "Meeting Title:"
            },
            "time": {
              "type": "string",
              "description": "Meeting Date"
            },
            "participant_list": {
              "type": "string",
              "description": "Add People List"
            }
          },
          "required": [
            "meeting_id",
            "title",
            "time",
            "participant_list"
          ]
        }
      }
    ],
    "id": 170
  },
  {
    "messages": [
      {
        "role": "user",
        "content": "Kick people out of a meeting"
      },
      {
        "role": "function call",
        "content": {
          "name": "OfficeSoftware.Conferencing.removeParticipants",
          "arguments": {}
        }
      },
      {
        "role": "assistant",
        "content": "What is the conference number"
      },
      {
        "role": "user",
        "content": "The conference number is 789012."
      },
      {
        "role": "function call",
        "content": {
          "name": "OfficeSoftware.Conferencing.removeParticipants",
          "arguments": {
            "meeting_id": "789012"
          }
        }
      },
      {
        "role": "assistant",
        "content": "What's the title of the meeting"
      },
      {
        "role": "user",
        "content": "Financial wrap-up session"
      },
      {
        "role": "function call",
        "content": {
          "name": "OfficeSoftware.Conferencing.removeParticipants",
          "arguments": {
            "meeting_id": "789012",
            "title": "Financial wrap-up session"
          }
        }
      },
      {
        "role": "assistant",
        "content": "What is the meeting time?"
      },
      {
        "role": "user",
        "content": "It was wrong before. Conference No. should be 789"
      },
      {
        "role": "function call",
        "content": {
          "name": "OfficeSoftware.Conferencing.removeParticipants",
          "arguments": {
            "meeting_id": "789",
            "title": "Financial wrap-up session"
          }
        }
      },
      {
        "role": "assistant",
        "content": "What is the meeting time?"
      },
      {
        "role": "user",
        "content": "We scheduled a meeting this Friday at 10am."
      },
      {
        "role": "function call",
        "content": {
          "name": "OfficeSoftware.Conferencing.removeParticipants",
          "arguments": {
            "meeting_id": "789",
            "title": "Financial wrap-up session",
            "time": "This Friday at 10am"
          }
        }
      }
    ],
    "multiple_tools": [
      {
        "name": "OfficeSoftware.CloudStorage.netdiskDeviceManagement",
        "description": "Device Management Logout for Logged In Devices Phones & Phones",
        "parameters": {
          "type": "object",
          "properties": {
            "device_name": {
              "type": "string",
              "description": "Device Name"
            }
          },
          "required": [
            "device_name"
          ]
        }
      },
      {
        "name": "Navigation.TaxiCarRental.issueTaxiInvoice",
        "description": "Invoicing taxi rides",
        "parameters": {
          "type": "object",
          "properties": {
            "time": {
              "type": "string",
              "description": "Order time"
            },
            "destination": {
              "type": "string",
              "description": "Destination"
            }
          },
          "required": [
            "time",
            "destination"
          ]
        }
      },
      {
        "name": "Finance.Banking.redempteFinancialProducts",
        "description": "Redeem purchased wealth management products",
        "parameters": {
          "type": "object",
          "properties": {
            "product": {
              "type": "string",
              "description": "Name of financial product"
            },
            "redempte_amount": {
              "type": "float",
              "description": "Redemption Amount"
            }
          },
          "required": [
            "product",
            "redempte_amount"
          ]
        }
      },
      {
        "name": "OfficeSoftware.Conferencing.removeParticipants",
        "description": "Remove participants from the meeting",
        "parameters": {
          "type": "object",
          "properties": {
            "meeting_id": {
              "type": "string",
              "description": "Conference No."
            },
            "title": {
              "type": "string",
              "description": "Meeting Title:"
            },
            "time": {
              "type": "string",
              "description": "Meeting Date"
            },
            "participant_list": {
              "type": "string",
              "description": "Remove people list"
            }
          },
          "required": [
            "meeting_id",
            "title",
            "time",
            "participant_list"
          ]
        }
      },
      {
        "name": "OnlineShopping.SecondhandTrading.buySecondhandSaleCommodity",
        "description": "Goods purchased",
        "parameters": {
          "type": "object",
          "properties": {
            "search_name": {
              "type": "string",
              "description": "Trade Name/Keywords"
            }
          },
          "required": [
            "search_name"
          ]
        }
      }
    ],
    "single_tool": [
      {
        "name": "OfficeSoftware.Conferencing.removeParticipants",
        "description": "Remove participants from the meeting",
        "parameters": {
          "type": "object",
          "properties": {
            "meeting_id": {
              "type": "string",
              "description": "Conference No."
            },
            "title": {
              "type": "string",
              "description": "Meeting Title:"
            },
            "time": {
              "type": "string",
              "description": "Meeting Date"
            },
            "participant_list": {
              "type": "string",
              "description": "Remove people list"
            }
          },
          "required": [
            "meeting_id",
            "title",
            "time",
            "participant_list"
          ]
        }
      }
    ],
    "id": 171
  },
  {
    "messages": [
      {
        "role": "user",
        "content": "To create a new draft message"
      },
      {
        "role": "function call",
        "content": {
          "name": "OfficeSoftware.Email.createDraftMail",
          "arguments": {}
        }
      },
      {
        "role": "assistant",
        "content": "What's in the email"
      },
      {
        "role": "user",
        "content": "Dear colleagues, we will have a small birthday party at the office this Friday night, I hope you can come and spend a pleasant evening together!"
      },
      {
        "role": "function call",
        "content": {
          "name": "OfficeSoftware.Email.createDraftMail",
          "arguments": {
            "content": "Dear colleagues, we will have a small birthday party at the office this Friday night, I hope you can come and join us."
          }
        }
      },
      {
        "role": "assistant",
        "content": "Please provide a title for the draft box you want to create"
      },
      {
        "role": "user",
        "content": "It was wrong before. Email Content should be This is the first diary of our entrepreneurial journey, documenting our thoughts and plans, and we hope you enjoy it."
      },
      {
        "role": "function call",
        "content": {
          "name": "OfficeSoftware.Email.createDraftMail",
          "arguments": {
            "content": "This is the first diary of our entrepreneurial journey, documenting our thoughts and plans, and we hope you enjoy it."
          }
        }
      },
      {
        "role": "assistant",
        "content": "Please provide a title for the draft box you want to create"
      },
      {
        "role": "user",
        "content": "Birthday Party Invitation Draft"
      },
      {
        "role": "function call",
        "content": {
          "name": "OfficeSoftware.Email.createDraftMail",
          "arguments": {
            "content": "This is the first diary of our entrepreneurial journey, documenting our thoughts and plans, and we hope you enjoy it.",
            "mail_title": "Birthday Party Invitation"
          }
        }
      }
    ],
    "multiple_tools": [
      {
        "name": "SocialCommunication.Community.createCommunityPost",
        "description": "Create a new post in a specific community with keywords",
        "parameters": {
          "type": "object",
          "properties": {
            "community_name": {
              "type": "string",
              "description": "The name of the community where you want to create the post"
            },
            "title": {
              "type": "string",
              "description": "Posts with Title"
            },
            "comment": {
              "type": "string",
              "description": ".Post Content - Divi Machine"
            }
          },
          "required": [
            "community_name",
            "title",
            "comment"
          ]
        }
      },
      {
        "name": "UtilityTools.Weather.setPersonalizedReminder",
        "description": "Set personalized alerts for specific cities and weather conditions",
        "parameters": {
          "type": "object",
          "properties": {
            "location": {
              "type": "string",
              "description": "Location, defaults to local"
            },
            "weather": {
              "type": "string",
              "description": "Weather conditions."
            }
          },
          "required": [
            "location",
            "weather"
          ]
        }
      },
      {
        "name": "OfficeSoftware.Email.createDraftMail",
        "description": "Create draft message",
        "parameters": {
          "type": "object",
          "properties": {
            "mail_title": {
              "type": "string",
              "description": "To create a draft box title"
            },
            "content": {
              "type": "string",
              "description": "Email Content"
            },
            "receivers": {
              "type": "string",
              "description": "Recipient of the email"
            }
          },
          "required": [
            "mail_title",
            "content",
            "receivers"
          ]
        }
      },
      {
        "name": "OfficeSoftware.Email.sendMail",
        "description": "Send a new message",
        "parameters": {
          "type": "object",
          "properties": {
            "title": {
              "type": "string",
              "description": "Email Title"
            },
            "content": {
              "type": "string",
              "description": "Email Content"
            },
            "receivers": {
              "type": "string",
              "description": "Recipient of the email"
            }
          },
          "required": [
            "title",
            "content",
            "receivers"
          ]
        }
      },
      {
        "name": "Health.HealthManagement.createHealthReminder",
        "description": "Create health reminders by reminder content and reminder time",
        "parameters": {
          "type": "object",
          "properties": {
            "content": {
              "type": "string",
              "description": "Alert Content"
            },
            "time": {
              "type": "string",
              "description": "Reminder time"
            }
          },
          "required": [
            "content",
            "time"
          ]
        }
      }
    ],
    "single_tool": [
      {
        "name": "OfficeSoftware.Email.createDraftMail",
        "description": "Create draft message",
        "parameters": {
          "type": "object",
          "properties": {
            "mail_title": {
              "type": "string",
              "description": "To create a draft box title"
            },
            "content": {
              "type": "string",
              "description": "Email Content"
            },
            "receivers": {
              "type": "string",
              "description": "Recipient of the email"
            }
          },
          "required": [
            "mail_title",
            "content",
            "receivers"
          ]
        }
      }
    ],
    "id": 189
  },
  {
    "messages": [
      {
        "role": "user",
        "content": "I need to view my email drafts"
      },
      {
        "role": "function call",
        "content": {
          "name": "OfficeSoftware.Email.openDraftMail",
          "arguments": {}
        }
      },
      {
        "role": "assistant",
        "content": "What's in the email"
      },
      {
        "role": "user",
        "content": "The email is about the meeting scheduled for next Monday. Please check the attachment for details."
      },
      {
        "role": "function call",
        "content": {
          "name": "OfficeSoftware.Email.openDraftMail",
          "arguments": {
            "content": "Please check the attachment for details."
          }
        }
      },
      {
        "role": "assistant",
        "content": "Please provide a title for the draft box to open"
      },
      {
        "role": "user",
        "content": "It was wrong before. Email Content should be Tomorrow's meeting is cance"
      },
      {
        "role": "function call",
        "content": {
          "name": "OfficeSoftware.Email.openDraftMail",
          "arguments": {
            "content": "Tomorrow's meeting is cance"
          }
        }
      },
      {
        "role": "assistant",
        "content": "Please provide a title for the draft box to open"
      },
      {
        "role": "user",
        "content": "Weekly Meeting Minutes"
      },
      {
        "role": "function call",
        "content": {
          "name": "OfficeSoftware.Email.openDraftMail",
          "arguments": {
            "content": "Tomorrow's meeting is cance",
            "mail_title": "Weekly Meeting Minutes"
          }
        }
      }
    ],
    "multiple_tools": [
      {
        "name": "Travel.ItineraryServices.viewTravelItinerary",
        "description": "View a user-created trip by trip name or keyword",
        "parameters": {
          "type": "object",
          "properties": {
            "name": {
              "type": "string",
              "description": "Trip name or keyword"
            }
          },
          "required": [
            "name"
          ]
        }
      },
      {
        "name": "OnlineShopping.SecondhandTrading.searchSecondhandSaleOrders",
        "description": "Search for item orders by keyword, and query all current status orders directly by default",
        "parameters": {
          "type": "object",
          "properties": {
            "goods_order": {
              "type": "string",
              "description": "Product name keywords"
            }
          },
          "required": [
            "goods_order"
          ]
        }
      },
      {
        "name": "Education.OnlineClasses.viewCourseOrders",
        "description": "View a list of my orders (including learning, completed, etc.)",
        "parameters": {
          "type": "object",
          "properties": {
            "course_name": {
              "type": "string",
              "description": "Course Title"
            },
            "time": {
              "type": "string",
              "description": "Purchase time"
            },
            "teacher_name": {
              "type": "string",
              "description": "Educator name:"
            }
          },
          "required": [
            "course_name",
            "time",
            "teacher_name"
          ]
        }
      },
      {
        "name": "OfficeSoftware.Email.openDraftMail",
        "description": "Open message draft",
        "parameters": {
          "type": "object",
          "properties": {
            "mail_title": {
              "type": "string",
              "description": "To open the drafts box title"
            },
            "content": {
              "type": "string",
              "description": "Email Content"
            },
            "receivers": {
              "type": "string",
              "description": "Recipient of the email"
            }
          },
          "required": [
            "mail_title",
            "content",
            "receivers"
          ]
        }
      },
      {
        "name": "OnlineShopping.SecondhandTrading.viewSecondhandSaleLogistics",
        "description": "View shipping information for an order",
        "parameters": {
          "type": "object",
          "properties": {
            "goods_name": {
              "type": "string",
              "description": "Product Name"
            }
          },
          "required": [
            "goods_name"
          ]
        }
      }
    ],
    "single_tool": [
      {
        "name": "OfficeSoftware.Email.openDraftMail",
        "description": "Open message draft",
        "parameters": {
          "type": "object",
          "properties": {
            "mail_title": {
              "type": "string",
              "description": "To open the drafts box title"
            },
            "content": {
              "type": "string",
              "description": "Email Content"
            },
            "receivers": {
              "type": "string",
              "description": "Recipient of the email"
            }
          },
          "required": [
            "mail_title",
            "content",
            "receivers"
          ]
        }
      }
    ],
    "id": 190
  },
  {
    "messages": [
      {
        "role": "user",
        "content": "Help me create a diary of what I ate today"
      },
      {
        "role": "function call",
        "content": {
          "name": "Health.HealthManagement.createDietRecord",
          "arguments": {}
        }
      },
      {
        "role": "assistant",
        "content": "Please provide a food name"
      },
      {
        "role": "user",
        "content": "broiled chicken "
      },
      {
        "role": "function call",
        "content": {
          "name": "Health.HealthManagement.createDietRecord",
          "arguments": {
            "food_name": "broiled chicken "
          }
        }
      },
      {
        "role": "assistant",
        "content": "What is the dining type?"
      },
      {
        "role": "user",
        "content": "It was wrong before. Food Name should be Fruit"
      },
      {
        "role": "function call",
        "content": {
          "name": "Health.HealthManagement.createDietRecord",
          "arguments": {
            "food_name": "Fruit"
          }
        }
      },
      {
        "role": "assistant",
        "content": "What is the dining type?"
      },
      {
        "role": "user",
        "content": "dinner"
      },
      {
        "role": "function call",
        "content": {
          "name": "Health.HealthManagement.createDietRecord",
          "arguments": {
            "food_name": "Fruit",
            "meal_type": "dinner"
          }
        }
      }
    ],
    "multiple_tools": [
      {
        "name": "OfficeSoftware.Conferencing.createMeeting",
        "description": "Create a new meeting",
        "parameters": {
          "type": "object",
          "properties": {
            "title": {
              "type": "string",
              "description": "Meeting Title:"
            },
            "start_time": {
              "type": "string",
              "description": "Conference Start Time"
            },
            "end_time": {
              "type": "string",
              "description": "Meeting end time"
            },
            "location": {
              "type": "string",
              "description": "Meeting Address"
            },
            "participant_list": {
              "type": "string",
              "description": "List of participants in the meeting"
            }
          },
          "required": [
            "title",
            "start_time",
            "end_time",
            "location",
            "participant_list"
          ]
        }
      },
      {
        "name": "Travel.ItineraryServices.createTravelItinerary",
        "description": "Create a personalized travel itinerary",
        "parameters": {
          "type": "object",
          "properties": {
            "destination": {
              "type": "string",
              "description": "destination"
            }
          },
          "required": [
            "destination"
          ]
        }
      },
      {
        "name": "Health.MedicalServices.createPatienMedicalRecord",
        "description": "Create a medical record for a new patient",
        "parameters": {
          "type": "object",
          "properties": {
            "patient_name": {
              "type": "string",
              "description": "Patient Name"
            }
          },
          "required": [
            "patient_name"
          ]
        }
      },
      {
        "name": "Health.HealthManagement.createDietRecord",
        "description": "Create dietary records based on food name, type of meal, etc.",
        "parameters": {
          "type": "object",
          "properties": {
            "food_name": {
              "type": "string",
              "description": "Food Name"
            },
            "meal_type": {
              "type": "string",
              "description": "Types of meals, such as breakfast, lunch, dinner, or add-ons"
            },
            "time": {
              "type": "string",
              "description": "Meal Time"
            }
          },
          "required": [
            "food_name",
            "meal_type",
            "time"
          ]
        }
      },
      {
        "name": "OfficeSoftware.Documents.createDocument",
        "description": "Create a new document",
        "parameters": {
          "type": "object",
          "properties": {
            "document_name": {
              "type": "string",
              "description": "Document name, required"
            }
          },
          "required": [
            "document_name"
          ]
        }
      }
    ],
    "single_tool": [
      {
        "name": "Health.HealthManagement.createDietRecord",
        "description": "Create dietary records based on food name, type of meal, etc.",
        "parameters": {
          "type": "object",
          "properties": {
            "food_name": {
              "type": "string",
              "description": "Food Name"
            },
            "meal_type": {
              "type": "string",
              "description": "Types of meals, such as breakfast, lunch, dinner, or add-ons"
            },
            "time": {
              "type": "string",
              "description": "Meal Time"
            }
          },
          "required": [
            "food_name",
            "meal_type",
            "time"
          ]
        }
      }
    ],
    "id": 191
  },
  {
    "messages": [
      {
        "role": "user",
        "content": "Search Dietary Records"
      },
      {
        "role": "function call",
        "content": {
          "name": "Health.HealthManagement.searchDietRecord",
          "arguments": {}
        }
      },
      {
        "role": "assistant",
        "content": "Please provide a food name"
      },
      {
        "role": "user",
        "content": "Milk"
      },
      {
        "role": "function call",
        "content": {
          "name": "Health.HealthManagement.searchDietRecord",
          "arguments": {
            "food_name": "Milk"
          }
        }
      },
      {
        "role": "assistant",
        "content": "What is the dining type e.g. Breakfast Lunch Dinner or Extra Meals"
      },
      {
        "role": "user",
        "content": "Breakfast"
      },
      {
        "role": "function call",
        "content": {
          "name": "Health.HealthManagement.searchDietRecord",
          "arguments": {
            "food_name": "Milk",
            "meal_type": "Breakfast"
          }
        }
      },
      {
        "role": "assistant",
        "content": "When to eat"
      },
      {
        "role": "user",
        "content": "It was wrong before. Food Name should be Tianjin-style jianbing"
      },
      {
        "role": "function call",
        "content": {
          "name": "Health.HealthManagement.searchDietRecord",
          "arguments": {
            "food_name": "Tianjin-style jianbing",
            "meal_type": "Breakfast"
          }
        }
      },
      {
        "role": "assistant",
        "content": "When to eat"
      },
      {
        "role": "user",
        "content": "Last week we usually dined at 7pm."
      },
      {
        "role": "function call",
        "content": {
          "name": "Health.HealthManagement.searchDietRecord",
          "arguments": {
            "food_name": "Tianjin-style jianbing",
            "meal_type": "Breakfast",
            "time": "Last week"
          }
        }
      }
    ],
    "multiple_tools": [
      {
        "name": "OfficeSoftware.Documents.searchDocuments",
        "description": "Search documents by keyword",
        "parameters": {
          "type": "object",
          "properties": {
            "keyword": {
              "type": "string",
              "description": "Search keywords, required"
            }
          },
          "required": [
            "keyword"
          ]
        }
      },
      {
        "name": "VideoPlayback.ShortVideos.searchShortVideo",
        "description": "Search for short videos based on keywords (vlog blogger/video keywords/taxonomy keywords)",
        "parameters": {
          "type": "object",
          "properties": {
            "keyword": {
              "type": "string",
              "description": "Short video blogger name/video keyword search"
            },
            "type": {
              "type": "string",
              "description": "Recommended, Popular, Chase, Film and TV New Journey/Reference bilibili, etc."
            },
            "datetime": {
              "type": "string",
              "description": "Release time: unlimited, within a day, within a week, within half a year"
            },
            "duration": {
              "type": "string",
              "description": "Video time: unlimited, 1 minute, 1--5 minutes, more than 5 minutes"
            },
            "ai_search": {
              "type": "string",
              "description": "Based on search history, viewing history can only be searched"
            }
          },
          "required": [
            "keyword",
            "type",
            "datetime",
            "duration",
            "ai_search"
          ]
        }
      },
      {
        "name": "VideoPlayback.OnlineVideos.searchOnlineVideo",
        "description": "Search online videos, which can be searched based on keywords (director/publisher/video keywords); can be searched based on categories; can be searched based on AI smart search",
        "parameters": {
          "type": "object",
          "properties": {
            "keyword": {
              "type": "array",
              "description": "Director/Publisher/Video Keyword Search"
            },
            "video_type": {
              "type": "string",
              "description": "Video Type Categories, Recommended, Popular, Chase, Film and Television New Journey"
            },
            "ai_search": {
              "type": "string",
              "description": "Based on search history, viewing history can only be turned off by default"
            }
          },
          "required": [
            "keyword",
            "video_type",
            "ai_search"
          ]
        }
      },
      {
        "name": "OfficeSoftware.Conferencing.searchMeetingHistory",
        "description": "Search meeting history by keyword",
        "parameters": {
          "type": "object",
          "properties": {
            "keyword": {
              "type": "string",
              "description": "Search with keywords"
            }
          },
          "required": [
            "keyword"
          ]
        }
      },
      {
        "name": "Health.HealthManagement.searchDietRecord",
        "description": "Search dietary records by food name, type of meal, etc.",
        "parameters": {
          "type": "object",
          "properties": {
            "food_name": {
              "type": "string",
              "description": "Food Name"
            },
            "meal_type": {
              "type": "string",
              "description": "Types of meals, such as breakfast, lunch, dinner, or add-ons"
            },
            "time": {
              "type": "string",
              "description": "Meal Time"
            }
          },
          "required": [
            "food_name",
            "meal_type",
            "time"
          ]
        }
      }
    ],
    "single_tool": [
      {
        "name": "Health.HealthManagement.searchDietRecord",
        "description": "Search dietary records by food name, type of meal, etc.",
        "parameters": {
          "type": "object",
          "properties": {
            "food_name": {
              "type": "string",
              "description": "Food Name"
            },
            "meal_type": {
              "type": "string",
              "description": "Types of meals, such as breakfast, lunch, dinner, or add-ons"
            },
            "time": {
              "type": "string",
              "description": "Meal Time"
            }
          },
          "required": [
            "food_name",
            "meal_type",
            "time"
          ]
        }
      }
    ],
    "id": 192
  },
  {
    "messages": [
      {
        "role": "user",
        "content": "Update my dietary records, but haven't decided how."
      },
      {
        "role": "function call",
        "content": {
          "name": "Health.HealthManagement.updateDietRecord",
          "arguments": {}
        }
      },
      {
        "role": "assistant",
        "content": "What is the name of the food"
      },
      {
        "role": "user",
        "content": "The food name I want is sandwich."
      },
      {
        "role": "function call",
        "content": {
          "name": "Health.HealthManagement.updateDietRecord",
          "arguments": {
            "food_name": "Sandwich"
          }
        }
      },
      {
        "role": "assistant",
        "content": "What is the dining type?"
      },
      {
        "role": "user",
        "content": "Breakfast"
      },
      {
        "role": "function call",
        "content": {
          "name": "Health.HealthManagement.updateDietRecord",
          "arguments": {
            "food_name": "Sandwich",
            "meal_type": "Breakfast"
          }
        }
      },
      {
        "role": "assistant",
        "content": "When to eat"
      },
      {
        "role": "user",
        "content": "It was wrong before. Food Name should be Apple"
      },
      {
        "role": "function call",
        "content": {
          "name": "Health.HealthManagement.updateDietRecord",
          "arguments": {
            "food_name": "Apple",
            "meal_type": "Breakfast"
          }
        }
      },
      {
        "role": "assistant",
        "content": "When to eat"
      },
      {
        "role": "user",
        "content": "I ate breakfast at 7 o'clock this morning."
      },
      {
        "role": "function call",
        "content": {
          "name": "Health.HealthManagement.updateDietRecord",
          "arguments": {
            "food_name": "Apple",
            "meal_type": "Breakfast",
            "time": "This morning"
          }
        }
      }
    ],
    "multiple_tools": [
      {
        "name": "Health.HealthManagement.searchDietRecord",
        "description": "Search dietary records by food name, type of meal, etc.",
        "parameters": {
          "type": "object",
          "properties": {
            "food_name": {
              "type": "string",
              "description": "Food Name"
            },
            "meal_type": {
              "type": "string",
              "description": "Types of meals, such as breakfast, lunch, dinner, or add-ons"
            },
            "time": {
              "type": "string",
              "description": "Meal Time"
            }
          },
          "required": [
            "food_name",
            "meal_type",
            "time"
          ]
        }
      },
      {
        "name": "Travel.HotelServices.getHotelReservationHistory",
        "description": "Get a user's hotel booking history",
        "parameters": {
          "type": "object",
          "properties": {
            "start_date": {
              "type": "string",
              "description": "Start Time "
            },
            "end_date": {
              "type": "string",
              "description": "End Time"
            }
          },
          "required": [
            "start_date",
            "end_date"
          ]
        }
      },
      {
        "name": "Navigation.TrainTickets.viewBookingTrainHistory",
        "description": "View user's past booking history",
        "parameters": {
          "type": "object",
          "properties": {},
          "required": []
        }
      },
      {
        "name": "ConvenientLiving.UtilityPayments.checkPaymentHistory",
        "description": "View payment records for utilities, etc.",
        "parameters": {
          "type": "object",
          "properties": {
            "service_type": {
              "type": "string",
              "description": "Types of paid services, such as utilities, gas, etc."
            },
            "user_name": {
              "type": "string",
              "description": "User Name"
            }
          },
          "required": [
            "service_type",
            "user_name"
          ]
        }
      },
      {
        "name": "Health.HealthManagement.updateDietRecord",
        "description": "Changing dietary records based on updated conditions",
        "parameters": {
          "type": "object",
          "properties": {
            "food_name": {
              "type": "string",
              "description": "Food Name"
            },
            "meal_type": {
              "type": "string",
              "description": "Types of meals, such as breakfast, lunch, dinner, or add-ons"
            },
            "time": {
              "type": "string",
              "description": "Meal Time"
            },
            "update_content": {
              "type": "string",
              "description": "Updates, such as changes to food names, meal types, meal times, etc."
            }
          },
          "required": [
            "food_name",
            "meal_type",
            "time",
            "update_content"
          ]
        }
      }
    ],
    "single_tool": [
      {
        "name": "Health.HealthManagement.updateDietRecord",
        "description": "Changing dietary records based on updated conditions",
        "parameters": {
          "type": "object",
          "properties": {
            "food_name": {
              "type": "string",
              "description": "Food Name"
            },
            "meal_type": {
              "type": "string",
              "description": "Types of meals, such as breakfast, lunch, dinner, or add-ons"
            },
            "time": {
              "type": "string",
              "description": "Meal Time"
            },
            "update_content": {
              "type": "string",
              "description": "Updates, such as changes to food names, meal types, meal times, etc."
            }
          },
          "required": [
            "food_name",
            "meal_type",
            "time",
            "update_content"
          ]
        }
      }
    ],
    "id": 193
  },
  {
    "messages": [
      {
        "role": "user",
        "content": "I need to delete my dietary records, but there is no specific type, can you help me?"
      },
      {
        "role": "function call",
        "content": {
          "name": "Health.HealthManagement.deleteDietRecord",
          "arguments": {}
        }
      },
      {
        "role": "assistant",
        "content": "Please provide the name of the food item on the dietary record that needs to be deleted"
      },
      {
        "role": "user",
        "content": "Sandwich"
      },
      {
        "role": "function call",
        "content": {
          "name": "Health.HealthManagement.deleteDietRecord",
          "arguments": {
            "food_name": "Sandwich"
          }
        }
      },
      {
        "role": "assistant",
        "content": "Please provide a dining type"
      },
      {
        "role": "user",
        "content": "It was wrong before. Food Name should be beef noodles"
      },
      {
        "role": "function call",
        "content": {
          "name": "Health.HealthManagement.deleteDietRecord",
          "arguments": {
            "food_name": "beef noodles"
          }
        }
      },
      {
        "role": "assistant",
        "content": "Please provide a dining type"
      },
      {
        "role": "user",
        "content": "Breakfast"
      },
      {
        "role": "function call",
        "content": {
          "name": "Health.HealthManagement.deleteDietRecord",
          "arguments": {
            "food_name": "beef noodles",
            "meal_type": "Breakfast"
          }
        }
      }
    ],
    "multiple_tools": [
      {
        "name": "Health.HealthManagement.deleteDietRecord",
        "description": "Delete dietary records based on type of exercise, etc.",
        "parameters": {
          "type": "object",
          "properties": {
            "food_name": {
              "type": "string",
              "description": "Food Name"
            },
            "meal_type": {
              "type": "string",
              "description": "Meal Type"
            },
            "time": {
              "type": "string",
              "description": "Meal Time"
            }
          },
          "required": [
            "food_name",
            "meal_type",
            "time"
          ]
        }
      },
      {
        "name": "Health.Fitness.deleteExerciseRecord",
        "description": "Delete sports records based on sports type, etc.",
        "parameters": {
          "type": "object",
          "properties": {
            "type": {
              "type": "string",
              "description": "Exercises"
            },
            "time": {
              "type": "string",
              "description": "Release Date"
            }
          },
          "required": [
            "type",
            "time"
          ]
        }
      },
      {
        "name": "Health.MedicalServices.deletePatientMedicalRecord",
        "description": "Delete a patient's medical record information based on their name, etc.",
        "parameters": {
          "type": "object",
          "properties": {
            "patient_name": {
              "type": "string",
              "description": "Patient Name"
            }
          },
          "required": [
            "patient_name"
          ]
        }
      },
      {
        "name": "Navigation.TaxiCarRental.deleteTaxiOrders",
        "description": "Delete trip history",
        "parameters": {
          "type": "object",
          "properties": {
            "time": {
              "type": "string",
              "description": "Order time"
            },
            "destination": {
              "type": "string",
              "description": "Destination"
            }
          },
          "required": [
            "time",
            "destination"
          ]
        }
      },
      {
        "name": "UtilityTools.Search.deleteWebHistoryrecord",
        "description": "deleting history; deleting multiple histories based on date",
        "parameters": {
          "type": "object",
          "properties": {
            "announcer": {
              "type": "string",
              "description": "Publisher Name"
            },
            "title": {
              "type": "string",
              "description": "Article title"
            },
            "datetime": {
              "type": "string",
              "description": "browsing time; last day, specific date; default all descending"
            }
          },
          "required": [
            "announcer",
            "title",
            "datetime"
          ]
        }
      }
    ],
    "single_tool": [
      {
        "name": "Health.HealthManagement.deleteDietRecord",
        "description": "Delete dietary records based on type of exercise, etc.",
        "parameters": {
          "type": "object",
          "properties": {
            "food_name": {
              "type": "string",
              "description": "Food Name"
            },
            "meal_type": {
              "type": "string",
              "description": "Meal Type"
            },
            "time": {
              "type": "string",
              "description": "Meal Time"
            }
          },
          "required": [
            "food_name",
            "meal_type",
            "time"
          ]
        }
      }
    ],
    "id": 194
  },
  {
    "messages": [
      {
        "role": "user",
        "content": "Delete dietary records."
      },
      {
        "role": "function call",
        "content": {
          "name": "Health.HealthManagement.deleteDietRecord",
          "arguments": {}
        }
      },
      {
        "role": "assistant",
        "content": "Please provide the name of the food item on the dietary record that needs to be deleted"
      },
      {
        "role": "user",
        "content": "a chocolate cake "
      },
      {
        "role": "function call",
        "content": {
          "name": "Health.HealthManagement.deleteDietRecord",
          "arguments": {
            "food_name": "Chocolate"
          }
        }
      },
      {
        "role": "assistant",
        "content": "Please provide a dining type"
      },
      {
        "role": "user",
        "content": "It was wrong before. Food Name should be beef noodles"
      },
      {
        "role": "function call",
        "content": {
          "name": "Health.HealthManagement.deleteDietRecord",
          "arguments": {
            "food_name": "beef noodles"
          }
        }
      },
      {
        "role": "assistant",
        "content": "Please provide a dining type"
      },
      {
        "role": "user",
        "content": "I would like to know about the recommended options for afternoon tea."
      },
      {
        "role": "function call",
        "content": {
          "name": "Health.HealthManagement.deleteDietRecord",
          "arguments": {
            "food_name": "beef noodles",
            "meal_type": "Afternoon Tea"
          }
        }
      }
    ],
    "multiple_tools": [
      {
        "name": "Health.HealthManagement.deleteDietRecord",
        "description": "Delete dietary records based on type of exercise, etc.",
        "parameters": {
          "type": "object",
          "properties": {
            "food_name": {
              "type": "string",
              "description": "Food Name"
            },
            "meal_type": {
              "type": "string",
              "description": "Meal Type"
            },
            "time": {
              "type": "string",
              "description": "Meal Time"
            }
          },
          "required": [
            "food_name",
            "meal_type",
            "time"
          ]
        }
      },
      {
        "name": "Health.Fitness.deleteExerciseRecord",
        "description": "Delete sports records based on sports type, etc.",
        "parameters": {
          "type": "object",
          "properties": {
            "type": {
              "type": "string",
              "description": "Exercises"
            },
            "time": {
              "type": "string",
              "description": "Release Date"
            }
          },
          "required": [
            "type",
            "time"
          ]
        }
      },
      {
        "name": "UtilityTools.AlarmClock.deleteAlarm",
        "description": "Delete alarm time",
        "parameters": {
          "type": "object",
          "properties": {
            "clock_time_name": {
              "type": "string",
              "description": "Alarm name, defaults to all alarms"
            },
            "clock_time": {
              "type": "string",
              "description": "Alarm time"
            }
          },
          "required": [
            "clock_time_name",
            "clock_time"
          ]
        }
      },
      {
        "name": "MusicRadio.Karaoke.removeRecord",
        "description": "Delete recordings with specified song names",
        "parameters": {
          "type": "object",
          "properties": {
            "name": {
              "type": "string",
              "description": "Song Name"
            }
          },
          "required": [
            "name"
          ]
        }
      },
      {
        "name": "OfficeSoftware.Conferencing.deleteMeetingRecord",
        "description": "Delete the specified meeting minutes",
        "parameters": {
          "type": "object",
          "properties": {
            "meeting_id": {
              "type": "string",
              "description": "Conference No."
            },
            "title": {
              "type": "string",
              "description": "Meeting Title:"
            },
            "time": {
              "type": "string",
              "description": "Meeting Date"
            }
          },
          "required": [
            "meeting_id",
            "title",
            "time"
          ]
        }
      }
    ],
    "single_tool": [
      {
        "name": "Health.HealthManagement.deleteDietRecord",
        "description": "Delete dietary records based on type of exercise, etc.",
        "parameters": {
          "type": "object",
          "properties": {
            "food_name": {
              "type": "string",
              "description": "Food Name"
            },
            "meal_type": {
              "type": "string",
              "description": "Meal Type"
            },
            "time": {
              "type": "string",
              "description": "Meal Time"
            }
          },
          "required": [
            "food_name",
            "meal_type",
            "time"
          ]
        }
      }
    ],
    "id": 195
  },
  {
    "messages": [
      {
        "role": "user",
        "content": "I need to update my user profile with basic information like height, weight and age"
      },
      {
        "role": "function call",
        "content": {
          "name": "Health.HealthManagement.updateProfile",
          "arguments": {}
        }
      },
      {
        "role": "assistant",
        "content": "How many centimeters tall are you?"
      },
      {
        "role": "user",
        "content": "My height is 172cm."
      },
      {
        "role": "function call",
        "content": {
          "name": "Health.HealthManagement.updateProfile",
          "arguments": {
            "height": 172
          }
        }
      },
      {
        "role": "assistant",
        "content": "How many kilograms do you weigh? How old are you?"
      },
      {
        "role": "user",
        "content": "I weigh 68 kg and am 30 years old."
      },
      {
        "role": "function call",
        "content": {
          "name": "Health.HealthManagement.updateProfile",
          "arguments": {
            "height": 172,
            "weight": 68
          }
        }
      },
      {
        "role": "assistant",
        "content": "What is your age"
      },
      {
        "role": "user",
        "content": "It was wrong before. Weight (kg) should be 65"
      },
      {
        "role": "function call",
        "content": {
          "name": "Health.HealthManagement.updateProfile",
          "arguments": {
            "height": 172,
            "weight": 65
          }
        }
      },
      {
        "role": "assistant",
        "content": "What is your age"
      },
      {
        "role": "user",
        "content": "I am 29 years old."
      },
      {
        "role": "function call",
        "content": {
          "name": "Health.HealthManagement.updateProfile",
          "arguments": {
            "height": 172,
            "weight": 65,
            "age": 29
          }
        }
      }
    ],
    "multiple_tools": [
      {
        "name": "Finance.Payment.updatePayUserInfo",
        "description": "Update account user information",
        "parameters": {
          "type": "object",
          "properties": {
            "user_name": {
              "type": "string",
              "description": "username"
            },
            "phone": {
              "type": "string",
              "description": "User's phone number"
            },
            "address": {
              "type": "string",
              "description": "User Address"
            }
          },
          "required": [
            "user_name",
            "phone",
            "address"
          ]
        }
      },
      {
        "name": "SystemTools.SystemSettings.modifyuserAccounts",
        "description": "Modify the current user's information",
        "parameters": {
          "type": "object",
          "properties": {
            "phone_number": {
              "type": "string",
              "description": "Phone No."
            },
            "nickname": {
              "type": "string",
              "description": "Nickname"
            }
          },
          "required": [
            "phone_number",
            "nickname"
          ]
        }
      },
      {
        "name": "Health.HealthManagement.updateProfile",
        "description": "Update user profile based on height, weight, age, etc.",
        "parameters": {
          "type": "object",
          "properties": {
            "height": {
              "type": "float",
              "description": "Height (in cm)"
            },
            "weight": {
              "type": "float",
              "description": "Weight (kg)"
            },
            "age": {
              "type": "float",
              "description": "Age"
            }
          },
          "required": [
            "height",
            "weight",
            "age"
          ]
        }
      },
      {
        "name": "SocialCommunication.Calling.modifyContact",
        "description": "Modify the information for the specified contact",
        "parameters": {
          "type": "object",
          "properties": {
            "contact_name": {
              "type": "string",
              "description": "Contact name to modify"
            },
            "new_contact_name": {
              "type": "string",
              "description": "New contact name (optional)"
            },
            "new_phone_number": {
              "type": "string",
              "description": "New contact phone number (optional)"
            },
            "phone_number": {
              "type": "string",
              "description": "Contact phone number to modify"
            }
          },
          "required": [
            "contact_name",
            "new_contact_name",
            "new_phone_number",
            "phone_number"
          ]
        }
      },
      {
        "name": "SocialCommunication.SocialMedia.updateMediumInfo",
        "description": "Edit profile information",
        "parameters": {
          "type": "object",
          "properties": {
            "medium_name": {
              "type": "string",
              "description": "Media name"
            },
            "new_nickname": {
              "type": "string",
              "description": "Updated nickname"
            }
          },
          "required": [
            "medium_name",
            "new_nickname"
          ]
        }
      }
    ],
    "single_tool": [
      {
        "name": "Health.HealthManagement.updateProfile",
        "description": "Update user profile based on height, weight, age, etc.",
        "parameters": {
          "type": "object",
          "properties": {
            "height": {
              "type": "float",
              "description": "Height (in cm)"
            },
            "weight": {
              "type": "float",
              "description": "Weight (kg)"
            },
            "age": {
              "type": "float",
              "description": "Age"
            }
          },
          "required": [
            "height",
            "weight",
            "age"
          ]
        }
      }
    ],
    "id": 197
  },
  {
    "messages": [
      {
        "role": "user",
        "content": "Help me keep track of my exercise today"
      },
      {
        "role": "function call",
        "content": {
          "name": "Health.Fitness.createExerciseRecord",
          "arguments": {}
        }
      },
      {
        "role": "assistant",
        "content": "What is the duration of the exercise?"
      },
      {
        "role": "user",
        "content": "I usually exercise for 30 minutes."
      },
      {
        "role": "function call",
        "content": {
          "name": "Health.Fitness.createExerciseRecord",
          "arguments": {
            "duration": "30minutes"
          }
        }
      },
      {
        "role": "assistant",
        "content": "What is the type of exercise?"
      },
      {
        "role": "user",
        "content": "It was wrong before. Motion Duration should be 1 hour 45 minutes"
      },
      {
        "role": "function call",
        "content": {
          "name": "Health.Fitness.createExerciseRecord",
          "arguments": {
            "duration": "1 hour 45 minutes"
          }
        }
      },
      {
        "role": "assistant",
        "content": "What is the type of exercise?"
      },
      {
        "role": "user",
        "content": "My favorite type of exercise is jogging, which makes me feel relaxed and happy."
      },
      {
        "role": "function call",
        "content": {
          "name": "Health.Fitness.createExerciseRecord",
          "arguments": {
            "duration": "1 hour 45 minutes",
            "type": "Jogging"
          }
        }
      }
    ],
    "multiple_tools": [
      {
        "name": "MusicRadio.Karaoke.manageAccount",
        "description": "Manage your account by following the steps in Account Management",
        "parameters": {
          "type": "object",
          "properties": {
            "action": {
              "type": "string",
              "description": "Account management actions"
            }
          },
          "required": [
            "action"
          ]
        }
      },
      {
        "name": "Health.Fitness.createExerciseRecord",
        "description": "Create exercise records based on type of exercise, duration of exercise, etc.",
        "parameters": {
          "type": "object",
          "properties": {
            "type": {
              "type": "string",
              "description": "Exercises"
            },
            "duration": {
              "type": "string",
              "description": "Motion Duration"
            }
          },
          "required": [
            "type",
            "duration"
          ]
        }
      },
      {
        "name": "ConvenientLiving.AutoLife.followCarModels",
        "description": "Keep an eye on the car models you're interested in so you can stay up to date.",
        "parameters": {
          "type": "object",
          "properties": {
            "brands": {
              "type": "string",
              "description": "Car Brand"
            }
          },
          "required": [
            "brands"
          ]
        }
      },
      {
        "name": "Education.ChildrenEducation.getChildLearningProgress",
        "description": "Get your child's progress",
        "parameters": {
          "type": "object",
          "properties": {},
          "required": []
        }
      },
      {
        "name": "Navigation.TaxiCarRental.issueTaxiInvoice",
        "description": "Invoicing taxi rides",
        "parameters": {
          "type": "object",
          "properties": {
            "time": {
              "type": "string",
              "description": "Order time"
            },
            "destination": {
              "type": "string",
              "description": "Destination"
            }
          },
          "required": [
            "time",
            "destination"
          ]
        }
      }
    ],
    "single_tool": [
      {
        "name": "Health.Fitness.createExerciseRecord",
        "description": "Create exercise records based on type of exercise, duration of exercise, etc.",
        "parameters": {
          "type": "object",
          "properties": {
            "type": {
              "type": "string",
              "description": "Exercises"
            },
            "duration": {
              "type": "string",
              "description": "Motion Duration"
            }
          },
          "required": [
            "type",
            "duration"
          ]
        }
      }
    ],
    "id": 204
  },
  {
    "messages": [
      {
        "role": "user",
        "content": "Set a fitness reminder"
      },
      {
        "role": "function call",
        "content": {
          "name": "Health.Fitness.setExerciseReminder",
          "arguments": {}
        }
      },
      {
        "role": "assistant",
        "content": "How many reminders per week"
      },
      {
        "role": "user",
        "content": "<g id=\"Bold\">Qd,</g>"
      },
      {
        "role": "function call",
        "content": {
          "name": "Health.Fitness.setExerciseReminder",
          "arguments": {
            "frequency": "Daily"
          }
        }
      },
      {
        "role": "assistant",
        "content": "When are you reminded?"
      },
      {
        "role": "user",
        "content": "It was wrong before. Reminder Repetition should be #man.days"
      },
      {
        "role": "function call",
        "content": {
          "name": "Health.Fitness.setExerciseReminder",
          "arguments": {
            "frequency": "#man.days"
          }
        }
      },
      {
        "role": "assistant",
        "content": "When are you reminded?"
      },
      {
        "role": "user",
        "content": "The reminder time is 7am, right?"
      },
      {
        "role": "function call",
        "content": {
          "name": "Health.Fitness.setExerciseReminder",
          "arguments": {
            "frequency": "#man.days",
            "time": "07:00"
          }
        }
      }
    ],
    "multiple_tools": [
      {
        "name": "UtilityTools.Memo.setNotesReminders",
        "description": "Set a reminder at a certain time",
        "parameters": {
          "type": "object",
          "properties": {
            "title": {
              "type": "string",
              "description": "Memo Title"
            },
            "time": {
              "type": "string",
              "description": "Reminder time"
            },
            "category": {
              "type": "string",
              "description": "Classify"
            }
          },
          "required": [
            "title",
            "time",
            "category"
          ]
        }
      },
      {
        "name": "Education.OnlineClasses.scheduleCourses",
        "description": "Set course start reminder",
        "parameters": {
          "type": "object",
          "properties": {
            "course_name": {
              "type": "string",
              "description": "Course Title"
            },
            "teacher_name": {
              "type": "string",
              "description": "Educator name:"
            }
          },
          "required": [
            "course_name",
            "teacher_name"
          ]
        }
      },
      {
        "name": "Health.HealthManagement.createHealthReminder",
        "description": "Create health reminders by reminder content and reminder time",
        "parameters": {
          "type": "object",
          "properties": {
            "content": {
              "type": "string",
              "description": "Alert Content"
            },
            "time": {
              "type": "string",
              "description": "Reminder time"
            }
          },
          "required": [
            "content",
            "time"
          ]
        }
      },
      {
        "name": "UtilityTools.Calendar.addCalendarClock",
        "description": "Set a schedule reminder",
        "parameters": {
          "type": "object",
          "properties": {
            "date_name": {
              "type": "string",
              "description": "Visiting program name"
            },
            "start_date": {
              "type": "string",
              "description": "Schedule Reminder Time"
            }
          },
          "required": [
            "date_name",
            "start_date"
          ]
        }
      },
      {
        "name": "Health.Fitness.setExerciseReminder",
        "description": "Set fitness reminders based on time and frequency of reminders, etc.",
        "parameters": {
          "type": "object",
          "properties": {
            "time": {
              "type": "string",
              "description": "Reminder time"
            },
            "frequency": {
              "type": "string",
              "description": "Reminder Repetition"
            }
          },
          "required": [
            "time",
            "frequency"
          ]
        }
      }
    ],
    "single_tool": [
      {
        "name": "Health.Fitness.setExerciseReminder",
        "description": "Set fitness reminders based on time and frequency of reminders, etc.",
        "parameters": {
          "type": "object",
          "properties": {
            "time": {
              "type": "string",
              "description": "Reminder time"
            },
            "frequency": {
              "type": "string",
              "description": "Reminder Repetition"
            }
          },
          "required": [
            "time",
            "frequency"
          ]
        }
      }
    ],
    "id": 205
  },
  {
    "messages": [
      {
        "role": "user",
        "content": "Are there doctors available for appointments?"
      },
      {
        "role": "function call",
        "content": {
          "name": "Health.MedicalServices.getDoctorAvailability",
          "arguments": {}
        }
      },
      {
        "role": "assistant",
        "content": "What is the doctor's name?"
      },
      {
        "role": "user",
        "content": "The doctor's name is Dr. Wang"
      },
      {
        "role": "function call",
        "content": {
          "name": "Health.MedicalServices.getDoctorAvailability",
          "arguments": {
            "doctor_name": "Doctor Wang"
          }
        }
      },
      {
        "role": "assistant",
        "content": "Please provide the name of the hospital"
      },
      {
        "role": "user",
        "content": "It was wrong before. Doctor Name should be Physician Wang"
      },
      {
        "role": "function call",
        "content": {
          "name": "Health.MedicalServices.getDoctorAvailability",
          "arguments": {
            "doctor_name": "Physician Wang"
          }
        }
      },
      {
        "role": "assistant",
        "content": "Please provide the name of the hospital"
      },
      {
        "role": "user",
        "content": "Downtown Hospital"
      },
      {
        "role": "function call",
        "content": {
          "name": "Health.MedicalServices.getDoctorAvailability",
          "arguments": {
            "doctor_name": "Physician Wang",
            "hospital_name": "Downtown Hospital"
          }
        }
      }
    ],
    "multiple_tools": [
      {
        "name": "ConvenientLiving.UtilityPayments.getServiceProviders",
        "description": "Get information on suppliers that provide services such as utilities",
        "parameters": {
          "type": "object",
          "properties": {
            "service_type": {
              "type": "string",
              "description": "Types of paid services, such as utilities, gas, etc."
            },
            "location": {
              "type": "string",
              "description": "Region, default local"
            }
          },
          "required": [
            "service_type",
            "location"
          ]
        }
      },
      {
        "name": "ConvenientLiving.FoodDelivery.searchRestaurantDiscounts",
        "description": "Enter keywords to search for deals",
        "parameters": {
          "type": "object",
          "properties": {
            "keyword": {
              "type": "string",
              "description": "Keywords related to offers"
            }
          },
          "required": [
            "keyword"
          ]
        }
      },
      {
        "name": "Health.MedicalServices.getDoctorAvailability",
        "description": "Check the doctor's available appointment time according to the doctor's name, hospital name and other conditions",
        "parameters": {
          "type": "object",
          "properties": {
            "doctor_name": {
              "type": "string",
              "description": "Doctor Name"
            },
            "hospital_name": {
              "type": "string",
              "description": "Hospital Name"
            }
          },
          "required": [
            "doctor_name",
            "hospital_name"
          ]
        }
      },
      {
        "name": "SocialCommunication.SocialMedia.searchMediumTrends",
        "description": "Find relevant activity in specific media based on keyword searches",
        "parameters": {
          "type": "object",
          "properties": {
            "medium_name": {
              "type": "string",
              "description": "To Find Dynamic Media Names"
            },
            "key_words": {
              "type": "string",
              "description": "Keywords to find"
            }
          },
          "required": [
            "medium_name",
            "key_words"
          ]
        }
      },
      {
        "name": "Finance.Funds.searchFund",
        "description": "Search credits",
        "parameters": {
          "type": "object",
          "properties": {
            "keyword": {
              "type": "string",
              "description": "Fund name, keywords"
            },
            "sector": {
              "type": "string",
              "description": "The name of the fund sector, the default is the main board"
            }
          },
          "required": [
            "keyword",
            "sector"
          ]
        }
      }
    ],
    "single_tool": [
      {
        "name": "Health.MedicalServices.getDoctorAvailability",
        "description": "Check the doctor's available appointment time according to the doctor's name, hospital name and other conditions",
        "parameters": {
          "type": "object",
          "properties": {
            "doctor_name": {
              "type": "string",
              "description": "Doctor Name"
            },
            "hospital_name": {
              "type": "string",
              "description": "Hospital Name"
            }
          },
          "required": [
            "doctor_name",
            "hospital_name"
          ]
        }
      }
    ],
    "id": 207
  },
  {
    "messages": [
      {
        "role": "user",
        "content": "Find out when doctors can make appointments"
      },
      {
        "role": "function call",
        "content": {
          "name": "Health.MedicalServices.getDoctorAvailability",
          "arguments": {}
        }
      },
      {
        "role": "assistant",
        "content": "What is the doctor's name?"
      },
      {
        "role": "user",
        "content": "The doctor's name is Li Si, he is my attending doctor."
      },
      {
        "role": "function call",
        "content": {
          "name": "Health.MedicalServices.getDoctorAvailability",
          "arguments": {
            "doctor_name": "Li Si"
          }
        }
      },
      {
        "role": "assistant",
        "content": "Please provide the name of the hospital"
      },
      {
        "role": "user",
        "content": "It was wrong before. Doctor Name should be Physician Wang"
      },
      {
        "role": "function call",
        "content": {
          "name": "Health.MedicalServices.getDoctorAvailability",
          "arguments": {
            "doctor_name": "Physician Wang"
          }
        }
      },
      {
        "role": "assistant",
        "content": "Please provide the name of the hospital"
      },
      {
        "role": "user",
        "content": "I was in the Peace Hospital."
      },
      {
        "role": "function call",
        "content": {
          "name": "Health.MedicalServices.getDoctorAvailability",
          "arguments": {
            "doctor_name": "Physician Wang",
            "hospital_name": "Peace Hospital"
          }
        }
      }
    ],
    "multiple_tools": [
      {
        "name": "SocialCommunication.SocialMedia.searchMediumTrends",
        "description": "Find relevant activity in specific media based on keyword searches",
        "parameters": {
          "type": "object",
          "properties": {
            "medium_name": {
              "type": "string",
              "description": "To Find Dynamic Media Names"
            },
            "key_words": {
              "type": "string",
              "description": "Keywords to find"
            }
          },
          "required": [
            "medium_name",
            "key_words"
          ]
        }
      },
      {
        "name": "Health.MedicalServices.getDoctorAvailability",
        "description": "Check the doctor's available appointment time according to the doctor's name, hospital name and other conditions",
        "parameters": {
          "type": "object",
          "properties": {
            "doctor_name": {
              "type": "string",
              "description": "Doctor Name"
            },
            "hospital_name": {
              "type": "string",
              "description": "Hospital Name"
            }
          },
          "required": [
            "doctor_name",
            "hospital_name"
          ]
        }
      },
      {
        "name": "OfficeSoftware.Conferencing.viewParticipants",
        "description": "Get a list of participants for the current meeting",
        "parameters": {
          "type": "object",
          "properties": {
            "meeting_id": {
              "type": "string",
              "description": "Conference No."
            },
            "title": {
              "type": "string",
              "description": "Meeting Title:"
            },
            "time": {
              "type": "string",
              "description": "Meeting Date"
            }
          },
          "required": [
            "meeting_id",
            "title",
            "time"
          ]
        }
      },
      {
        "name": "ConvenientLiving.FoodDelivery.searchRestaurantDiscounts",
        "description": "Enter keywords to search for deals",
        "parameters": {
          "type": "object",
          "properties": {
            "keyword": {
              "type": "string",
              "description": "Keywords related to offers"
            }
          },
          "required": [
            "keyword"
          ]
        }
      },
      {
        "name": "Navigation.FlightTickets.searchFlight",
        "description": "Find tickets for specific dates",
        "parameters": {
          "type": "object",
          "properties": {
            "date": {
              "type": "string",
              "description": "Trip start time"
            },
            "departure": {
              "type": "string",
              "description": "Origination"
            },
            "destination": {
              "type": "string",
              "description": "Reach ground"
            },
            "type": {
              "type": "string",
              "description": "One-way, round-trip, multi-trip"
            },
            "site_type": {
              "type": "string",
              "description": "Economy, Business"
            }
          },
          "required": [
            "date",
            "departure",
            "destination",
            "type",
            "site_type"
          ]
        }
      }
    ],
    "single_tool": [
      {
        "name": "Health.MedicalServices.getDoctorAvailability",
        "description": "Check the doctor's available appointment time according to the doctor's name, hospital name and other conditions",
        "parameters": {
          "type": "object",
          "properties": {
            "doctor_name": {
              "type": "string",
              "description": "Doctor Name"
            },
            "hospital_name": {
              "type": "string",
              "description": "Hospital Name"
            }
          },
          "required": [
            "doctor_name",
            "hospital_name"
          ]
        }
      }
    ],
    "id": 208
  },
  {
    "messages": [
      {
        "role": "user",
        "content": "Rate my last visit to the hospital"
      },
      {
        "role": "function call",
        "content": {
          "name": "Health.MedicalServices.evaluateHospitals",
          "arguments": {}
        }
      },
      {
        "role": "assistant",
        "content": "Please provide the name of the hospital"
      },
      {
        "role": "user",
        "content": "Sunshine Children's Hospital"
      },
      {
        "role": "function call",
        "content": {
          "name": "Health.MedicalServices.evaluateHospitals",
          "arguments": {
            "hospital_name": "Sunshine Children's Hospital"
          }
        }
      },
      {
        "role": "assistant",
        "content": "Please provide the date of your visit"
      },
      {
        "role": "user",
        "content": "It was wrong before. Hospital Name should be Peace Hospital"
      },
      {
        "role": "function call",
        "content": {
          "name": "Health.MedicalServices.evaluateHospitals",
          "arguments": {
            "hospital_name": "Peace Hospital"
          }
        }
      },
      {
        "role": "assistant",
        "content": "Please provide the date of your visit"
      },
      {
        "role": "user",
        "content": "My visit date is April 2nd."
      },
      {
        "role": "function call",
        "content": {
          "name": "Health.MedicalServices.evaluateHospitals",
          "arguments": {
            "hospital_name": "Peace Hospital",
            "visit_date": "April 2"
          }
        }
      }
    ],
    "multiple_tools": [
      {
        "name": "Health.MedicalServices.evaluateHospitals",
        "description": "Evaluate based on hospital name and visit date",
        "parameters": {
          "type": "object",
          "properties": {
            "hospital_name": {
              "type": "string",
              "description": "Hospital Name"
            },
            "visit_date": {
              "type": "string",
              "description": "Date of Visit :"
            },
            "content": {
              "type": "string",
              "description": "Review Content"
            }
          },
          "required": [
            "hospital_name",
            "visit_date",
            "content"
          ]
        }
      },
      {
        "name": "Health.MedicalServices.getNearbyHospitals",
        "description": "Find a hospital near your location",
        "parameters": {
          "type": "object",
          "properties": {},
          "required": []
        }
      },
      {
        "name": "MusicRadio.RadioStations.radioCollectRadio",
        "description": "Collect radio stations by station name",
        "parameters": {
          "type": "object",
          "properties": {
            "name": {
              "type": "string",
              "description": "Radio Name"
            }
          },
          "required": [
            "name"
          ]
        }
      },
      {
        "name": "OnlineShopping.ExpressDelivery.searchExpressPoints",
        "description": "Query logistics outlets according to designated locations",
        "parameters": {
          "type": "object",
          "properties": {
            "location": {
              "type": "string",
              "description": "Location"
            }
          },
          "required": [
            "location"
          ]
        }
      },
      {
        "name": "ConvenientLiving.BuyingRentingHomes.favoriteHouse",
        "description": "Collect homes of interest",
        "parameters": {
          "type": "object",
          "properties": {
            "house_name": {
              "type": "string",
              "description": "Property name"
            }
          },
          "required": [
            "house_name"
          ]
        }
      }
    ],
    "single_tool": [
      {
        "name": "Health.MedicalServices.evaluateHospitals",
        "description": "Evaluate based on hospital name and visit date",
        "parameters": {
          "type": "object",
          "properties": {
            "hospital_name": {
              "type": "string",
              "description": "Hospital Name"
            },
            "visit_date": {
              "type": "string",
              "description": "Date of Visit :"
            },
            "content": {
              "type": "string",
              "description": "Review Content"
            }
          },
          "required": [
            "hospital_name",
            "visit_date",
            "content"
          ]
        }
      }
    ],
    "id": 218
  },
  {
    "messages": [
      {
        "role": "user",
        "content": "Looking for a doctor"
      },
      {
        "role": "function call",
        "content": {
          "name": "Health.MedicalServices.searchDoctors",
          "arguments": {}
        }
      },
      {
        "role": "assistant",
        "content": "Please provide the name of the hospital"
      },
      {
        "role": "user",
        "content": "I'm at Tongji Hospital and need some help."
      },
      {
        "role": "function call",
        "content": {
          "name": "Health.MedicalServices.searchDoctors",
          "arguments": {
            "hospital_name": "Tongji Hospital"
          }
        }
      },
      {
        "role": "assistant",
        "content": "What department and region do you need to search for a doctor in?"
      },
      {
        "role": "user",
        "content": "It was wrong before. Hospital Name should be Institute of Pediatrics"
      },
      {
        "role": "function call",
        "content": {
          "name": "Health.MedicalServices.searchDoctors",
          "arguments": {
            "hospital_name": "Institute of Pediatrics"
          }
        }
      },
      {
        "role": "assistant",
        "content": "What department and region do you need to search for a doctor in?"
      },
      {
        "role": "user",
        "content": "I need to see a neurologist in the Beijing area."
      },
      {
        "role": "function call",
        "content": {
          "name": "Health.MedicalServices.searchDoctors",
          "arguments": {
            "hospital_name": "Institute of Pediatrics",
            "department": "Neurology"
          }
        }
      }
    ],
    "multiple_tools": [
      {
        "name": "Health.MedicalServices.rateDoctor",
        "description": "Evaluate visiting physicians",
        "parameters": {
          "type": "object",
          "properties": {
            "hospital_name": {
              "type": "string",
              "description": "Hospital Name"
            },
            "department": {
              "type": "string",
              "description": "Department"
            },
            "content": {
              "type": "string",
              "description": "Review Content"
            },
            "doctor_name": {
              "type": "string",
              "description": "Doctor Name"
            }
          },
          "required": [
            "hospital_name",
            "department",
            "content",
            "doctor_name"
          ]
        }
      },
      {
        "name": "Health.Fitness.searchFitnessCoaches",
        "description": "Search for the right fitness trainer by criteria",
        "parameters": {
          "type": "object",
          "properties": {
            "keyword": {
              "type": "string",
              "description": "Keywords such as name, area of expertise, etc."
            }
          },
          "required": [
            "keyword"
          ]
        }
      },
      {
        "name": "ConvenientLiving.AutoLife.findCarNearbyDealers",
        "description": "Find a car dealership near you.",
        "parameters": {
          "type": "object",
          "properties": {},
          "required": []
        }
      },
      {
        "name": "Health.MedicalServices.searchDoctors",
        "description": "Search doctors by department, region, and more",
        "parameters": {
          "type": "object",
          "properties": {
            "hospital_name": {
              "type": "string",
              "description": "Hospital Name"
            },
            "department": {
              "type": "string",
              "description": "Department"
            },
            "location": {
              "type": "string",
              "description": "Area"
            }
          },
          "required": [
            "hospital_name",
            "department",
            "location"
          ]
        }
      },
      {
        "name": "SocialCommunication.SocialMedia.searchMediumFriend",
        "description": "Search for friends based on keywords in specific media",
        "parameters": {
          "type": "object",
          "properties": {
            "medium_name": {
              "type": "string",
              "description": "Media name"
            },
            "keyword": {
              "type": "string",
              "description": "Search for a friend's keyword, required"
            }
          },
          "required": [
            "medium_name",
            "keyword"
          ]
        }
      }
    ],
    "single_tool": [
      {
        "name": "Health.MedicalServices.searchDoctors",
        "description": "Search doctors by department, region, and more",
        "parameters": {
          "type": "object",
          "properties": {
            "hospital_name": {
              "type": "string",
              "description": "Hospital Name"
            },
            "department": {
              "type": "string",
              "description": "Department"
            },
            "location": {
              "type": "string",
              "description": "Area"
            }
          },
          "required": [
            "hospital_name",
            "department",
            "location"
          ]
        }
      }
    ],
    "id": 219
  },
  {
    "messages": [
      {
        "role": "user",
        "content": "Search Doctor"
      },
      {
        "role": "function call",
        "content": {
          "name": "Health.MedicalServices.searchDoctors",
          "arguments": {}
        }
      },
      {
        "role": "assistant",
        "content": "Which hospital do you need to consult for doctor information?"
      },
      {
        "role": "user",
        "content": "I would like to inquire about the doctor information of East China Hospital."
      },
      {
        "role": "function call",
        "content": {
          "name": "Health.MedicalServices.searchDoctors",
          "arguments": {
            "hospital_name": "East China Hospital"
          }
        }
      },
      {
        "role": "assistant",
        "content": "What department and region do you need to search for a doctor in?"
      },
      {
        "role": "user",
        "content": "It was wrong before. Hospital Name should be Institute of Pediatrics"
      },
      {
        "role": "function call",
        "content": {
          "name": "Health.MedicalServices.searchDoctors",
          "arguments": {
            "hospital_name": "Institute of Pediatrics"
          }
        }
      },
      {
        "role": "assistant",
        "content": "What department and region do you need to search for a doctor in?"
      },
      {
        "role": "user",
        "content": "I need to see a gastroenterologist in Beijing."
      },
      {
        "role": "function call",
        "content": {
          "name": "Health.MedicalServices.searchDoctors",
          "arguments": {
            "hospital_name": "Institute of Pediatrics",
            "department": "Department of Gastroenterology"
          }
        }
      }
    ],
    "multiple_tools": [
      {
        "name": "SocialCommunication.SocialMedia.searchMediumFriend",
        "description": "Search for friends based on keywords in specific media",
        "parameters": {
          "type": "object",
          "properties": {
            "medium_name": {
              "type": "string",
              "description": "Media name"
            },
            "keyword": {
              "type": "string",
              "description": "Search for a friend's keyword, required"
            }
          },
          "required": [
            "medium_name",
            "keyword"
          ]
        }
      },
      {
        "name": "Health.MedicalServices.searchDoctors",
        "description": "Search doctors by department, region, and more",
        "parameters": {
          "type": "object",
          "properties": {
            "hospital_name": {
              "type": "string",
              "description": "Hospital Name"
            },
            "department": {
              "type": "string",
              "description": "Department"
            },
            "location": {
              "type": "string",
              "description": "Area"
            }
          },
          "required": [
            "hospital_name",
            "department",
            "location"
          ]
        }
      },
      {
        "name": "Health.Fitness.searchFitnessCoaches",
        "description": "Search for the right fitness trainer by criteria",
        "parameters": {
          "type": "object",
          "properties": {
            "keyword": {
              "type": "string",
              "description": "Keywords such as name, area of expertise, etc."
            }
          },
          "required": [
            "keyword"
          ]
        }
      },
      {
        "name": "MusicRadio.RadioStations.radioSearchPlaylist",
        "description": "Search Playlists",
        "parameters": {
          "type": "object",
          "properties": {
            "keyword": {
              "type": "string",
              "description": "category"
            }
          },
          "required": [
            "keyword"
          ]
        }
      },
      {
        "name": "SocialCommunication.InstantMessaging.searchContact",
        "description": "Search contacts by keyword; get a list of contacts",
        "parameters": {
          "type": "object",
          "properties": {
            "key_word": {
              "type": "string",
              "description": "Keywords used to search for contacts"
            }
          },
          "required": [
            "key_word"
          ]
        }
      }
    ],
    "single_tool": [
      {
        "name": "Health.MedicalServices.searchDoctors",
        "description": "Search doctors by department, region, and more",
        "parameters": {
          "type": "object",
          "properties": {
            "hospital_name": {
              "type": "string",
              "description": "Hospital Name"
            },
            "department": {
              "type": "string",
              "description": "Department"
            },
            "location": {
              "type": "string",
              "description": "Area"
            }
          },
          "required": [
            "hospital_name",
            "department",
            "location"
          ]
        }
      }
    ],
    "id": 220
  },
  {
    "messages": [
      {
        "role": "user",
        "content": "Learn more about your doctor"
      },
      {
        "role": "function call",
        "content": {
          "name": "Health.MedicalServices.viewDoctorDetails",
          "arguments": {}
        }
      },
      {
        "role": "assistant",
        "content": "Please provide the name of the hospital"
      },
      {
        "role": "user",
        "content": "I am visiting Changhai Hospital and need some help."
      },
      {
        "role": "function call",
        "content": {
          "name": "Health.MedicalServices.viewDoctorDetails",
          "arguments": {
            "hospital_name": "Changhai Hospital"
          }
        }
      },
      {
        "role": "assistant",
        "content": "Please provide the name of the department where the doctor is located"
      },
      {
        "role": "user",
        "content": "It was wrong before. Hospital Name should be Peking Union Medical College Hospital"
      },
      {
        "role": "function call",
        "content": {
          "name": "Health.MedicalServices.viewDoctorDetails",
          "arguments": {
            "hospital_name": "Peking Union Medical College Hospital"
          }
        }
      },
      {
        "role": "assistant",
        "content": "Please provide the name of the department where the doctor is located"
      },
      {
        "role": "user",
        "content": "Doctors are in gastroenterology."
      },
      {
        "role": "function call",
        "content": {
          "name": "Health.MedicalServices.viewDoctorDetails",
          "arguments": {
            "hospital_name": "Peking Union Medical College Hospital",
            "department": "Department of Gastroenterology"
          }
        }
      },
      {
        "role": "assistant",
        "content": "Please provide the physician's area"
      },
      {
        "role": "user",
        "content": "Doctors practice in Shanghai."
      },
      {
        "role": "function call",
        "content": {
          "name": "Health.MedicalServices.viewDoctorDetails",
          "arguments": {
            "hospital_name": "Peking Union Medical College Hospital",
            "department": "Department of Gastroenterology",
            "location": "Shanghai"
          }
        }
      }
    ],
    "multiple_tools": [
      {
        "name": "OfficeSoftware.Conferencing.changeHost",
        "description": "Change meeting moderator",
        "parameters": {
          "type": "object",
          "properties": {
            "meeting_id": {
              "type": "string",
              "description": "Conference No."
            },
            "title": {
              "type": "string",
              "description": "Meeting Title:"
            },
            "time": {
              "type": "string",
              "description": "Meeting Date"
            },
            "host": {
              "type": "string",
              "description": "Moderator Name"
            }
          },
          "required": [
            "meeting_id",
            "title",
            "time",
            "host"
          ]
        }
      },
      {
        "name": "Health.MedicalServices.viewDoctorDetails",
        "description": "View details for assigned physician",
        "parameters": {
          "type": "object",
          "properties": {
            "hospital_name": {
              "type": "string",
              "description": "Hospital Name"
            },
            "department": {
              "type": "string",
              "description": "Department"
            },
            "location": {
              "type": "string",
              "description": "Area"
            },
            "doctor_name": {
              "type": "string",
              "description": "Doctor Name"
            }
          },
          "required": [
            "hospital_name",
            "department",
            "location",
            "doctor_name"
          ]
        }
      },
      {
        "name": "ConvenientLiving.AutoLife.findCarNearbyDealers",
        "description": "Find a car dealership near you.",
        "parameters": {
          "type": "object",
          "properties": {},
          "required": []
        }
      },
      {
        "name": "UtilityTools.Calendar.alterCalendarschedule",
        "description": "Modify a schedule",
        "parameters": {
          "type": "object",
          "properties": {
            "date_name": {
              "type": "string",
              "description": "Visiting program name"
            },
            "date_name_before": {
              "type": "string",
              "description": "Modified Schedule Name"
            },
            "start_date": {
              "type": "string",
              "description": "Schedule start time"
            },
            "start_date_before": {
              "type": "string",
              "description": "Modified Schedule Start Time"
            }
          },
          "required": [
            "date_name",
            "date_name_before",
            "start_date",
            "start_date_before"
          ]
        }
      },
      {
        "name": "Health.MedicalServices.rateDoctor",
        "description": "Evaluate visiting physicians",
        "parameters": {
          "type": "object",
          "properties": {
            "hospital_name": {
              "type": "string",
              "description": "Hospital Name"
            },
            "department": {
              "type": "string",
              "description": "Department"
            },
            "content": {
              "type": "string",
              "description": "Review Content"
            },
            "doctor_name": {
              "type": "string",
              "description": "Doctor Name"
            }
          },
          "required": [
            "hospital_name",
            "department",
            "content",
            "doctor_name"
          ]
        }
      }
    ],
    "single_tool": [
      {
        "name": "Health.MedicalServices.viewDoctorDetails",
        "description": "View details for assigned physician",
        "parameters": {
          "type": "object",
          "properties": {
            "hospital_name": {
              "type": "string",
              "description": "Hospital Name"
            },
            "department": {
              "type": "string",
              "description": "Department"
            },
            "location": {
              "type": "string",
              "description": "Area"
            },
            "doctor_name": {
              "type": "string",
              "description": "Doctor Name"
            }
          },
          "required": [
            "hospital_name",
            "department",
            "location",
            "doctor_name"
          ]
        }
      }
    ],
    "id": 221
  },
  {
    "messages": [
      {
        "role": "user",
        "content": "Search for a doctor's profile"
      },
      {
        "role": "function call",
        "content": {
          "name": "Health.MedicalServices.viewDoctorDetails",
          "arguments": {}
        }
      },
      {
        "role": "assistant",
        "content": "Please provide the name of the hospital"
      },
      {
        "role": "user",
        "content": "Peking Union Medical College Hospital"
      },
      {
        "role": "function call",
        "content": {
          "name": "Health.MedicalServices.viewDoctorDetails",
          "arguments": {
            "hospital_name": "Peking Union Medical College Hospital"
          }
        }
      },
      {
        "role": "assistant",
        "content": "Please provide the name of the department where the doctor is located"
      },
      {
        "role": "user",
        "content": "CARDIAC SURGERY"
      },
      {
        "role": "function call",
        "content": {
          "name": "Health.MedicalServices.viewDoctorDetails",
          "arguments": {
            "hospital_name": "Peking Union Medical College Hospital",
            "department": "CARDIAC SURGERY"
          }
        }
      },
      {
        "role": "assistant",
        "content": "Please provide the physician's area"
      },
      {
        "role": "user",
        "content": "It was wrong before. Department should be Orthopedics"
      },
      {
        "role": "function call",
        "content": {
          "name": "Health.MedicalServices.viewDoctorDetails",
          "arguments": {
            "hospital_name": "Peking Union Medical College Hospital",
            "department": "Orthopedics"
          }
        }
      },
      {
        "role": "assistant",
        "content": "Please provide the physician's area"
      },
      {
        "role": "user",
        "content": "Doctors practice in Beijing."
      },
      {
        "role": "function call",
        "content": {
          "name": "Health.MedicalServices.viewDoctorDetails",
          "arguments": {
            "hospital_name": "Peking Union Medical College Hospital",
            "department": "Orthopedics",
            "location": "Beijing"
          }
        }
      }
    ],
    "multiple_tools": [
      {
        "name": "SocialCommunication.SocialMedia.viewMediumFriendInfo",
        "description": "View details of selected friends in selected media",
        "parameters": {
          "type": "object",
          "properties": {
            "medium_name": {
              "type": "string",
              "description": "Media name"
            },
            "name": {
              "type": "string",
              "description": "Friend's nickname"
            },
            "account_number": {
              "type": "string",
              "description": "Friend's account"
            }
          },
          "required": [
            "medium_name",
            "name",
            "account_number"
          ]
        }
      },
      {
        "name": "Health.MedicalServices.viewDoctorDetails",
        "description": "View details for assigned physician",
        "parameters": {
          "type": "object",
          "properties": {
            "hospital_name": {
              "type": "string",
              "description": "Hospital Name"
            },
            "department": {
              "type": "string",
              "description": "Department"
            },
            "location": {
              "type": "string",
              "description": "Area"
            },
            "doctor_name": {
              "type": "string",
              "description": "Doctor Name"
            }
          },
          "required": [
            "hospital_name",
            "department",
            "location",
            "doctor_name"
          ]
        }
      },
      {
        "name": "SocialCommunication.Community.getCommunityUserInfo",
        "description": "Get user details for a specific community based on user nickname",
        "parameters": {
          "type": "object",
          "properties": {
            "community_name": {
              "type": "string",
              "description": "The name of the community where you want to get user information"
            },
            "user_nickname": {
              "type": "string",
              "description": "User's nickname"
            }
          },
          "required": [
            "community_name",
            "user_nickname"
          ]
        }
      },
      {
        "name": "Education.OnlineClasses.viewTeacherDetail",
        "description": "View teacher's profile",
        "parameters": {
          "type": "object",
          "properties": {
            "teacher_name": {
              "type": "string",
              "description": "Educator name:"
            }
          },
          "required": [
            "teacher_name"
          ]
        }
      },
      {
        "name": "ConvenientLiving.BuyingRentingHomes.getRealEstateAgencyInfo",
        "description": "Get contact info for a real estate agent",
        "parameters": {
          "type": "object",
          "properties": {
            "house_name": {
              "type": "string",
              "description": "Property name"
            }
          },
          "required": [
            "house_name"
          ]
        }
      }
    ],
    "single_tool": [
      {
        "name": "Health.MedicalServices.viewDoctorDetails",
        "description": "View details for assigned physician",
        "parameters": {
          "type": "object",
          "properties": {
            "hospital_name": {
              "type": "string",
              "description": "Hospital Name"
            },
            "department": {
              "type": "string",
              "description": "Department"
            },
            "location": {
              "type": "string",
              "description": "Area"
            },
            "doctor_name": {
              "type": "string",
              "description": "Doctor Name"
            }
          },
          "required": [
            "hospital_name",
            "department",
            "location",
            "doctor_name"
          ]
        }
      }
    ],
    "id": 222
  },
  {
    "messages": [
      {
        "role": "user",
        "content": "I want to evaluate the doctor I saw last time."
      },
      {
        "role": "function call",
        "content": {
          "name": "Health.MedicalServices.rateDoctor",
          "arguments": {}
        }
      },
      {
        "role": "assistant",
        "content": "What is the name of the hospital you are visiting?"
      },
      {
        "role": "user",
        "content": "I visited Peking Union Medical College Hospital."
      },
      {
        "role": "function call",
        "content": {
          "name": "Health.MedicalServices.rateDoctor",
          "arguments": {
            "hospital_name": "Peking Union Medical College Hospital"
          }
        }
      },
      {
        "role": "assistant",
        "content": "What is the name of the department you visited?"
      },
      {
        "role": "user",
        "content": "I was in cardiac surgery."
      },
      {
        "role": "function call",
        "content": {
          "name": "Health.MedicalServices.rateDoctor",
          "arguments": {
            "hospital_name": "Peking Union Medical College Hospital",
            "department": "CARDIAC SURGERY"
          }
        }
      },
      {
        "role": "assistant",
        "content": "Please provide the content of the review and the name of the doctor"
      },
      {
        "role": "user",
        "content": "It was wrong before. Department should be Department of Cardiology"
      },
      {
        "role": "function call",
        "content": {
          "name": "Health.MedicalServices.rateDoctor",
          "arguments": {
            "hospital_name": "Peking Union Medical College Hospital",
            "department": "Department of Cardiology"
          }
        }
      },
      {
        "role": "assistant",
        "content": "Please provide the content of the review and the name of the doctor"
      },
      {
        "role": "user",
        "content": "Dr. Zhang is a skilled doctor with a gentle attitude. Thank you very much!"
      },
      {
        "role": "function call",
        "content": {
          "name": "Health.MedicalServices.rateDoctor",
          "arguments": {
            "hospital_name": "Peking Union Medical College Hospital",
            "department": "Department of Cardiology",
            "content": "Excellent medical skills, gentle attitude, thank you very much!"
          }
        }
      }
    ],
    "multiple_tools": [
      {
        "name": "Navigation.TaxiCarRental.evaluateTaxiOrder",
        "description": "Rate the driver who completed the trip",
        "parameters": {
          "type": "object",
          "properties": {
            "time": {
              "type": "string",
              "description": "Order time"
            },
            "destination": {
              "type": "string",
              "description": "Destination"
            },
            "rating": {
              "type": "string",
              "description": "Review Score"
            }
          },
          "required": [
            "time",
            "destination",
            "rating"
          ]
        }
      },
      {
        "name": "ConvenientLiving.GovernmentServices.queryEducationalQualificationVerification",
        "description": "Verify the authenticity of your qualifications by querying relevant information about your qualifications",
        "parameters": {
          "type": "object",
          "properties": {
            "graduate_name": {
              "type": "string",
              "description": "Graduate Name"
            },
            "school_name": {
              "type": "string",
              "description": "Graduate School Name"
            }
          },
          "required": [
            "graduate_name",
            "school_name"
          ]
        }
      },
      {
        "name": "UtilityTools.AlarmClock.viewtimer",
        "description": "View assigned timers",
        "parameters": {
          "type": "object",
          "properties": {
            "timer_name": {
              "type": "string",
              "description": "Timer name, empty by default"
            },
            "timer": {
              "type": "string",
              "description": "Timer time"
            }
          },
          "required": [
            "timer_name",
            "timer"
          ]
        }
      },
      {
        "name": "Health.MedicalServices.rateDoctor",
        "description": "Evaluate visiting physicians",
        "parameters": {
          "type": "object",
          "properties": {
            "hospital_name": {
              "type": "string",
              "description": "Hospital Name"
            },
            "department": {
              "type": "string",
              "description": "Department"
            },
            "content": {
              "type": "string",
              "description": "Review Content"
            },
            "doctor_name": {
              "type": "string",
              "description": "Doctor Name"
            }
          },
          "required": [
            "hospital_name",
            "department",
            "content",
            "doctor_name"
          ]
        }
      },
      {
        "name": "Finance.Stocks.getStockPosition",
        "description": "Query the position status of designated stocks",
        "parameters": {
          "type": "object",
          "properties": {
            "stock_code": {
              "type": "string",
              "description": "Ticker"
            },
            "stock_name": {
              "type": "string",
              "description": "Stock Key Name"
            }
          },
          "required": [
            "stock_code",
            "stock_name"
          ]
        }
      }
    ],
    "single_tool": [
      {
        "name": "Health.MedicalServices.rateDoctor",
        "description": "Evaluate visiting physicians",
        "parameters": {
          "type": "object",
          "properties": {
            "hospital_name": {
              "type": "string",
              "description": "Hospital Name"
            },
            "department": {
              "type": "string",
              "description": "Department"
            },
            "content": {
              "type": "string",
              "description": "Review Content"
            },
            "doctor_name": {
              "type": "string",
              "description": "Doctor Name"
            }
          },
          "required": [
            "hospital_name",
            "department",
            "content",
            "doctor_name"
          ]
        }
      }
    ],
    "id": 223
  },
  {
    "messages": [
      {
        "role": "user",
        "content": "Translate Voice"
      },
      {
        "role": "function call",
        "content": {
          "name": "UtilityTools.AIGC.aigcSpeechTranslation",
          "arguments": {}
        }
      },
      {
        "role": "assistant",
        "content": "Please provide a path to the speech file to be translated"
      },
      {
        "role": "user",
        "content": "The path is/audio/files/holiday_greetings.ogg"
      },
      {
        "role": "function call",
        "content": {
          "name": "UtilityTools.AIGC.aigcSpeechTranslation",
          "arguments": {
            "file": "holiday_greetings.ogg"
          }
        }
      },
      {
        "role": "assistant",
        "content": "What is the source language"
      },
      {
        "role": "user",
        "content": "It was wrong before. Speech file to be translated should be birthday_song.mp3"
      },
      {
        "role": "function call",
        "content": {
          "name": "UtilityTools.AIGC.aigcSpeechTranslation",
          "arguments": {
            "file": "birthday_song.mp3"
          }
        }
      },
      {
        "role": "assistant",
        "content": "What is the source language"
      },
      {
        "role": "user",
        "content": "The source language is French."
      },
      {
        "role": "function call",
        "content": {
          "name": "UtilityTools.AIGC.aigcSpeechTranslation",
          "arguments": {
            "file": "birthday_song.mp3",
            "source_lang": "French"
          }
        }
      }
    ],
    "multiple_tools": [
      {
        "name": "UtilityTools.AIGC.aigcSpeechTranslation",
        "description": "Translate speech to corresponding target speech",
        "parameters": {
          "type": "object",
          "properties": {
            "file": {
              "type": "string",
              "description": "Speech file to be translated"
            },
            "source_lang": {
              "type": "string",
              "description": "Source language"
            },
            "target_lang": {
              "type": "string",
              "description": "Target language (s)"
            }
          },
          "required": [
            "file",
            "source_lang",
            "target_lang"
          ]
        }
      },
      {
        "name": "SystemTools.SystemSettings.setSystemLlanguageAndRegion",
        "description": "Set your phone's language and region options",
        "parameters": {
          "type": "object",
          "properties": {
            "language": {
              "type": "string",
              "description": "Select a language, such as Chinese, English"
            },
            "region": {
              "type": "string",
              "description": "Region, e.g. China, US"
            }
          },
          "required": [
            "language",
            "region"
          ]
        }
      },
      {
        "name": "Navigation.MapNavigation.changeNavigationSound",
        "description": "Change navigation sound",
        "parameters": {
          "type": "object",
          "properties": {
            "type": {
              "type": "string",
              "description": "Types of sounds, e.g. male, female, vocal"
            },
            "person": {
              "type": "string",
              "description": "A task or object that mimics sound"
            }
          },
          "required": [
            "type",
            "person"
          ]
        }
      },
      {
        "name": "MusicRadio.Karaoke.setMusicPreferences",
        "description": "Set your preferences by music type, musician, and language",
        "parameters": {
          "type": "object",
          "properties": {
            "genres": {
              "type": "string",
              "description": "Music type"
            }
          },
          "required": [
            "genres"
          ]
        }
      },
      {
        "name": "MusicRadio.OnlineMusic.setMusicPreferences",
        "description": "Set your preferences by music type, musician, and language",
        "parameters": {
          "type": "object",
          "properties": {
            "genres": {
              "type": "string",
              "description": "Music type"
            }
          },
          "required": [
            "genres"
          ]
        }
      }
    ],
    "single_tool": [
      {
        "name": "UtilityTools.AIGC.aigcSpeechTranslation",
        "description": "Translate speech to corresponding target speech",
        "parameters": {
          "type": "object",
          "properties": {
            "file": {
              "type": "string",
              "description": "Speech file to be translated"
            },
            "source_lang": {
              "type": "string",
              "description": "Source language"
            },
            "target_lang": {
              "type": "string",
              "description": "Target language (s)"
            }
          },
          "required": [
            "file",
            "source_lang",
            "target_lang"
          ]
        }
      }
    ],
    "id": 228
  },
  {
    "messages": [
      {
        "role": "user",
        "content": "Do you have voice translation?"
      },
      {
        "role": "function call",
        "content": {
          "name": "UtilityTools.AIGC.aigcSpeechTranslation",
          "arguments": {}
        }
      },
      {
        "role": "assistant",
        "content": "Please provide a path to the speech file to be translated"
      },
      {
        "role": "user",
        "content": "My file path is/music/birthday_song.mp3"
      },
      {
        "role": "function call",
        "content": {
          "name": "UtilityTools.AIGC.aigcSpeechTranslation",
          "arguments": {
            "file": "birthday_song.mp3"
          }
        }
      },
      {
        "role": "assistant",
        "content": "What is the source language"
      },
      {
        "role": "user",
        "content": "It was wrong before. Speech file to be translated should be holiday_greetings.ogg"
      },
      {
        "role": "function call",
        "content": {
          "name": "UtilityTools.AIGC.aigcSpeechTranslation",
          "arguments": {
            "file": "holiday_greetings.ogg"
          }
        }
      },
      {
        "role": "assistant",
        "content": "What is the source language"
      },
      {
        "role": "user",
        "content": "The source language is Chinese."
      },
      {
        "role": "function call",
        "content": {
          "name": "UtilityTools.AIGC.aigcSpeechTranslation",
          "arguments": {
            "file": "holiday_greetings.ogg",
            "source_lang": "Chinese Language"
          }
        }
      }
    ],
    "multiple_tools": [
      {
        "name": "MusicRadio.Karaoke.setMusicPreferences",
        "description": "Set your preferences by music type, musician, and language",
        "parameters": {
          "type": "object",
          "properties": {
            "genres": {
              "type": "string",
              "description": "Music type"
            }
          },
          "required": [
            "genres"
          ]
        }
      },
      {
        "name": "UtilityTools.AIGC.aigcSpeechTranslation",
        "description": "Translate speech to corresponding target speech",
        "parameters": {
          "type": "object",
          "properties": {
            "file": {
              "type": "string",
              "description": "Speech file to be translated"
            },
            "source_lang": {
              "type": "string",
              "description": "Source language"
            },
            "target_lang": {
              "type": "string",
              "description": "Target language (s)"
            }
          },
          "required": [
            "file",
            "source_lang",
            "target_lang"
          ]
        }
      },
      {
        "name": "SystemTools.SystemSettings.setSystemLlanguageAndRegion",
        "description": "Set your phone's language and region options",
        "parameters": {
          "type": "object",
          "properties": {
            "language": {
              "type": "string",
              "description": "Select a language, such as Chinese, English"
            },
            "region": {
              "type": "string",
              "description": "Region, e.g. China, US"
            }
          },
          "required": [
            "language",
            "region"
          ]
        }
      },
      {
        "name": "UtilityTools.AIGC.aigcTranslation",
        "description": "Translate input text to target language",
        "parameters": {
          "type": "object",
          "properties": {
            "text": {
              "type": "string",
              "description": "literal content"
            },
            "source_lang": {
              "type": "string",
              "description": "Source language"
            },
            "target_lang": {
              "type": "string",
              "description": "Target language (s)"
            }
          },
          "required": [
            "text",
            "source_lang",
            "target_lang"
          ]
        }
      },
      {
        "name": "MusicRadio.OnlineMusic.setMusicPreferences",
        "description": "Set your preferences by music type, musician, and language",
        "parameters": {
          "type": "object",
          "properties": {
            "genres": {
              "type": "string",
              "description": "Music type"
            }
          },
          "required": [
            "genres"
          ]
        }
      }
    ],
    "single_tool": [
      {
        "name": "UtilityTools.AIGC.aigcSpeechTranslation",
        "description": "Translate speech to corresponding target speech",
        "parameters": {
          "type": "object",
          "properties": {
            "file": {
              "type": "string",
              "description": "Speech file to be translated"
            },
            "source_lang": {
              "type": "string",
              "description": "Source language"
            },
            "target_lang": {
              "type": "string",
              "description": "Target language (s)"
            }
          },
          "required": [
            "file",
            "source_lang",
            "target_lang"
          ]
        }
      }
    ],
    "id": 229
  },
  {
    "messages": [
      {
        "role": "user",
        "content": "Do you have any weather warnings?"
      },
      {
        "role": "function call",
        "content": {
          "name": "UtilityTools.Weather.getWeatherAlert",
          "arguments": {}
        }
      },
      {
        "role": "assistant",
        "content": "Please provide the location where you would like to get a weather warning If you need a local weather warning, please confirm directly"
      },
      {
        "role": "user",
        "content": "Weather warning information for Shenzhen I need, confirm."
      },
      {
        "role": "function call",
        "content": {
          "name": "UtilityTools.Weather.getWeatherAlert",
          "arguments": {
            "location": "Shenzhen"
          }
        }
      },
      {
        "role": "assistant",
        "content": "How long does it take to get a weather warning?"
      },
      {
        "role": "user",
        "content": "It was wrong before. Location, defaults to local should be Shanghai"
      },
      {
        "role": "function call",
        "content": {
          "name": "UtilityTools.Weather.getWeatherAlert",
          "arguments": {
            "location": "Shanghai"
          }
        }
      },
      {
        "role": "assistant",
        "content": "How long does it take to get a weather warning?"
      },
      {
        "role": "user",
        "content": "Recent weather warnings are all you need."
      },
      {
        "role": "function call",
        "content": {
          "name": "UtilityTools.Weather.getWeatherAlert",
          "arguments": {
            "location": "Shanghai",
            "time": "very soon"
          }
        }
      }
    ],
    "multiple_tools": [
      {
        "name": "Finance.Insurance.purchaseInsurance",
        "description": "Purchase insurance products",
        "parameters": {
          "type": "object",
          "properties": {
            "insurance_name": {
              "type": "string",
              "description": "Insurance Product Name"
            },
            "insurance_type": {
              "type": "string",
              "description": "Types of insurance products, such as life insurance, health insurance, property insurance, car insurance, etc."
            },
            "insurance_benefit": {
              "type": "string",
              "description": "Beneficiary/Protected Property"
            },
            "amount": {
              "type": "float",
              "description": "Coverage Amount"
            },
            "period": {
              "type": "integer",
              "description": "Insurance period, fixed time for some products, units (years)"
            }
          },
          "required": [
            "insurance_name",
            "insurance_type",
            "insurance_benefit",
            "amount",
            "period"
          ]
        }
      },
      {
        "name": "Finance.Funds.getFundRiskLevel",
        "description": "Check the risk level of the designated fund",
        "parameters": {
          "type": "object",
          "properties": {
            "fund_name": {
              "type": "string",
              "description": "Fund name"
            },
            "fund_code": {
              "type": "string",
              "description": "Fund  Code"
            }
          },
          "required": [
            "fund_name",
            "fund_code"
          ]
        }
      },
      {
        "name": "SystemTools.SystemOptimization.scanForSystemVulnerabilities",
        "description": "Detect possible security flaws in your phone's system",
        "parameters": {
          "type": "object",
          "properties": {},
          "required": []
        }
      },
      {
        "name": "Travel.ItineraryServices.getTravelWarnings",
        "description": "Get travel safety warnings for your destination",
        "parameters": {
          "type": "object",
          "properties": {
            "destination": {
              "type": "string",
              "description": "Destination"
            }
          },
          "required": [
            "destination"
          ]
        }
      },
      {
        "name": "UtilityTools.Weather.getWeatherAlert",
        "description": "Get upcoming weather warnings for selected locations",
        "parameters": {
          "type": "object",
          "properties": {
            "location": {
              "type": "string",
              "description": "Location, defaults to local"
            },
            "time": {
              "type": "string",
              "description": "Time range"
            }
          },
          "required": [
            "location",
            "time"
          ]
        }
      }
    ],
    "single_tool": [
      {
        "name": "UtilityTools.Weather.getWeatherAlert",
        "description": "Get upcoming weather warnings for selected locations",
        "parameters": {
          "type": "object",
          "properties": {
            "location": {
              "type": "string",
              "description": "Location, defaults to local"
            },
            "time": {
              "type": "string",
              "description": "Time range"
            }
          },
          "required": [
            "location",
            "time"
          ]
        }
      }
    ],
    "id": 233
  },
  {
    "messages": [
      {
        "role": "user",
        "content": "Weather warning"
      },
      {
        "role": "function call",
        "content": {
          "name": "UtilityTools.Weather.getWeatherAlert",
          "arguments": {}
        }
      },
      {
        "role": "assistant",
        "content": "Please provide the location where you would like to get a weather warning If you need a local weather warning, please confirm directly"
      },
      {
        "role": "user",
        "content": "Weather warning information for Shenzhen, I need it."
      },
      {
        "role": "function call",
        "content": {
          "name": "UtilityTools.Weather.getWeatherAlert",
          "arguments": {
            "location": "Shenzhen"
          }
        }
      },
      {
        "role": "assistant",
        "content": "How long does it take to get a weather warning?"
      },
      {
        "role": "user",
        "content": "It was wrong before. Location, defaults to local should be Shanghai"
      },
      {
        "role": "function call",
        "content": {
          "name": "UtilityTools.Weather.getWeatherAlert",
          "arguments": {
            "location": "Shanghai"
          }
        }
      },
      {
        "role": "assistant",
        "content": "How long does it take to get a weather warning?"
      },
      {
        "role": "user",
        "content": "Weather warning information for the next five days."
      },
      {
        "role": "function call",
        "content": {
          "name": "UtilityTools.Weather.getWeatherAlert",
          "arguments": {
            "location": "Shanghai",
            "time": "Next five days"
          }
        }
      }
    ],
    "multiple_tools": [
      {
        "name": "Finance.Funds.getFundRiskLevel",
        "description": "Check the risk level of the designated fund",
        "parameters": {
          "type": "object",
          "properties": {
            "fund_name": {
              "type": "string",
              "description": "Fund name"
            },
            "fund_code": {
              "type": "string",
              "description": "Fund  Code"
            }
          },
          "required": [
            "fund_name",
            "fund_code"
          ]
        }
      },
      {
        "name": "Travel.ItineraryServices.getTravelWarnings",
        "description": "Get travel safety warnings for your destination",
        "parameters": {
          "type": "object",
          "properties": {
            "destination": {
              "type": "string",
              "description": "Destination"
            }
          },
          "required": [
            "destination"
          ]
        }
      },
      {
        "name": "UtilityTools.Weather.getWeatherAlert",
        "description": "Get upcoming weather warnings for selected locations",
        "parameters": {
          "type": "object",
          "properties": {
            "location": {
              "type": "string",
              "description": "Location, defaults to local"
            },
            "time": {
              "type": "string",
              "description": "Time range"
            }
          },
          "required": [
            "location",
            "time"
          ]
        }
      },
      {
        "name": "Finance.Insurance.purchaseInsurance",
        "description": "Purchase insurance products",
        "parameters": {
          "type": "object",
          "properties": {
            "insurance_name": {
              "type": "string",
              "description": "Insurance Product Name"
            },
            "insurance_type": {
              "type": "string",
              "description": "Types of insurance products, such as life insurance, health insurance, property insurance, car insurance, etc."
            },
            "insurance_benefit": {
              "type": "string",
              "description": "Beneficiary/Protected Property"
            },
            "amount": {
              "type": "float",
              "description": "Coverage Amount"
            },
            "period": {
              "type": "integer",
              "description": "Insurance period, fixed time for some products, units (years)"
            }
          },
          "required": [
            "insurance_name",
            "insurance_type",
            "insurance_benefit",
            "amount",
            "period"
          ]
        }
      },
      {
        "name": "SystemTools.SystemSettings.setSystemDataUsage",
        "description": "Set maximum limits and early warning thresholds for your phone's data usage",
        "parameters": {
          "type": "object",
          "properties": {
            "data_limit": {
              "type": "integer",
              "description": "Maximum data usage limit in GB"
            },
            "warning_threshold": {
              "type": "integer",
              "description": "Traffic warning threshold in GB"
            }
          },
          "required": [
            "data_limit",
            "warning_threshold"
          ]
        }
      }
    ],
    "single_tool": [
      {
        "name": "UtilityTools.Weather.getWeatherAlert",
        "description": "Get upcoming weather warnings for selected locations",
        "parameters": {
          "type": "object",
          "properties": {
            "location": {
              "type": "string",
              "description": "Location, defaults to local"
            },
            "time": {
              "type": "string",
              "description": "Time range"
            }
          },
          "required": [
            "location",
            "time"
          ]
        }
      }
    ],
    "id": 234
  },
  {
    "messages": [
      {
        "role": "user",
        "content": "Life Services Index"
      },
      {
        "role": "function call",
        "content": {
          "name": "UtilityTools.Weather.getLivingIndex",
          "arguments": {}
        }
      },
      {
        "role": "assistant",
        "content": "When do you need to inquire?"
      },
      {
        "role": "user",
        "content": "The date I need to inquire is 2023-04-15 and I have an important meeting that day."
      },
      {
        "role": "function call",
        "content": {
          "name": "UtilityTools.Weather.getLivingIndex",
          "arguments": {
            "date": "2023-04-15"
          }
        }
      },
      {
        "role": "assistant",
        "content": "May I ask where you need to look for the Life Services Index?"
      },
      {
        "role": "user",
        "content": "It was wrong before. Date, defaults to current time should be September 15, 2023"
      },
      {
        "role": "function call",
        "content": {
          "name": "UtilityTools.Weather.getLivingIndex",
          "arguments": {
            "date": "September 15, 2023"
          }
        }
      },
      {
        "role": "assistant",
        "content": "May I ask where you need to look for the Life Services Index?"
      },
      {
        "role": "user",
        "content": "I would like to know about the Shanghai Life Services Index."
      },
      {
        "role": "function call",
        "content": {
          "name": "UtilityTools.Weather.getLivingIndex",
          "arguments": {
            "date": "September 15, 2023",
            "location": "Shanghai"
          }
        }
      }
    ],
    "multiple_tools": [
      {
        "name": "UtilityTools.Weather.getLivingIndex",
        "description": "Get the Life Services Index for a given day and a given location",
        "parameters": {
          "type": "object",
          "properties": {
            "date": {
              "type": "string",
              "description": "Date, defaults to current time"
            },
            "location": {
              "type": "string",
              "description": "Location, defaults to local"
            }
          },
          "required": [
            "date",
            "location"
          ]
        }
      },
      {
        "name": "UtilityTools.Memo.searchNotes",
        "description": "Search memos by keyword (see all by default)",
        "parameters": {
          "type": "object",
          "properties": {
            "key_words": {
              "type": "string",
              "description": "KEYWORDS"
            }
          },
          "required": [
            "key_words"
          ]
        }
      },
      {
        "name": "OnlineShopping.ExpressDelivery.rateExpressService",
        "description": "Rate courier service",
        "parameters": {
          "type": "object",
          "properties": {
            "express_id": {
              "type": "string",
              "description": "Tracking Number"
            },
            "signing_date": {
              "type": "string",
              "description": "The date of signing"
            },
            "rating": {
              "type": "string",
              "description": "Rating, 1-5 points"
            },
            "comment": {
              "type": "string",
              "description": "Scoring contents"
            }
          },
          "required": [
            "express_id",
            "signing_date",
            "rating",
            "comment"
          ]
        }
      },
      {
        "name": "Education.ChildrenEducation.searchChildCraft",
        "description": "Search Kids Craft Tutorials",
        "parameters": {
          "type": "object",
          "properties": {
            "craft_type": {
              "type": "string",
              "description": "Manual types such as origami, paper-cut"
            }
          },
          "required": [
            "craft_type"
          ]
        }
      },
      {
        "name": "ConvenientLiving.GovernmentServices.searchServiceByName",
        "description": "Search for relevant city services based on the service name entered",
        "parameters": {
          "type": "object",
          "properties": {
            "service_name": {
              "type": "string",
              "description": "Name of service to search"
            }
          },
          "required": [
            "service_name"
          ]
        }
      }
    ],
    "single_tool": [
      {
        "name": "UtilityTools.Weather.getLivingIndex",
        "description": "Get the Life Services Index for a given day and a given location",
        "parameters": {
          "type": "object",
          "properties": {
            "date": {
              "type": "string",
              "description": "Date, defaults to current time"
            },
            "location": {
              "type": "string",
              "description": "Location, defaults to local"
            }
          },
          "required": [
            "date",
            "location"
          ]
        }
      }
    ],
    "id": 237
  },
  {
    "messages": [
      {
        "role": "user",
        "content": "Clean up your history, web"
      },
      {
        "role": "function call",
        "content": {
          "name": "UtilityTools.Search.deleteWebHistoryrecord",
          "arguments": {}
        }
      },
      {
        "role": "assistant",
        "content": "Please provide publisher name"
      },
      {
        "role": "user",
        "content": "Zhang San posted this information."
      },
      {
        "role": "function call",
        "content": {
          "name": "UtilityTools.Search.deleteWebHistoryrecord",
          "arguments": {
            "announcer": "Zhang San"
          }
        }
      },
      {
        "role": "assistant",
        "content": "What is the title of the article that needs to be removed?"
      },
      {
        "role": "user",
        "content": "It was wrong before. Publisher Name should be Fynn"
      },
      {
        "role": "function call",
        "content": {
          "name": "UtilityTools.Search.deleteWebHistoryrecord",
          "arguments": {
            "announcer": "Fynn"
          }
        }
      },
      {
        "role": "assistant",
        "content": "What is the title of the article that needs to be removed?"
      },
      {
        "role": "user",
        "content": "World History at a Glance"
      },
      {
        "role": "function call",
        "content": {
          "name": "UtilityTools.Search.deleteWebHistoryrecord",
          "arguments": {
            "announcer": "Fynn",
            "title": "World History at a Glance"
          }
        }
      }
    ],
    "multiple_tools": [
      {
        "name": "UtilityTools.Search.deleteWebHistoryrecord",
        "description": "deleting history; deleting multiple histories based on date",
        "parameters": {
          "type": "object",
          "properties": {
            "announcer": {
              "type": "string",
              "description": "Publisher Name"
            },
            "title": {
              "type": "string",
              "description": "Article title"
            },
            "datetime": {
              "type": "string",
              "description": "browsing time; last day, specific date; default all descending"
            }
          },
          "required": [
            "announcer",
            "title",
            "datetime"
          ]
        }
      },
      {
        "name": "NewsMagazines.News.clearNewsReadHistory",
        "description": "Clear user's news reading history",
        "parameters": {
          "type": "object",
          "properties": {},
          "required": []
        }
      },
      {
        "name": "Health.MedicalServices.deletePatientMedicalRecord",
        "description": "Delete a patient's medical record information based on their name, etc.",
        "parameters": {
          "type": "object",
          "properties": {
            "patient_name": {
              "type": "string",
              "description": "Patient Name"
            }
          },
          "required": [
            "patient_name"
          ]
        }
      },
      {
        "name": "OnlineShopping.Mall.deleteMyFootprint",
        "description": "Delete my browsing history based on time or item",
        "parameters": {
          "type": "object",
          "properties": {
            "time": {
              "type": "string",
              "description": "Release Date"
            }
          },
          "required": [
            "time"
          ]
        }
      },
      {
        "name": "Navigation.TaxiCarRental.deleteTaxiOrders",
        "description": "Delete trip history",
        "parameters": {
          "type": "object",
          "properties": {
            "time": {
              "type": "string",
              "description": "Order time"
            },
            "destination": {
              "type": "string",
              "description": "Destination"
            }
          },
          "required": [
            "time",
            "destination"
          ]
        }
      }
    ],
    "single_tool": [
      {
        "name": "UtilityTools.Search.deleteWebHistoryrecord",
        "description": "deleting history; deleting multiple histories based on date",
        "parameters": {
          "type": "object",
          "properties": {
            "announcer": {
              "type": "string",
              "description": "Publisher Name"
            },
            "title": {
              "type": "string",
              "description": "Article title"
            },
            "datetime": {
              "type": "string",
              "description": "browsing time; last day, specific date; default all descending"
            }
          },
          "required": [
            "announcer",
            "title",
            "datetime"
          ]
        }
      }
    ],
    "id": 241
  },
  {
    "messages": [
      {
        "role": "user",
        "content": "Delete Web History"
      },
      {
        "role": "function call",
        "content": {
          "name": "UtilityTools.Search.deleteWebHistoryrecord",
          "arguments": {}
        }
      },
      {
        "role": "assistant",
        "content": "Please provide publisher name"
      },
      {
        "role": "user",
        "content": "Xiao Ming is the publisher of this document."
      },
      {
        "role": "function call",
        "content": {
          "name": "UtilityTools.Search.deleteWebHistoryrecord",
          "arguments": {
            "announcer": "Fynn"
          }
        }
      },
      {
        "role": "assistant",
        "content": "What is the title of the article that needs to be removed?"
      },
      {
        "role": "user",
        "content": "It was wrong before. Publisher Name should be Zhang San"
      },
      {
        "role": "function call",
        "content": {
          "name": "UtilityTools.Search.deleteWebHistoryrecord",
          "arguments": {
            "announcer": "Zhang San"
          }
        }
      },
      {
        "role": "assistant",
        "content": "What is the title of the article that needs to be removed?"
      },
      {
        "role": "user",
        "content": "How to be more productive"
      },
      {
        "role": "function call",
        "content": {
          "name": "UtilityTools.Search.deleteWebHistoryrecord",
          "arguments": {
            "announcer": "Zhang San",
            "title": "How to be more productive"
          }
        }
      }
    ],
    "multiple_tools": [
      {
        "name": "NewsMagazines.News.clearNewsReadHistory",
        "description": "Clear user's news reading history",
        "parameters": {
          "type": "object",
          "properties": {},
          "required": []
        }
      },
      {
        "name": "Health.MedicalServices.deletePatientMedicalRecord",
        "description": "Delete a patient's medical record information based on their name, etc.",
        "parameters": {
          "type": "object",
          "properties": {
            "patient_name": {
              "type": "string",
              "description": "Patient Name"
            }
          },
          "required": [
            "patient_name"
          ]
        }
      },
      {
        "name": "OnlineShopping.Mall.deleteMyFootprint",
        "description": "Delete my browsing history based on time or item",
        "parameters": {
          "type": "object",
          "properties": {
            "time": {
              "type": "string",
              "description": "Release Date"
            }
          },
          "required": [
            "time"
          ]
        }
      },
      {
        "name": "UtilityTools.Search.deleteWebHistoryrecord",
        "description": "deleting history; deleting multiple histories based on date",
        "parameters": {
          "type": "object",
          "properties": {
            "announcer": {
              "type": "string",
              "description": "Publisher Name"
            },
            "title": {
              "type": "string",
              "description": "Article title"
            },
            "datetime": {
              "type": "string",
              "description": "browsing time; last day, specific date; default all descending"
            }
          },
          "required": [
            "announcer",
            "title",
            "datetime"
          ]
        }
      },
      {
        "name": "Navigation.TaxiCarRental.deleteTaxiOrders",
        "description": "Delete trip history",
        "parameters": {
          "type": "object",
          "properties": {
            "time": {
              "type": "string",
              "description": "Order time"
            },
            "destination": {
              "type": "string",
              "description": "Destination"
            }
          },
          "required": [
            "time",
            "destination"
          ]
        }
      }
    ],
    "single_tool": [
      {
        "name": "UtilityTools.Search.deleteWebHistoryrecord",
        "description": "deleting history; deleting multiple histories based on date",
        "parameters": {
          "type": "object",
          "properties": {
            "announcer": {
              "type": "string",
              "description": "Publisher Name"
            },
            "title": {
              "type": "string",
              "description": "Article title"
            },
            "datetime": {
              "type": "string",
              "description": "browsing time; last day, specific date; default all descending"
            }
          },
          "required": [
            "announcer",
            "title",
            "datetime"
          ]
        }
      }
    ],
    "id": 242
  },
  {
    "messages": [
      {
        "role": "user",
        "content": "Searched your computer for documents"
      },
      {
        "role": "function call",
        "content": {
          "name": "UtilityTools.FileManagement.searchFiles",
          "arguments": {}
        }
      },
      {
        "role": "assistant",
        "content": "Please provide a search term"
      },
      {
        "role": "user",
        "content": "Image test test.jpg"
      },
      {
        "role": "function call",
        "content": {
          "name": "UtilityTools.FileManagement.searchFiles",
          "arguments": {
            "keyword": "test.jpg"
          }
        }
      },
      {
        "role": "assistant",
        "content": "What file type do you need to search for e.g. file picture video audio installation package etc. If there is no specific requirement default is file search"
      },
      {
        "role": "user",
        "content": "It was wrong before. Keywords Search should be project planning paper"
      },
      {
        "role": "function call",
        "content": {
          "name": "UtilityTools.FileManagement.searchFiles",
          "arguments": {
            "keyword": "project planning paper"
          }
        }
      },
      {
        "role": "assistant",
        "content": "What file type do you need to search for e.g. file picture video audio installation package etc. If there is no specific requirement default is file search"
      },
      {
        "role": "user",
        "content": "What you need to search for is an image."
      },
      {
        "role": "function call",
        "content": {
          "name": "UtilityTools.FileManagement.searchFiles",
          "arguments": {
            "keyword": "project planning paper",
            "type": "Images"
          }
        }
      },
      {
        "role": "assistant",
        "content": "Need to search by time? If yes, please provide a specific timeframe such as the most recent week, the most recent month, etc."
      },
      {
        "role": "user",
        "content": "This month's record is fine."
      },
      {
        "role": "function call",
        "content": {
          "name": "UtilityTools.FileManagement.searchFiles",
          "arguments": {
            "keyword": "project planning paper",
            "type": "Images",
            "time": "Current Month"
          }
        }
      }
    ],
    "multiple_tools": [
      {
        "name": "VideoPlayback.OnlineVideos.searchOnlineVideo",
        "description": "Search online videos, which can be searched based on keywords (director/publisher/video keywords); can be searched based on categories; can be searched based on AI smart search",
        "parameters": {
          "type": "object",
          "properties": {
            "keyword": {
              "type": "array",
              "description": "Director/Publisher/Video Keyword Search"
            },
            "video_type": {
              "type": "string",
              "description": "Video Type Categories, Recommended, Popular, Chase, Film and Television New Journey"
            },
            "ai_search": {
              "type": "string",
              "description": "Based on search history, viewing history can only be turned off by default"
            }
          },
          "required": [
            "keyword",
            "video_type",
            "ai_search"
          ]
        }
      },
      {
        "name": "OfficeSoftware.Documents.searchDocuments",
        "description": "Search documents by keyword",
        "parameters": {
          "type": "object",
          "properties": {
            "keyword": {
              "type": "string",
              "description": "Search keywords, required"
            }
          },
          "required": [
            "keyword"
          ]
        }
      },
      {
        "name": "UtilityTools.FileManagement.searchFiles",
        "description": "Search for relevant documents based on keywords",
        "parameters": {
          "type": "object",
          "properties": {
            "keyword": {
              "type": "string",
              "description": "Keywords Search"
            },
            "type": {
              "type": "string",
              "description": "files, tags, recently deleted, tencent documents, device storage, pictures, videos, audio, documents, installation package, compressed package, cloud disk, private safe, download, search in bluetooth; default file search"
            },
            "time": {
              "type": "string",
              "description": "Search by time"
            },
            "size": {
              "type": "string",
              "description": "File size"
            }
          },
          "required": [
            "keyword",
            "type",
            "time",
            "size"
          ]
        }
      },
      {
        "name": "ConvenientLiving.GovernmentServices.searchPolicyDocuments",
        "description": "Search the State Council's policy documents by keywords",
        "parameters": {
          "type": "object",
          "properties": {
            "keyword": {
              "type": "string",
              "description": "Keywords Search"
            }
          },
          "required": [
            "keyword"
          ]
        }
      },
      {
        "name": "MusicRadio.RadioStations.radioSearchPlaylist",
        "description": "Search Playlists",
        "parameters": {
          "type": "object",
          "properties": {
            "keyword": {
              "type": "string",
              "description": "category"
            }
          },
          "required": [
            "keyword"
          ]
        }
      }
    ],
    "single_tool": [
      {
        "name": "UtilityTools.FileManagement.searchFiles",
        "description": "Search for relevant documents based on keywords",
        "parameters": {
          "type": "object",
          "properties": {
            "keyword": {
              "type": "string",
              "description": "Keywords Search"
            },
            "type": {
              "type": "string",
              "description": "files, tags, recently deleted, tencent documents, device storage, pictures, videos, audio, documents, installation package, compressed package, cloud disk, private safe, download, search in bluetooth; default file search"
            },
            "time": {
              "type": "string",
              "description": "Search by time"
            },
            "size": {
              "type": "string",
              "description": "File size"
            }
          },
          "required": [
            "keyword",
            "type",
            "time",
            "size"
          ]
        }
      }
    ],
    "id": 244
  },
  {
    "messages": [
      {
        "role": "user",
        "content": "I want to read a book, open this book"
      },
      {
        "role": "function call",
        "content": {
          "name": "UtilityTools.Reading.openReadingBook",
          "arguments": {}
        }
      },
      {
        "role": "assistant",
        "content": "Please provide a book name"
      },
      {
        "role": "user",
        "content": "Jieyou grocery store, this book has a very special name."
      },
      {
        "role": "function call",
        "content": {
          "name": "UtilityTools.Reading.openReadingBook",
          "arguments": {
            "book_name": "Miracles of the Namiya General Store"
          }
        }
      },
      {
        "role": "assistant",
        "content": "How would you like to open this book to see or hear"
      },
      {
        "role": "user",
        "content": "It was wrong before. Book Name should be Harry Potter and the Philosopher&apos;s Stone"
      },
      {
        "role": "function call",
        "content": {
          "name": "UtilityTools.Reading.openReadingBook",
          "arguments": {
            "book_name": "Harry Potter and the Philosopher&apos;s Stone"
          }
        }
      },
      {
        "role": "assistant",
        "content": "How would you like to open this book to see or hear"
      },
      {
        "role": "user",
        "content": "tin"
      },
      {
        "role": "function call",
        "content": {
          "name": "UtilityTools.Reading.openReadingBook",
          "arguments": {
            "book_name": "Harry Potter and the Philosopher&apos;s Stone",
            "type": "tin"
          }
        }
      }
    ],
    "multiple_tools": [
      {
        "name": "UtilityTools.Search.openWebPage",
        "description": "Open the specified webpage or website",
        "parameters": {
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "description": "Web Url"
            },
            "site": {
              "type": "string",
              "description": "Website name, e.g. Bing Search, China Industrial and Commercial Network"
            }
          },
          "required": [
            "url",
            "site"
          ]
        }
      },
      {
        "name": "UtilityTools.Memo.viewUpcoming",
        "description": "View current to-do",
        "parameters": {
          "type": "object",
          "properties": {},
          "required": []
        }
      },
      {
        "name": "UtilityTools.Reading.openReadingBook",
        "description": "Open book with specified name",
        "parameters": {
          "type": "object",
          "properties": {
            "book_name": {
              "type": "string",
              "description": "Book Name"
            },
            "type": {
              "type": "string",
              "description": "Look, listen; default reading"
            }
          },
          "required": [
            "book_name",
            "type"
          ]
        }
      },
      {
        "name": "UtilityTools.FileManagement.openFile",
        "description": "Open the specified file",
        "parameters": {
          "type": "object",
          "properties": {
            "filename": {
              "type": "string",
              "description": "Document Name"
            },
            "open_mode": {
              "type": "string",
              "description": "Open with"
            }
          },
          "required": [
            "filename",
            "open_mode"
          ]
        }
      },
      {
        "name": "SystemTools.SystemSettings.OpenApp",
        "description": "Open the specified App on your phone",
        "parameters": {
          "type": "object",
          "properties": {
            "app_name": {
              "type": "string",
              "description": "App name"
            }
          },
          "required": [
            "app_name"
          ]
        }
      }
    ],
    "single_tool": [
      {
        "name": "UtilityTools.Reading.openReadingBook",
        "description": "Open book with specified name",
        "parameters": {
          "type": "object",
          "properties": {
            "book_name": {
              "type": "string",
              "description": "Book Name"
            },
            "type": {
              "type": "string",
              "description": "Look, listen; default reading"
            }
          },
          "required": [
            "book_name",
            "type"
          ]
        }
      }
    ],
    "id": 245
  },
  {
    "messages": [
      {
        "role": "user",
        "content": "Open the novel"
      },
      {
        "role": "function call",
        "content": {
          "name": "UtilityTools.Reading.openReadingBook",
          "arguments": {}
        }
      },
      {
        "role": "assistant",
        "content": "Please provide a book name"
      },
      {
        "role": "user",
        "content": "Harry Potter and the Philosopher's Stone"
      },
      {
        "role": "function call",
        "content": {
          "name": "UtilityTools.Reading.openReadingBook",
          "arguments": {
            "book_name": "Harry Potter and the Philosopher's Stone"
          }
        }
      },
      {
        "role": "assistant",
        "content": "How would you like to open this book to see or hear"
      },
      {
        "role": "user",
        "content": "It was wrong before. Book Name should be Harry Potter and the Philosopher&apos;s Stone"
      },
      {
        "role": "function call",
        "content": {
          "name": "UtilityTools.Reading.openReadingBook",
          "arguments": {
            "book_name": "Harry Potter and the Philosopher&apos;s Stone"
          }
        }
      },
      {
        "role": "assistant",
        "content": "How would you like to open this book to see or hear"
      },
      {
        "role": "user",
        "content": "I want to hear this book."
      },
      {
        "role": "function call",
        "content": {
          "name": "UtilityTools.Reading.openReadingBook",
          "arguments": {
            "book_name": "Harry Potter and the Philosopher&apos;s Stone",
            "type": "tin"
          }
        }
      }
    ],
    "multiple_tools": [
      {
        "name": "UtilityTools.Search.openWebPage",
        "description": "Open the specified webpage or website",
        "parameters": {
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "description": "Web Url"
            },
            "site": {
              "type": "string",
              "description": "Website name, e.g. Bing Search, China Industrial and Commercial Network"
            }
          },
          "required": [
            "url",
            "site"
          ]
        }
      },
      {
        "name": "UtilityTools.FileManagement.openFile",
        "description": "Open the specified file",
        "parameters": {
          "type": "object",
          "properties": {
            "filename": {
              "type": "string",
              "description": "Document Name"
            },
            "open_mode": {
              "type": "string",
              "description": "Open with"
            }
          },
          "required": [
            "filename",
            "open_mode"
          ]
        }
      },
      {
        "name": "SystemTools.SystemSettings.OpenApp",
        "description": "Open the specified App on your phone",
        "parameters": {
          "type": "object",
          "properties": {
            "app_name": {
              "type": "string",
              "description": "App name"
            }
          },
          "required": [
            "app_name"
          ]
        }
      },
      {
        "name": "UtilityTools.Reading.openReadingBook",
        "description": "Open book with specified name",
        "parameters": {
          "type": "object",
          "properties": {
            "book_name": {
              "type": "string",
              "description": "Book Name"
            },
            "type": {
              "type": "string",
              "description": "Look, listen; default reading"
            }
          },
          "required": [
            "book_name",
            "type"
          ]
        }
      },
      {
        "name": "SystemTools.SystemSettings.setSystemTurnOnHotSpot",
        "description": "Open Personal Hotspot",
        "parameters": {
          "type": "object",
          "properties": {
            "wifi_name": {
              "type": "string",
              "description": "Personal Hotspot Name"
            },
            "password": {
              "type": "string",
              "description": "Password"
            }
          },
          "required": [
            "wifi_name",
            "password"
          ]
        }
      }
    ],
    "single_tool": [
      {
        "name": "UtilityTools.Reading.openReadingBook",
        "description": "Open book with specified name",
        "parameters": {
          "type": "object",
          "properties": {
            "book_name": {
              "type": "string",
              "description": "Book Name"
            },
            "type": {
              "type": "string",
              "description": "Look, listen; default reading"
            }
          },
          "required": [
            "book_name",
            "type"
          ]
        }
      }
    ],
    "id": 246
  },
  {
    "messages": [
      {
        "role": "user",
        "content": "Setting the Reading Mode"
      },
      {
        "role": "function call",
        "content": {
          "name": "UtilityTools.Reading.setReadingMode",
          "arguments": {}
        }
      },
      {
        "role": "assistant",
        "content": "Do you want to turn on night mode Do you want to set up automatic reading Do you want to resize the reading font size"
      },
      {
        "role": "user",
        "content": "I want to turn on night mode, set auto-reading, and adjust the font to medium size. True"
      },
      {
        "role": "function call",
        "content": {
          "name": "UtilityTools.Reading.setReadingMode",
          "arguments": {
            "night_mode": true
          }
        }
      },
      {
        "role": "assistant",
        "content": "Whether auto-reading needs to be turned on Reading font size How big do you want to set it?"
      },
      {
        "role": "user",
        "content": "There is no need to turn on auto-reading, the reading font size is expected to be set to 16."
      },
      {
        "role": "function call",
        "content": {
          "name": "UtilityTools.Reading.setReadingMode",
          "arguments": {
            "night_mode": true,
            "auto_read": false
          }
        }
      },
      {
        "role": "assistant",
        "content": "What font size do you want to set"
      },
      {
        "role": "user",
        "content": "It was wrong before. Auto-read, off by default should be True"
      },
      {
        "role": "function call",
        "content": {
          "name": "UtilityTools.Reading.setReadingMode",
          "arguments": {
            "night_mode": true,
            "auto_read": true
          }
        }
      },
      {
        "role": "assistant",
        "content": "What font size do you want to set"
      },
      {
        "role": "user",
        "content": "I would like to set the font size to 16."
      },
      {
        "role": "function call",
        "content": {
          "name": "UtilityTools.Reading.setReadingMode",
          "arguments": {
            "night_mode": true,
            "auto_read": true,
            "fontsize": 16
          }
        }
      }
    ],
    "multiple_tools": [
      {
        "name": "Photography.VideoRecording.videoNightMode",
        "description": "Turn nighttime video mode on or off",
        "parameters": {
          "type": "object",
          "properties": {
            "open": {
              "type": "boolean",
              "description": "Whether to turn on nighttime video mode"
            },
            "level": {
              "type": "integer",
              "description": "Noise reduction level, 1 to 5"
            }
          },
          "required": [
            "open",
            "level"
          ]
        }
      },
      {
        "name": "Photography.PhotoTaking.imagePhotoNightScene",
        "description": "Turning Night Mode On or Off",
        "parameters": {
          "type": "object",
          "properties": {
            "open": {
              "type": "boolean",
              "description": "Whether to turn on Night Mode"
            },
            "level": {
              "type": "integer",
              "description": "Exposure Compensation Value"
            }
          },
          "required": [
            "open",
            "level"
          ]
        }
      },
      {
        "name": "UtilityTools.Reading.setReadingMode",
        "description": "Set the night mode of reading, automatic reading, reading font size, etc.",
        "parameters": {
          "type": "object",
          "properties": {
            "night_mode": {
              "type": "boolean",
              "description": "Night mode, off by default"
            },
            "auto_read": {
              "type": "boolean",
              "description": "Auto-read, off by default"
            },
            "fontsize": {
              "type": "integer",
              "description": "FontSize"
            }
          },
          "required": [
            "night_mode",
            "auto_read",
            "fontsize"
          ]
        }
      },
      {
        "name": "Photography.PhotoTaking.imagePhotoNightVision",
        "description": "Turn night vision mode on or off",
        "parameters": {
          "type": "object",
          "properties": {
            "open": {
              "type": "boolean",
              "description": "Whether to turn on night vision mode"
            },
            "level": {
              "type": "integer",
              "description": "Gain level, 1 to 10"
            }
          },
          "required": [
            "open",
            "level"
          ]
        }
      },
      {
        "name": "SystemTools.SystemSettings.setSystemFont",
        "description": "Set the font style and size for your phone",
        "parameters": {
          "type": "object",
          "properties": {
            "font_style": {
              "type": "string",
              "description": "Font style, e.g. Kaishu, Arial"
            },
            "font_size": {
              "type": "integer",
              "description": "Font size, in pixels"
            }
          },
          "required": [
            "font_style",
            "font_size"
          ]
        }
      }
    ],
    "single_tool": [
      {
        "name": "UtilityTools.Reading.setReadingMode",
        "description": "Set the night mode of reading, automatic reading, reading font size, etc.",
        "parameters": {
          "type": "object",
          "properties": {
            "night_mode": {
              "type": "boolean",
              "description": "Night mode, off by default"
            },
            "auto_read": {
              "type": "boolean",
              "description": "Auto-read, off by default"
            },
            "fontsize": {
              "type": "integer",
              "description": "FontSize"
            }
          },
          "required": [
            "night_mode",
            "auto_read",
            "fontsize"
          ]
        }
      }
    ],
    "id": 247
  },
  {
    "messages": [
      {
        "role": "user",
        "content": "Add a new book to the shelf."
      },
      {
        "role": "function call",
        "content": {
          "name": "UtilityTools.Reading.addReadingBookShelf",
          "arguments": {}
        }
      },
      {
        "role": "assistant",
        "content": "Please provide a book name"
      },
      {
        "role": "user",
        "content": "The Little Prince"
      },
      {
        "role": "function call",
        "content": {
          "name": "UtilityTools.Reading.addReadingBookShelf",
          "arguments": {
            "book_name": "The Little Prince"
          }
        }
      },
      {
        "role": "assistant",
        "content": "Please provide author name"
      },
      {
        "role": "user",
        "content": "It was wrong before. Book Name should be Friends of Time"
      },
      {
        "role": "function call",
        "content": {
          "name": "UtilityTools.Reading.addReadingBookShelf",
          "arguments": {
            "book_name": "Friends of Time"
          }
        }
      },
      {
        "role": "assistant",
        "content": "Please provide author name"
      },
      {
        "role": "user",
        "content": "Antoine de Saint-Exupéry, author of The Little Prince."
      },
      {
        "role": "function call",
        "content": {
          "name": "UtilityTools.Reading.addReadingBookShelf",
          "arguments": {
            "book_name": "Friends of Time",
            "book_author": "Antoine de Saint-Exupéry"
          }
        }
      }
    ],
    "multiple_tools": [
      {
        "name": "UtilityTools.Reading.addReadingNote",
        "description": "Add reading notes to the assigned text on the current reading page",
        "parameters": {
          "type": "object",
          "properties": {
            "book_location": {
              "type": "string",
              "description": "Add a location for your notes"
            },
            "book_note": {
              "type": "string",
              "description": "Note content"
            }
          },
          "required": [
            "book_location",
            "book_note"
          ]
        }
      },
      {
        "name": "OnlineShopping.Mall.addCommodityToCart",
        "description": "Add items to cart based on product name",
        "parameters": {
          "type": "object",
          "properties": {
            "goods": {
              "type": "string",
              "description": "Product Name"
            }
          },
          "required": [
            "goods"
          ]
        }
      },
      {
        "name": "OnlineShopping.ExpressDelivery.addAddress",
        "description": "Add the specified address to the address book",
        "parameters": {
          "type": "object",
          "properties": {
            "name": {
              "type": "string",
              "description": "Name"
            },
            "phone": {
              "type": "string",
              "description": "Phone No."
            },
            "address": {
              "type": "string",
              "description": "Address"
            }
          },
          "required": [
            "name",
            "phone",
            "address"
          ]
        }
      },
      {
        "name": "UtilityTools.Reading.addReadingBookShelf",
        "description": "Add online and local books to your shelves",
        "parameters": {
          "type": "object",
          "properties": {
            "book_name": {
              "type": "string",
              "description": "Book Name"
            },
            "book_author": {
              "type": "string",
              "description": "Author name"
            },
            "path": {
              "type": "string",
              "description": "Local Book Path"
            }
          },
          "required": [
            "book_name",
            "book_author",
            "path"
          ]
        }
      },
      {
        "name": "UtilityTools.Search.addWebBookmark",
        "description": "Add a page to a default collection or to a specified collection",
        "parameters": {
          "type": "object",
          "properties": {
            "name": {
              "type": "string",
              "description": "Name"
            },
            "bookmark": {
              "type": "string",
              "description": "Bookmark title, provided by target title by default"
            }
          },
          "required": [
            "name",
            "bookmark"
          ]
        }
      }
    ],
    "single_tool": [
      {
        "name": "UtilityTools.Reading.addReadingBookShelf",
        "description": "Add online and local books to your shelves",
        "parameters": {
          "type": "object",
          "properties": {
            "book_name": {
              "type": "string",
              "description": "Book Name"
            },
            "book_author": {
              "type": "string",
              "description": "Author name"
            },
            "path": {
              "type": "string",
              "description": "Local Book Path"
            }
          },
          "required": [
            "book_name",
            "book_author",
            "path"
          ]
        }
      }
    ],
    "id": 248
  },
  {
    "messages": [
      {
        "role": "user",
        "content": "I found a great novel that I wanted to put on the shelf, both online and locally."
      },
      {
        "role": "function call",
        "content": {
          "name": "UtilityTools.Reading.addReadingBookShelf",
          "arguments": {}
        }
      },
      {
        "role": "assistant",
        "content": "Please provide a book name"
      },
      {
        "role": "user",
        "content": "I've been reading The Three Bodies lately and it's fascinating."
      },
      {
        "role": "function call",
        "content": {
          "name": "UtilityTools.Reading.addReadingBookShelf",
          "arguments": {
            "book_name": "Trisomy"
          }
        }
      },
      {
        "role": "assistant",
        "content": "Please provide author name"
      },
      {
        "role": "user",
        "content": "It was wrong before. Book Name should be Friends of Time"
      },
      {
        "role": "function call",
        "content": {
          "name": "UtilityTools.Reading.addReadingBookShelf",
          "arguments": {
            "book_name": "Friends of Time"
          }
        }
      },
      {
        "role": "assistant",
        "content": "Please provide author name"
      },
      {
        "role": "user",
        "content": "Liu Cixin"
      },
      {
        "role": "function call",
        "content": {
          "name": "UtilityTools.Reading.addReadingBookShelf",
          "arguments": {
            "book_name": "Friends of Time",
            "book_author": "Liu Cixin"
          }
        }
      }
    ],
    "multiple_tools": [
      {
        "name": "Education.OnlineClasses.enrollCourse",
        "description": "Enroll in a designated course",
        "parameters": {
          "type": "object",
          "properties": {
            "course_name": {
              "type": "string",
              "description": "Course Title"
            }
          },
          "required": [
            "course_name"
          ]
        }
      },
      {
        "name": "UtilityTools.Reading.addReadingBookShelf",
        "description": "Add online and local books to your shelves",
        "parameters": {
          "type": "object",
          "properties": {
            "book_name": {
              "type": "string",
              "description": "Book Name"
            },
            "book_author": {
              "type": "string",
              "description": "Author name"
            },
            "path": {
              "type": "string",
              "description": "Local Book Path"
            }
          },
          "required": [
            "book_name",
            "book_author",
            "path"
          ]
        }
      },
      {
        "name": "ConvenientLiving.AutoLife.followCarModels",
        "description": "Keep an eye on the car models you're interested in so you can stay up to date.",
        "parameters": {
          "type": "object",
          "properties": {
            "brands": {
              "type": "string",
              "description": "Car Brand"
            }
          },
          "required": [
            "brands"
          ]
        }
      },
      {
        "name": "MusicRadio.RadioStations.radioListenRadio",
        "description": "Listen to stations by station name",
        "parameters": {
          "type": "object",
          "properties": {
            "name": {
              "type": "string",
              "description": "Radio Name"
            }
          },
          "required": [
            "name"
          ]
        }
      },
      {
        "name": "Navigation.FlightTickets.checkInOnlineFlight",
        "description": "Online check-in for selected flights",
        "parameters": {
          "type": "object",
          "properties": {
            "flight_number": {
              "type": "string",
              "description": "e.g. CA1234"
            },
            "name": {
              "type": "string",
              "description": "Name"
            },
            "passenger_id": {
              "type": "string",
              "description": "Rider ID number"
            }
          },
          "required": [
            "flight_number",
            "name",
            "passenger_id"
          ]
        }
      }
    ],
    "single_tool": [
      {
        "name": "UtilityTools.Reading.addReadingBookShelf",
        "description": "Add online and local books to your shelves",
        "parameters": {
          "type": "object",
          "properties": {
            "book_name": {
              "type": "string",
              "description": "Book Name"
            },
            "book_author": {
              "type": "string",
              "description": "Author name"
            },
            "path": {
              "type": "string",
              "description": "Local Book Path"
            }
          },
          "required": [
            "book_name",
            "book_author",
            "path"
          ]
        }
      }
    ],
    "id": 249
  },
  {
    "messages": [
      {
        "role": "user",
        "content": "I need to create a new schedule"
      },
      {
        "role": "function call",
        "content": {
          "name": "UtilityTools.Calendar.addCalendarschedule",
          "arguments": {}
        }
      },
      {
        "role": "assistant",
        "content": "Please provide a schedule name"
      },
      {
        "role": "user",
        "content": "Teacher's Day Thanksgiving Schedule"
      },
      {
        "role": "function call",
        "content": {
          "name": "UtilityTools.Calendar.addCalendarschedule",
          "arguments": {
            "date_name": "Teacher's Day Thanksgiving"
          }
        }
      },
      {
        "role": "assistant",
        "content": "What is the start time of the schedule Whether the end time of the schedule needs to be adjusted If not, please confirm that the start time is at 24 o'clock on the same day as the end time"
      },
      {
        "role": "user",
        "content": "It was wrong before. Visiting program name should be Halloween Party"
      },
      {
        "role": "function call",
        "content": {
          "name": "UtilityTools.Calendar.addCalendarschedule",
          "arguments": {
            "date_name": "Halloween Party"
          }
        }
      },
      {
        "role": "assistant",
        "content": "What is the start time of the schedule Whether the end time of the schedule needs to be adjusted If not, please confirm that the start time is at 24 o'clock on the same day as the end time"
      },
      {
        "role": "user",
        "content": "The start time of the schedule is 5:00 pm on September 10th, no adjustment is needed, confirm 24:00 of the day as the end time."
      },
      {
        "role": "function call",
        "content": {
          "name": "UtilityTools.Calendar.addCalendarschedule",
          "arguments": {
            "date_name": "Halloween Party",
            "end_date": "September 10th at 5pm"
          }
        }
      },
      {
        "role": "assistant",
        "content": "What is the start time of the schedule What is the specific content of the agenda"
      },
      {
        "role": "user",
        "content": "The schedule starts at 3pm with the preparation of thank-you notes and small gifts, as well as the scheduling of meetings."
      },
      {
        "role": "function call",
        "content": {
          "name": "UtilityTools.Calendar.addCalendarschedule",
          "arguments": {
            "date_name": "Halloween Party",
            "end_date": "September 10th at 5pm",
            "schedule": "Prepare thank-you notes and small gifts"
          }
        }
      },
      {
        "role": "assistant",
        "content": "What time does the schedule start?"
      },
      {
        "role": "user",
        "content": "It started at 3pm on September 10th."
      },
      {
        "role": "function call",
        "content": {
          "name": "UtilityTools.Calendar.addCalendarschedule",
          "arguments": {
            "date_name": "Halloween Party",
            "end_date": "September 10th at 5pm",
            "schedule": "Prepare thank-you notes and small gifts",
            "start_date": "September 10th at 3pm"
          }
        }
      }
    ],
    "multiple_tools": [
      {
        "name": "UtilityTools.Calendar.addCalendarschedule",
        "description": "Create a new schedule",
        "parameters": {
          "type": "object",
          "properties": {
            "date_name": {
              "type": "string",
              "description": "Visiting program name"
            },
            "start_date": {
              "type": "string",
              "description": "Schedule start time"
            },
            "end_date": {
              "type": "string",
              "description": "Schedule end time; do not write the default start time 24 o'clock on the same day"
            },
            "schedule": {
              "type": "string",
              "description": "Schedule Related Descriptions"
            }
          },
          "required": [
            "date_name",
            "start_date",
            "end_date",
            "schedule"
          ]
        }
      },
      {
        "name": "MusicRadio.Karaoke.createSingingRoom",
        "description": "Create my studio by the name of the studio",
        "parameters": {
          "type": "object",
          "properties": {
            "name": {
              "type": "string",
              "description": "Karaoke Room Name"
            }
          },
          "required": [
            "name"
          ]
        }
      },
      {
        "name": "Travel.ItineraryServices.createTravelItinerary",
        "description": "Create a personalized travel itinerary",
        "parameters": {
          "type": "object",
          "properties": {
            "destination": {
              "type": "string",
              "description": "destination"
            }
          },
          "required": [
            "destination"
          ]
        }
      },
      {
        "name": "OfficeSoftware.Conferencing.createMeeting",
        "description": "Create a new meeting",
        "parameters": {
          "type": "object",
          "properties": {
            "title": {
              "type": "string",
              "description": "Meeting Title:"
            },
            "start_time": {
              "type": "string",
              "description": "Conference Start Time"
            },
            "end_time": {
              "type": "string",
              "description": "Meeting end time"
            },
            "location": {
              "type": "string",
              "description": "Meeting Address"
            },
            "participant_list": {
              "type": "string",
              "description": "List of participants in the meeting"
            }
          },
          "required": [
            "title",
            "start_time",
            "end_time",
            "location",
            "participant_list"
          ]
        }
      },
      {
        "name": "OfficeSoftware.Documents.createDocument",
        "description": "Create a new document",
        "parameters": {
          "type": "object",
          "properties": {
            "document_name": {
              "type": "string",
              "description": "Document name, required"
            }
          },
          "required": [
            "document_name"
          ]
        }
      }
    ],
    "single_tool": [
      {
        "name": "UtilityTools.Calendar.addCalendarschedule",
        "description": "Create a new schedule",
        "parameters": {
          "type": "object",
          "properties": {
            "date_name": {
              "type": "string",
              "description": "Visiting program name"
            },
            "start_date": {
              "type": "string",
              "description": "Schedule start time"
            },
            "end_date": {
              "type": "string",
              "description": "Schedule end time; do not write the default start time 24 o'clock on the same day"
            },
            "schedule": {
              "type": "string",
              "description": "Schedule Related Descriptions"
            }
          },
          "required": [
            "date_name",
            "start_date",
            "end_date",
            "schedule"
          ]
        }
      }
    ],
    "id": 259
  },
  {
    "messages": [
      {
        "role": "user",
        "content": "Add a watermark to your photo"
      },
      {
        "role": "function call",
        "content": {
          "name": "Photography.PhotoEditing.addWatermarkToPicture",
          "arguments": {}
        }
      },
      {
        "role": "assistant",
        "content": "Please provide a name or path to the photo"
      },
      {
        "role": "user",
        "content": "The path to the photo is sdcard/Pictures/birthdayParty.jpg, which I took at my birthday party."
      },
      {
        "role": "function call",
        "content": {
          "name": "Photography.PhotoEditing.addWatermarkToPicture",
          "arguments": {
            "name_or_path": "sdcard/Pictures/birthdayParty.jpg"
          }
        }
      },
      {
        "role": "assistant",
        "content": "What is the watermark text content"
      },
      {
        "role": "user",
        "content": "It was wrong before. Photo name or path should be holiday.jpg"
      },
      {
        "role": "function call",
        "content": {
          "name": "Photography.PhotoEditing.addWatermarkToPicture",
          "arguments": {
            "name_or_path": "holiday.jpg"
          }
        }
      },
      {
        "role": "assistant",
        "content": "What is the watermark text content"
      },
      {
        "role": "user",
        "content": "Happy Birthday, any additional text to add?"
      },
      {
        "role": "function call",
        "content": {
          "name": "Photography.PhotoEditing.addWatermarkToPicture",
          "arguments": {
            "name_or_path": "holiday.jpg",
            "text": "THE FUTURE IS FEMALE"
          }
        }
      }
    ],
    "multiple_tools": [
      {
        "name": "UtilityTools.Search.openWebBookmark",
        "description": "Open bookmarks; open a bookmark in a collection to specify bookmarks (favorites/bookmarks/tags)",
        "parameters": {
          "type": "object",
          "properties": {
            "bookmark": {
              "type": "string",
              "description": "Bookmark Name"
            }
          },
          "required": [
            "bookmark"
          ]
        }
      },
      {
        "name": "Navigation.TrainTickets.addTrainWaitlistOrder",
        "description": "User submits train ticket standby order",
        "parameters": {
          "type": "object",
          "properties": {
            "train_number": {
              "type": "string",
              "description": "Number of trips to book; select all by default, up to 6"
            },
            "passenger_name": {
              "type": "string",
              "description": "Rider's name"
            },
            "passenger_id": {
              "type": "string",
              "description": "Rider ID number"
            },
            "ride_date": {
              "type": "string",
              "description": "Trip date in YYYY-MM-DD format"
            },
            "departure_station": {
              "type": "string",
              "description": "Departure Station"
            },
            "destination_station": {
              "type": "string",
              "description": "arrival station"
            },
            "seat_type": {
              "type": "string",
              "description": "Seat Type"
            }
          },
          "required": [
            "train_number",
            "passenger_name",
            "passenger_id",
            "ride_date",
            "departure_station",
            "destination_station",
            "seat_type"
          ]
        }
      },
      {
        "name": "Photography.PhotoEditing.addWatermarkToPicture",
        "description": "Add a watermark to your photo",
        "parameters": {
          "type": "object",
          "properties": {
            "name_or_path": {
              "type": "string",
              "description": "Photo name or path"
            },
            "text": {
              "type": "string",
              "description": "Watermark text content"
            }
          },
          "required": [
            "name_or_path",
            "text"
          ]
        }
      },
      {
        "name": "SocialCommunication.SocialMedia.collectMediumTrends",
        "description": "Favorite specified activity in specified media",
        "parameters": {
          "type": "object",
          "properties": {
            "medium_name": {
              "type": "string",
              "description": "Media name"
            },
            "correlation": {
              "type": "string",
              "description": "Dynamic Related Content"
            },
            "publisher": {
              "type": "string",
              "description": "Posted by/publisher?"
            },
            "publish_time": {
              "type": "string",
              "description": "Release Date"
            }
          },
          "required": [
            "medium_name",
            "correlation",
            "publisher",
            "publish_time"
          ]
        }
      },
      {
        "name": "ConvenientLiving.JobRecruitment.collectJob",
        "description": "Favorite posts of interest",
        "parameters": {
          "type": "object",
          "properties": {
            "job_name": {
              "type": "string",
              "description": "Position name"
            },
            "company_name": {
              "type": "string",
              "description": "Company name"
            }
          },
          "required": [
            "job_name",
            "company_name"
          ]
        }
      }
    ],
    "single_tool": [
      {
        "name": "Photography.PhotoEditing.addWatermarkToPicture",
        "description": "Add a watermark to your photo",
        "parameters": {
          "type": "object",
          "properties": {
            "name_or_path": {
              "type": "string",
              "description": "Photo name or path"
            },
            "text": {
              "type": "string",
              "description": "Watermark text content"
            }
          },
          "required": [
            "name_or_path",
            "text"
          ]
        }
      }
    ],
    "id": 289
  },
  {
    "messages": [
      {
        "role": "user",
        "content": "Photo search"
      },
      {
        "role": "function call",
        "content": {
          "name": "Photography.PhotoEditing.searchPicture",
          "arguments": {}
        }
      },
      {
        "role": "assistant",
        "content": "Please provide a date for the photoshoot"
      },
      {
        "role": "user",
        "content": "The date of the shoot was yesterday."
      },
      {
        "role": "function call",
        "content": {
          "name": "Photography.PhotoEditing.searchPicture",
          "arguments": {
            "date": "Yesterday"
          }
        }
      },
      {
        "role": "assistant",
        "content": "What was the location of the shoot? What was the name of the file?"
      },
      {
        "role": "user",
        "content": "It was wrong before. Date of shooting should be May 20, 2023"
      },
      {
        "role": "function call",
        "content": {
          "name": "Photography.PhotoEditing.searchPicture",
          "arguments": {
            "date": "May 20, 2023"
          }
        }
      },
      {
        "role": "assistant",
        "content": "What was the location of the shoot? What was the name of the file?"
      },
      {
        "role": "user",
        "content": "The shooting location is Shanghai Bund and the file name is WaiTang_Sunset.jpg."
      },
      {
        "role": "function call",
        "content": {
          "name": "Photography.PhotoEditing.searchPicture",
          "arguments": {
            "date": "May 20, 2023",
            "location": "Shanghai Bund"
          }
        }
      }
    ],
    "multiple_tools": [
      {
        "name": "OfficeSoftware.Documents.searchDocuments",
        "description": "Search documents by keyword",
        "parameters": {
          "type": "object",
          "properties": {
            "keyword": {
              "type": "string",
              "description": "Search keywords, required"
            }
          },
          "required": [
            "keyword"
          ]
        }
      },
      {
        "name": "Photography.PhotoEditing.searchPicture",
        "description": "Query photos according to the specified time, shooting location, file name, scene type, etc.",
        "parameters": {
          "type": "object",
          "properties": {
            "date": {
              "type": "string",
              "description": "Date of shooting"
            },
            "location": {
              "type": "string",
              "description": "PlaceTaken"
            }
          },
          "required": [
            "date",
            "location"
          ]
        }
      },
      {
        "name": "VideoPlayback.ShortVideos.searchShortVideo",
        "description": "Search for short videos based on keywords (vlog blogger/video keywords/taxonomy keywords)",
        "parameters": {
          "type": "object",
          "properties": {
            "keyword": {
              "type": "string",
              "description": "Short video blogger name/video keyword search"
            },
            "type": {
              "type": "string",
              "description": "Recommended, Popular, Chase, Film and TV New Journey/Reference bilibili, etc."
            },
            "datetime": {
              "type": "string",
              "description": "Release time: unlimited, within a day, within a week, within half a year"
            },
            "duration": {
              "type": "string",
              "description": "Video time: unlimited, 1 minute, 1--5 minutes, more than 5 minutes"
            },
            "ai_search": {
              "type": "string",
              "description": "Based on search history, viewing history can only be searched"
            }
          },
          "required": [
            "keyword",
            "type",
            "datetime",
            "duration",
            "ai_search"
          ]
        }
      },
      {
        "name": "VideoPlayback.OnlineVideos.searchOnlineVideo",
        "description": "Search online videos, which can be searched based on keywords (director/publisher/video keywords); can be searched based on categories; can be searched based on AI smart search",
        "parameters": {
          "type": "object",
          "properties": {
            "keyword": {
              "type": "array",
              "description": "Director/Publisher/Video Keyword Search"
            },
            "video_type": {
              "type": "string",
              "description": "Video Type Categories, Recommended, Popular, Chase, Film and Television New Journey"
            },
            "ai_search": {
              "type": "string",
              "description": "Based on search history, viewing history can only be turned off by default"
            }
          },
          "required": [
            "keyword",
            "video_type",
            "ai_search"
          ]
        }
      },
      {
        "name": "UtilityTools.Search.searchWeb",
        "description": "Web search (text, voice, photo search default text)",
        "parameters": {
          "type": "object",
          "properties": {
            "keyword": {
              "type": "string",
              "description": "Search Content"
            },
            "type": {
              "type": "string",
              "description": "Text; Voice; Picture; Default Text"
            }
          },
          "required": [
            "keyword",
            "type"
          ]
        }
      }
    ],
    "single_tool": [
      {
        "name": "Photography.PhotoEditing.searchPicture",
        "description": "Query photos according to the specified time, shooting location, file name, scene type, etc.",
        "parameters": {
          "type": "object",
          "properties": {
            "date": {
              "type": "string",
              "description": "Date of shooting"
            },
            "location": {
              "type": "string",
              "description": "PlaceTaken"
            }
          },
          "required": [
            "date",
            "location"
          ]
        }
      }
    ],
    "id": 292
  },
  {
    "messages": [
      {
        "role": "user",
        "content": "share a picture"
      },
      {
        "role": "function call",
        "content": {
          "name": "Photography.PhotoEditing.sharePicture",
          "arguments": {}
        }
      },
      {
        "role": "assistant",
        "content": "Please provide a name or path to the photo"
      },
      {
        "role": "user",
        "content": "The name of the photo is test.jpg, located on my desktop."
      },
      {
        "role": "function call",
        "content": {
          "name": "Photography.PhotoEditing.sharePicture",
          "arguments": {
            "name_or_path": "test.jpg"
          }
        }
      },
      {
        "role": "assistant",
        "content": "Which app do you want to share your photos to?"
      },
      {
        "role": "user",
        "content": "It was wrong before. Photo name or path should be family_reunion.png"
      },
      {
        "role": "function call",
        "content": {
          "name": "Photography.PhotoEditing.sharePicture",
          "arguments": {
            "name_or_path": "family_reunion.png"
          }
        }
      },
      {
        "role": "assistant",
        "content": "Which app do you want to share your photos to?"
      },
      {
        "role": "user",
        "content": "I want to share with my friends via WeChat."
      },
      {
        "role": "function call",
        "content": {
          "name": "Photography.PhotoEditing.sharePicture",
          "arguments": {
            "name_or_path": "family_reunion.png",
            "to": "WeChat"
          }
        }
      }
    ],
    "multiple_tools": [
      {
        "name": "NewsMagazines.NewspapersMagazines.shareArticle",
        "description": "Share posts to social media",
        "parameters": {
          "type": "object",
          "properties": {
            "to": {
              "type": "string",
              "description": "Choose Socials To Share Single Post"
            },
            "article": {
              "type": "string",
              "description": "Articles"
            }
          },
          "required": [
            "to",
            "article"
          ]
        }
      },
      {
        "name": "UtilityTools.Search.shareWebPage",
        "description": "Share the current page to other platforms/media",
        "parameters": {
          "type": "object",
          "properties": {
            "media": {
              "type": "string",
              "description": "Media or platform to share"
            },
            "person": {
              "type": "string",
              "description": "Specify who to share with"
            }
          },
          "required": [
            "media",
            "person"
          ]
        }
      },
      {
        "name": "MusicRadio.Karaoke.shareKsongWorks",
        "description": "Share work based on song name",
        "parameters": {
          "type": "object",
          "properties": {
            "song_name": {
              "type": "string",
              "description": "Song Name"
            },
            "media": {
              "type": "string",
              "description": "Media"
            },
            "name": {
              "type": "string",
              "description": "Friend name"
            }
          },
          "required": [
            "song_name",
            "media",
            "name"
          ]
        }
      },
      {
        "name": "Photography.PhotoEditing.sharePicture",
        "description": "Share photos to select locations",
        "parameters": {
          "type": "object",
          "properties": {
            "name_or_path": {
              "type": "string",
              "description": "Photo name or path"
            },
            "to": {
              "type": "string",
              "description": "Destination app name"
            }
          },
          "required": [
            "name_or_path",
            "to"
          ]
        }
      },
      {
        "name": "VideoPlayback.OnlineVideos.shareOnlineVideo",
        "description": "Share a video to other media",
        "parameters": {
          "type": "object",
          "properties": {
            "name": {
              "type": "string",
              "description": "Video Name"
            },
            "media": {
              "type": "string",
              "description": "Share video to: WeChat, etc."
            }
          },
          "required": [
            "name",
            "media"
          ]
        }
      }
    ],
    "single_tool": [
      {
        "name": "Photography.PhotoEditing.sharePicture",
        "description": "Share photos to select locations",
        "parameters": {
          "type": "object",
          "properties": {
            "name_or_path": {
              "type": "string",
              "description": "Photo name or path"
            },
            "to": {
              "type": "string",
              "description": "Destination app name"
            }
          },
          "required": [
            "name_or_path",
            "to"
          ]
        }
      }
    ],
    "id": 294
  },
  {
    "messages": [
      {
        "role": "user",
        "content": "share pictures"
      },
      {
        "role": "function call",
        "content": {
          "name": "Photography.PhotoEditing.sharePicture",
          "arguments": {}
        }
      },
      {
        "role": "assistant",
        "content": "Please provide a name or path to the photo"
      },
      {
        "role": "user",
        "content": "The name of the photo is holiday_photo.png, can I provide a download link?"
      },
      {
        "role": "function call",
        "content": {
          "name": "Photography.PhotoEditing.sharePicture",
          "arguments": {
            "name_or_path": "downloadsholiday_photo.png"
          }
        }
      },
      {
        "role": "assistant",
        "content": "Which app do you need to share photos to?"
      },
      {
        "role": "user",
        "content": "It was wrong before. Photo name or path should be family_reunion.png"
      },
      {
        "role": "function call",
        "content": {
          "name": "Photography.PhotoEditing.sharePicture",
          "arguments": {
            "name_or_path": "family_reunion.png"
          }
        }
      },
      {
        "role": "assistant",
        "content": "Which app do you need to share photos to?"
      },
      {
        "role": "user",
        "content": "I want to share my photos on Instagram."
      },
      {
        "role": "function call",
        "content": {
          "name": "Photography.PhotoEditing.sharePicture",
          "arguments": {
            "name_or_path": "family_reunion.png",
            "to": "Instagram"
          }
        }
      }
    ],
    "multiple_tools": [
      {
        "name": "SocialCommunication.Community.pinCommunityPost",
        "description": "Pin a post to a specific community",
        "parameters": {
          "type": "object",
          "properties": {
            "community_name": {
              "type": "string",
              "description": "The name of the community to pin the post to"
            },
            "post_name": {
              "type": "string",
              "description": "Title of the post to sticky"
            }
          },
          "required": [
            "community_name",
            "post_name"
          ]
        }
      },
      {
        "name": "ConvenientLiving.JobRecruitment.collectJob",
        "description": "Favorite posts of interest",
        "parameters": {
          "type": "object",
          "properties": {
            "job_name": {
              "type": "string",
              "description": "Position name"
            },
            "company_name": {
              "type": "string",
              "description": "Company name"
            }
          },
          "required": [
            "job_name",
            "company_name"
          ]
        }
      },
      {
        "name": "UtilityTools.Memo.toppingNotes",
        "description": "Stick a memo to the top based on the title",
        "parameters": {
          "type": "object",
          "properties": {
            "title": {
              "type": "string",
              "description": "Memo Title"
            },
            "category": {
              "type": "string",
              "description": "Classify"
            }
          },
          "required": [
            "title",
            "category"
          ]
        }
      },
      {
        "name": "UtilityTools.Search.searchWeb",
        "description": "Web search (text, voice, photo search default text)",
        "parameters": {
          "type": "object",
          "properties": {
            "keyword": {
              "type": "string",
              "description": "Search Content"
            },
            "type": {
              "type": "string",
              "description": "Text; Voice; Picture; Default Text"
            }
          },
          "required": [
            "keyword",
            "type"
          ]
        }
      },
      {
        "name": "Photography.PhotoEditing.sharePicture",
        "description": "Share photos to select locations",
        "parameters": {
          "type": "object",
          "properties": {
            "name_or_path": {
              "type": "string",
              "description": "Photo name or path"
            },
            "to": {
              "type": "string",
              "description": "Destination app name"
            }
          },
          "required": [
            "name_or_path",
            "to"
          ]
        }
      }
    ],
    "single_tool": [
      {
        "name": "Photography.PhotoEditing.sharePicture",
        "description": "Share photos to select locations",
        "parameters": {
          "type": "object",
          "properties": {
            "name_or_path": {
              "type": "string",
              "description": "Photo name or path"
            },
            "to": {
              "type": "string",
              "description": "Destination app name"
            }
          },
          "required": [
            "name_or_path",
            "to"
          ]
        }
      }
    ],
    "id": 295
  },
  {
    "messages": [
      {
        "role": "user",
        "content": "To capture a segment of a video."
      },
      {
        "role": "function call",
        "content": {
          "name": "Photography.VideoEditing.videoEditCut",
          "arguments": {}
        }
      },
      {
        "role": "assistant",
        "content": "What is the name or path of the video"
      },
      {
        "role": "user",
        "content": "The name of the video is birthday_party.mp4"
      },
      {
        "role": "function call",
        "content": {
          "name": "Photography.VideoEditing.videoEditCut",
          "arguments": {
            "name_or_path": "birthday_party.mp4"
          }
        }
      },
      {
        "role": "assistant",
        "content": "What is the starting time period in seconds for the video to be intercepted?"
      },
      {
        "role": "user",
        "content": "It was wrong before. The name or path of the video should be family_vacation.mp4"
      },
      {
        "role": "function call",
        "content": {
          "name": "Photography.VideoEditing.videoEditCut",
          "arguments": {
            "name_or_path": "family_vacation.mp4"
          }
        }
      },
      {
        "role": "assistant",
        "content": "What is the starting time period in seconds for the video to be intercepted?"
      },
      {
        "role": "user",
        "content": "The time point at which the video starts to be intercepted is 60 seconds."
      },
      {
        "role": "function call",
        "content": {
          "name": "Photography.VideoEditing.videoEditCut",
          "arguments": {
            "name_or_path": "family_vacation.mp4",
            "start_time": 60
          }
        }
      }
    ],
    "multiple_tools": [
      {
        "name": "MusicRadio.Karaoke.getAccompaniments",
        "description": "Get a list of song accompaniments for a given song title",
        "parameters": {
          "type": "object",
          "properties": {
            "song_name": {
              "type": "string",
              "description": "Song Name"
            },
            "singer_name": {
              "type": "string",
              "description": "Singer name"
            }
          },
          "required": [
            "song_name",
            "singer_name"
          ]
        }
      },
      {
        "name": "VideoPlayback.ShortVideos.playShortVideo",
        "description": "Watch the short video, watch from scratch by default",
        "parameters": {
          "type": "object",
          "properties": {
            "video_name": {
              "type": "string",
              "description": "Short video name"
            },
            "full_screen": {
              "type": "boolean",
              "description": "Full Screen"
            },
            "playback_speed": {
              "type": "float",
              "description": "Playback Speed"
            },
            "danmaku": {
              "type": "boolean",
              "description": "enable bullet text"
            }
          },
          "required": [
            "video_name",
            "full_screen",
            "playback_speed",
            "danmaku"
          ]
        }
      },
      {
        "name": "OnlineShopping.ExpressDelivery.placeExpressOrder",
        "description": "Initiating a Sender to a Specified Recipient",
        "parameters": {
          "type": "object",
          "properties": {
            "recipient_name": {
              "type": "string",
              "description": "Recipient's name"
            },
            "recipient_phone": {
              "type": "string",
              "description": "Recipient phone number"
            },
            "recipient_address": {
              "type": "string",
              "description": "<g id=\"Bold\">Receiver's</g> <g id=\"Bold\">Address:</g>"
            }
          },
          "required": [
            "recipient_name",
            "recipient_phone",
            "recipient_address"
          ]
        }
      },
      {
        "name": "NewsMagazines.NewspapersMagazines.getMagazine",
        "description": "Get a magazine based on its name, number of issues, etc.",
        "parameters": {
          "type": "object",
          "properties": {
            "name": {
              "type": "string",
              "description": "Magazine Name"
            },
            "issue": {
              "type": "string",
              "description": "Number of periods"
            }
          },
          "required": [
            "name",
            "issue"
          ]
        }
      },
      {
        "name": "Photography.VideoEditing.videoEditCut",
        "description": "Capture clips from specific time periods in the video",
        "parameters": {
          "type": "object",
          "properties": {
            "name_or_path": {
              "type": "string",
              "description": "The name or path of the video"
            },
            "start_time": {
              "type": "integer",
              "description": "Start time period for capturing video, in seconds"
            },
            "end_time": {
              "type": "integer",
              "description": "End time period for intercepted video, in seconds"
            }
          },
          "required": [
            "name_or_path",
            "start_time",
            "end_time"
          ]
        }
      }
    ],
    "single_tool": [
      {
        "name": "Photography.VideoEditing.videoEditCut",
        "description": "Capture clips from specific time periods in the video",
        "parameters": {
          "type": "object",
          "properties": {
            "name_or_path": {
              "type": "string",
              "description": "The name or path of the video"
            },
            "start_time": {
              "type": "integer",
              "description": "Start time period for capturing video, in seconds"
            },
            "end_time": {
              "type": "integer",
              "description": "End time period for intercepted video, in seconds"
            }
          },
          "required": [
            "name_or_path",
            "start_time",
            "end_time"
          ]
        }
      }
    ],
    "id": 298
  },
  {
    "messages": [
      {
        "role": "user",
        "content": "Video clip capture"
      },
      {
        "role": "function call",
        "content": {
          "name": "Photography.VideoEditing.videoEditCut",
          "arguments": {}
        }
      },
      {
        "role": "assistant",
        "content": "Please provide a name or path for the video"
      },
      {
        "role": "user",
        "content": "The name of the video is holiday_vacation.mp4"
      },
      {
        "role": "function call",
        "content": {
          "name": "Photography.VideoEditing.videoEditCut",
          "arguments": {
            "name_or_path": "holiday_vacation.mp4"
          }
        }
      },
      {
        "role": "assistant",
        "content": "What is the starting time period in seconds for the video to be intercepted?"
      },
      {
        "role": "user",
        "content": "It was wrong before. The name or path of the video should be family_vacation.mp4"
      },
      {
        "role": "function call",
        "content": {
          "name": "Photography.VideoEditing.videoEditCut",
          "arguments": {
            "name_or_path": "family_vacation.mp4"
          }
        }
      },
      {
        "role": "assistant",
        "content": "What is the starting time period in seconds for the video to be intercepted?"
      },
      {
        "role": "user",
        "content": "Capture the video after 30 seconds."
      },
      {
        "role": "function call",
        "content": {
          "name": "Photography.VideoEditing.videoEditCut",
          "arguments": {
            "name_or_path": "family_vacation.mp4",
            "start_time": 30
          }
        }
      }
    ],
    "multiple_tools": [
      {
        "name": "UtilityTools.AIGC.aigcVQA",
        "description": "Answer the question based on the content of the image",
        "parameters": {
          "type": "object",
          "properties": {
            "file": {
              "type": "string",
              "description": "Enter the URL for your photo"
            },
            "question": {
              "type": "string",
              "description": "Problem description"
            }
          },
          "required": [
            "file",
            "question"
          ]
        }
      },
      {
        "name": "VideoPlayback.ShortVideos.playShortVideo",
        "description": "Watch the short video, watch from scratch by default",
        "parameters": {
          "type": "object",
          "properties": {
            "video_name": {
              "type": "string",
              "description": "Short video name"
            },
            "full_screen": {
              "type": "boolean",
              "description": "Full Screen"
            },
            "playback_speed": {
              "type": "float",
              "description": "Playback Speed"
            },
            "danmaku": {
              "type": "boolean",
              "description": "enable bullet text"
            }
          },
          "required": [
            "video_name",
            "full_screen",
            "playback_speed",
            "danmaku"
          ]
        }
      },
      {
        "name": "Photography.VideoEditing.videoEditCut",
        "description": "Capture clips from specific time periods in the video",
        "parameters": {
          "type": "object",
          "properties": {
            "name_or_path": {
              "type": "string",
              "description": "The name or path of the video"
            },
            "start_time": {
              "type": "integer",
              "description": "Start time period for capturing video, in seconds"
            },
            "end_time": {
              "type": "integer",
              "description": "End time period for intercepted video, in seconds"
            }
          },
          "required": [
            "name_or_path",
            "start_time",
            "end_time"
          ]
        }
      },
      {
        "name": "OfficeSoftware.Documents.getDocumentStatistics",
        "description": "Get statistics for a given document, such as the number of words, pages, etc.",
        "parameters": {
          "type": "object",
          "properties": {
            "document_name": {
              "type": "string",
              "description": "To get the document name of the statistic, it is required"
            }
          },
          "required": [
            "document_name"
          ]
        }
      },
      {
        "name": "NewsMagazines.NewspapersMagazines.getMagazine",
        "description": "Get a magazine based on its name, number of issues, etc.",
        "parameters": {
          "type": "object",
          "properties": {
            "name": {
              "type": "string",
              "description": "Magazine Name"
            },
            "issue": {
              "type": "string",
              "description": "Number of periods"
            }
          },
          "required": [
            "name",
            "issue"
          ]
        }
      }
    ],
    "single_tool": [
      {
        "name": "Photography.VideoEditing.videoEditCut",
        "description": "Capture clips from specific time periods in the video",
        "parameters": {
          "type": "object",
          "properties": {
            "name_or_path": {
              "type": "string",
              "description": "The name or path of the video"
            },
            "start_time": {
              "type": "integer",
              "description": "Start time period for capturing video, in seconds"
            },
            "end_time": {
              "type": "integer",
              "description": "End time period for intercepted video, in seconds"
            }
          },
          "required": [
            "name_or_path",
            "start_time",
            "end_time"
          ]
        }
      }
    ],
    "id": 299
  },
  {
    "messages": [
      {
        "role": "user",
        "content": "Crop the size of the video, but there are no specific parameters, can you help me deal with it?"
      },
      {
        "role": "function call",
        "content": {
          "name": "Photography.VideoEditing.videoCrop",
          "arguments": {}
        }
      },
      {
        "role": "assistant",
        "content": "What is the name or path of the video"
      },
      {
        "role": "user",
        "content": "The name of the video is test_video.mp4, located in my downloads folder."
      },
      {
        "role": "function call",
        "content": {
          "name": "Photography.VideoEditing.videoCrop",
          "arguments": {
            "name_or_path": "test_video.mp4"
          }
        }
      },
      {
        "role": "assistant",
        "content": "What is the height of the video crop?"
      },
      {
        "role": "user",
        "content": "It was wrong before. The name or path of the video should be D:/Videos/myTrip-to-Bali.mkv"
      },
      {
        "role": "function call",
        "content": {
          "name": "Photography.VideoEditing.videoCrop",
          "arguments": {
            "name_or_path": "D:/Videos/myTrip-to-Bali.mkv"
          }
        }
      },
      {
        "role": "assistant",
        "content": "What is the height of the video crop?"
      },
      {
        "role": "user",
        "content": "The height of the video crop is 540 pixels."
      },
      {
        "role": "function call",
        "content": {
          "name": "Photography.VideoEditing.videoCrop",
          "arguments": {
            "name_or_path": "D:/Videos/myTrip-to-Bali.mkv",
            "height": 540
          }
        }
      }
    ],
    "multiple_tools": [
      {
        "name": "Photography.VideoEditing.videoCrop",
        "description": "Crop video dimensions",
        "parameters": {
          "type": "object",
          "properties": {
            "name_or_path": {
              "type": "string",
              "description": "The name or path of the video"
            },
            "height": {
              "type": "integer",
              "description": "Video crop height"
            },
            "wide": {
              "type": "integer",
              "description": "Video crop width"
            }
          },
          "required": [
            "name_or_path",
            "height",
            "wide"
          ]
        }
      },
      {
        "name": "ConvenientLiving.JobRecruitment.setJobPositionVisibility",
        "description": "Set if the position is visible to the candidate",
        "parameters": {
          "type": "object",
          "properties": {
            "position_name": {
              "type": "string",
              "description": "Job title, required"
            },
            "visibility": {
              "type": "boolean",
              "description": "Visibility, required"
            }
          },
          "required": [
            "position_name",
            "visibility"
          ]
        }
      },
      {
        "name": "SystemTools.SystemSettings.setSystemDataUsage",
        "description": "Set maximum limits and early warning thresholds for your phone's data usage",
        "parameters": {
          "type": "object",
          "properties": {
            "data_limit": {
              "type": "integer",
              "description": "Maximum data usage limit in GB"
            },
            "warning_threshold": {
              "type": "integer",
              "description": "Traffic warning threshold in GB"
            }
          },
          "required": [
            "data_limit",
            "warning_threshold"
          ]
        }
      },
      {
        "name": "OfficeSoftware.CloudStorage.netdiskSetFileAccessPermission",
        "description": "Set access rights for files in Drive",
        "parameters": {
          "type": "object",
          "properties": {
            "file_path": {
              "type": "string",
              "description": "File Path"
            },
            "permission_level": {
              "type": "string",
              "description": "Permission level, such as public, private, etc."
            }
          },
          "required": [
            "file_path",
            "permission_level"
          ]
        }
      },
      {
        "name": "UtilityTools.AIGC.aigcTextSummary",
        "description": "Compress longer text content, retaining only the main information and key points of the original text",
        "parameters": {
          "type": "object",
          "properties": {
            "text": {
              "type": "string",
              "description": "Long text content"
            }
          },
          "required": [
            "text"
          ]
        }
      }
    ],
    "single_tool": [
      {
        "name": "Photography.VideoEditing.videoCrop",
        "description": "Crop video dimensions",
        "parameters": {
          "type": "object",
          "properties": {
            "name_or_path": {
              "type": "string",
              "description": "The name or path of the video"
            },
            "height": {
              "type": "integer",
              "description": "Video crop height"
            },
            "wide": {
              "type": "integer",
              "description": "Video crop width"
            }
          },
          "required": [
            "name_or_path",
            "height",
            "wide"
          ]
        }
      }
    ],
    "id": 306
  },
  {
    "messages": [
      {
        "role": "user",
        "content": "Resize the video."
      },
      {
        "role": "function call",
        "content": {
          "name": "Photography.VideoEditing.videoCrop",
          "arguments": {}
        }
      },
      {
        "role": "assistant",
        "content": "What is the name or path of the video"
      },
      {
        "role": "user",
        "content": "The name of the video is my_video.mp4, located in my downloads folder."
      },
      {
        "role": "function call",
        "content": {
          "name": "Photography.VideoEditing.videoCrop",
          "arguments": {
            "name_or_path": "my_video.mp4"
          }
        }
      },
      {
        "role": "assistant",
        "content": "What is the height of the video crop?"
      },
      {
        "role": "user",
        "content": "It was wrong before. The name or path of the video should be D:/Videos/myTrip-to-Bali.mkv"
      },
      {
        "role": "function call",
        "content": {
          "name": "Photography.VideoEditing.videoCrop",
          "arguments": {
            "name_or_path": "D:/Videos/myTrip-to-Bali.mkv"
          }
        }
      },
      {
        "role": "assistant",
        "content": "What is the height of the video crop?"
      },
      {
        "role": "user",
        "content": "The height of the video crop is 720 pixels."
      },
      {
        "role": "function call",
        "content": {
          "name": "Photography.VideoEditing.videoCrop",
          "arguments": {
            "name_or_path": "D:/Videos/myTrip-to-Bali.mkv",
            "height": 720
          }
        }
      }
    ],
    "multiple_tools": [
      {
        "name": "Finance.Banking.redempteFinancialProducts",
        "description": "Redeem purchased wealth management products",
        "parameters": {
          "type": "object",
          "properties": {
            "product": {
              "type": "string",
              "description": "Name of financial product"
            },
            "redempte_amount": {
              "type": "float",
              "description": "Redemption Amount"
            }
          },
          "required": [
            "product",
            "redempte_amount"
          ]
        }
      },
      {
        "name": "SocialCommunication.Community.restoreHiddenCommunityPost",
        "description": "Restore hidden posts in selected communities",
        "parameters": {
          "type": "object",
          "properties": {
            "community_name": {
              "type": "string",
              "description": "The name of the community where the post is located"
            },
            "post_name": {
              "type": "string",
              "description": "Title of the hidden post to restore"
            }
          },
          "required": [
            "community_name",
            "post_name"
          ]
        }
      },
      {
        "name": "VideoPlayback.ShortVideos.favouriteShortVideo",
        "description": "Favorite or unfavorite a short video",
        "parameters": {
          "type": "object",
          "properties": {
            "name": {
              "type": "string",
              "description": "Short video name"
            },
            "favourite": {
              "type": "boolean",
              "description": "Favorite/Cancel"
            }
          },
          "required": [
            "name",
            "favourite"
          ]
        }
      },
      {
        "name": "Photography.VideoEditing.videoCrop",
        "description": "Crop video dimensions",
        "parameters": {
          "type": "object",
          "properties": {
            "name_or_path": {
              "type": "string",
              "description": "The name or path of the video"
            },
            "height": {
              "type": "integer",
              "description": "Video crop height"
            },
            "wide": {
              "type": "integer",
              "description": "Video crop width"
            }
          },
          "required": [
            "name_or_path",
            "height",
            "wide"
          ]
        }
      },
      {
        "name": "Finance.Funds.redeemFund",
        "description": "Redeem the designated amount of the designated fund based on the name or code of the fund",
        "parameters": {
          "type": "object",
          "properties": {
            "fund_name": {
              "type": "string",
              "description": "Fund name"
            },
            "fund_code": {
              "type": "string",
              "description": "Fund  Code"
            },
            "amount": {
              "type": "float",
              "description": "Amount"
            }
          },
          "required": [
            "fund_name",
            "fund_code",
            "amount"
          ]
        }
      }
    ],
    "single_tool": [
      {
        "name": "Photography.VideoEditing.videoCrop",
        "description": "Crop video dimensions",
        "parameters": {
          "type": "object",
          "properties": {
            "name_or_path": {
              "type": "string",
              "description": "The name or path of the video"
            },
            "height": {
              "type": "integer",
              "description": "Video crop height"
            },
            "wide": {
              "type": "integer",
              "description": "Video crop width"
            }
          },
          "required": [
            "name_or_path",
            "height",
            "wide"
          ]
        }
      }
    ],
    "id": 307
  },
  {
    "messages": [
      {
        "role": "user",
        "content": "Share this video"
      },
      {
        "role": "function call",
        "content": {
          "name": "Photography.VideoEditing.shareVideo",
          "arguments": {}
        }
      },
      {
        "role": "assistant",
        "content": "What is the name or path of the video"
      },
      {
        "role": "user",
        "content": "The name of the video is test.jpg, but note that this appears to be an image file."
      },
      {
        "role": "function call",
        "content": {
          "name": "Photography.VideoEditing.shareVideo",
          "arguments": {
            "name_or_path": "test.jpg"
          }
        }
      },
      {
        "role": "assistant",
        "content": "Please provide the destination app name"
      },
      {
        "role": "user",
        "content": "It was wrong before. The name or path of the video should be family_gatherings.mov"
      },
      {
        "role": "function call",
        "content": {
          "name": "Photography.VideoEditing.shareVideo",
          "arguments": {
            "name_or_path": "family_gatherings.mov"
          }
        }
      },
      {
        "role": "assistant",
        "content": "Please provide the destination app name"
      },
      {
        "role": "user",
        "content": "QQ"
      },
      {
        "role": "function call",
        "content": {
          "name": "Photography.VideoEditing.shareVideo",
          "arguments": {
            "name_or_path": "family_gatherings.mov",
            "to": "QQ"
          }
        }
      }
    ],
    "multiple_tools": [
      {
        "name": "Photography.VideoEditing.shareVideo",
        "description": "Share videos to designated locations",
        "parameters": {
          "type": "object",
          "properties": {
            "name_or_path": {
              "type": "string",
              "description": "The name or path of the video"
            },
            "to": {
              "type": "string",
              "description": "Destination app name"
            }
          },
          "required": [
            "name_or_path",
            "to"
          ]
        }
      },
      {
        "name": "Navigation.MapNavigation.shareTravelRoute",
        "description": "Share travel plans or directions",
        "parameters": {
          "type": "object",
          "properties": {
            "departure": {
              "type": "string",
              "description": "The name or address of the departure location, the default current location"
            },
            "destination": {
              "type": "string",
              "description": "Name or address of the destination"
            },
            "to": {
              "type": "string",
              "description": "Ways to share, like social media, texting, etc."
            }
          },
          "required": [
            "departure",
            "destination",
            "to"
          ]
        }
      },
      {
        "name": "SocialCommunication.Community.shareCommunityPost",
        "description": "Share a specific post to a specific medium or to someone",
        "parameters": {
          "type": "object",
          "properties": {
            "community_name": {
              "type": "string",
              "description": "The name of the community where the post is located"
            },
            "title": {
              "type": "string",
              "description": "Prev Post Caption"
            },
            "medium": {
              "type": "string",
              "description": "Share media"
            },
            "user_name": {
              "type": "string",
              "description": "Shared by"
            }
          },
          "required": [
            "community_name",
            "title",
            "medium",
            "user_name"
          ]
        }
      },
      {
        "name": "Navigation.TaxiCarRental.shareTaxiOrder",
        "description": "Share route",
        "parameters": {
          "type": "object",
          "properties": {
            "time": {
              "type": "string",
              "description": "Order time"
            },
            "destination": {
              "type": "string",
              "description": "destination"
            },
            "media": {
              "type": "string",
              "description": "Choose Socials To Share Single Post"
            }
          },
          "required": [
            "time",
            "destination",
            "media"
          ]
        }
      },
      {
        "name": "VideoPlayback.OnlineVideos.shareOnlineVideo",
        "description": "Share a video to other media",
        "parameters": {
          "type": "object",
          "properties": {
            "name": {
              "type": "string",
              "description": "Video Name"
            },
            "media": {
              "type": "string",
              "description": "Share video to: WeChat, etc."
            }
          },
          "required": [
            "name",
            "media"
          ]
        }
      }
    ],
    "single_tool": [
      {
        "name": "Photography.VideoEditing.shareVideo",
        "description": "Share videos to designated locations",
        "parameters": {
          "type": "object",
          "properties": {
            "name_or_path": {
              "type": "string",
              "description": "The name or path of the video"
            },
            "to": {
              "type": "string",
              "description": "Destination app name"
            }
          },
          "required": [
            "name_or_path",
            "to"
          ]
        }
      }
    ],
    "id": 319
  },
  {
    "messages": [
      {
        "role": "user",
        "content": "I have a video I want to share with my friends"
      },
      {
        "role": "function call",
        "content": {
          "name": "Photography.VideoEditing.shareVideo",
          "arguments": {}
        }
      },
      {
        "role": "assistant",
        "content": "What is the name or path of the video"
      },
      {
        "role": "user",
        "content": "The name of the video is holiday.mp4, located in my downloads folder."
      },
      {
        "role": "function call",
        "content": {
          "name": "Photography.VideoEditing.shareVideo",
          "arguments": {
            "name_or_path": "holiday.mp4"
          }
        }
      },
      {
        "role": "assistant",
        "content": "Please provide the destination app name"
      },
      {
        "role": "user",
        "content": "It was wrong before. The name or path of the video should be family_gatherings.mov"
      },
      {
        "role": "function call",
        "content": {
          "name": "Photography.VideoEditing.shareVideo",
          "arguments": {
            "name_or_path": "family_gatherings.mov"
          }
        }
      },
      {
        "role": "assistant",
        "content": "Please provide the destination app name"
      },
      {
        "role": "user",
        "content": "WeChat"
      },
      {
        "role": "function call",
        "content": {
          "name": "Photography.VideoEditing.shareVideo",
          "arguments": {
            "name_or_path": "family_gatherings.mov",
            "to": "WeChat"
          }
        }
      }
    ],
    "multiple_tools": [
      {
        "name": "Travel.ItineraryServices.shareTravelItinerary",
        "description": "Sharing travel itineraries to designated locations",
        "parameters": {
          "type": "object",
          "properties": {
            "name": {
              "type": "string",
              "description": "Trip name or keyword"
            },
            "to": {
              "type": "string",
              "description": "Destination app name"
            }
          },
          "required": [
            "name",
            "to"
          ]
        }
      },
      {
        "name": "SocialCommunication.SocialMedia.mediumContinue",
        "description": "Forwarding actions on specified dynamics",
        "parameters": {
          "type": "object",
          "properties": {
            "medium_name": {
              "type": "string",
              "description": "Media name"
            },
            "correlation": {
              "type": "string",
              "description": "Dynamic Related Content"
            },
            "publisher": {
              "type": "string",
              "description": "Posted by/publisher?"
            },
            "publish_time": {
              "type": "string",
              "description": "Release Date"
            }
          },
          "required": [
            "medium_name",
            "correlation",
            "publisher",
            "publish_time"
          ]
        }
      },
      {
        "name": "Photography.VideoEditing.shareVideo",
        "description": "Share videos to designated locations",
        "parameters": {
          "type": "object",
          "properties": {
            "name_or_path": {
              "type": "string",
              "description": "The name or path of the video"
            },
            "to": {
              "type": "string",
              "description": "Destination app name"
            }
          },
          "required": [
            "name_or_path",
            "to"
          ]
        }
      },
      {
        "name": "Health.Fitness.shareExerciseProgress",
        "description": "Share your fitness progress with the people you want to share it with",
        "parameters": {
          "type": "object",
          "properties": {
            "target": {
              "type": "string",
              "description": "Share with"
            },
            "exercise_progress": {
              "type": "string",
              "description": "Fitness Progress"
            }
          },
          "required": [
            "target",
            "exercise_progress"
          ]
        }
      },
      {
        "name": "Navigation.MapNavigation.shareTravelRoute",
        "description": "Share travel plans or directions",
        "parameters": {
          "type": "object",
          "properties": {
            "departure": {
              "type": "string",
              "description": "The name or address of the departure location, the default current location"
            },
            "destination": {
              "type": "string",
              "description": "Name or address of the destination"
            },
            "to": {
              "type": "string",
              "description": "Ways to share, like social media, texting, etc."
            }
          },
          "required": [
            "departure",
            "destination",
            "to"
          ]
        }
      }
    ],
    "single_tool": [
      {
        "name": "Photography.VideoEditing.shareVideo",
        "description": "Share videos to designated locations",
        "parameters": {
          "type": "object",
          "properties": {
            "name_or_path": {
              "type": "string",
              "description": "The name or path of the video"
            },
            "to": {
              "type": "string",
              "description": "Destination app name"
            }
          },
          "required": [
            "name_or_path",
            "to"
          ]
        }
      }
    ],
    "id": 320
  },
  {
    "messages": [
      {
        "role": "user",
        "content": "Find some stories for the doll"
      },
      {
        "role": "function call",
        "content": {
          "name": "Education.ChildrenEducation.searchChildStory",
          "arguments": {}
        }
      },
      {
        "role": "assistant",
        "content": "Who's the author? "
      },
      {
        "role": "user",
        "content": "The author is Luo Guanzhong, who wrote The Romance of the Three Kingdoms."
      },
      {
        "role": "function call",
        "content": {
          "name": "Education.ChildrenEducation.searchChildStory",
          "arguments": {
            "author": "Luo Guanzhong"
          }
        }
      },
      {
        "role": "assistant",
        "content": "What is a publishing house?"
      },
      {
        "role": "user",
        "content": "It was wrong before. Author should be Ea So"
      },
      {
        "role": "function call",
        "content": {
          "name": "Education.ChildrenEducation.searchChildStory",
          "arguments": {
            "author": "Ea So"
          }
        }
      },
      {
        "role": "assistant",
        "content": "What is a publishing house?"
      },
      {
        "role": "user",
        "content": "The publisher is China Books."
      },
      {
        "role": "function call",
        "content": {
          "name": "Education.ChildrenEducation.searchChildStory",
          "arguments": {
            "author": "Ea So",
            "publish": "Zhonghua Bookstore"
          }
        }
      }
    ],
    "multiple_tools": [
      {
        "name": "OfficeSoftware.Email.searchMail",
        "description": "Search messages by email keyword",
        "parameters": {
          "type": "object",
          "properties": {
            "keyword": {
              "type": "string",
              "description": "KEYWORDS"
            },
            "max_results": {
              "type": "integer",
              "description": "Maximum number of returned results, default is 10"
            }
          },
          "required": [
            "keyword",
            "max_results"
          ]
        }
      },
      {
        "name": "OfficeSoftware.Documents.searchDocuments",
        "description": "Search documents by keyword",
        "parameters": {
          "type": "object",
          "properties": {
            "keyword": {
              "type": "string",
              "description": "Search keywords, required"
            }
          },
          "required": [
            "keyword"
          ]
        }
      },
      {
        "name": "VideoPlayback.ShortVideos.searchShortVideo",
        "description": "Search for short videos based on keywords (vlog blogger/video keywords/taxonomy keywords)",
        "parameters": {
          "type": "object",
          "properties": {
            "keyword": {
              "type": "string",
              "description": "Short video blogger name/video keyword search"
            },
            "type": {
              "type": "string",
              "description": "Recommended, Popular, Chase, Film and TV New Journey/Reference bilibili, etc."
            },
            "datetime": {
              "type": "string",
              "description": "Release time: unlimited, within a day, within a week, within half a year"
            },
            "duration": {
              "type": "string",
              "description": "Video time: unlimited, 1 minute, 1--5 minutes, more than 5 minutes"
            },
            "ai_search": {
              "type": "string",
              "description": "Based on search history, viewing history can only be searched"
            }
          },
          "required": [
            "keyword",
            "type",
            "datetime",
            "duration",
            "ai_search"
          ]
        }
      },
      {
        "name": "Education.ChildrenEducation.searchChildStory",
        "description": "Search Stories for Kids",
        "parameters": {
          "type": "object",
          "properties": {
            "story_type": {
              "type": "string",
              "description": "Types of stories, such as fairy tales, allegorical stories"
            },
            "author": {
              "type": "string",
              "description": "Author"
            },
            "publish": {
              "type": "string",
              "description": "a publishing house"
            }
          },
          "required": [
            "story_type",
            "author",
            "publish"
          ]
        }
      },
      {
        "name": "VideoPlayback.OnlineVideos.searchOnlineVideo",
        "description": "Search online videos, which can be searched based on keywords (director/publisher/video keywords); can be searched based on categories; can be searched based on AI smart search",
        "parameters": {
          "type": "object",
          "properties": {
            "keyword": {
              "type": "array",
              "description": "Director/Publisher/Video Keyword Search"
            },
            "video_type": {
              "type": "string",
              "description": "Video Type Categories, Recommended, Popular, Chase, Film and Television New Journey"
            },
            "ai_search": {
              "type": "string",
              "description": "Based on search history, viewing history can only be turned off by default"
            }
          },
          "required": [
            "keyword",
            "video_type",
            "ai_search"
          ]
        }
      }
    ],
    "single_tool": [
      {
        "name": "Education.ChildrenEducation.searchChildStory",
        "description": "Search Stories for Kids",
        "parameters": {
          "type": "object",
          "properties": {
            "story_type": {
              "type": "string",
              "description": "Types of stories, such as fairy tales, allegorical stories"
            },
            "author": {
              "type": "string",
              "description": "Author"
            },
            "publish": {
              "type": "string",
              "description": "a publishing house"
            }
          },
          "required": [
            "story_type",
            "author",
            "publish"
          ]
        }
      }
    ],
    "id": 321
  },
  {
    "messages": [
      {
        "role": "user",
        "content": "Search for children's stories"
      },
      {
        "role": "function call",
        "content": {
          "name": "Education.ChildrenEducation.searchChildStory",
          "arguments": {}
        }
      },
      {
        "role": "assistant",
        "content": "Who's the author? "
      },
      {
        "role": "user",
        "content": "The authors were the Grimm brothers, who also wrote many other famous fairy tales."
      },
      {
        "role": "function call",
        "content": {
          "name": "Education.ChildrenEducation.searchChildStory",
          "arguments": {
            "author": "Brother Grimm"
          }
        }
      },
      {
        "role": "assistant",
        "content": "Which publisher?"
      },
      {
        "role": "user",
        "content": "It was wrong before. Author should be Ea So"
      },
      {
        "role": "function call",
        "content": {
          "name": "Education.ChildrenEducation.searchChildStory",
          "arguments": {
            "author": "Ea So"
          }
        }
      },
      {
        "role": "assistant",
        "content": "Which publisher?"
      },
      {
        "role": "user",
        "content": "The publishing house is a foreign language teaching and research publishing house."
      },
      {
        "role": "function call",
        "content": {
          "name": "Education.ChildrenEducation.searchChildStory",
          "arguments": {
            "author": "Ea So",
            "publish": "Foreign Language Teaching and Research Press."
          }
        }
      }
    ],
    "multiple_tools": [
      {
        "name": "Health.HealthManagement.searchHealthArticle",
        "description": "Search health article reports by keyword",
        "parameters": {
          "type": "object",
          "properties": {
            "keyword": {
              "type": "string",
              "description": "Keywords"
            }
          },
          "required": [
            "keyword"
          ]
        }
      },
      {
        "name": "VideoPlayback.ShortVideos.searchShortVideo",
        "description": "Search for short videos based on keywords (vlog blogger/video keywords/taxonomy keywords)",
        "parameters": {
          "type": "object",
          "properties": {
            "keyword": {
              "type": "string",
              "description": "Short video blogger name/video keyword search"
            },
            "type": {
              "type": "string",
              "description": "Recommended, Popular, Chase, Film and TV New Journey/Reference bilibili, etc."
            },
            "datetime": {
              "type": "string",
              "description": "Release time: unlimited, within a day, within a week, within half a year"
            },
            "duration": {
              "type": "string",
              "description": "Video time: unlimited, 1 minute, 1--5 minutes, more than 5 minutes"
            },
            "ai_search": {
              "type": "string",
              "description": "Based on search history, viewing history can only be searched"
            }
          },
          "required": [
            "keyword",
            "type",
            "datetime",
            "duration",
            "ai_search"
          ]
        }
      },
      {
        "name": "Education.ChildrenEducation.searchChildStory",
        "description": "Search Stories for Kids",
        "parameters": {
          "type": "object",
          "properties": {
            "story_type": {
              "type": "string",
              "description": "Types of stories, such as fairy tales, allegorical stories"
            },
            "author": {
              "type": "string",
              "description": "Author"
            },
            "publish": {
              "type": "string",
              "description": "a publishing house"
            }
          },
          "required": [
            "story_type",
            "author",
            "publish"
          ]
        }
      },
      {
        "name": "NewsMagazines.NewspapersMagazines.searchArticles",
        "description": "Search articles by keyword",
        "parameters": {
          "type": "object",
          "properties": {
            "keyword": {
              "type": "string",
              "description": "Keywords"
            }
          },
          "required": [
            "keyword"
          ]
        }
      },
      {
        "name": "VideoPlayback.OnlineVideos.searchOnlineVideo",
        "description": "Search online videos, which can be searched based on keywords (director/publisher/video keywords); can be searched based on categories; can be searched based on AI smart search",
        "parameters": {
          "type": "object",
          "properties": {
            "keyword": {
              "type": "array",
              "description": "Director/Publisher/Video Keyword Search"
            },
            "video_type": {
              "type": "string",
              "description": "Video Type Categories, Recommended, Popular, Chase, Film and Television New Journey"
            },
            "ai_search": {
              "type": "string",
              "description": "Based on search history, viewing history can only be turned off by default"
            }
          },
          "required": [
            "keyword",
            "video_type",
            "ai_search"
          ]
        }
      }
    ],
    "single_tool": [
      {
        "name": "Education.ChildrenEducation.searchChildStory",
        "description": "Search Stories for Kids",
        "parameters": {
          "type": "object",
          "properties": {
            "story_type": {
              "type": "string",
              "description": "Types of stories, such as fairy tales, allegorical stories"
            },
            "author": {
              "type": "string",
              "description": "Author"
            },
            "publish": {
              "type": "string",
              "description": "a publishing house"
            }
          },
          "required": [
            "story_type",
            "author",
            "publish"
          ]
        }
      }
    ],
    "id": 322
  },
  {
    "messages": [
      {
        "role": "user",
        "content": "Give my opinion on the course"
      },
      {
        "role": "function call",
        "content": {
          "name": "Education.OnlineClasses.postCourseReview",
          "arguments": {}
        }
      },
      {
        "role": "assistant",
        "content": "Please provide your evaluation of the course"
      },
      {
        "role": "user",
        "content": "Coach Li's guidance was very professional and the course was at a moderate pace, which not only allowed me to learn a lot of practical skills, but also helped me to relax and recommend it to friends who wanted to relax."
      },
      {
        "role": "function call",
        "content": {
          "name": "Education.OnlineClasses.postCourseReview",
          "arguments": {
            "content": "Coach Li's guidance is very professional and the course is at a moderate pace, which is recommended for friends who want to relax."
          }
        }
      },
      {
        "role": "assistant",
        "content": "Please provide a project title."
      },
      {
        "role": "user",
        "content": "It was wrong before. Review Content should be The course content is practical and suitable for commercial photographers who want to improve their shooting skills."
      },
      {
        "role": "function call",
        "content": {
          "name": "Education.OnlineClasses.postCourseReview",
          "arguments": {
            "content": "The course content is practical and suitable for commercial photographers who want to improve their shooting skills."
          }
        }
      },
      {
        "role": "assistant",
        "content": "Please provide a project title."
      },
      {
        "role": "user",
        "content": "Yoga Beginner Tutorial"
      },
      {
        "role": "function call",
        "content": {
          "name": "Education.OnlineClasses.postCourseReview",
          "arguments": {
            "content": "The course content is practical and suitable for commercial photographers who want to improve their shooting skills.",
            "course_name": "Yoga Beginner Tutorial"
          }
        }
      }
    ],
    "multiple_tools": [
      {
        "name": "Education.OnlineClasses.postCourseReview",
        "description": "User commented on a given course",
        "parameters": {
          "type": "object",
          "properties": {
            "course_name": {
              "type": "string",
              "description": "Course Title"
            },
            "teacher_name": {
              "type": "string",
              "description": "Educator name:"
            },
            "content": {
              "type": "string",
              "description": "Review Content"
            }
          },
          "required": [
            "course_name",
            "teacher_name",
            "content"
          ]
        }
      },
      {
        "name": "Education.OnlineClasses.getCourseReviews",
        "description": "Get user reviews for a given course",
        "parameters": {
          "type": "object",
          "properties": {
            "course_name": {
              "type": "string",
              "description": "Course Title"
            },
            "teacher_name": {
              "type": "string",
              "description": "Educator name:"
            }
          },
          "required": [
            "course_name",
            "teacher_name"
          ]
        }
      },
      {
        "name": "ConvenientLiving.GovernmentServices.createPolicyFeedback",
        "description": "Submit feedback on State Council policy",
        "parameters": {
          "type": "object",
          "properties": {
            "policy_name": {
              "type": "string",
              "description": "Name of the policy being fed back"
            }
          },
          "required": [
            "policy_name"
          ]
        }
      },
      {
        "name": "SocialCommunication.Community.createCommunityComment",
        "description": "Create a new comment under a post in a specific community",
        "parameters": {
          "type": "object",
          "properties": {
            "community_name": {
              "type": "string",
              "description": "The name of the community where you want to create the review"
            },
            "post_name": {
              "type": "string",
              "description": "Title of the post to comment on"
            },
            "comment": {
              "type": "string",
              "description": "The content of the review"
            }
          },
          "required": [
            "community_name",
            "post_name",
            "comment"
          ]
        }
      },
      {
        "name": "Travel.ScenicAreaServices.addScenicSpotComment",
        "description": "Comment on user-specified scenic spots",
        "parameters": {
          "type": "object",
          "properties": {
            "name": {
              "type": "string",
              "description": "Name of the tourist area"
            },
            "comment": {
              "type": "string",
              "description": "Comments"
            }
          },
          "required": [
            "name",
            "comment"
          ]
        }
      }
    ],
    "single_tool": [
      {
        "name": "Education.OnlineClasses.postCourseReview",
        "description": "User commented on a given course",
        "parameters": {
          "type": "object",
          "properties": {
            "course_name": {
              "type": "string",
              "description": "Course Title"
            },
            "teacher_name": {
              "type": "string",
              "description": "Educator name:"
            },
            "content": {
              "type": "string",
              "description": "Review Content"
            }
          },
          "required": [
            "course_name",
            "teacher_name",
            "content"
          ]
        }
      }
    ],
    "id": 333
  },
  {
    "messages": [
      {
        "role": "user",
        "content": "It feels good, I want to share my lesson experience"
      },
      {
        "role": "function call",
        "content": {
          "name": "Education.OnlineClasses.postCourseReview",
          "arguments": {}
        }
      },
      {
        "role": "assistant",
        "content": "Please provide your evaluation of the course"
      },
      {
        "role": "user",
        "content": "The theory and practice of this course are well combined, but the course is difficult and beginners are careful to choose."
      },
      {
        "role": "function call",
        "content": {
          "name": "Education.OnlineClasses.postCourseReview",
          "arguments": {
            "content": "Theory and practice are well combined, but the course is more difficult, and beginners are careful to choose."
          }
        }
      },
      {
        "role": "assistant",
        "content": "Please provide a project title."
      },
      {
        "role": "user",
        "content": "It was wrong before. Review Content should be The course content is practical and suitable for commercial photographers who want to improve their shooting skills."
      },
      {
        "role": "function call",
        "content": {
          "name": "Education.OnlineClasses.postCourseReview",
          "arguments": {
            "content": "The course content is practical and suitable for commercial photographers who want to improve their shooting skills."
          }
        }
      },
      {
        "role": "assistant",
        "content": "Please provide a project title."
      },
      {
        "role": "user",
        "content": "Advanced Financial Management"
      },
      {
        "role": "function call",
        "content": {
          "name": "Education.OnlineClasses.postCourseReview",
          "arguments": {
            "content": "The course content is practical and suitable for commercial photographers who want to improve their shooting skills.",
            "course_name": "Advanced Financial Management"
          }
        }
      }
    ],
    "multiple_tools": [
      {
        "name": "Travel.ItineraryServices.shareTravelItinerary",
        "description": "Sharing travel itineraries to designated locations",
        "parameters": {
          "type": "object",
          "properties": {
            "name": {
              "type": "string",
              "description": "Trip name or keyword"
            },
            "to": {
              "type": "string",
              "description": "Destination app name"
            }
          },
          "required": [
            "name",
            "to"
          ]
        }
      },
      {
        "name": "Health.Fitness.shareExerciseProgress",
        "description": "Share your fitness progress with the people you want to share it with",
        "parameters": {
          "type": "object",
          "properties": {
            "target": {
              "type": "string",
              "description": "Share with"
            },
            "exercise_progress": {
              "type": "string",
              "description": "Fitness Progress"
            }
          },
          "required": [
            "target",
            "exercise_progress"
          ]
        }
      },
      {
        "name": "Education.OnlineClasses.postCourseReview",
        "description": "User commented on a given course",
        "parameters": {
          "type": "object",
          "properties": {
            "course_name": {
              "type": "string",
              "description": "Course Title"
            },
            "teacher_name": {
              "type": "string",
              "description": "Educator name:"
            },
            "content": {
              "type": "string",
              "description": "Review Content"
            }
          },
          "required": [
            "course_name",
            "teacher_name",
            "content"
          ]
        }
      },
      {
        "name": "SocialCommunication.SocialMedia.mediumContinue",
        "description": "Forwarding actions on specified dynamics",
        "parameters": {
          "type": "object",
          "properties": {
            "medium_name": {
              "type": "string",
              "description": "Media name"
            },
            "correlation": {
              "type": "string",
              "description": "Dynamic Related Content"
            },
            "publisher": {
              "type": "string",
              "description": "Posted by/publisher?"
            },
            "publish_time": {
              "type": "string",
              "description": "Release Date"
            }
          },
          "required": [
            "medium_name",
            "correlation",
            "publisher",
            "publish_time"
          ]
        }
      },
      {
        "name": "OfficeSoftware.Email.collectMail",
        "description": "Favorite a specified message",
        "parameters": {
          "type": "object",
          "properties": {
            "mail_title": {
              "type": "string",
              "description": "Title of the message to favorite"
            }
          },
          "required": [
            "mail_title"
          ]
        }
      }
    ],
    "single_tool": [
      {
        "name": "Education.OnlineClasses.postCourseReview",
        "description": "User commented on a given course",
        "parameters": {
          "type": "object",
          "properties": {
            "course_name": {
              "type": "string",
              "description": "Course Title"
            },
            "teacher_name": {
              "type": "string",
              "description": "Educator name:"
            },
            "content": {
              "type": "string",
              "description": "Review Content"
            }
          },
          "required": [
            "course_name",
            "teacher_name",
            "content"
          ]
        }
      }
    ],
    "id": 334
  },
  {
    "messages": [
      {
        "role": "user",
        "content": "See what's in the news"
      },
      {
        "role": "function call",
        "content": {
          "name": "NewsMagazines.News.readNews",
          "arguments": {}
        }
      },
      {
        "role": "assistant",
        "content": "What is the name of the news source?"
      },
      {
        "role": "user",
        "content": "Finance Magazine"
      },
      {
        "role": "function call",
        "content": {
          "name": "NewsMagazines.News.readNews",
          "arguments": {
            "source_name": "Finance Magazine"
          }
        }
      },
      {
        "role": "assistant",
        "content": "Please provide a news name"
      },
      {
        "role": "user",
        "content": "It was wrong before. News Source Name should be Xinhua"
      },
      {
        "role": "function call",
        "content": {
          "name": "NewsMagazines.News.readNews",
          "arguments": {
            "source_name": "Xinhua"
          }
        }
      },
      {
        "role": "assistant",
        "content": "Please provide a news name"
      },
      {
        "role": "user",
        "content": "Latest Earnings Analysis for Tech Giants"
      },
      {
        "role": "function call",
        "content": {
          "name": "NewsMagazines.News.readNews",
          "arguments": {
            "source_name": "Xinhua",
            "news_name": "Tech giants' latest earnings report"
          }
        }
      }
    ],
    "multiple_tools": [
      {
        "name": "Navigation.PublicTransit.viewFavoriteBusRoutes",
        "description": "View the user's favorite bus routes",
        "parameters": {
          "type": "object",
          "properties": {},
          "required": []
        }
      },
      {
        "name": "ConvenientLiving.BuyingRentingHomes.getHouseComment",
        "description": "Read user reviews for selected listings",
        "parameters": {
          "type": "object",
          "properties": {
            "house_name": {
              "type": "string",
              "description": "Property name"
            }
          },
          "required": [
            "house_name"
          ]
        }
      },
      {
        "name": "NewsMagazines.News.readNews",
        "description": "Read the full content of the specified news",
        "parameters": {
          "type": "object",
          "properties": {
            "source_name": {
              "type": "string",
              "description": "News Source Name"
            },
            "news_name": {
              "type": "string",
              "description": "News Name"
            }
          },
          "required": [
            "source_name",
            "news_name"
          ]
        }
      },
      {
        "name": "OnlineShopping.Mall.searchCoupons",
        "description": "Check the coupons list",
        "parameters": {
          "type": "object",
          "properties": {},
          "required": []
        }
      },
      {
        "name": "OfficeSoftware.Conferencing.viewParticipants",
        "description": "Get a list of participants for the current meeting",
        "parameters": {
          "type": "object",
          "properties": {
            "meeting_id": {
              "type": "string",
              "description": "Conference No."
            },
            "title": {
              "type": "string",
              "description": "Meeting Title:"
            },
            "time": {
              "type": "string",
              "description": "Meeting Date"
            }
          },
          "required": [
            "meeting_id",
            "title",
            "time"
          ]
        }
      }
    ],
    "single_tool": [
      {
        "name": "NewsMagazines.News.readNews",
        "description": "Read the full content of the specified news",
        "parameters": {
          "type": "object",
          "properties": {
            "source_name": {
              "type": "string",
              "description": "News Source Name"
            },
            "news_name": {
              "type": "string",
              "description": "News Name"
            }
          },
          "required": [
            "source_name",
            "news_name"
          ]
        }
      }
    ],
    "id": 346
  },
  {
    "messages": [
      {
        "role": "user",
        "content": "Want to see a detailed report on the news"
      },
      {
        "role": "function call",
        "content": {
          "name": "NewsMagazines.News.readNews",
          "arguments": {}
        }
      },
      {
        "role": "assistant",
        "content": "What is the name of the news source?"
      },
      {
        "role": "user",
        "content": "Xinhua"
      },
      {
        "role": "function call",
        "content": {
          "name": "NewsMagazines.News.readNews",
          "arguments": {
            "source_name": "Xinhua"
          }
        }
      },
      {
        "role": "assistant",
        "content": "Please provide a news name"
      },
      {
        "role": "user",
        "content": "It was wrong before. News Source Name should be Finance Magazine"
      },
      {
        "role": "function call",
        "content": {
          "name": "NewsMagazines.News.readNews",
          "arguments": {
            "source_name": "Finance Magazine"
          }
        }
      },
      {
        "role": "assistant",
        "content": "Please provide a news name"
      },
      {
        "role": "user",
        "content": "Update on Global Climate Conferences"
      },
      {
        "role": "function call",
        "content": {
          "name": "NewsMagazines.News.readNews",
          "arguments": {
            "source_name": "Finance Magazine",
            "news_name": "Update on Global Climate Conferences"
          }
        }
      }
    ],
    "multiple_tools": [
      {
        "name": "NewsMagazines.News.readNews",
        "description": "Read the full content of the specified news",
        "parameters": {
          "type": "object",
          "properties": {
            "source_name": {
              "type": "string",
              "description": "News Source Name"
            },
            "news_name": {
              "type": "string",
              "description": "News Name"
            }
          },
          "required": [
            "source_name",
            "news_name"
          ]
        }
      },
      {
        "name": "OnlineShopping.Mall.viewCommodityDetails",
        "description": "View item details by item name",
        "parameters": {
          "type": "object",
          "properties": {
            "goods": {
              "type": "string",
              "description": "Product Name"
            }
          },
          "required": [
            "goods"
          ]
        }
      },
      {
        "name": "Navigation.TaxiCarRental.viewTaxiOrderDetail",
        "description": "View details of a ride",
        "parameters": {
          "type": "object",
          "properties": {
            "time": {
              "type": "string",
              "description": "Order time"
            },
            "destination": {
              "type": "string",
              "description": "Destination"
            }
          },
          "required": [
            "time",
            "destination"
          ]
        }
      },
      {
        "name": "OfficeSoftware.CloudStorage.netdiskGetFileDetails",
        "description": "View the specified file details in the cloud drive",
        "parameters": {
          "type": "object",
          "properties": {
            "file_path": {
              "type": "string",
              "description": "File Path"
            }
          },
          "required": [
            "file_path"
          ]
        }
      },
      {
        "name": "OnlineShopping.SecondhandTrading.viewSecondhandSaleCommodity",
        "description": "View item details by item name",
        "parameters": {
          "type": "object",
          "properties": {
            "search_name": {
              "type": "string",
              "description": "Trade Name/Keywords"
            }
          },
          "required": [
            "search_name"
          ]
        }
      }
    ],
    "single_tool": [
      {
        "name": "NewsMagazines.News.readNews",
        "description": "Read the full content of the specified news",
        "parameters": {
          "type": "object",
          "properties": {
            "source_name": {
              "type": "string",
              "description": "News Source Name"
            },
            "news_name": {
              "type": "string",
              "description": "News Name"
            }
          },
          "required": [
            "source_name",
            "news_name"
          ]
        }
      }
    ],
    "id": 347
  },
  {
    "messages": [
      {
        "role": "user",
        "content": "Give me some advice on how to get to your travel destination?"
      },
      {
        "role": "function call",
        "content": {
          "name": "Travel.ItineraryServices.getTravelTransportationOptions",
          "arguments": {}
        }
      },
      {
        "role": "assistant",
        "content": "Where you're traveling to"
      },
      {
        "role": "user",
        "content": "I plan to travel to Shanghai."
      },
      {
        "role": "function call",
        "content": {
          "name": "Travel.ItineraryServices.getTravelTransportationOptions",
          "arguments": {
            "destination": "Shanghai"
          }
        }
      },
      {
        "role": "assistant",
        "content": "Where you're flying from"
      },
      {
        "role": "user",
        "content": "It was wrong before. destination should be Alexandrea"
      },
      {
        "role": "function call",
        "content": {
          "name": "Travel.ItineraryServices.getTravelTransportationOptions",
          "arguments": {
            "destination": "Alexandrea"
          }
        }
      },
      {
        "role": "assistant",
        "content": "Where you're flying from"
      },
      {
        "role": "user",
        "content": "My starting place is Beijing."
      },
      {
        "role": "function call",
        "content": {
          "name": "Travel.ItineraryServices.getTravelTransportationOptions",
          "arguments": {
            "destination": "Alexandrea",
            "origin": "Beijing"
          }
        }
      }
    ],
    "multiple_tools": [
      {
        "name": "UtilityTools.Weather.setPersonalizedReminder",
        "description": "Set personalized alerts for specific cities and weather conditions",
        "parameters": {
          "type": "object",
          "properties": {
            "location": {
              "type": "string",
              "description": "Location, defaults to local"
            },
            "weather": {
              "type": "string",
              "description": "Weather conditions."
            }
          },
          "required": [
            "location",
            "weather"
          ]
        }
      },
      {
        "name": "UtilityTools.Calendar.addCalendarClock",
        "description": "Set a schedule reminder",
        "parameters": {
          "type": "object",
          "properties": {
            "date_name": {
              "type": "string",
              "description": "Visiting program name"
            },
            "start_date": {
              "type": "string",
              "description": "Schedule Reminder Time"
            }
          },
          "required": [
            "date_name",
            "start_date"
          ]
        }
      },
      {
        "name": "ConvenientLiving.AutoLife.getCarMaintenanceTips",
        "description": "Get service advice for specific car models.",
        "parameters": {
          "type": "object",
          "properties": {
            "brand": {
              "type": "string",
              "description": "Car Brand"
            }
          },
          "required": [
            "brand"
          ]
        }
      },
      {
        "name": "Travel.ItineraryServices.getTravelTips",
        "description": "Get travel tips for specific destinations",
        "parameters": {
          "type": "object",
          "properties": {
            "destination": {
              "type": "string",
              "description": "Travel Destinations"
            }
          },
          "required": [
            "destination"
          ]
        }
      },
      {
        "name": "Travel.ItineraryServices.getTravelTransportationOptions",
        "description": "Provide transportation and directions to your destination",
        "parameters": {
          "type": "object",
          "properties": {
            "origin": {
              "type": "string",
              "description": "Origination"
            },
            "destination": {
              "type": "string",
              "description": "destination"
            }
          },
          "required": [
            "origin",
            "destination"
          ]
        }
      }
    ],
    "single_tool": [
      {
        "name": "Travel.ItineraryServices.getTravelTransportationOptions",
        "description": "Provide transportation and directions to your destination",
        "parameters": {
          "type": "object",
          "properties": {
            "origin": {
              "type": "string",
              "description": "Origination"
            },
            "destination": {
              "type": "string",
              "description": "destination"
            }
          },
          "required": [
            "origin",
            "destination"
          ]
        }
      }
    ],
    "id": 349
  },
  {
    "messages": [
      {
        "role": "user",
        "content": "Can you help me plan my trip to my destination?"
      },
      {
        "role": "function call",
        "content": {
          "name": "Travel.ItineraryServices.getTravelTransportationOptions",
          "arguments": {}
        }
      },
      {
        "role": "assistant",
        "content": "Where you're flying from"
      },
      {
        "role": "user",
        "content": "I leave from Cairo."
      },
      {
        "role": "function call",
        "content": {
          "name": "Travel.ItineraryServices.getTravelTransportationOptions",
          "arguments": {
            "origin": "KAIROS"
          }
        }
      },
      {
        "role": "assistant",
        "content": "Where you're traveling to"
      },
      {
        "role": "user",
        "content": "It was wrong before. Origination should be Guangzhou"
      },
      {
        "role": "function call",
        "content": {
          "name": "Travel.ItineraryServices.getTravelTransportationOptions",
          "arguments": {
            "origin": "Guangzhou"
          }
        }
      },
      {
        "role": "assistant",
        "content": "Where you're traveling to"
      },
      {
        "role": "user",
        "content": "My travel destination is Alexandria, on the Mediterranean coast in northern Egypt."
      },
      {
        "role": "function call",
        "content": {
          "name": "Travel.ItineraryServices.getTravelTransportationOptions",
          "arguments": {
            "origin": "Guangzhou",
            "destination": "Alexandrea"
          }
        }
      }
    ],
    "multiple_tools": [
      {
        "name": "Travel.ItineraryServices.getTravelTransportationOptions",
        "description": "Provide transportation and directions to your destination",
        "parameters": {
          "type": "object",
          "properties": {
            "origin": {
              "type": "string",
              "description": "Origination"
            },
            "destination": {
              "type": "string",
              "description": "destination"
            }
          },
          "required": [
            "origin",
            "destination"
          ]
        }
      },
      {
        "name": "SystemTools.SystemSettings.setSystemTurnOnScreen2TV",
        "description": "Turn on phone projection to TV",
        "parameters": {
          "type": "object",
          "properties": {},
          "required": []
        }
      },
      {
        "name": "SocialCommunication.Calling.makePhoneCall",
        "description": "Used to call designated contacts",
        "parameters": {
          "type": "object",
          "properties": {
            "contact_name": {
              "type": "string",
              "description": "Name of the contact to call"
            },
            "phone_number": {
              "type": "string",
              "description": "Call the number directly"
            }
          },
          "required": [
            "contact_name",
            "phone_number"
          ]
        }
      },
      {
        "name": "Navigation.TaxiCarRental.callingTaxi",
        "description": "Send a ride request based on your starting location",
        "parameters": {
          "type": "object",
          "properties": {
            "departure": {
              "type": "string",
              "description": "Pickup location, default current location"
            },
            "destination": {
              "type": "string",
              "description": "Destination"
            },
            "time": {
              "type": "string",
              "description": "Taxi time, default current time"
            }
          },
          "required": [
            "departure",
            "destination",
            "time"
          ]
        }
      },
      {
        "name": "Finance.Stocks.buyStock",
        "description": "Purchase of Designated Shares",
        "parameters": {
          "type": "object",
          "properties": {
            "stock_code": {
              "type": "string",
              "description": "Ticker"
            },
            "stock_name": {
              "type": "string",
              "description": "Stock Key Name"
            },
            "price": {
              "type": "float",
              "description": "Purchase Amount, Unit: Yuan"
            },
            "amount": {
              "type": "string",
              "description": "Bid Volume; Specific Value; Whole Warehouse; Half Warehouse; 1/3 Warehouse; 1/4 Warehouse"
            }
          },
          "required": [
            "stock_code",
            "stock_name",
            "price",
            "amount"
          ]
        }
      }
    ],
    "single_tool": [
      {
        "name": "Travel.ItineraryServices.getTravelTransportationOptions",
        "description": "Provide transportation and directions to your destination",
        "parameters": {
          "type": "object",
          "properties": {
            "origin": {
              "type": "string",
              "description": "Origination"
            },
            "destination": {
              "type": "string",
              "description": "destination"
            }
          },
          "required": [
            "origin",
            "destination"
          ]
        }
      }
    ],
    "id": 350
  },
  {
    "messages": [
      {
        "role": "user",
        "content": "Find travel packages regardless of the specific destination and time"
      },
      {
        "role": "function call",
        "content": {
          "name": "Travel.ItineraryServices.searchTravelPackage",
          "arguments": {}
        }
      },
      {
        "role": "assistant",
        "content": "Where you're flying from"
      },
      {
        "role": "user",
        "content": "My starting place is Wuhan."
      },
      {
        "role": "function call",
        "content": {
          "name": "Travel.ItineraryServices.searchTravelPackage",
          "arguments": {
            "origin": "Wuhan"
          }
        }
      },
      {
        "role": "assistant",
        "content": "Where do you want to go When do you plan to travel What is the approximate budget"
      },
      {
        "role": "user",
        "content": "It was wrong before. Origination should be Chengdu"
      },
      {
        "role": "function call",
        "content": {
          "name": "Travel.ItineraryServices.searchTravelPackage",
          "arguments": {
            "origin": "Chengdu"
          }
        }
      },
      {
        "role": "assistant",
        "content": "Where do you want to go When do you plan to travel What is the approximate budget"
      },
      {
        "role": "user",
        "content": "I plan to travel to Sanya, the departure time is next month, and the budget is about 5,000 yuan."
      },
      {
        "role": "function call",
        "content": {
          "name": "Travel.ItineraryServices.searchTravelPackage",
          "arguments": {
            "origin": "Chengdu",
            "destination": "Sanya Railway Station"
          }
        }
      },
      {
        "role": "assistant",
        "content": "When is the start date"
      },
      {
        "role": "user",
        "content": "My trip started on November 5th."
      },
      {
        "role": "function call",
        "content": {
          "name": "Travel.ItineraryServices.searchTravelPackage",
          "arguments": {
            "origin": "Chengdu",
            "destination": "Sanya Railway Station",
            "start_time": "November 5th"
          }
        }
      },
      {
        "role": "assistant",
        "content": "When is the end date and what is the price range"
      },
      {
        "role": "user",
        "content": "The end date is November 12th and the price ranges from 500 to 1000 yuan."
      },
      {
        "role": "function call",
        "content": {
          "name": "Travel.ItineraryServices.searchTravelPackage",
          "arguments": {
            "origin": "Chengdu",
            "destination": "Sanya Railway Station",
            "start_time": "November 5th",
            "end_time": "November 12th"
          }
        }
      },
      {
        "role": "assistant",
        "content": "What is the unit price of your budget?"
      },
      {
        "role": "user",
        "content": "My budget price is 6500.0 yuan."
      },
      {
        "role": "function call",
        "content": {
          "name": "Travel.ItineraryServices.searchTravelPackage",
          "arguments": {
            "origin": "Chengdu",
            "destination": "Sanya Railway Station",
            "start_time": "November 5th",
            "end_time": "November 12th",
            "price": 6500.0
          }
        }
      }
    ],
    "multiple_tools": [
      {
        "name": "ConvenientLiving.BuyingRentingHomes.searchRentingHouses",
        "description": "Search for rentals by criteria",
        "parameters": {
          "type": "object",
          "properties": {
            "price": {
              "type": "string",
              "description": "Rents"
            },
            "house_area": {
              "type": "string",
              "description": "Area"
            },
            "level": {
              "type": "string",
              "description": "Floor"
            },
            "age": {
              "type": "integer",
              "description": "fixed number of years"
            },
            "house_type": {
              "type": "string",
              "description": "Layout"
            },
            "housing_estate": {
              "type": "string",
              "description": "Community"
            },
            "location": {
              "type": "string",
              "description": "Position"
            },
            "indoor_decoration": {
              "type": "string",
              "description": "decorate"
            },
            "furniture": {
              "type": "string",
              "description": "Furniture"
            }
          },
          "required": [
            "price",
            "house_area",
            "level",
            "age",
            "house_type",
            "housing_estate",
            "location",
            "indoor_decoration",
            "furniture"
          ]
        }
      },
      {
        "name": "UtilityTools.Search.searchWeb",
        "description": "Web search (text, voice, photo search default text)",
        "parameters": {
          "type": "object",
          "properties": {
            "keyword": {
              "type": "string",
              "description": "Search Content"
            },
            "type": {
              "type": "string",
              "description": "Text; Voice; Picture; Default Text"
            }
          },
          "required": [
            "keyword",
            "type"
          ]
        }
      },
      {
        "name": "VideoPlayback.OnlineVideos.searchOnlineVideo",
        "description": "Search online videos, which can be searched based on keywords (director/publisher/video keywords); can be searched based on categories; can be searched based on AI smart search",
        "parameters": {
          "type": "object",
          "properties": {
            "keyword": {
              "type": "array",
              "description": "Director/Publisher/Video Keyword Search"
            },
            "video_type": {
              "type": "string",
              "description": "Video Type Categories, Recommended, Popular, Chase, Film and Television New Journey"
            },
            "ai_search": {
              "type": "string",
              "description": "Based on search history, viewing history can only be turned off by default"
            }
          },
          "required": [
            "keyword",
            "video_type",
            "ai_search"
          ]
        }
      },
      {
        "name": "VideoPlayback.ShortVideos.searchShortVideo",
        "description": "Search for short videos based on keywords (vlog blogger/video keywords/taxonomy keywords)",
        "parameters": {
          "type": "object",
          "properties": {
            "keyword": {
              "type": "string",
              "description": "Short video blogger name/video keyword search"
            },
            "type": {
              "type": "string",
              "description": "Recommended, Popular, Chase, Film and TV New Journey/Reference bilibili, etc."
            },
            "datetime": {
              "type": "string",
              "description": "Release time: unlimited, within a day, within a week, within half a year"
            },
            "duration": {
              "type": "string",
              "description": "Video time: unlimited, 1 minute, 1--5 minutes, more than 5 minutes"
            },
            "ai_search": {
              "type": "string",
              "description": "Based on search history, viewing history can only be searched"
            }
          },
          "required": [
            "keyword",
            "type",
            "datetime",
            "duration",
            "ai_search"
          ]
        }
      },
      {
        "name": "Travel.ItineraryServices.searchTravelPackage",
        "description": "Search travel packages by destination, time, price, and more",
        "parameters": {
          "type": "object",
          "properties": {
            "origin": {
              "type": "string",
              "description": "Origination"
            },
            "destination": {
              "type": "string",
              "description": "destination"
            },
            "start_time": {
              "type": "string",
              "description": "Start date"
            },
            "end_time": {
              "type": "string",
              "description": "End Date"
            },
            "price": {
              "type": "float",
              "description": "Price, unit (yuan)"
            }
          },
          "required": [
            "origin",
            "destination",
            "start_time",
            "end_time",
            "price"
          ]
        }
      }
    ],
    "single_tool": [
      {
        "name": "Travel.ItineraryServices.searchTravelPackage",
        "description": "Search travel packages by destination, time, price, and more",
        "parameters": {
          "type": "object",
          "properties": {
            "origin": {
              "type": "string",
              "description": "Origination"
            },
            "destination": {
              "type": "string",
              "description": "destination"
            },
            "start_time": {
              "type": "string",
              "description": "Start date"
            },
            "end_time": {
              "type": "string",
              "description": "End Date"
            },
            "price": {
              "type": "float",
              "description": "Price, unit (yuan)"
            }
          },
          "required": [
            "origin",
            "destination",
            "start_time",
            "end_time",
            "price"
          ]
        }
      }
    ],
    "id": 351
  },
  {
    "messages": [
      {
        "role": "user",
        "content": "Travel Package Search"
      },
      {
        "role": "function call",
        "content": {
          "name": "Travel.ItineraryServices.searchTravelPackage",
          "arguments": {}
        }
      },
      {
        "role": "assistant",
        "content": "Where you're flying from"
      },
      {
        "role": "user",
        "content": "My starting point is Chengdu."
      },
      {
        "role": "function call",
        "content": {
          "name": "Travel.ItineraryServices.searchTravelPackage",
          "arguments": {
            "origin": "Chengdu"
          }
        }
      },
      {
        "role": "assistant",
        "content": "Where do you want to go When do you plan to travel What is the approximate budget"
      },
      {
        "role": "user",
        "content": "I want to travel to Lhasa and plan to leave next month, with a budget of about 5,000 yuan."
      },
      {
        "role": "function call",
        "content": {
          "name": "Travel.ItineraryServices.searchTravelPackage",
          "arguments": {
            "origin": "Chengdu",
            "destination": "Lhasa   "
          }
        }
      },
      {
        "role": "assistant",
        "content": "When is the start date"
      },
      {
        "role": "user",
        "content": "It was wrong before. destination should be Sanya Railway Station"
      },
      {
        "role": "function call",
        "content": {
          "name": "Travel.ItineraryServices.searchTravelPackage",
          "arguments": {
            "origin": "Chengdu",
            "destination": "Sanya Railway Station"
          }
        }
      },
      {
        "role": "assistant",
        "content": "When is the start date"
      },
      {
        "role": "user",
        "content": "The start date is June 1st, but make sure the event is ready on time."
      },
      {
        "role": "function call",
        "content": {
          "name": "Travel.ItineraryServices.searchTravelPackage",
          "arguments": {
            "origin": "Chengdu",
            "destination": "Sanya Railway Station",
            "start_time": "June 1"
          }
        }
      },
      {
        "role": "assistant",
        "content": "When is your trip end date and what is the price budget"
      },
      {
        "role": "user",
        "content": "My travel end date is June 7th and the budget is about 5000 yuan."
      },
      {
        "role": "function call",
        "content": {
          "name": "Travel.ItineraryServices.searchTravelPackage",
          "arguments": {
            "origin": "Chengdu",
            "destination": "Sanya Railway Station",
            "start_time": "June 1",
            "end_time": "June 7"
          }
        }
      },
      {
        "role": "assistant",
        "content": "What is the unit price of the travel package you are expecting?"
      },
      {
        "role": "user",
        "content": "My expected travel package price is about 8000.0 yuan."
      },
      {
        "role": "function call",
        "content": {
          "name": "Travel.ItineraryServices.searchTravelPackage",
          "arguments": {
            "origin": "Chengdu",
            "destination": "Sanya Railway Station",
            "start_time": "June 1",
            "end_time": "June 7",
            "price": 8000.0
          }
        }
      }
    ],
    "multiple_tools": [
      {
        "name": "VideoPlayback.OnlineVideos.searchOnlineVideo",
        "description": "Search online videos, which can be searched based on keywords (director/publisher/video keywords); can be searched based on categories; can be searched based on AI smart search",
        "parameters": {
          "type": "object",
          "properties": {
            "keyword": {
              "type": "array",
              "description": "Director/Publisher/Video Keyword Search"
            },
            "video_type": {
              "type": "string",
              "description": "Video Type Categories, Recommended, Popular, Chase, Film and Television New Journey"
            },
            "ai_search": {
              "type": "string",
              "description": "Based on search history, viewing history can only be turned off by default"
            }
          },
          "required": [
            "keyword",
            "video_type",
            "ai_search"
          ]
        }
      },
      {
        "name": "Travel.ItineraryServices.searchTravelPackage",
        "description": "Search travel packages by destination, time, price, and more",
        "parameters": {
          "type": "object",
          "properties": {
            "origin": {
              "type": "string",
              "description": "Origination"
            },
            "destination": {
              "type": "string",
              "description": "destination"
            },
            "start_time": {
              "type": "string",
              "description": "Start date"
            },
            "end_time": {
              "type": "string",
              "description": "End Date"
            },
            "price": {
              "type": "float",
              "description": "Price, unit (yuan)"
            }
          },
          "required": [
            "origin",
            "destination",
            "start_time",
            "end_time",
            "price"
          ]
        }
      },
      {
        "name": "MusicRadio.RadioStations.radioSearchPlaylist",
        "description": "Search Playlists",
        "parameters": {
          "type": "object",
          "properties": {
            "keyword": {
              "type": "string",
              "description": "category"
            }
          },
          "required": [
            "keyword"
          ]
        }
      },
      {
        "name": "NewsMagazines.News.searchNews",
        "description": "Search news by keyword",
        "parameters": {
          "type": "object",
          "properties": {
            "keyword": {
              "type": "string",
              "description": "Keywords Search"
            }
          },
          "required": [
            "keyword"
          ]
        }
      },
      {
        "name": "UtilityTools.Search.searchWeb",
        "description": "Web search (text, voice, photo search default text)",
        "parameters": {
          "type": "object",
          "properties": {
            "keyword": {
              "type": "string",
              "description": "Search Content"
            },
            "type": {
              "type": "string",
              "description": "Text; Voice; Picture; Default Text"
            }
          },
          "required": [
            "keyword",
            "type"
          ]
        }
      }
    ],
    "single_tool": [
      {
        "name": "Travel.ItineraryServices.searchTravelPackage",
        "description": "Search travel packages by destination, time, price, and more",
        "parameters": {
          "type": "object",
          "properties": {
            "origin": {
              "type": "string",
              "description": "Origination"
            },
            "destination": {
              "type": "string",
              "description": "destination"
            },
            "start_time": {
              "type": "string",
              "description": "Start date"
            },
            "end_time": {
              "type": "string",
              "description": "End Date"
            },
            "price": {
              "type": "float",
              "description": "Price, unit (yuan)"
            }
          },
          "required": [
            "origin",
            "destination",
            "start_time",
            "end_time",
            "price"
          ]
        }
      }
    ],
    "id": 352
  },
  {
    "messages": [
      {
        "role": "user",
        "content": "Estimate the approximate cost of my trip and see how much I need to prepare"
      },
      {
        "role": "function call",
        "content": {
          "name": "Travel.ItineraryServices.estimateTravelCost",
          "arguments": {}
        }
      },
      {
        "role": "assistant",
        "content": "Where to"
      },
      {
        "role": "user",
        "content": "I want to travel to Jiuzhaigou."
      },
      {
        "role": "function call",
        "content": {
          "name": "Travel.ItineraryServices.estimateTravelCost",
          "arguments": {
            "destination": "Jiuzhaigou Valley"
          }
        }
      },
      {
        "role": "assistant",
        "content": "Where you're flying from"
      },
      {
        "role": "user",
        "content": "It was wrong before. destination should be Chengdu"
      },
      {
        "role": "function call",
        "content": {
          "name": "Travel.ItineraryServices.estimateTravelCost",
          "arguments": {
            "destination": "Chengdu"
          }
        }
      },
      {
        "role": "assistant",
        "content": "Where you're flying from"
      },
      {
        "role": "user",
        "content": "My starting point is Chengdu."
      },
      {
        "role": "function call",
        "content": {
          "name": "Travel.ItineraryServices.estimateTravelCost",
          "arguments": {
            "destination": "Chengdu",
            "origin": "Chengdu"
          }
        }
      }
    ],
    "multiple_tools": [
      {
        "name": "ConvenientLiving.BuyingRentingHomes.calculateHouseTax",
        "description": "Calculate the property tax amount of the property",
        "parameters": {
          "type": "object",
          "properties": {
            "house_price": {
              "type": "integer",
              "description": "Property value"
            },
            "tax_rate": {
              "type": "integer",
              "description": "Local Property Tax Rate"
            }
          },
          "required": [
            "house_price",
            "tax_rate"
          ]
        }
      },
      {
        "name": "ConvenientLiving.BuyingRentingHomes.calculateHousingMortgage",
        "description": "Calculate Home Purchase Loan Amount",
        "parameters": {
          "type": "object",
          "properties": {
            "house_price": {
              "type": "integer",
              "description": "house prices "
            },
            "down_payment": {
              "type": "integer",
              "description": "First installment payment"
            },
            "interest_rate": {
              "type": "integer",
              "description": "Interest Rate"
            },
            "loan_term": {
              "type": "integer",
              "description": "Mortgage term"
            }
          },
          "required": [
            "house_price",
            "down_payment",
            "interest_rate",
            "loan_term"
          ]
        }
      },
      {
        "name": "ConvenientLiving.AutoLife.calculateCarLoan",
        "description": "The loan program is calculated based on information such as the purchase price of the car.",
        "parameters": {
          "type": "object",
          "properties": {
            "car_price": {
              "type": "float",
              "description": "Car price, required"
            },
            "down_payment": {
              "type": "float",
              "description": "First installment payment"
            }
          },
          "required": [
            "car_price",
            "down_payment"
          ]
        }
      },
      {
        "name": "Finance.Funds.getFundSubscriptionFee",
        "description": "Query subscription fee information for designated funds",
        "parameters": {
          "type": "object",
          "properties": {
            "fund_name": {
              "type": "string",
              "description": "Fund name"
            },
            "fund_code": {
              "type": "string",
              "description": "Fund  Code"
            }
          },
          "required": [
            "fund_name",
            "fund_code"
          ]
        }
      },
      {
        "name": "Travel.ItineraryServices.estimateTravelCost",
        "description": "Estimate the approximate cost of a given trip",
        "parameters": {
          "type": "object",
          "properties": {
            "origin": {
              "type": "string",
              "description": "Origination"
            },
            "destination": {
              "type": "string",
              "description": "destination"
            }
          },
          "required": [
            "origin",
            "destination"
          ]
        }
      }
    ],
    "single_tool": [
      {
        "name": "Travel.ItineraryServices.estimateTravelCost",
        "description": "Estimate the approximate cost of a given trip",
        "parameters": {
          "type": "object",
          "properties": {
            "origin": {
              "type": "string",
              "description": "Origination"
            },
            "destination": {
              "type": "string",
              "description": "destination"
            }
          },
          "required": [
            "origin",
            "destination"
          ]
        }
      }
    ],
    "id": 355
  },
  {
    "messages": [
      {
        "role": "user",
        "content": "Can you help me estimate the total cost of this trip? I want to know roughly how much budget to prepare"
      },
      {
        "role": "function call",
        "content": {
          "name": "Travel.ItineraryServices.estimateTravelCost",
          "arguments": {}
        }
      },
      {
        "role": "assistant",
        "content": "Where to"
      },
      {
        "role": "user",
        "content": "The destination is Shanghai"
      },
      {
        "role": "function call",
        "content": {
          "name": "Travel.ItineraryServices.estimateTravelCost",
          "arguments": {
            "destination": "Shanghai"
          }
        }
      },
      {
        "role": "assistant",
        "content": "Where you're flying from"
      },
      {
        "role": "user",
        "content": "It was wrong before. destination should be Jiuzhaigou Valley"
      },
      {
        "role": "function call",
        "content": {
          "name": "Travel.ItineraryServices.estimateTravelCost",
          "arguments": {
            "destination": "Jiuzhaigou Valley"
          }
        }
      },
      {
        "role": "assistant",
        "content": "Where you're flying from"
      },
      {
        "role": "user",
        "content": "My starting place is Beijing."
      },
      {
        "role": "function call",
        "content": {
          "name": "Travel.ItineraryServices.estimateTravelCost",
          "arguments": {
            "destination": "Jiuzhaigou Valley",
            "origin": "Beijing"
          }
        }
      }
    ],
    "multiple_tools": [
      {
        "name": "Travel.ItineraryServices.estimateTravelCost",
        "description": "Estimate the approximate cost of a given trip",
        "parameters": {
          "type": "object",
          "properties": {
            "origin": {
              "type": "string",
              "description": "Origination"
            },
            "destination": {
              "type": "string",
              "description": "destination"
            }
          },
          "required": [
            "origin",
            "destination"
          ]
        }
      },
      {
        "name": "ConvenientLiving.AutoLife.calculateCarLoan",
        "description": "The loan program is calculated based on information such as the purchase price of the car.",
        "parameters": {
          "type": "object",
          "properties": {
            "car_price": {
              "type": "float",
              "description": "Car price, required"
            },
            "down_payment": {
              "type": "float",
              "description": "First installment payment"
            }
          },
          "required": [
            "car_price",
            "down_payment"
          ]
        }
      },
      {
        "name": "Finance.Funds.getFundSubscriptionFee",
        "description": "Query subscription fee information for designated funds",
        "parameters": {
          "type": "object",
          "properties": {
            "fund_name": {
              "type": "string",
              "description": "Fund name"
            },
            "fund_code": {
              "type": "string",
              "description": "Fund  Code"
            }
          },
          "required": [
            "fund_name",
            "fund_code"
          ]
        }
      },
      {
        "name": "ConvenientLiving.BuyingRentingHomes.calculateHouseTax",
        "description": "Calculate the property tax amount of the property",
        "parameters": {
          "type": "object",
          "properties": {
            "house_price": {
              "type": "integer",
              "description": "Property value"
            },
            "tax_rate": {
              "type": "integer",
              "description": "Local Property Tax Rate"
            }
          },
          "required": [
            "house_price",
            "tax_rate"
          ]
        }
      },
      {
        "name": "ConvenientLiving.BuyingRentingHomes.calculateHousingMortgage",
        "description": "Calculate Home Purchase Loan Amount",
        "parameters": {
          "type": "object",
          "properties": {
            "house_price": {
              "type": "integer",
              "description": "house prices "
            },
            "down_payment": {
              "type": "integer",
              "description": "First installment payment"
            },
            "interest_rate": {
              "type": "integer",
              "description": "Interest Rate"
            },
            "loan_term": {
              "type": "integer",
              "description": "Mortgage term"
            }
          },
          "required": [
            "house_price",
            "down_payment",
            "interest_rate",
            "loan_term"
          ]
        }
      }
    ],
    "single_tool": [
      {
        "name": "Travel.ItineraryServices.estimateTravelCost",
        "description": "Estimate the approximate cost of a given trip",
        "parameters": {
          "type": "object",
          "properties": {
            "origin": {
              "type": "string",
              "description": "Origination"
            },
            "destination": {
              "type": "string",
              "description": "destination"
            }
          },
          "required": [
            "origin",
            "destination"
          ]
        }
      }
    ],
    "id": 356
  },
  {
    "messages": [
      {
        "role": "user",
        "content": "Share my travel itinerary"
      },
      {
        "role": "function call",
        "content": {
          "name": "Travel.ItineraryServices.shareTravelItinerary",
          "arguments": {}
        }
      },
      {
        "role": "assistant",
        "content": "What is the name or keyword of the trip"
      },
      {
        "role": "user",
        "content": "Company Annual Meeting Rides"
      },
      {
        "role": "function call",
        "content": {
          "name": "Travel.ItineraryServices.shareTravelItinerary",
          "arguments": {
            "name": "Company Annual Meeting Rides"
          }
        }
      },
      {
        "role": "assistant",
        "content": "Which app do you need to share your trip to?"
      },
      {
        "role": "user",
        "content": "It was wrong before. Trip name or keyword should be Chinese New Year Family Gathering Schedule"
      },
      {
        "role": "function call",
        "content": {
          "name": "Travel.ItineraryServices.shareTravelItinerary",
          "arguments": {
            "name": "Chinese New Year Family Gathering Schedule"
          }
        }
      },
      {
        "role": "assistant",
        "content": "Which app do you need to share your trip to?"
      },
      {
        "role": "user",
        "content": "Pin it so colleagues can see and sync their rides."
      },
      {
        "role": "function call",
        "content": {
          "name": "Travel.ItineraryServices.shareTravelItinerary",
          "arguments": {
            "name": "Chinese New Year Family Gathering Schedule",
            "to": "Dingtalk"
          }
        }
      }
    ],
    "multiple_tools": [
      {
        "name": "Travel.ItineraryServices.shareTravelItinerary",
        "description": "Sharing travel itineraries to designated locations",
        "parameters": {
          "type": "object",
          "properties": {
            "name": {
              "type": "string",
              "description": "Trip name or keyword"
            },
            "to": {
              "type": "string",
              "description": "Destination app name"
            }
          },
          "required": [
            "name",
            "to"
          ]
        }
      },
      {
        "name": "Navigation.MapNavigation.shareTravelRoute",
        "description": "Share travel plans or directions",
        "parameters": {
          "type": "object",
          "properties": {
            "departure": {
              "type": "string",
              "description": "The name or address of the departure location, the default current location"
            },
            "destination": {
              "type": "string",
              "description": "Name or address of the destination"
            },
            "to": {
              "type": "string",
              "description": "Ways to share, like social media, texting, etc."
            }
          },
          "required": [
            "departure",
            "destination",
            "to"
          ]
        }
      },
      {
        "name": "Health.HealthManagement.shareHealthPlan",
        "description": "Share a health plan",
        "parameters": {
          "type": "object",
          "properties": {
            "goal_title": {
              "type": "string",
              "description": "Target Headings"
            },
            "media": {
              "type": "string",
              "description": "Media"
            },
            "name": {
              "type": "string",
              "description": "Friend name"
            }
          },
          "required": [
            "goal_title",
            "media",
            "name"
          ]
        }
      },
      {
        "name": "UtilityTools.Memo.shareNotes",
        "description": "Share a memo",
        "parameters": {
          "type": "object",
          "properties": {
            "title": {
              "type": "string",
              "description": "Title"
            },
            "to": {
              "type": "string",
              "description": "Shared with"
            },
            "category": {
              "type": "string",
              "description": "Classify"
            }
          },
          "required": [
            "title",
            "to",
            "category"
          ]
        }
      },
      {
        "name": "SocialCommunication.Community.shareCommunityPost",
        "description": "Share a specific post to a specific medium or to someone",
        "parameters": {
          "type": "object",
          "properties": {
            "community_name": {
              "type": "string",
              "description": "The name of the community where the post is located"
            },
            "title": {
              "type": "string",
              "description": "Prev Post Caption"
            },
            "medium": {
              "type": "string",
              "description": "Share media"
            },
            "user_name": {
              "type": "string",
              "description": "Shared by"
            }
          },
          "required": [
            "community_name",
            "title",
            "medium",
            "user_name"
          ]
        }
      }
    ],
    "single_tool": [
      {
        "name": "Travel.ItineraryServices.shareTravelItinerary",
        "description": "Sharing travel itineraries to designated locations",
        "parameters": {
          "type": "object",
          "properties": {
            "name": {
              "type": "string",
              "description": "Trip name or keyword"
            },
            "to": {
              "type": "string",
              "description": "Destination app name"
            }
          },
          "required": [
            "name",
            "to"
          ]
        }
      }
    ],
    "id": 360
  },
  {
    "messages": [
      {
        "role": "user",
        "content": "Share my trip"
      },
      {
        "role": "function call",
        "content": {
          "name": "Travel.ItineraryServices.shareTravelItinerary",
          "arguments": {}
        }
      },
      {
        "role": "assistant",
        "content": "What is the name or keyword of the trip"
      },
      {
        "role": "user",
        "content": "Chinese New Year Family Gathering Schedule"
      },
      {
        "role": "function call",
        "content": {
          "name": "Travel.ItineraryServices.shareTravelItinerary",
          "arguments": {
            "name": "Chinese New Year Family Gathering Schedule"
          }
        }
      },
      {
        "role": "assistant",
        "content": "Which app to share to"
      },
      {
        "role": "user",
        "content": "It was wrong before. Trip name or keyword should be Company Annual Meeting Rides"
      },
      {
        "role": "function call",
        "content": {
          "name": "Travel.ItineraryServices.shareTravelItinerary",
          "arguments": {
            "name": "Company Annual Meeting Rides"
          }
        }
      },
      {
        "role": "assistant",
        "content": "Which app to share to"
      },
      {
        "role": "user",
        "content": "WeChat"
      },
      {
        "role": "function call",
        "content": {
          "name": "Travel.ItineraryServices.shareTravelItinerary",
          "arguments": {
            "name": "Company Annual Meeting Rides",
            "to": "WeChat"
          }
        }
      }
    ],
    "multiple_tools": [
      {
        "name": "NewsMagazines.NewspapersMagazines.shareArticle",
        "description": "Share posts to social media",
        "parameters": {
          "type": "object",
          "properties": {
            "to": {
              "type": "string",
              "description": "Choose Socials To Share Single Post"
            },
            "article": {
              "type": "string",
              "description": "Articles"
            }
          },
          "required": [
            "to",
            "article"
          ]
        }
      },
      {
        "name": "Travel.ItineraryServices.shareTravelItinerary",
        "description": "Sharing travel itineraries to designated locations",
        "parameters": {
          "type": "object",
          "properties": {
            "name": {
              "type": "string",
              "description": "Trip name or keyword"
            },
            "to": {
              "type": "string",
              "description": "Destination app name"
            }
          },
          "required": [
            "name",
            "to"
          ]
        }
      },
      {
        "name": "MusicRadio.Karaoke.shareKsongWorks",
        "description": "Share work based on song name",
        "parameters": {
          "type": "object",
          "properties": {
            "song_name": {
              "type": "string",
              "description": "Song Name"
            },
            "media": {
              "type": "string",
              "description": "Media"
            },
            "name": {
              "type": "string",
              "description": "Friend name"
            }
          },
          "required": [
            "song_name",
            "media",
            "name"
          ]
        }
      },
      {
        "name": "UtilityTools.Memo.shareNotes",
        "description": "Share a memo",
        "parameters": {
          "type": "object",
          "properties": {
            "title": {
              "type": "string",
              "description": "Title"
            },
            "to": {
              "type": "string",
              "description": "Shared with"
            },
            "category": {
              "type": "string",
              "description": "Classify"
            }
          },
          "required": [
            "title",
            "to",
            "category"
          ]
        }
      },
      {
        "name": "Navigation.MapNavigation.shareTravelRoute",
        "description": "Share travel plans or directions",
        "parameters": {
          "type": "object",
          "properties": {
            "departure": {
              "type": "string",
              "description": "The name or address of the departure location, the default current location"
            },
            "destination": {
              "type": "string",
              "description": "Name or address of the destination"
            },
            "to": {
              "type": "string",
              "description": "Ways to share, like social media, texting, etc."
            }
          },
          "required": [
            "departure",
            "destination",
            "to"
          ]
        }
      }
    ],
    "single_tool": [
      {
        "name": "Travel.ItineraryServices.shareTravelItinerary",
        "description": "Sharing travel itineraries to designated locations",
        "parameters": {
          "type": "object",
          "properties": {
            "name": {
              "type": "string",
              "description": "Trip name or keyword"
            },
            "to": {
              "type": "string",
              "description": "Destination app name"
            }
          },
          "required": [
            "name",
            "to"
          ]
        }
      }
    ],
    "id": 361
  },
  {
    "messages": [
      {
        "role": "user",
        "content": "Check room rates at this hotel"
      },
      {
        "role": "function call",
        "content": {
          "name": "Travel.HotelServices.getHotelRoomPrice",
          "arguments": {}
        }
      },
      {
        "role": "assistant",
        "content": "Please provide the hotel name"
      },
      {
        "role": "user",
        "content": "I plan to book a Hyatt Regency hotel, can you check it for me?"
      },
      {
        "role": "function call",
        "content": {
          "name": "Travel.HotelServices.getHotelRoomPrice",
          "arguments": {
            "name": "KaiYue Hotel"
          }
        }
      },
      {
        "role": "assistant",
        "content": "Which room type needs a price"
      },
      {
        "role": "user",
        "content": "I need to know the price of the family room."
      },
      {
        "role": "function call",
        "content": {
          "name": "Travel.HotelServices.getHotelRoomPrice",
          "arguments": {
            "name": "KaiYue Hotel",
            "room_type": "Household Room"
          }
        }
      },
      {
        "role": "assistant",
        "content": "What time is check-in?"
      },
      {
        "role": "user",
        "content": "It was wrong before. Room types should be Executive Suite"
      },
      {
        "role": "function call",
        "content": {
          "name": "Travel.HotelServices.getHotelRoomPrice",
          "arguments": {
            "name": "KaiYue Hotel",
            "room_type": "Executive Suite"
          }
        }
      },
      {
        "role": "assistant",
        "content": "What time is check-in?"
      },
      {
        "role": "user",
        "content": "My check-in date is July 10th and I will leave early on that day."
      },
      {
        "role": "function call",
        "content": {
          "name": "Travel.HotelServices.getHotelRoomPrice",
          "arguments": {
            "name": "KaiYue Hotel",
            "room_type": "Executive Suite",
            "checkin_date": "July 10"
          }
        }
      }
    ],
    "multiple_tools": [
      {
        "name": "Travel.HotelServices.getHotelRoomPrice",
        "description": "Get prices for selected hotel rooms or all room types",
        "parameters": {
          "type": "object",
          "properties": {
            "name": {
              "type": "string",
              "description": "Hotel Name"
            },
            "room_type": {
              "type": "string",
              "description": "Room types"
            },
            "checkin_date": {
              "type": "string",
              "description": "Check-in Date"
            },
            "checkout_date": {
              "type": "string",
              "description": "DEPARTURE DATE"
            }
          },
          "required": [
            "name",
            "room_type",
            "checkin_date",
            "checkout_date"
          ]
        }
      },
      {
        "name": "OnlineShopping.Mall.viewStoreRating",
        "description": "View store ratings by store name",
        "parameters": {
          "type": "object",
          "properties": {
            "store": {
              "type": "string",
              "description": "Store Name"
            }
          },
          "required": [
            "store"
          ]
        }
      },
      {
        "name": "Education.OnlineClasses.evaluateCourse",
        "description": "Rate a course",
        "parameters": {
          "type": "object",
          "properties": {
            "course_name": {
              "type": "string",
              "description": "Course Title"
            },
            "rating": {
              "type": "string",
              "description": "Rating"
            }
          },
          "required": [
            "course_name",
            "rating"
          ]
        }
      },
      {
        "name": "Finance.Insurance.getInsurancePremiumRate",
        "description": "Check insurance rates for insurance products",
        "parameters": {
          "type": "object",
          "properties": {
            "insurance_name": {
              "type": "string",
              "description": "Insurance Product Name"
            },
            "insurance_type": {
              "type": "string",
              "description": "Types of insurance products, such as life insurance, health insurance, property insurance, car insurance, etc."
            }
          },
          "required": [
            "insurance_name",
            "insurance_type"
          ]
        }
      },
      {
        "name": "Finance.Banking.queryInterestRates",
        "description": "Find your bank's deposit and loan rates",
        "parameters": {
          "type": "object",
          "properties": {},
          "required": []
        }
      }
    ],
    "single_tool": [
      {
        "name": "Travel.HotelServices.getHotelRoomPrice",
        "description": "Get prices for selected hotel rooms or all room types",
        "parameters": {
          "type": "object",
          "properties": {
            "name": {
              "type": "string",
              "description": "Hotel Name"
            },
            "room_type": {
              "type": "string",
              "description": "Room types"
            },
            "checkin_date": {
              "type": "string",
              "description": "Check-in Date"
            },
            "checkout_date": {
              "type": "string",
              "description": "DEPARTURE DATE"
            }
          },
          "required": [
            "name",
            "room_type",
            "checkin_date",
            "checkout_date"
          ]
        }
      }
    ],
    "id": 365
  },
  {
    "messages": [
      {
        "role": "user",
        "content": "I am not sure about the room rate of this hotel, can you help me see the price of all room types?"
      },
      {
        "role": "function call",
        "content": {
          "name": "Travel.HotelServices.getHotelRoomPrice",
          "arguments": {}
        }
      },
      {
        "role": "assistant",
        "content": "Please provide the hotel name"
      },
      {
        "role": "user",
        "content": "I plan to stay at a Hilton hotel with great environment and service."
      },
      {
        "role": "function call",
        "content": {
          "name": "Travel.HotelServices.getHotelRoomPrice",
          "arguments": {
            "name": "Hilton Hotel"
          }
        }
      },
      {
        "role": "assistant",
        "content": "What room type do you need to check for prices"
      },
      {
        "role": "user",
        "content": "I would like to know the price of the executive suite."
      },
      {
        "role": "function call",
        "content": {
          "name": "Travel.HotelServices.getHotelRoomPrice",
          "arguments": {
            "name": "Hilton Hotel",
            "room_type": "Executive Suite"
          }
        }
      },
      {
        "role": "assistant",
        "content": "What time is check-in?"
      },
      {
        "role": "user",
        "content": "It was wrong before. Room types should be Presidential Suite"
      },
      {
        "role": "function call",
        "content": {
          "name": "Travel.HotelServices.getHotelRoomPrice",
          "arguments": {
            "name": "Hilton Hotel",
            "room_type": "Presidential Suite"
          }
        }
      },
      {
        "role": "assistant",
        "content": "What time is check-in?"
      },
      {
        "role": "user",
        "content": "My check-in date is April 15th and I will arrive at the hotel early on that day."
      },
      {
        "role": "function call",
        "content": {
          "name": "Travel.HotelServices.getHotelRoomPrice",
          "arguments": {
            "name": "Hilton Hotel",
            "room_type": "Presidential Suite",
            "checkin_date": "April 15th"
          }
        }
      }
    ],
    "multiple_tools": [
      {
        "name": "Travel.ItineraryServices.estimateTravelCost",
        "description": "Estimate the approximate cost of a given trip",
        "parameters": {
          "type": "object",
          "properties": {
            "origin": {
              "type": "string",
              "description": "Origination"
            },
            "destination": {
              "type": "string",
              "description": "destination"
            }
          },
          "required": [
            "origin",
            "destination"
          ]
        }
      },
      {
        "name": "Finance.Insurance.getInsurancePremiumRate",
        "description": "Check insurance rates for insurance products",
        "parameters": {
          "type": "object",
          "properties": {
            "insurance_name": {
              "type": "string",
              "description": "Insurance Product Name"
            },
            "insurance_type": {
              "type": "string",
              "description": "Types of insurance products, such as life insurance, health insurance, property insurance, car insurance, etc."
            }
          },
          "required": [
            "insurance_name",
            "insurance_type"
          ]
        }
      },
      {
        "name": "Travel.HotelServices.getHotelRoomPrice",
        "description": "Get prices for selected hotel rooms or all room types",
        "parameters": {
          "type": "object",
          "properties": {
            "name": {
              "type": "string",
              "description": "Hotel Name"
            },
            "room_type": {
              "type": "string",
              "description": "Room types"
            },
            "checkin_date": {
              "type": "string",
              "description": "Check-in Date"
            },
            "checkout_date": {
              "type": "string",
              "description": "DEPARTURE DATE"
            }
          },
          "required": [
            "name",
            "room_type",
            "checkin_date",
            "checkout_date"
          ]
        }
      },
      {
        "name": "Finance.Banking.queryInterestRates",
        "description": "Find your bank's deposit and loan rates",
        "parameters": {
          "type": "object",
          "properties": {},
          "required": []
        }
      },
      {
        "name": "Education.OnlineClasses.evaluateCourse",
        "description": "Rate a course",
        "parameters": {
          "type": "object",
          "properties": {
            "course_name": {
              "type": "string",
              "description": "Course Title"
            },
            "rating": {
              "type": "string",
              "description": "Rating"
            }
          },
          "required": [
            "course_name",
            "rating"
          ]
        }
      }
    ],
    "single_tool": [
      {
        "name": "Travel.HotelServices.getHotelRoomPrice",
        "description": "Get prices for selected hotel rooms or all room types",
        "parameters": {
          "type": "object",
          "properties": {
            "name": {
              "type": "string",
              "description": "Hotel Name"
            },
            "room_type": {
              "type": "string",
              "description": "Room types"
            },
            "checkin_date": {
              "type": "string",
              "description": "Check-in Date"
            },
            "checkout_date": {
              "type": "string",
              "description": "DEPARTURE DATE"
            }
          },
          "required": [
            "name",
            "room_type",
            "checkin_date",
            "checkout_date"
          ]
        }
      }
    ],
    "id": 366
  },
  {
    "messages": [
      {
        "role": "user",
        "content": "I booked a hotel room, but I haven't figured out which one, can you recommend me a few first?"
      },
      {
        "role": "function call",
        "content": {
          "name": "Travel.HotelServices.bookHotel",
          "arguments": {}
        }
      },
      {
        "role": "assistant",
        "content": "Please provide the hotel name"
      },
      {
        "role": "user",
        "content": "I intend to book the Marriott International Hotel."
      },
      {
        "role": "function call",
        "content": {
          "name": "Travel.HotelServices.bookHotel",
          "arguments": {
            "name": "Marriott International Hotel"
          }
        }
      },
      {
        "role": "assistant",
        "content": "What type of room do you need to book"
      },
      {
        "role": "user",
        "content": "I need to book an executive single room."
      },
      {
        "role": "function call",
        "content": {
          "name": "Travel.HotelServices.bookHotel",
          "arguments": {
            "name": "Marriott International Hotel",
            "room_type": "Executive Single Room"
          }
        }
      },
      {
        "role": "assistant",
        "content": "Please provide the name of the check-in guest."
      },
      {
        "role": "user",
        "content": "It was wrong before. Hotel Name should be Hilton Hotel"
      },
      {
        "role": "function call",
        "content": {
          "name": "Travel.HotelServices.bookHotel",
          "arguments": {
            "name": "Hilton Hotel",
            "room_type": "Executive Single Room"
          }
        }
      },
      {
        "role": "assistant",
        "content": "Please provide the name of the check-in guest."
      },
      {
        "role": "user",
        "content": "Miss Wang."
      },
      {
        "role": "function call",
        "content": {
          "name": "Travel.HotelServices.bookHotel",
          "arguments": {
            "name": "Hilton Hotel",
            "room_type": "Executive Single Room",
            "tenant_name": "Miss Wang"
          }
        }
      },
      {
        "role": "assistant",
        "content": "What time is check-in?"
      },
      {
        "role": "user",
        "content": "My check-in date is May 1st."
      },
      {
        "role": "function call",
        "content": {
          "name": "Travel.HotelServices.bookHotel",
          "arguments": {
            "name": "Hilton Hotel",
            "room_type": "Executive Single Room",
            "tenant_name": "Miss Wang",
            "checkin_date": "May 1st"
          }
        }
      }
    ],
    "multiple_tools": [
      {
        "name": "Navigation.TaxiCarRental.reportCarRentalFault",
        "description": "Escalate vehicle issue based on order",
        "parameters": {
          "type": "object",
          "properties": {
            "order_id": {
              "type": "string",
              "description": "Booking Order ID"
            },
            "content": {
              "type": "string",
              "description": "Questions"
            }
          },
          "required": [
            "order_id",
            "content"
          ]
        }
      },
      {
        "name": "SystemTools.SystemOptimization.manageAppPermissions",
        "description": "Modify your app's permission settings",
        "parameters": {
          "type": "object",
          "properties": {
            "app_name": {
              "type": "string",
              "description": "Αpp Name"
            }
          },
          "required": [
            "app_name"
          ]
        }
      },
      {
        "name": "OnlineShopping.ExpressDelivery.placeExpressOrder",
        "description": "Initiating a Sender to a Specified Recipient",
        "parameters": {
          "type": "object",
          "properties": {
            "recipient_name": {
              "type": "string",
              "description": "Recipient's name"
            },
            "recipient_phone": {
              "type": "string",
              "description": "Recipient phone number"
            },
            "recipient_address": {
              "type": "string",
              "description": "<g id=\"Bold\">Receiver's</g> <g id=\"Bold\">Address:</g>"
            }
          },
          "required": [
            "recipient_name",
            "recipient_phone",
            "recipient_address"
          ]
        }
      },
      {
        "name": "Travel.HotelServices.bookHotel",
        "description": "Book a room at a selected hotel",
        "parameters": {
          "type": "object",
          "properties": {
            "name": {
              "type": "string",
              "description": "Hotel Name"
            },
            "checkin_date": {
              "type": "string",
              "description": "Check-in Date"
            },
            "checkout_date": {
              "type": "string",
              "description": "DEPARTURE DATE"
            },
            "room_type": {
              "type": "string",
              "description": "Room types"
            },
            "tenant_name": {
              "type": "string",
              "description": "Name of the guest staying"
            },
            "tenant_number": {
              "type": "string",
              "description": "Telephone number of the guest staying at the hotel"
            }
          },
          "required": [
            "name",
            "checkin_date",
            "checkout_date",
            "room_type",
            "tenant_name",
            "tenant_number"
          ]
        }
      },
      {
        "name": "OnlineShopping.SecondhandTrading.buySecondhandSaleCommodity",
        "description": "Goods purchased",
        "parameters": {
          "type": "object",
          "properties": {
            "search_name": {
              "type": "string",
              "description": "Trade Name/Keywords"
            }
          },
          "required": [
            "search_name"
          ]
        }
      }
    ],
    "single_tool": [
      {
        "name": "Travel.HotelServices.bookHotel",
        "description": "Book a room at a selected hotel",
        "parameters": {
          "type": "object",
          "properties": {
            "name": {
              "type": "string",
              "description": "Hotel Name"
            },
            "checkin_date": {
              "type": "string",
              "description": "Check-in Date"
            },
            "checkout_date": {
              "type": "string",
              "description": "DEPARTURE DATE"
            },
            "room_type": {
              "type": "string",
              "description": "Room types"
            },
            "tenant_name": {
              "type": "string",
              "description": "Name of the guest staying"
            },
            "tenant_number": {
              "type": "string",
              "description": "Telephone number of the guest staying at the hotel"
            }
          },
          "required": [
            "name",
            "checkin_date",
            "checkout_date",
            "room_type",
            "tenant_name",
            "tenant_number"
          ]
        }
      }
    ],
    "id": 367
  },
  {
    "messages": [
      {
        "role": "user",
        "content": "I need to book a hotel, do you have any suggestions? Preferably downtown."
      },
      {
        "role": "function call",
        "content": {
          "name": "Travel.HotelServices.bookHotel",
          "arguments": {}
        }
      },
      {
        "role": "assistant",
        "content": "What type of room would you like to book"
      },
      {
        "role": "user",
        "content": "I want to book a luxury suite."
      },
      {
        "role": "function call",
        "content": {
          "name": "Travel.HotelServices.bookHotel",
          "arguments": {
            "room_type": "Executive Suite"
          }
        }
      },
      {
        "role": "assistant",
        "content": "Please provide the guest's name"
      },
      {
        "role": "user",
        "content": "It was wrong before. Room types should be Executive Single Room"
      },
      {
        "role": "function call",
        "content": {
          "name": "Travel.HotelServices.bookHotel",
          "arguments": {
            "room_type": "Executive Single Room"
          }
        }
      },
      {
        "role": "assistant",
        "content": "Please provide the guest's name"
      },
      {
        "role": "user",
        "content": "Li Si"
      },
      {
        "role": "function call",
        "content": {
          "name": "Travel.HotelServices.bookHotel",
          "arguments": {
            "room_type": "Executive Single Room",
            "tenant_name": "Li Si"
          }
        }
      },
      {
        "role": "assistant",
        "content": "Please provide the hotel name"
      },
      {
        "role": "user",
        "content": "I'm going to book a Hilton hotel, can you check it for me?"
      },
      {
        "role": "function call",
        "content": {
          "name": "Travel.HotelServices.bookHotel",
          "arguments": {
            "room_type": "Executive Single Room",
            "tenant_name": "Li Si",
            "name": "Hilton Hotel"
          }
        }
      },
      {
        "role": "assistant",
        "content": "What time is check-in?"
      },
      {
        "role": "user",
        "content": "My check-in date is April 15th and I will arrive at the hotel on that day."
      },
      {
        "role": "function call",
        "content": {
          "name": "Travel.HotelServices.bookHotel",
          "arguments": {
            "room_type": "Executive Single Room",
            "tenant_name": "Li Si",
            "name": "Hilton Hotel",
            "checkin_date": "April 15th"
          }
        }
      }
    ],
    "multiple_tools": [
      {
        "name": "UtilityTools.Calendar.addCalendarschedule",
        "description": "Create a new schedule",
        "parameters": {
          "type": "object",
          "properties": {
            "date_name": {
              "type": "string",
              "description": "Visiting program name"
            },
            "start_date": {
              "type": "string",
              "description": "Schedule start time"
            },
            "end_date": {
              "type": "string",
              "description": "Schedule end time; do not write the default start time 24 o'clock on the same day"
            },
            "schedule": {
              "type": "string",
              "description": "Schedule Related Descriptions"
            }
          },
          "required": [
            "date_name",
            "start_date",
            "end_date",
            "schedule"
          ]
        }
      },
      {
        "name": "Travel.ScenicAreaServices.createScenicSpotBooking",
        "description": "Create a scenic spot reservation for the user",
        "parameters": {
          "type": "object",
          "properties": {
            "name": {
              "type": "string",
              "description": "Name of the tourist area"
            },
            "booking_date": {
              "type": "string",
              "description": "Ordered Date"
            },
            "number_of_people": {
              "type": "integer",
              "description": "Booking Persons"
            }
          },
          "required": [
            "name",
            "booking_date",
            "number_of_people"
          ]
        }
      },
      {
        "name": "Travel.HotelServices.bookHotel",
        "description": "Book a room at a selected hotel",
        "parameters": {
          "type": "object",
          "properties": {
            "name": {
              "type": "string",
              "description": "Hotel Name"
            },
            "checkin_date": {
              "type": "string",
              "description": "Check-in Date"
            },
            "checkout_date": {
              "type": "string",
              "description": "DEPARTURE DATE"
            },
            "room_type": {
              "type": "string",
              "description": "Room types"
            },
            "tenant_name": {
              "type": "string",
              "description": "Name of the guest staying"
            },
            "tenant_number": {
              "type": "string",
              "description": "Telephone number of the guest staying at the hotel"
            }
          },
          "required": [
            "name",
            "checkin_date",
            "checkout_date",
            "room_type",
            "tenant_name",
            "tenant_number"
          ]
        }
      },
      {
        "name": "UtilityTools.AlarmClock.addAlarm",
        "description": "New key for an alarm clock",
        "parameters": {
          "type": "object",
          "properties": {
            "clock_time_name": {
              "type": "string",
              "description": "Alarm name, default is empty"
            },
            "clock_time": {
              "type": "string",
              "description": "Alarm time"
            }
          },
          "required": [
            "clock_time_name",
            "clock_time"
          ]
        }
      },
      {
        "name": "OfficeSoftware.Conferencing.createMeeting",
        "description": "Create a new meeting",
        "parameters": {
          "type": "object",
          "properties": {
            "title": {
              "type": "string",
              "description": "Meeting Title:"
            },
            "start_time": {
              "type": "string",
              "description": "Conference Start Time"
            },
            "end_time": {
              "type": "string",
              "description": "Meeting end time"
            },
            "location": {
              "type": "string",
              "description": "Meeting Address"
            },
            "participant_list": {
              "type": "string",
              "description": "List of participants in the meeting"
            }
          },
          "required": [
            "title",
            "start_time",
            "end_time",
            "location",
            "participant_list"
          ]
        }
      }
    ],
    "single_tool": [
      {
        "name": "Travel.HotelServices.bookHotel",
        "description": "Book a room at a selected hotel",
        "parameters": {
          "type": "object",
          "properties": {
            "name": {
              "type": "string",
              "description": "Hotel Name"
            },
            "checkin_date": {
              "type": "string",
              "description": "Check-in Date"
            },
            "checkout_date": {
              "type": "string",
              "description": "DEPARTURE DATE"
            },
            "room_type": {
              "type": "string",
              "description": "Room types"
            },
            "tenant_name": {
              "type": "string",
              "description": "Name of the guest staying"
            },
            "tenant_number": {
              "type": "string",
              "description": "Telephone number of the guest staying at the hotel"
            }
          },
          "required": [
            "name",
            "checkin_date",
            "checkout_date",
            "room_type",
            "tenant_name",
            "tenant_number"
          ]
        }
      }
    ],
    "id": 368
  },
  {
    "messages": [
      {
        "role": "user",
        "content": "I need to cancel a hotel reservation, but there is no specific information to see how it can help me."
      },
      {
        "role": "function call",
        "content": {
          "name": "Travel.HotelServices.cancelHotelBooking",
          "arguments": {}
        }
      },
      {
        "role": "assistant",
        "content": "Please provide the hotel name"
      },
      {
        "role": "user",
        "content": "Sheraton Chengdu is the hotel I want to know about."
      },
      {
        "role": "function call",
        "content": {
          "name": "Travel.HotelServices.cancelHotelBooking",
          "arguments": {
            "name": "Sheraton Chengdu Hotel"
          }
        }
      },
      {
        "role": "assistant",
        "content": "What is the room type?"
      },
      {
        "role": "user",
        "content": "It was wrong before. Hotel Name should be JW Marriott Shanghai Pudong New Area"
      },
      {
        "role": "function call",
        "content": {
          "name": "Travel.HotelServices.cancelHotelBooking",
          "arguments": {
            "name": "JW Marriott Shanghai Pudong New Area"
          }
        }
      },
      {
        "role": "assistant",
        "content": "What is the room type?"
      },
      {
        "role": "user",
        "content": "I would like to book an executive suite."
      },
      {
        "role": "function call",
        "content": {
          "name": "Travel.HotelServices.cancelHotelBooking",
          "arguments": {
            "name": "JW Marriott Shanghai Pudong New Area",
            "room_type": "Executive Suite"
          }
        }
      },
      {
        "role": "assistant",
        "content": "What is the name and contact information of the check-in guest?"
      },
      {
        "role": "user",
        "content": "The name of the check-in guest is Li Si, and the contact information is 13800138000."
      },
      {
        "role": "function call",
        "content": {
          "name": "Travel.HotelServices.cancelHotelBooking",
          "arguments": {
            "name": "JW Marriott Shanghai Pudong New Area",
            "room_type": "Executive Suite",
            "tenant_name": "Li Si"
          }
        }
      }
    ],
    "multiple_tools": [
      {
        "name": "Navigation.FlightTickets.cancelFlightBooking",
        "description": "Cancelling a flight for a specific reservation",
        "parameters": {
          "type": "object",
          "properties": {
            "departure": {
              "type": "string",
              "description": "Origination"
            },
            "destination": {
              "type": "string",
              "description": "Reach ground"
            },
            "name": {
              "type": "string",
              "description": "Name of person who booked"
            },
            "time": {
              "type": "string",
              "description": "Flight departure time"
            },
            "passenger_id": {
              "type": "string",
              "description": "Rider ID number"
            }
          },
          "required": [
            "departure",
            "destination",
            "name",
            "time",
            "passenger_id"
          ]
        }
      },
      {
        "name": "Travel.HotelServices.cancelHotelBooking",
        "description": "Cancel the specified hotel reservation",
        "parameters": {
          "type": "object",
          "properties": {
            "name": {
              "type": "string",
              "description": "Hotel Name"
            },
            "booking_date": {
              "type": "string",
              "description": "Ordered Date"
            },
            "room_type": {
              "type": "string",
              "description": "Room types"
            },
            "tenant_name": {
              "type": "string",
              "description": "Name of the guest staying"
            },
            "tenant_number": {
              "type": "string",
              "description": "Telephone number of the guest staying at the hotel"
            }
          },
          "required": [
            "name",
            "booking_date",
            "room_type",
            "tenant_name",
            "tenant_number"
          ]
        }
      },
      {
        "name": "Navigation.TrainTickets.cancelTrainTicket",
        "description": "Cancelling a booked train ticket",
        "parameters": {
          "type": "object",
          "properties": {
            "train_number": {
              "type": "string",
              "description": "Wagon Number"
            },
            "name": {
              "type": "string",
              "description": "Rider's name"
            },
            "time": {
              "type": "string",
              "description": "To cancel a reservation for a certain time"
            },
            "departure_station": {
              "type": "string",
              "description": "Departure Station"
            },
            "destination_station": {
              "type": "string",
              "description": "arrival station"
            }
          },
          "required": [
            "train_number",
            "name",
            "time",
            "departure_station",
            "destination_station"
          ]
        }
      },
      {
        "name": "Travel.ScenicAreaServices.cancelScenicSpotBooking",
        "description": "Canceling a reservation at a designated attraction",
        "parameters": {
          "type": "object",
          "properties": {
            "name": {
              "type": "string",
              "description": "Name of the tourist area"
            },
            "booking_date": {
              "type": "string",
              "description": "Ordered Date"
            }
          },
          "required": [
            "name",
            "booking_date"
          ]
        }
      },
      {
        "name": "Navigation.TaxiCarRental.cancelCarRentalOrder",
        "description": "Cancel the rental (all pending reservations are canceled by default)",
        "parameters": {
          "type": "object",
          "properties": {
            "time": {
              "type": "string",
              "description": "Release Date"
            }
          },
          "required": [
            "time"
          ]
        }
      }
    ],
    "single_tool": [
      {
        "name": "Travel.HotelServices.cancelHotelBooking",
        "description": "Cancel the specified hotel reservation",
        "parameters": {
          "type": "object",
          "properties": {
            "name": {
              "type": "string",
              "description": "Hotel Name"
            },
            "booking_date": {
              "type": "string",
              "description": "Ordered Date"
            },
            "room_type": {
              "type": "string",
              "description": "Room types"
            },
            "tenant_name": {
              "type": "string",
              "description": "Name of the guest staying"
            },
            "tenant_number": {
              "type": "string",
              "description": "Telephone number of the guest staying at the hotel"
            }
          },
          "required": [
            "name",
            "booking_date",
            "room_type",
            "tenant_name",
            "tenant_number"
          ]
        }
      }
    ],
    "id": 369
  },
  {
    "messages": [
      {
        "role": "user",
        "content": "Can you help me cancel a hotel reservation? I don't have any more information."
      },
      {
        "role": "function call",
        "content": {
          "name": "Travel.HotelServices.cancelHotelBooking",
          "arguments": {}
        }
      },
      {
        "role": "assistant",
        "content": "What is the name of the hotel?"
      },
      {
        "role": "user",
        "content": "We booked a Sofitel hotel in a convenient location close to the city center."
      },
      {
        "role": "function call",
        "content": {
          "name": "Travel.HotelServices.cancelHotelBooking",
          "arguments": {
            "name": "Sofitel"
          }
        }
      },
      {
        "role": "assistant",
        "content": "What is the room type?"
      },
      {
        "role": "user",
        "content": "It was wrong before. Hotel Name should be JW Marriott Shanghai Pudong New Area"
      },
      {
        "role": "function call",
        "content": {
          "name": "Travel.HotelServices.cancelHotelBooking",
          "arguments": {
            "name": "JW Marriott Shanghai Pudong New Area"
          }
        }
      },
      {
        "role": "assistant",
        "content": "What is the room type?"
      },
      {
        "role": "user",
        "content": "I want a room with sea view."
      },
      {
        "role": "function call",
        "content": {
          "name": "Travel.HotelServices.cancelHotelBooking",
          "arguments": {
            "name": "JW Marriott Shanghai Pudong New Area",
            "room_type": "Ocean View Room"
          }
        }
      },
      {
        "role": "assistant",
        "content": "What is the name information of the check-in guest?"
      },
      {
        "role": "user",
        "content": "The name of the check-in guest is Wang Wu."
      },
      {
        "role": "function call",
        "content": {
          "name": "Travel.HotelServices.cancelHotelBooking",
          "arguments": {
            "name": "JW Marriott Shanghai Pudong New Area",
            "room_type": "Ocean View Room",
            "tenant_name": "Wangwu"
          }
        }
      }
    ],
    "multiple_tools": [
      {
        "name": "Navigation.TrainTickets.cancelTrainTicket",
        "description": "Cancelling a booked train ticket",
        "parameters": {
          "type": "object",
          "properties": {
            "train_number": {
              "type": "string",
              "description": "Wagon Number"
            },
            "name": {
              "type": "string",
              "description": "Rider's name"
            },
            "time": {
              "type": "string",
              "description": "To cancel a reservation for a certain time"
            },
            "departure_station": {
              "type": "string",
              "description": "Departure Station"
            },
            "destination_station": {
              "type": "string",
              "description": "arrival station"
            }
          },
          "required": [
            "train_number",
            "name",
            "time",
            "departure_station",
            "destination_station"
          ]
        }
      },
      {
        "name": "Navigation.TaxiCarRental.cancelCarRentalOrder",
        "description": "Cancel the rental (all pending reservations are canceled by default)",
        "parameters": {
          "type": "object",
          "properties": {
            "time": {
              "type": "string",
              "description": "Release Date"
            }
          },
          "required": [
            "time"
          ]
        }
      },
      {
        "name": "Navigation.FlightTickets.cancelFlightBooking",
        "description": "Cancelling a flight for a specific reservation",
        "parameters": {
          "type": "object",
          "properties": {
            "departure": {
              "type": "string",
              "description": "Origination"
            },
            "destination": {
              "type": "string",
              "description": "Reach ground"
            },
            "name": {
              "type": "string",
              "description": "Name of person who booked"
            },
            "time": {
              "type": "string",
              "description": "Flight departure time"
            },
            "passenger_id": {
              "type": "string",
              "description": "Rider ID number"
            }
          },
          "required": [
            "departure",
            "destination",
            "name",
            "time",
            "passenger_id"
          ]
        }
      },
      {
        "name": "Travel.HotelServices.cancelHotelBooking",
        "description": "Cancel the specified hotel reservation",
        "parameters": {
          "type": "object",
          "properties": {
            "name": {
              "type": "string",
              "description": "Hotel Name"
            },
            "booking_date": {
              "type": "string",
              "description": "Ordered Date"
            },
            "room_type": {
              "type": "string",
              "description": "Room types"
            },
            "tenant_name": {
              "type": "string",
              "description": "Name of the guest staying"
            },
            "tenant_number": {
              "type": "string",
              "description": "Telephone number of the guest staying at the hotel"
            }
          },
          "required": [
            "name",
            "booking_date",
            "room_type",
            "tenant_name",
            "tenant_number"
          ]
        }
      },
      {
        "name": "Travel.ScenicAreaServices.cancelScenicSpotBooking",
        "description": "Canceling a reservation at a designated attraction",
        "parameters": {
          "type": "object",
          "properties": {
            "name": {
              "type": "string",
              "description": "Name of the tourist area"
            },
            "booking_date": {
              "type": "string",
              "description": "Ordered Date"
            }
          },
          "required": [
            "name",
            "booking_date"
          ]
        }
      }
    ],
    "single_tool": [
      {
        "name": "Travel.HotelServices.cancelHotelBooking",
        "description": "Cancel the specified hotel reservation",
        "parameters": {
          "type": "object",
          "properties": {
            "name": {
              "type": "string",
              "description": "Hotel Name"
            },
            "booking_date": {
              "type": "string",
              "description": "Ordered Date"
            },
            "room_type": {
              "type": "string",
              "description": "Room types"
            },
            "tenant_name": {
              "type": "string",
              "description": "Name of the guest staying"
            },
            "tenant_number": {
              "type": "string",
              "description": "Telephone number of the guest staying at the hotel"
            }
          },
          "required": [
            "name",
            "booking_date",
            "room_type",
            "tenant_name",
            "tenant_number"
          ]
        }
      }
    ],
    "id": 370
  },
  {
    "messages": [
      {
        "role": "user",
        "content": "Go to the scenic spot and arrange a reservation for me"
      },
      {
        "role": "function call",
        "content": {
          "name": "Travel.ScenicAreaServices.createScenicSpotBooking",
          "arguments": {}
        }
      },
      {
        "role": "assistant",
        "content": "When you'll book"
      },
      {
        "role": "user",
        "content": "The booking date is May 20, 2023 and I plan to travel that day."
      },
      {
        "role": "function call",
        "content": {
          "name": "Travel.ScenicAreaServices.createScenicSpotBooking",
          "arguments": {
            "booking_date": "May 20, 2023"
          }
        }
      },
      {
        "role": "assistant",
        "content": "What is the name of the attraction you would like to book?"
      },
      {
        "role": "user",
        "content": "It was wrong before. Ordered Date should be May 1"
      },
      {
        "role": "function call",
        "content": {
          "name": "Travel.ScenicAreaServices.createScenicSpotBooking",
          "arguments": {
            "booking_date": "May 1"
          }
        }
      },
      {
        "role": "assistant",
        "content": "What is the name of the attraction you would like to book?"
      },
      {
        "role": "user",
        "content": "I want to book tickets for the Great Wall."
      },
      {
        "role": "function call",
        "content": {
          "name": "Travel.ScenicAreaServices.createScenicSpotBooking",
          "arguments": {
            "booking_date": "May 1",
            "name": "Great Wall"
          }
        }
      }
    ],
    "multiple_tools": [
      {
        "name": "Navigation.TaxiCarRental.searchCarRental",
        "description": "See cars available in your location",
        "parameters": {
          "type": "object",
          "properties": {
            "location": {
              "type": "string",
              "description": "Pick-up from"
            },
            "start_time": {
              "type": "string",
              "description": "Start Time "
            },
            "end_time": {
              "type": "string",
              "description": "drop-off date"
            }
          },
          "required": [
            "location",
            "start_time",
            "end_time"
          ]
        }
      },
      {
        "name": "Travel.ScenicAreaServices.recommendSimilarScenicSpots",
        "description": "Recommend similar other scenic spots based on designated scenic spots",
        "parameters": {
          "type": "object",
          "properties": {
            "name": {
              "type": "string",
              "description": "Name of scenic spot for reference"
            }
          },
          "required": [
            "name"
          ]
        }
      },
      {
        "name": "MusicRadio.Karaoke.getAccompaniments",
        "description": "Get a list of song accompaniments for a given song title",
        "parameters": {
          "type": "object",
          "properties": {
            "song_name": {
              "type": "string",
              "description": "Song Name"
            },
            "singer_name": {
              "type": "string",
              "description": "Singer name"
            }
          },
          "required": [
            "song_name",
            "singer_name"
          ]
        }
      },
      {
        "name": "Finance.Banking.fixDeposit",
        "description": "Convert a specified amount of demand deposits to time deposits of a specific time deposit duration",
        "parameters": {
          "type": "object",
          "properties": {
            "amount": {
              "type": "float",
              "description": "Amount of time deposit, unit (yuan)"
            },
            "duration": {
              "type": "string",
              "description": "Fixed Deposit Time"
            }
          },
          "required": [
            "amount",
            "duration"
          ]
        }
      },
      {
        "name": "Travel.ScenicAreaServices.createScenicSpotBooking",
        "description": "Create a scenic spot reservation for the user",
        "parameters": {
          "type": "object",
          "properties": {
            "name": {
              "type": "string",
              "description": "Name of the tourist area"
            },
            "booking_date": {
              "type": "string",
              "description": "Ordered Date"
            },
            "number_of_people": {
              "type": "integer",
              "description": "Booking Persons"
            }
          },
          "required": [
            "name",
            "booking_date",
            "number_of_people"
          ]
        }
      }
    ],
    "single_tool": [
      {
        "name": "Travel.ScenicAreaServices.createScenicSpotBooking",
        "description": "Create a scenic spot reservation for the user",
        "parameters": {
          "type": "object",
          "properties": {
            "name": {
              "type": "string",
              "description": "Name of the tourist area"
            },
            "booking_date": {
              "type": "string",
              "description": "Ordered Date"
            },
            "number_of_people": {
              "type": "integer",
              "description": "Booking Persons"
            }
          },
          "required": [
            "name",
            "booking_date",
            "number_of_people"
          ]
        }
      }
    ],
    "id": 373
  },
  {
    "messages": [
      {
        "role": "user",
        "content": "Share scenic spot information"
      },
      {
        "role": "function call",
        "content": {
          "name": "Travel.ScenicAreaServices.shareScenicSpotBooking",
          "arguments": {}
        }
      },
      {
        "role": "assistant",
        "content": "Please provide the name of the scenic spot"
      },
      {
        "role": "user",
        "content": "Great Wall"
      },
      {
        "role": "function call",
        "content": {
          "name": "Travel.ScenicAreaServices.shareScenicSpotBooking",
          "arguments": {
            "name": "Great Wall"
          }
        }
      },
      {
        "role": "assistant",
        "content": "Which destination app name needs to be shared to"
      },
      {
        "role": "user",
        "content": "It was wrong before. Name of the tourist area should be The Palace Museum"
      },
      {
        "role": "function call",
        "content": {
          "name": "Travel.ScenicAreaServices.shareScenicSpotBooking",
          "arguments": {
            "name": "The Palace Museum"
          }
        }
      },
      {
        "role": "assistant",
        "content": "Which destination app name needs to be shared to"
      },
      {
        "role": "user",
        "content": "QQ Zone"
      },
      {
        "role": "function call",
        "content": {
          "name": "Travel.ScenicAreaServices.shareScenicSpotBooking",
          "arguments": {
            "name": "The Palace Museum",
            "to": "QQ Zone"
          }
        }
      }
    ],
    "multiple_tools": [
      {
        "name": "Travel.ScenicAreaServices.shareScenicSpotBooking",
        "description": "Share the designated scenic spot information to the destination app",
        "parameters": {
          "type": "object",
          "properties": {
            "name": {
              "type": "string",
              "description": "Name of the tourist area"
            },
            "to": {
              "type": "string",
              "description": "Destination app name"
            }
          },
          "required": [
            "name",
            "to"
          ]
        }
      },
      {
        "name": "SocialCommunication.SocialMedia.mediumContinue",
        "description": "Forwarding actions on specified dynamics",
        "parameters": {
          "type": "object",
          "properties": {
            "medium_name": {
              "type": "string",
              "description": "Media name"
            },
            "correlation": {
              "type": "string",
              "description": "Dynamic Related Content"
            },
            "publisher": {
              "type": "string",
              "description": "Posted by/publisher?"
            },
            "publish_time": {
              "type": "string",
              "description": "Release Date"
            }
          },
          "required": [
            "medium_name",
            "correlation",
            "publisher",
            "publish_time"
          ]
        }
      },
      {
        "name": "OnlineShopping.ExpressDelivery.shareExpress",
        "description": "Share specific courier logistics information with the intended audience",
        "parameters": {
          "type": "object",
          "properties": {
            "to": {
              "type": "string",
              "description": "Shared with"
            },
            "date": {
              "type": "string",
              "description": "Shipping date"
            }
          },
          "required": [
            "to",
            "date"
          ]
        }
      },
      {
        "name": "Health.Fitness.shareExerciseProgress",
        "description": "Share your fitness progress with the people you want to share it with",
        "parameters": {
          "type": "object",
          "properties": {
            "target": {
              "type": "string",
              "description": "Share with"
            },
            "exercise_progress": {
              "type": "string",
              "description": "Fitness Progress"
            }
          },
          "required": [
            "target",
            "exercise_progress"
          ]
        }
      },
      {
        "name": "SocialCommunication.Community.shareCommunityPost",
        "description": "Share a specific post to a specific medium or to someone",
        "parameters": {
          "type": "object",
          "properties": {
            "community_name": {
              "type": "string",
              "description": "The name of the community where the post is located"
            },
            "title": {
              "type": "string",
              "description": "Prev Post Caption"
            },
            "medium": {
              "type": "string",
              "description": "Share media"
            },
            "user_name": {
              "type": "string",
              "description": "Shared by"
            }
          },
          "required": [
            "community_name",
            "title",
            "medium",
            "user_name"
          ]
        }
      }
    ],
    "single_tool": [
      {
        "name": "Travel.ScenicAreaServices.shareScenicSpotBooking",
        "description": "Share the designated scenic spot information to the destination app",
        "parameters": {
          "type": "object",
          "properties": {
            "name": {
              "type": "string",
              "description": "Name of the tourist area"
            },
            "to": {
              "type": "string",
              "description": "Destination app name"
            }
          },
          "required": [
            "name",
            "to"
          ]
        }
      }
    ],
    "id": 375
  },
  {
    "messages": [
      {
        "role": "user",
        "content": "This place is pretty. Share it."
      },
      {
        "role": "function call",
        "content": {
          "name": "Travel.ScenicAreaServices.shareScenicSpotBooking",
          "arguments": {}
        }
      },
      {
        "role": "assistant",
        "content": "Please provide the name of the scenic spot"
      },
      {
        "role": "user",
        "content": "The Palace Museum"
      },
      {
        "role": "function call",
        "content": {
          "name": "Travel.ScenicAreaServices.shareScenicSpotBooking",
          "arguments": {
            "name": "The Palace Museum"
          }
        }
      },
      {
        "role": "assistant",
        "content": "Which destination app name needs to be shared to"
      },
      {
        "role": "user",
        "content": "It was wrong before. Name of the tourist area should be Great Wall"
      },
      {
        "role": "function call",
        "content": {
          "name": "Travel.ScenicAreaServices.shareScenicSpotBooking",
          "arguments": {
            "name": "Great Wall"
          }
        }
      },
      {
        "role": "assistant",
        "content": "Which destination app name needs to be shared to"
      },
      {
        "role": "user",
        "content": "Twitter"
      },
      {
        "role": "function call",
        "content": {
          "name": "Travel.ScenicAreaServices.shareScenicSpotBooking",
          "arguments": {
            "name": "Great Wall",
            "to": "Twitter"
          }
        }
      }
    ],
    "multiple_tools": [
      {
        "name": "NewsMagazines.News.getTodayTopNews",
        "description": "Provide users with today's important news",
        "parameters": {
          "type": "object",
          "properties": {},
          "required": []
        }
      },
      {
        "name": "Travel.ScenicAreaServices.shareScenicSpotBooking",
        "description": "Share the designated scenic spot information to the destination app",
        "parameters": {
          "type": "object",
          "properties": {
            "name": {
              "type": "string",
              "description": "Name of the tourist area"
            },
            "to": {
              "type": "string",
              "description": "Destination app name"
            }
          },
          "required": [
            "name",
            "to"
          ]
        }
      },
      {
        "name": "Travel.ItineraryServices.shareTravelItinerary",
        "description": "Sharing travel itineraries to designated locations",
        "parameters": {
          "type": "object",
          "properties": {
            "name": {
              "type": "string",
              "description": "Trip name or keyword"
            },
            "to": {
              "type": "string",
              "description": "Destination app name"
            }
          },
          "required": [
            "name",
            "to"
          ]
        }
      },
      {
        "name": "OfficeSoftware.Email.collectMail",
        "description": "Favorite a specified message",
        "parameters": {
          "type": "object",
          "properties": {
            "mail_title": {
              "type": "string",
              "description": "Title of the message to favorite"
            }
          },
          "required": [
            "mail_title"
          ]
        }
      },
      {
        "name": "Health.Fitness.shareExerciseProgress",
        "description": "Share your fitness progress with the people you want to share it with",
        "parameters": {
          "type": "object",
          "properties": {
            "target": {
              "type": "string",
              "description": "Share with"
            },
            "exercise_progress": {
              "type": "string",
              "description": "Fitness Progress"
            }
          },
          "required": [
            "target",
            "exercise_progress"
          ]
        }
      }
    ],
    "single_tool": [
      {
        "name": "Travel.ScenicAreaServices.shareScenicSpotBooking",
        "description": "Share the designated scenic spot information to the destination app",
        "parameters": {
          "type": "object",
          "properties": {
            "name": {
              "type": "string",
              "description": "Name of the tourist area"
            },
            "to": {
              "type": "string",
              "description": "Destination app name"
            }
          },
          "required": [
            "name",
            "to"
          ]
        }
      }
    ],
    "id": 376
  },
  {
    "messages": [
      {
        "role": "user",
        "content": "Finding posts in the community"
      },
      {
        "role": "function call",
        "content": {
          "name": "SocialCommunication.Community.searchCommunityPosts",
          "arguments": {}
        }
      },
      {
        "role": "assistant",
        "content": "What is the community name of the post to find"
      },
      {
        "role": "user",
        "content": "The community name is Weibo"
      },
      {
        "role": "function call",
        "content": {
          "name": "SocialCommunication.Community.searchCommunityPosts",
          "arguments": {
            "community_name": "Twitter"
          }
        }
      },
      {
        "role": "assistant",
        "content": "Please provide keywords to find posts"
      },
      {
        "role": "user",
        "content": "It was wrong before. The name of the community where you want to find posts should be Programmer exchange area"
      },
      {
        "role": "function call",
        "content": {
          "name": "SocialCommunication.Community.searchCommunityPosts",
          "arguments": {
            "community_name": "Programmer exchange area"
          }
        }
      },
      {
        "role": "assistant",
        "content": "Please provide keywords to find posts"
      },
      {
        "role": "user",
        "content": "Food recommendations"
      },
      {
        "role": "function call",
        "content": {
          "name": "SocialCommunication.Community.searchCommunityPosts",
          "arguments": {
            "community_name": "Programmer exchange area",
            "key_words": "Food recommendations"
          }
        }
      }
    ],
    "multiple_tools": [
      {
        "name": "SocialCommunication.Community.searchCommunityTopics",
        "description": "Search for related topics in specific communities by keyword",
        "parameters": {
          "type": "object",
          "properties": {
            "community_name": {
              "type": "string",
              "description": "Community name of the topic to search"
            },
            "key_words": {
              "type": "string",
              "description": "Keywords used to search topics"
            }
          },
          "required": [
            "community_name",
            "key_words"
          ]
        }
      },
      {
        "name": "ConvenientLiving.FoodDelivery.searchRestaurantDiscounts",
        "description": "Enter keywords to search for deals",
        "parameters": {
          "type": "object",
          "properties": {
            "keyword": {
              "type": "string",
              "description": "Keywords related to offers"
            }
          },
          "required": [
            "keyword"
          ]
        }
      },
      {
        "name": "OfficeSoftware.Email.searchMail",
        "description": "Search messages by email keyword",
        "parameters": {
          "type": "object",
          "properties": {
            "keyword": {
              "type": "string",
              "description": "KEYWORDS"
            },
            "max_results": {
              "type": "integer",
              "description": "Maximum number of returned results, default is 10"
            }
          },
          "required": [
            "keyword",
            "max_results"
          ]
        }
      },
      {
        "name": "SocialCommunication.Community.searchCommunityPosts",
        "description": "Find related posts in a specific community by keyword",
        "parameters": {
          "type": "object",
          "properties": {
            "community_name": {
              "type": "string",
              "description": "The name of the community where you want to find posts"
            },
            "key_words": {
              "type": "string",
              "description": "Keywords used to find posts"
            }
          },
          "required": [
            "community_name",
            "key_words"
          ]
        }
      },
      {
        "name": "NewsMagazines.NewspapersMagazines.searchArticles",
        "description": "Search articles by keyword",
        "parameters": {
          "type": "object",
          "properties": {
            "keyword": {
              "type": "string",
              "description": "Keywords"
            }
          },
          "required": [
            "keyword"
          ]
        }
      }
    ],
    "single_tool": [
      {
        "name": "SocialCommunication.Community.searchCommunityPosts",
        "description": "Find related posts in a specific community by keyword",
        "parameters": {
          "type": "object",
          "properties": {
            "community_name": {
              "type": "string",
              "description": "The name of the community where you want to find posts"
            },
            "key_words": {
              "type": "string",
              "description": "Keywords used to find posts"
            }
          },
          "required": [
            "community_name",
            "key_words"
          ]
        }
      }
    ],
    "id": 380
  },
  {
    "messages": [
      {
        "role": "user",
        "content": "Share your latest post with my friends"
      },
      {
        "role": "function call",
        "content": {
          "name": "SocialCommunication.Community.shareCommunityPost",
          "arguments": {}
        }
      },
      {
        "role": "assistant",
        "content": "What the community name of the post is"
      },
      {
        "role": "user",
        "content": "Zhihu"
      },
      {
        "role": "function call",
        "content": {
          "name": "SocialCommunication.Community.shareCommunityPost",
          "arguments": {
            "community_name": "Zhihu"
          }
        }
      },
      {
        "role": "assistant",
        "content": "What's the title of your post"
      },
      {
        "role": "user",
        "content": "It was wrong before. The name of the community where the post is located should be Douban"
      },
      {
        "role": "function call",
        "content": {
          "name": "SocialCommunication.Community.shareCommunityPost",
          "arguments": {
            "community_name": "Douban"
          }
        }
      },
      {
        "role": "assistant",
        "content": "What's the title of your post"
      },
      {
        "role": "user",
        "content": "How to learn to program effectively"
      },
      {
        "role": "function call",
        "content": {
          "name": "SocialCommunication.Community.shareCommunityPost",
          "arguments": {
            "community_name": "Douban",
            "title": "How to learn to program effectively"
          }
        }
      },
      {
        "role": "assistant",
        "content": "Please provide the medium and the audience or group of people you are sharing with"
      },
      {
        "role": "user",
        "content": "I intend to share it with my followers via Weibo."
      },
      {
        "role": "function call",
        "content": {
          "name": "SocialCommunication.Community.shareCommunityPost",
          "arguments": {
            "community_name": "Douban",
            "title": "How to learn to program effectively",
            "medium": "Twitter"
          }
        }
      }
    ],
    "multiple_tools": [
      {
        "name": "Navigation.MapNavigation.shareTravelRoute",
        "description": "Share travel plans or directions",
        "parameters": {
          "type": "object",
          "properties": {
            "departure": {
              "type": "string",
              "description": "The name or address of the departure location, the default current location"
            },
            "destination": {
              "type": "string",
              "description": "Name or address of the destination"
            },
            "to": {
              "type": "string",
              "description": "Ways to share, like social media, texting, etc."
            }
          },
          "required": [
            "departure",
            "destination",
            "to"
          ]
        }
      },
      {
        "name": "Health.Fitness.shareExerciseProgress",
        "description": "Share your fitness progress with the people you want to share it with",
        "parameters": {
          "type": "object",
          "properties": {
            "target": {
              "type": "string",
              "description": "Share with"
            },
            "exercise_progress": {
              "type": "string",
              "description": "Fitness Progress"
            }
          },
          "required": [
            "target",
            "exercise_progress"
          ]
        }
      },
      {
        "name": "SocialCommunication.Community.shareCommunityPost",
        "description": "Share a specific post to a specific medium or to someone",
        "parameters": {
          "type": "object",
          "properties": {
            "community_name": {
              "type": "string",
              "description": "The name of the community where the post is located"
            },
            "title": {
              "type": "string",
              "description": "Prev Post Caption"
            },
            "medium": {
              "type": "string",
              "description": "Share media"
            },
            "user_name": {
              "type": "string",
              "description": "Shared by"
            }
          },
          "required": [
            "community_name",
            "title",
            "medium",
            "user_name"
          ]
        }
      },
      {
        "name": "NewsMagazines.NewspapersMagazines.shareArticle",
        "description": "Share posts to social media",
        "parameters": {
          "type": "object",
          "properties": {
            "to": {
              "type": "string",
              "description": "Choose Socials To Share Single Post"
            },
            "article": {
              "type": "string",
              "description": "Articles"
            }
          },
          "required": [
            "to",
            "article"
          ]
        }
      },
      {
        "name": "MusicRadio.Karaoke.shareKsongWorks",
        "description": "Share work based on song name",
        "parameters": {
          "type": "object",
          "properties": {
            "song_name": {
              "type": "string",
              "description": "Song Name"
            },
            "media": {
              "type": "string",
              "description": "Media"
            },
            "name": {
              "type": "string",
              "description": "Friend name"
            }
          },
          "required": [
            "song_name",
            "media",
            "name"
          ]
        }
      }
    ],
    "single_tool": [
      {
        "name": "SocialCommunication.Community.shareCommunityPost",
        "description": "Share a specific post to a specific medium or to someone",
        "parameters": {
          "type": "object",
          "properties": {
            "community_name": {
              "type": "string",
              "description": "The name of the community where the post is located"
            },
            "title": {
              "type": "string",
              "description": "Prev Post Caption"
            },
            "medium": {
              "type": "string",
              "description": "Share media"
            },
            "user_name": {
              "type": "string",
              "description": "Shared by"
            }
          },
          "required": [
            "community_name",
            "title",
            "medium",
            "user_name"
          ]
        }
      }
    ],
    "id": 381
  },
  {
    "messages": [
      {
        "role": "user",
        "content": "Post sharing"
      },
      {
        "role": "function call",
        "content": {
          "name": "SocialCommunication.Community.shareCommunityPost",
          "arguments": {}
        }
      },
      {
        "role": "assistant",
        "content": "What the community name of the post is"
      },
      {
        "role": "user",
        "content": "The post was made in the Douban community."
      },
      {
        "role": "function call",
        "content": {
          "name": "SocialCommunication.Community.shareCommunityPost",
          "arguments": {
            "community_name": "Douban"
          }
        }
      },
      {
        "role": "assistant",
        "content": "What's the title of your post"
      },
      {
        "role": "user",
        "content": "It was wrong before. The name of the community where the post is located should be Zhihu"
      },
      {
        "role": "function call",
        "content": {
          "name": "SocialCommunication.Community.shareCommunityPost",
          "arguments": {
            "community_name": "Zhihu"
          }
        }
      },
      {
        "role": "assistant",
        "content": "What's the title of your post"
      },
      {
        "role": "user",
        "content": "Latest Movie Rating Rankings"
      },
      {
        "role": "function call",
        "content": {
          "name": "SocialCommunication.Community.shareCommunityPost",
          "arguments": {
            "community_name": "Zhihu",
            "title": "Latest Movie Rating Rankings"
          }
        }
      },
      {
        "role": "assistant",
        "content": "Please provide the medium and who to share with"
      },
      {
        "role": "user",
        "content": "I share it with my friends in the QQ space."
      },
      {
        "role": "function call",
        "content": {
          "name": "SocialCommunication.Community.shareCommunityPost",
          "arguments": {
            "community_name": "Zhihu",
            "title": "Latest Movie Rating Rankings",
            "medium": "QQ Zone"
          }
        }
      }
    ],
    "multiple_tools": [
      {
        "name": "Travel.ItineraryServices.shareTravelItinerary",
        "description": "Sharing travel itineraries to designated locations",
        "parameters": {
          "type": "object",
          "properties": {
            "name": {
              "type": "string",
              "description": "Trip name or keyword"
            },
            "to": {
              "type": "string",
              "description": "Destination app name"
            }
          },
          "required": [
            "name",
            "to"
          ]
        }
      },
      {
        "name": "UtilityTools.Memo.setPrivateNotes",
        "description": "Set a memo as private",
        "parameters": {
          "type": "object",
          "properties": {
            "title": {
              "type": "string",
              "description": "Memo Title"
            },
            "category": {
              "type": "string",
              "description": "Classify"
            },
            "is_private": {
              "type": "boolean",
              "description": "true is private"
            }
          },
          "required": [
            "title",
            "category",
            "is_private"
          ]
        }
      },
      {
        "name": "Navigation.PublicTransit.shareBusRoute",
        "description": "Share designated bus routes with others",
        "parameters": {
          "type": "object",
          "properties": {
            "line": {
              "type": "string",
              "description": "line"
            },
            "departure": {
              "type": "string",
              "description": "Starting location, default current location"
            },
            "destination": {
              "type": "string",
              "description": "Destination"
            },
            "preferred_line": {
              "type": "string",
              "description": "Departure time, the default departure time is now; the preferred route type, such as the shortest time, less transfer, less walking, etc."
            },
            "recipient": {
              "type": "string",
              "description": "recipient"
            },
            "medium": {
              "type": "string",
              "description": "Medium"
            }
          },
          "required": [
            "line",
            "departure",
            "destination",
            "preferred_line",
            "recipient",
            "medium"
          ]
        }
      },
      {
        "name": "SystemTools.SystemSettings.setSystemTurnOnScreenShare",
        "description": "Turn on screen sharing",
        "parameters": {
          "type": "object",
          "properties": {},
          "required": []
        }
      },
      {
        "name": "SocialCommunication.Community.shareCommunityPost",
        "description": "Share a specific post to a specific medium or to someone",
        "parameters": {
          "type": "object",
          "properties": {
            "community_name": {
              "type": "string",
              "description": "The name of the community where the post is located"
            },
            "title": {
              "type": "string",
              "description": "Prev Post Caption"
            },
            "medium": {
              "type": "string",
              "description": "Share media"
            },
            "user_name": {
              "type": "string",
              "description": "Shared by"
            }
          },
          "required": [
            "community_name",
            "title",
            "medium",
            "user_name"
          ]
        }
      }
    ],
    "single_tool": [
      {
        "name": "SocialCommunication.Community.shareCommunityPost",
        "description": "Share a specific post to a specific medium or to someone",
        "parameters": {
          "type": "object",
          "properties": {
            "community_name": {
              "type": "string",
              "description": "The name of the community where the post is located"
            },
            "title": {
              "type": "string",
              "description": "Prev Post Caption"
            },
            "medium": {
              "type": "string",
              "description": "Share media"
            },
            "user_name": {
              "type": "string",
              "description": "Shared by"
            }
          },
          "required": [
            "community_name",
            "title",
            "medium",
            "user_name"
          ]
        }
      }
    ],
    "id": 382
  },
  {
    "messages": [
      {
        "role": "user",
        "content": "I found an issue with a post that needs to be reported"
      },
      {
        "role": "function call",
        "content": {
          "name": "SocialCommunication.Community.reportCommunityPost",
          "arguments": {}
        }
      },
      {
        "role": "assistant",
        "content": "Please provide the name of the community where you would like to report the post"
      },
      {
        "role": "user",
        "content": "A community on Reddit"
      },
      {
        "role": "function call",
        "content": {
          "name": "SocialCommunication.Community.reportCommunityPost",
          "arguments": {
            "community_name": "Reddit"
          }
        }
      },
      {
        "role": "assistant",
        "content": "What is the title of the post to report"
      },
      {
        "role": "user",
        "content": "It was wrong before. The name of the community where the post is to be reported should be Pet Enthusiast Forum"
      },
      {
        "role": "function call",
        "content": {
          "name": "SocialCommunication.Community.reportCommunityPost",
          "arguments": {
            "community_name": "Pet Enthusiast Forum"
          }
        }
      },
      {
        "role": "assistant",
        "content": "What is the title of the post to report"
      },
      {
        "role": "user",
        "content": "How to become a millionaire in a week"
      },
      {
        "role": "function call",
        "content": {
          "name": "SocialCommunication.Community.reportCommunityPost",
          "arguments": {
            "community_name": "Pet Enthusiast Forum",
            "comment_name": "How to become a millionaire in a week"
          }
        }
      }
    ],
    "multiple_tools": [
      {
        "name": "ConvenientLiving.AutoLife.reportCarProblem",
        "description": "Report a malfunction or problem with your car to the platform.",
        "parameters": {
          "type": "object",
          "properties": {
            "brand": {
              "type": "string",
              "description": "Car Brand"
            },
            "problem_description": {
              "type": "string",
              "description": "Problem description"
            },
            "name": {
              "type": "string",
              "description": "Contact person"
            }
          },
          "required": [
            "brand",
            "problem_description",
            "name"
          ]
        }
      },
      {
        "name": "SocialCommunication.Community.reportCommunityPost",
        "description": "Report a post from a specific community",
        "parameters": {
          "type": "object",
          "properties": {
            "community_name": {
              "type": "string",
              "description": "The name of the community where the post is to be reported"
            },
            "comment_name": {
              "type": "string",
              "description": "Post title to report"
            }
          },
          "required": [
            "community_name",
            "comment_name"
          ]
        }
      },
      {
        "name": "Navigation.TrafficViolations.reportAccident",
        "description": "Report traffic accidents and violations",
        "parameters": {
          "type": "object",
          "properties": {
            "plate_number": {
              "type": "string",
              "description": "License plate number"
            },
            "location": {
              "type": "string",
              "description": "Site"
            }
          },
          "required": [
            "plate_number",
            "location"
          ]
        }
      },
      {
        "name": "Navigation.Bicycles.submitBikeFault",
        "description": "Submit a bicycle malfunction",
        "parameters": {
          "type": "object",
          "properties": {
            "number": {
              "type": "string",
              "description": "Vehicle number"
            }
          },
          "required": [
            "number"
          ]
        }
      },
      {
        "name": "ConvenientLiving.GovernmentServices.reportTaxEvasion",
        "description": "Reporting tax evasion",
        "parameters": {
          "type": "object",
          "properties": {
            "company_name": {
              "type": "string",
              "description": "Company name"
            },
            "description": {
              "type": "string",
              "description": "Problem description"
            }
          },
          "required": [
            "company_name",
            "description"
          ]
        }
      }
    ],
    "single_tool": [
      {
        "name": "SocialCommunication.Community.reportCommunityPost",
        "description": "Report a post from a specific community",
        "parameters": {
          "type": "object",
          "properties": {
            "community_name": {
              "type": "string",
              "description": "The name of the community where the post is to be reported"
            },
            "comment_name": {
              "type": "string",
              "description": "Post title to report"
            }
          },
          "required": [
            "community_name",
            "comment_name"
          ]
        }
      }
    ],
    "id": 390
  },
  {
    "messages": [
      {
        "role": "user",
        "content": "There is a post in the community that violates the rules, I want to report it"
      },
      {
        "role": "function call",
        "content": {
          "name": "SocialCommunication.Community.reportCommunityPost",
          "arguments": {}
        }
      },
      {
        "role": "assistant",
        "content": "Please provide the name of the community where you would like to report the post"
      },
      {
        "role": "user",
        "content": "Reddit"
      },
      {
        "role": "function call",
        "content": {
          "name": "SocialCommunication.Community.reportCommunityPost",
          "arguments": {
            "community_name": "Reddit"
          }
        }
      },
      {
        "role": "assistant",
        "content": "What is the title of the post to report"
      },
      {
        "role": "user",
        "content": "It was wrong before. The name of the community where the post is to be reported should be Pet Enthusiast Forum"
      },
      {
        "role": "function call",
        "content": {
          "name": "SocialCommunication.Community.reportCommunityPost",
          "arguments": {
            "community_name": "Pet Enthusiast Forum"
          }
        }
      },
      {
        "role": "assistant",
        "content": "What is the title of the post to report"
      },
      {
        "role": "user",
        "content": "How to learn Python in a week"
      },
      {
        "role": "function call",
        "content": {
          "name": "SocialCommunication.Community.reportCommunityPost",
          "arguments": {
            "community_name": "Pet Enthusiast Forum",
            "comment_name": "How to learn Python in a week"
          }
        }
      }
    ],
    "multiple_tools": [
      {
        "name": "Navigation.Bicycles.submitBikeFault",
        "description": "Submit a bicycle malfunction",
        "parameters": {
          "type": "object",
          "properties": {
            "number": {
              "type": "string",
              "description": "Vehicle number"
            }
          },
          "required": [
            "number"
          ]
        }
      },
      {
        "name": "SocialCommunication.Community.reportCommunityPost",
        "description": "Report a post from a specific community",
        "parameters": {
          "type": "object",
          "properties": {
            "community_name": {
              "type": "string",
              "description": "The name of the community where the post is to be reported"
            },
            "comment_name": {
              "type": "string",
              "description": "Post title to report"
            }
          },
          "required": [
            "community_name",
            "comment_name"
          ]
        }
      },
      {
        "name": "ConvenientLiving.GovernmentServices.reportTaxEvasion",
        "description": "Reporting tax evasion",
        "parameters": {
          "type": "object",
          "properties": {
            "company_name": {
              "type": "string",
              "description": "Company name"
            },
            "description": {
              "type": "string",
              "description": "Problem description"
            }
          },
          "required": [
            "company_name",
            "description"
          ]
        }
      },
      {
        "name": "Navigation.TrafficViolations.reportAccident",
        "description": "Report traffic accidents and violations",
        "parameters": {
          "type": "object",
          "properties": {
            "plate_number": {
              "type": "string",
              "description": "License plate number"
            },
            "location": {
              "type": "string",
              "description": "Site"
            }
          },
          "required": [
            "plate_number",
            "location"
          ]
        }
      },
      {
        "name": "ConvenientLiving.AutoLife.reportCarProblem",
        "description": "Report a malfunction or problem with your car to the platform.",
        "parameters": {
          "type": "object",
          "properties": {
            "brand": {
              "type": "string",
              "description": "Car Brand"
            },
            "problem_description": {
              "type": "string",
              "description": "Problem description"
            },
            "name": {
              "type": "string",
              "description": "Contact person"
            }
          },
          "required": [
            "brand",
            "problem_description",
            "name"
          ]
        }
      }
    ],
    "single_tool": [
      {
        "name": "SocialCommunication.Community.reportCommunityPost",
        "description": "Report a post from a specific community",
        "parameters": {
          "type": "object",
          "properties": {
            "community_name": {
              "type": "string",
              "description": "The name of the community where the post is to be reported"
            },
            "comment_name": {
              "type": "string",
              "description": "Post title to report"
            }
          },
          "required": [
            "community_name",
            "comment_name"
          ]
        }
      }
    ],
    "id": 391
  },
  {
    "messages": [
      {
        "role": "user",
        "content": "Message sharing"
      },
      {
        "role": "function call",
        "content": {
          "name": "SocialCommunication.InstantMessaging.shareMessage",
          "arguments": {}
        }
      },
      {
        "role": "assistant",
        "content": "Please provide content to share"
      },
      {
        "role": "user",
        "content": "This is a picture of our party last week and everyone had a great time."
      },
      {
        "role": "function call",
        "content": {
          "name": "SocialCommunication.InstantMessaging.shareMessage",
          "arguments": {
            "share_content": "Here's a picture of our party last week."
          }
        }
      },
      {
        "role": "assistant",
        "content": "Please provide the name or ID of the recipient or group"
      },
      {
        "role": "user",
        "content": "It was wrong before. Text to share should be Psychological decompression methods"
      },
      {
        "role": "function call",
        "content": {
          "name": "SocialCommunication.InstantMessaging.shareMessage",
          "arguments": {
            "share_content": "Psychological decompression methods"
          }
        }
      },
      {
        "role": "assistant",
        "content": "Please provide the name or ID of the recipient or group"
      },
      {
        "role": "user",
        "content": "Recipient is Alice"
      },
      {
        "role": "function call",
        "content": {
          "name": "SocialCommunication.InstantMessaging.shareMessage",
          "arguments": {
            "share_content": "Psychological decompression methods",
            "share_recipient": "Alice"
          }
        }
      },
      {
        "role": "assistant",
        "content": "Share who the source or group is"
      },
      {
        "role": "user",
        "content": "The source is Bob, who shared the link in the group."
      },
      {
        "role": "function call",
        "content": {
          "name": "SocialCommunication.InstantMessaging.shareMessage",
          "arguments": {
            "share_content": "Psychological decompression methods",
            "share_recipient": "Alice",
            "share_source": "Bob"
          }
        }
      }
    ],
    "multiple_tools": [
      {
        "name": "UtilityTools.Memo.setPrivateNotes",
        "description": "Set a memo as private",
        "parameters": {
          "type": "object",
          "properties": {
            "title": {
              "type": "string",
              "description": "Memo Title"
            },
            "category": {
              "type": "string",
              "description": "Classify"
            },
            "is_private": {
              "type": "boolean",
              "description": "true is private"
            }
          },
          "required": [
            "title",
            "category",
            "is_private"
          ]
        }
      },
      {
        "name": "Navigation.PublicTransit.shareBusRoute",
        "description": "Share designated bus routes with others",
        "parameters": {
          "type": "object",
          "properties": {
            "line": {
              "type": "string",
              "description": "line"
            },
            "departure": {
              "type": "string",
              "description": "Starting location, default current location"
            },
            "destination": {
              "type": "string",
              "description": "Destination"
            },
            "preferred_line": {
              "type": "string",
              "description": "Departure time, the default departure time is now; the preferred route type, such as the shortest time, less transfer, less walking, etc."
            },
            "recipient": {
              "type": "string",
              "description": "recipient"
            },
            "medium": {
              "type": "string",
              "description": "Medium"
            }
          },
          "required": [
            "line",
            "departure",
            "destination",
            "preferred_line",
            "recipient",
            "medium"
          ]
        }
      },
      {
        "name": "SystemTools.SystemSettings.setSystemTurnOnScreenShare",
        "description": "Turn on screen sharing",
        "parameters": {
          "type": "object",
          "properties": {},
          "required": []
        }
      },
      {
        "name": "SocialCommunication.InstantMessaging.shareMessage",
        "description": "Share a message with a specific person or group",
        "parameters": {
          "type": "object",
          "properties": {
            "share_recipient": {
              "type": "string",
              "description": "Recipient or group"
            },
            "share_content": {
              "type": "string",
              "description": "Text to share"
            },
            "share_source": {
              "type": "string",
              "description": "Share source or group"
            },
            "time": {
              "type": "string",
              "description": "Release Date"
            }
          },
          "required": [
            "share_recipient",
            "share_content",
            "share_source",
            "time"
          ]
        }
      },
      {
        "name": "Travel.ItineraryServices.shareTravelItinerary",
        "description": "Sharing travel itineraries to designated locations",
        "parameters": {
          "type": "object",
          "properties": {
            "name": {
              "type": "string",
              "description": "Trip name or keyword"
            },
            "to": {
              "type": "string",
              "description": "Destination app name"
            }
          },
          "required": [
            "name",
            "to"
          ]
        }
      }
    ],
    "single_tool": [
      {
        "name": "SocialCommunication.InstantMessaging.shareMessage",
        "description": "Share a message with a specific person or group",
        "parameters": {
          "type": "object",
          "properties": {
            "share_recipient": {
              "type": "string",
              "description": "Recipient or group"
            },
            "share_content": {
              "type": "string",
              "description": "Text to share"
            },
            "share_source": {
              "type": "string",
              "description": "Share source or group"
            },
            "time": {
              "type": "string",
              "description": "Release Date"
            }
          },
          "required": [
            "share_recipient",
            "share_content",
            "share_source",
            "time"
          ]
        }
      }
    ],
    "id": 399
  },
  {
    "messages": [
      {
        "role": "user",
        "content": "I need to add a new contact to my address book"
      },
      {
        "role": "function call",
        "content": {
          "name": "SocialCommunication.InstantMessaging.addContact",
          "arguments": {}
        }
      },
      {
        "role": "assistant",
        "content": "Please provide contact name"
      },
      {
        "role": "user",
        "content": "Jay Chou."
      },
      {
        "role": "function call",
        "content": {
          "name": "SocialCommunication.InstantMessaging.addContact",
          "arguments": {
            "name": "Jay Chou."
          }
        }
      },
      {
        "role": "assistant",
        "content": "Please provide the contact's phone number"
      },
      {
        "role": "user",
        "content": "It was wrong before. Contact person should be Zhang Wei"
      },
      {
        "role": "function call",
        "content": {
          "name": "SocialCommunication.InstantMessaging.addContact",
          "arguments": {
            "name": "Zhang Wei"
          }
        }
      },
      {
        "role": "assistant",
        "content": "Please provide the contact's phone number"
      },
      {
        "role": "user",
        "content": "The contact's phone number is 13654122789."
      },
      {
        "role": "function call",
        "content": {
          "name": "SocialCommunication.InstantMessaging.addContact",
          "arguments": {
            "name": "Zhang Wei",
            "phone": "13654122789"
          }
        }
      }
    ],
    "multiple_tools": [
      {
        "name": "Navigation.MapNavigation.addCommonAddress",
        "description": "Add usual address",
        "parameters": {
          "type": "object",
          "properties": {
            "address": {
              "type": "string",
              "description": "Primary address string to add"
            }
          },
          "required": [
            "address"
          ]
        }
      },
      {
        "name": "OnlineShopping.Mall.addDeliveryAddress",
        "description": "Add a new shipping address based on the information",
        "parameters": {
          "type": "object",
          "properties": {
            "receiver": {
              "type": "string",
              "description": "Receiver"
            },
            "phoneNumber": {
              "type": "string",
              "description": "Phone No."
            },
            "address": {
              "type": "string",
              "description": "Shipping Address"
            }
          },
          "required": [
            "receiver",
            "phoneNumber",
            "address"
          ]
        }
      },
      {
        "name": "UtilityTools.Search.addWebBookmark",
        "description": "Add a page to a default collection or to a specified collection",
        "parameters": {
          "type": "object",
          "properties": {
            "name": {
              "type": "string",
              "description": "Name"
            },
            "bookmark": {
              "type": "string",
              "description": "Bookmark title, provided by target title by default"
            }
          },
          "required": [
            "name",
            "bookmark"
          ]
        }
      },
      {
        "name": "SocialCommunication.InstantMessaging.addContact",
        "description": "Add New Contact",
        "parameters": {
          "type": "object",
          "properties": {
            "name": {
              "type": "string",
              "description": "Contact person"
            },
            "phone": {
              "type": "string",
              "description": "Cellphone"
            }
          },
          "required": [
            "name",
            "phone"
          ]
        }
      },
      {
        "name": "OnlineShopping.ExpressDelivery.addAddress",
        "description": "Add the specified address to the address book",
        "parameters": {
          "type": "object",
          "properties": {
            "name": {
              "type": "string",
              "description": "Name"
            },
            "phone": {
              "type": "string",
              "description": "Phone No."
            },
            "address": {
              "type": "string",
              "description": "Address"
            }
          },
          "required": [
            "name",
            "phone",
            "address"
          ]
        }
      }
    ],
    "single_tool": [
      {
        "name": "SocialCommunication.InstantMessaging.addContact",
        "description": "Add New Contact",
        "parameters": {
          "type": "object",
          "properties": {
            "name": {
              "type": "string",
              "description": "Contact person"
            },
            "phone": {
              "type": "string",
              "description": "Cellphone"
            }
          },
          "required": [
            "name",
            "phone"
          ]
        }
      }
    ],
    "id": 404
  },
  {
    "messages": [
      {
        "role": "user",
        "content": "Hey, remember that status I sent last time? I want to delete it now, but I forgot which one it is, it may take you a while to find it."
      },
      {
        "role": "function call",
        "content": {
          "name": "SocialCommunication.SocialMedia.deleteMediumTrends",
          "arguments": {}
        }
      },
      {
        "role": "assistant",
        "content": "Please provide media name"
      },
      {
        "role": "user",
        "content": "twitter"
      },
      {
        "role": "function call",
        "content": {
          "name": "SocialCommunication.SocialMedia.deleteMediumTrends",
          "arguments": {
            "medium_name": "twitter"
          }
        }
      },
      {
        "role": "assistant",
        "content": "What is the dynamic ID or content that needs to be deleted Do you need to confirm the deletion time or delete it immediately?"
      },
      {
        "role": "user",
        "content": "It was wrong before. Media name should be Moments"
      },
      {
        "role": "function call",
        "content": {
          "name": "SocialCommunication.SocialMedia.deleteMediumTrends",
          "arguments": {
            "medium_name": "Moments"
          }
        }
      },
      {
        "role": "assistant",
        "content": "What is the dynamic ID or content that needs to be deleted Do you need to confirm the deletion time or delete it immediately?"
      },
      {
        "role": "user",
        "content": "I want to delete the article about the latest technological developments. The ID is 12345, and I want to delete it immediately."
      },
      {
        "role": "function call",
        "content": {
          "name": "SocialCommunication.SocialMedia.deleteMediumTrends",
          "arguments": {
            "medium_name": "Moments",
            "correlation": "What's new"
          }
        }
      }
    ],
    "multiple_tools": [
      {
        "name": "SocialCommunication.SocialMedia.deleteMediumTrends",
        "description": "Delete the specified activity",
        "parameters": {
          "type": "object",
          "properties": {
            "medium_name": {
              "type": "string",
              "description": "Media name"
            },
            "correlation": {
              "type": "string",
              "description": "Dynamic Related Content"
            },
            "time": {
              "type": "string",
              "description": "Release Date"
            }
          },
          "required": [
            "medium_name",
            "correlation",
            "time"
          ]
        }
      },
      {
        "name": "SocialCommunication.Community.deleteCommunityPost",
        "description": "Delete a post from a specific community based on the title of the post",
        "parameters": {
          "type": "object",
          "properties": {
            "community_name": {
              "type": "string",
              "description": "The name of the community where the post is to be deleted"
            },
            "post_name": {
              "type": "string",
              "description": "Title of the post to be deleted"
            }
          },
          "required": [
            "community_name",
            "post_name"
          ]
        }
      },
      {
        "name": "SocialCommunication.SocialMedia.publishMediumTrends",
        "description": "Posting activity on selected media",
        "parameters": {
          "type": "object",
          "properties": {
            "medium_name": {
              "type": "string",
              "description": "Media name"
            },
            "content": {
              "type": "string",
              "description": "Content"
            }
          },
          "required": [
            "medium_name",
            "content"
          ]
        }
      },
      {
        "name": "OnlineShopping.Mall.delectChat",
        "description": "Delete the specified session message (delete all by default)",
        "parameters": {
          "type": "object",
          "properties": {
            "name": {
              "type": "string",
              "description": "Conversation Objects"
            }
          },
          "required": [
            "name"
          ]
        }
      },
      {
        "name": "MusicRadio.OnlineMusic.publishDynamic",
        "description": "Post Activity as Specified",
        "parameters": {
          "type": "object",
          "properties": {
            "content": {
              "type": "string",
              "description": "Dymamic Content"
            }
          },
          "required": [
            "content"
          ]
        }
      }
    ],
    "single_tool": [
      {
        "name": "SocialCommunication.SocialMedia.deleteMediumTrends",
        "description": "Delete the specified activity",
        "parameters": {
          "type": "object",
          "properties": {
            "medium_name": {
              "type": "string",
              "description": "Media name"
            },
            "correlation": {
              "type": "string",
              "description": "Dynamic Related Content"
            },
            "time": {
              "type": "string",
              "description": "Release Date"
            }
          },
          "required": [
            "medium_name",
            "correlation",
            "time"
          ]
        }
      }
    ],
    "id": 410
  },
  {
    "messages": [
      {
        "role": "user",
        "content": "Take a look at the details of that dynamic"
      },
      {
        "role": "function call",
        "content": {
          "name": "SocialCommunication.SocialMedia.getMediumTrendsDetails",
          "arguments": {}
        }
      },
      {
        "role": "assistant",
        "content": "Please provide media name"
      },
      {
        "role": "user",
        "content": "Zhihu"
      },
      {
        "role": "function call",
        "content": {
          "name": "SocialCommunication.SocialMedia.getMediumTrendsDetails",
          "arguments": {
            "medium_name": "Zhihu"
          }
        }
      },
      {
        "role": "assistant",
        "content": "What dynamic details are needed What is the ID or link of the dynamic"
      },
      {
        "role": "user",
        "content": "I would like to know about the latest trends in artificial intelligence, can you give me some relevant articles or reports?"
      },
      {
        "role": "function call",
        "content": {
          "name": "SocialCommunication.SocialMedia.getMediumTrendsDetails",
          "arguments": {
            "medium_name": "Zhihu",
            "correlation": "Latest Trends in Artificial Intellig"
          }
        }
      },
      {
        "role": "assistant",
        "content": "Please provide the name of the publisher"
      },
      {
        "role": "user",
        "content": "It was wrong before. Dynamic Related Content should be Latest product launches"
      },
      {
        "role": "function call",
        "content": {
          "name": "SocialCommunication.SocialMedia.getMediumTrendsDetails",
          "arguments": {
            "medium_name": "Zhihu",
            "correlation": "Latest product launches"
          }
        }
      },
      {
        "role": "assistant",
        "content": "Please provide the name of the publisher"
      },
      {
        "role": "user",
        "content": "The publisher is Li Si, who is in charge of this project."
      },
      {
        "role": "function call",
        "content": {
          "name": "SocialCommunication.SocialMedia.getMediumTrendsDetails",
          "arguments": {
            "medium_name": "Zhihu",
            "correlation": "Latest product launches",
            "publisher": "Li Si"
          }
        }
      }
    ],
    "multiple_tools": [
      {
        "name": "SocialCommunication.SocialMedia.getMediumTrendsDetails",
        "description": "Get the details of a given activity",
        "parameters": {
          "type": "object",
          "properties": {
            "medium_name": {
              "type": "string",
              "description": "Media name"
            },
            "correlation": {
              "type": "string",
              "description": "Dynamic Related Content"
            },
            "publisher": {
              "type": "string",
              "description": "Posted by/publisher?"
            },
            "time": {
              "type": "string",
              "description": "Release Date"
            }
          },
          "required": [
            "medium_name",
            "correlation",
            "publisher",
            "time"
          ]
        }
      },
      {
        "name": "MusicRadio.OnlineMusic.getConcertInfo",
        "description": "Get information about a concert by keyword, concert location, concert date",
        "parameters": {
          "type": "object",
          "properties": {
            "name": {
              "type": "string",
              "description": "Concert Name"
            },
            "location": {
              "type": "string",
              "description": "Location of the concert"
            },
            "date": {
              "type": "string",
              "description": "Concert dates"
            }
          },
          "required": [
            "name",
            "location",
            "date"
          ]
        }
      },
      {
        "name": "ConvenientLiving.BuyingRentingHomes.getHousingEstateInfo",
        "description": "View information about the neighborhood in which your home is located",
        "parameters": {
          "type": "object",
          "properties": {
            "location": {
              "type": "string",
              "description": "Neighborhood location"
            }
          },
          "required": [
            "location"
          ]
        }
      },
      {
        "name": "SocialCommunication.Calling.queryPhoneCallCharges",
        "description": "View charges for this or a recent call",
        "parameters": {
          "type": "object",
          "properties": {
            "query_period": {
              "type": "string",
              "description": "The time period of the query, such as this month, this week, etc."
            }
          },
          "required": [
            "query_period"
          ]
        }
      },
      {
        "name": "Travel.ScenicAreaServices.getScenicSpotInfo",
        "description": "Get detailed descriptions of designated attractions",
        "parameters": {
          "type": "object",
          "properties": {
            "name": {
              "type": "string",
              "description": "Name of the tourist area"
            }
          },
          "required": [
            "name"
          ]
        }
      }
    ],
    "single_tool": [
      {
        "name": "SocialCommunication.SocialMedia.getMediumTrendsDetails",
        "description": "Get the details of a given activity",
        "parameters": {
          "type": "object",
          "properties": {
            "medium_name": {
              "type": "string",
              "description": "Media name"
            },
            "correlation": {
              "type": "string",
              "description": "Dynamic Related Content"
            },
            "publisher": {
              "type": "string",
              "description": "Posted by/publisher?"
            },
            "time": {
              "type": "string",
              "description": "Release Date"
            }
          },
          "required": [
            "medium_name",
            "correlation",
            "publisher",
            "time"
          ]
        }
      }
    ],
    "id": 411
  },
  {
    "messages": [
      {
        "role": "user",
        "content": "Give my opinion on that dynamic"
      },
      {
        "role": "function call",
        "content": {
          "name": "SocialCommunication.SocialMedia.mediumComment",
          "arguments": {}
        }
      },
      {
        "role": "assistant",
        "content": "Please provide media name"
      },
      {
        "role": "user",
        "content": "Twitter"
      },
      {
        "role": "function call",
        "content": {
          "name": "SocialCommunication.SocialMedia.mediumComment",
          "arguments": {
            "medium_name": "Twitter"
          }
        }
      },
      {
        "role": "assistant",
        "content": "Please provide relevant content about the activity and what you would like to comment on"
      },
      {
        "role": "user",
        "content": "I tried a special dish at a small famous restaurant with a very unique taste and an impressive blend of Chinese and Western cooking techniques. In the food sharing, I would like to mention the innovation of this dish and the surprise it brings to my taste."
      },
      {
        "role": "function call",
        "content": {
          "name": "SocialCommunication.SocialMedia.mediumComment",
          "arguments": {
            "medium_name": "Twitter",
            "correlation": "Food Sharing"
          }
        }
      },
      {
        "role": "assistant",
        "content": "Please provide the name of the publisher"
      },
      {
        "role": "user",
        "content": "It was wrong before. Media name should be WeChat Moments"
      },
      {
        "role": "function call",
        "content": {
          "name": "SocialCommunication.SocialMedia.mediumComment",
          "arguments": {
            "medium_name": "WeChat Moments",
            "correlation": "Food Sharing"
          }
        }
      },
      {
        "role": "assistant",
        "content": "Please provide the name of the publisher"
      },
      {
        "role": "user",
        "content": "Wang Xiaomei is the publisher of this article."
      },
      {
        "role": "function call",
        "content": {
          "name": "SocialCommunication.SocialMedia.mediumComment",
          "arguments": {
            "medium_name": "WeChat Moments",
            "correlation": "Food Sharing",
            "publisher": "Wang Xiaomei"
          }
        }
      },
      {
        "role": "assistant",
        "content": "When to comment"
      },
      {
        "role": "user",
        "content": "The review was published on 04/10/2023."
      },
      {
        "role": "function call",
        "content": {
          "name": "SocialCommunication.SocialMedia.mediumComment",
          "arguments": {
            "medium_name": "WeChat Moments",
            "correlation": "Food Sharing",
            "publisher": "Wang Xiaomei",
            "publish_time": "2023-04-10"
          }
        }
      }
    ],
    "multiple_tools": [
      {
        "name": "Travel.ScenicAreaServices.addScenicSpotComment",
        "description": "Comment on user-specified scenic spots",
        "parameters": {
          "type": "object",
          "properties": {
            "name": {
              "type": "string",
              "description": "Name of the tourist area"
            },
            "comment": {
              "type": "string",
              "description": "Comments"
            }
          },
          "required": [
            "name",
            "comment"
          ]
        }
      },
      {
        "name": "VideoPlayback.OnlineVideos.favouriteOnlineVideo",
        "description": "Favorite a video",
        "parameters": {
          "type": "object",
          "properties": {
            "name": {
              "type": "string",
              "description": "Video Name"
            },
            "favourite": {
              "type": "boolean",
              "description": "Favorite/Cancel"
            }
          },
          "required": [
            "name",
            "favourite"
          ]
        }
      },
      {
        "name": "SocialCommunication.SocialMedia.mediumComment",
        "description": "Comment on a given activity",
        "parameters": {
          "type": "object",
          "properties": {
            "medium_name": {
              "type": "string",
              "description": "Media name"
            },
            "correlation": {
              "type": "string",
              "description": "Dynamic Related Content"
            },
            "publisher": {
              "type": "string",
              "description": "Posted by/publisher?"
            },
            "publish_time": {
              "type": "string",
              "description": "Release Date"
            }
          },
          "required": [
            "medium_name",
            "correlation",
            "publisher",
            "publish_time"
          ]
        }
      },
      {
        "name": "Navigation.PublicTransit.favoriteBusRoutes",
        "description": "Favorite Bus Routes",
        "parameters": {
          "type": "object",
          "properties": {
            "line": {
              "type": "string",
              "description": "line"
            },
            "bus_name": {
              "type": "string",
              "description": "Bus name"
            },
            "departure": {
              "type": "string",
              "description": "Starting location, default current location"
            },
            "destination": {
              "type": "string",
              "description": "destination"
            },
            "preferred_line": {
              "type": "string",
              "description": "Departure time, the default departure time is now; the preferred route type, such as the shortest time, less transfer, less walking, etc."
            }
          },
          "required": [
            "line",
            "bus_name",
            "departure",
            "destination",
            "preferred_line"
          ]
        }
      },
      {
        "name": "OfficeSoftware.Email.collectMail",
        "description": "Favorite a specified message",
        "parameters": {
          "type": "object",
          "properties": {
            "mail_title": {
              "type": "string",
              "description": "Title of the message to favorite"
            }
          },
          "required": [
            "mail_title"
          ]
        }
      }
    ],
    "single_tool": [
      {
        "name": "SocialCommunication.SocialMedia.mediumComment",
        "description": "Comment on a given activity",
        "parameters": {
          "type": "object",
          "properties": {
            "medium_name": {
              "type": "string",
              "description": "Media name"
            },
            "correlation": {
              "type": "string",
              "description": "Dynamic Related Content"
            },
            "publisher": {
              "type": "string",
              "description": "Posted by/publisher?"
            },
            "publish_time": {
              "type": "string",
              "description": "Release Date"
            }
          },
          "required": [
            "medium_name",
            "correlation",
            "publisher",
            "publish_time"
          ]
        }
      }
    ],
    "id": 412
  },
  {
    "messages": [
      {
        "role": "user",
        "content": "Dynamic unfavoriting."
      },
      {
        "role": "function call",
        "content": {
          "name": "SocialCommunication.SocialMedia.cancleCollectMediumTrends",
          "arguments": {}
        }
      },
      {
        "role": "assistant",
        "content": "What is the media name"
      },
      {
        "role": "user",
        "content": "Zhihu"
      },
      {
        "role": "function call",
        "content": {
          "name": "SocialCommunication.SocialMedia.cancleCollectMediumTrends",
          "arguments": {
            "medium_name": "Zhihu"
          }
        }
      },
      {
        "role": "assistant",
        "content": "What is the ID or name of the activity that needs to be unfavorited? What is the user ID or username that the activity belongs to?"
      },
      {
        "role": "user",
        "content": "It was wrong before. Media name should be Station B"
      },
      {
        "role": "function call",
        "content": {
          "name": "SocialCommunication.SocialMedia.cancleCollectMediumTrends",
          "arguments": {
            "medium_name": "Station B"
          }
        }
      },
      {
        "role": "assistant",
        "content": "What is the ID or name of the activity that needs to be unfavorited? What is the user ID or username that the activity belongs to?"
      },
      {
        "role": "user",
        "content": "I don't quite understand what this has to do with the secrets of healthy eating, can you clarify for me?"
      },
      {
        "role": "function call",
        "content": {
          "name": "SocialCommunication.SocialMedia.cancleCollectMediumTrends",
          "arguments": {
            "medium_name": "Station B",
            "correlation": "Secrets of healthy eating"
          }
        }
      },
      {
        "role": "assistant",
        "content": "Please provide the name of the publisher"
      },
      {
        "role": "user",
        "content": "Nutritionist Zhang Qiang is the publisher of this article."
      },
      {
        "role": "function call",
        "content": {
          "name": "SocialCommunication.SocialMedia.cancleCollectMediumTrends",
          "arguments": {
            "medium_name": "Station B",
            "correlation": "Secrets of healthy eating",
            "publisher": "Nutritionist Zhang Qiang"
          }
        }
      }
    ],
    "multiple_tools": [
      {
        "name": "MusicRadio.Karaoke.getAccompaniments",
        "description": "Get a list of song accompaniments for a given song title",
        "parameters": {
          "type": "object",
          "properties": {
            "song_name": {
              "type": "string",
              "description": "Song Name"
            },
            "singer_name": {
              "type": "string",
              "description": "Singer name"
            }
          },
          "required": [
            "song_name",
            "singer_name"
          ]
        }
      },
      {
        "name": "SocialCommunication.SocialMedia.cancleCollectMediumTrends",
        "description": "Unfavorite the specified activity in the specified media",
        "parameters": {
          "type": "object",
          "properties": {
            "medium_name": {
              "type": "string",
              "description": "Media name"
            },
            "correlation": {
              "type": "string",
              "description": "Dynamic Related Content"
            },
            "publisher": {
              "type": "string",
              "description": "Posted by/publisher?"
            },
            "publish_time": {
              "type": "string",
              "description": "Release Date"
            }
          },
          "required": [
            "medium_name",
            "correlation",
            "publisher",
            "publish_time"
          ]
        }
      },
      {
        "name": "NewsMagazines.NewspapersMagazines.unsubscribeMagazine",
        "description": "Unsubscribe from magazines based on their name",
        "parameters": {
          "type": "object",
          "properties": {
            "name": {
              "type": "string",
              "description": "Magazine Name"
            }
          },
          "required": [
            "name"
          ]
        }
      },
      {
        "name": "OfficeSoftware.Conferencing.unmuteParticipants",
        "description": "Unmute participants",
        "parameters": {
          "type": "object",
          "properties": {
            "meeting_id": {
              "type": "string",
              "description": "Conference No."
            },
            "title": {
              "type": "string",
              "description": "Meeting Title:"
            },
            "time": {
              "type": "string",
              "description": "Meeting Date"
            },
            "participant_list": {
              "type": "string",
              "description": "To unmute a list of people, the default is All People"
            }
          },
          "required": [
            "meeting_id",
            "title",
            "time",
            "participant_list"
          ]
        }
      },
      {
        "name": "VideoPlayback.ShortVideos.favouriteShortVideo",
        "description": "Favorite or unfavorite a short video",
        "parameters": {
          "type": "object",
          "properties": {
            "name": {
              "type": "string",
              "description": "Short video name"
            },
            "favourite": {
              "type": "boolean",
              "description": "Favorite/Cancel"
            }
          },
          "required": [
            "name",
            "favourite"
          ]
        }
      }
    ],
    "single_tool": [
      {
        "name": "SocialCommunication.SocialMedia.cancleCollectMediumTrends",
        "description": "Unfavorite the specified activity in the specified media",
        "parameters": {
          "type": "object",
          "properties": {
            "medium_name": {
              "type": "string",
              "description": "Media name"
            },
            "correlation": {
              "type": "string",
              "description": "Dynamic Related Content"
            },
            "publisher": {
              "type": "string",
              "description": "Posted by/publisher?"
            },
            "publish_time": {
              "type": "string",
              "description": "Release Date"
            }
          },
          "required": [
            "medium_name",
            "correlation",
            "publisher",
            "publish_time"
          ]
        }
      }
    ],
    "id": 413
  },
  {
    "messages": [
      {
        "role": "user",
        "content": "Please help me clean up and remove all friends from the media"
      },
      {
        "role": "function call",
        "content": {
          "name": "SocialCommunication.SocialMedia.deleteMediumFriend",
          "arguments": {}
        }
      },
      {
        "role": "assistant",
        "content": "Please provide media name"
      },
      {
        "role": "user",
        "content": "Facebook"
      },
      {
        "role": "function call",
        "content": {
          "name": "SocialCommunication.SocialMedia.deleteMediumFriend",
          "arguments": {
            "medium_name": "Facebook"
          }
        }
      },
      {
        "role": "assistant",
        "content": "What's a friend's nickname?"
      },
      {
        "role": "user",
        "content": "It was wrong before. Media name should be Twitter"
      },
      {
        "role": "function call",
        "content": {
          "name": "SocialCommunication.SocialMedia.deleteMediumFriend",
          "arguments": {
            "medium_name": "Twitter"
          }
        }
      },
      {
        "role": "assistant",
        "content": "What's a friend's nickname?"
      },
      {
        "role": "user",
        "content": "Friend's nickname is Lily Floral"
      },
      {
        "role": "function call",
        "content": {
          "name": "SocialCommunication.SocialMedia.deleteMediumFriend",
          "arguments": {
            "medium_name": "Twitter",
            "nick_name": "Lily"
          }
        }
      }
    ],
    "multiple_tools": [
      {
        "name": "SocialCommunication.Calling.deleteContact",
        "description": "Delete the specified contact",
        "parameters": {
          "type": "object",
          "properties": {
            "contact_name": {
              "type": "string",
              "description": "Name of the contact to be deleted"
            }
          },
          "required": [
            "contact_name"
          ]
        }
      },
      {
        "name": "OfficeSoftware.Conferencing.removeParticipants",
        "description": "Remove participants from the meeting",
        "parameters": {
          "type": "object",
          "properties": {
            "meeting_id": {
              "type": "string",
              "description": "Conference No."
            },
            "title": {
              "type": "string",
              "description": "Meeting Title:"
            },
            "time": {
              "type": "string",
              "description": "Meeting Date"
            },
            "participant_list": {
              "type": "string",
              "description": "Remove people list"
            }
          },
          "required": [
            "meeting_id",
            "title",
            "time",
            "participant_list"
          ]
        }
      },
      {
        "name": "SocialCommunication.InstantMessaging.removeContact",
        "description": "Remove the specified contact",
        "parameters": {
          "type": "object",
          "properties": {
            "contact_name": {
              "type": "string",
              "description": "Contact name to remove, required"
            }
          },
          "required": [
            "contact_name"
          ]
        }
      },
      {
        "name": "SocialCommunication.SocialMedia.deleteMediumFriend",
        "description": "Delete specified friends in specified media (delete all by default)",
        "parameters": {
          "type": "object",
          "properties": {
            "medium_name": {
              "type": "string",
              "description": "Media name"
            },
            "nick_name": {
              "type": "string",
              "description": "Friend's nickname"
            },
            "account_number": {
              "type": "string",
              "description": "Friend's account"
            }
          },
          "required": [
            "medium_name",
            "nick_name",
            "account_number"
          ]
        }
      },
      {
        "name": "OfficeSoftware.CloudStorage.netdiskDeleteAddresbookFriend",
        "description": "Delete Friend in Cloud Drive",
        "parameters": {
          "type": "object",
          "properties": {
            "name": {
              "type": "string",
              "description": "Your Friends Name"
            }
          },
          "required": [
            "name"
          ]
        }
      }
    ],
    "single_tool": [
      {
        "name": "SocialCommunication.SocialMedia.deleteMediumFriend",
        "description": "Delete specified friends in specified media (delete all by default)",
        "parameters": {
          "type": "object",
          "properties": {
            "medium_name": {
              "type": "string",
              "description": "Media name"
            },
            "nick_name": {
              "type": "string",
              "description": "Friend's nickname"
            },
            "account_number": {
              "type": "string",
              "description": "Friend's account"
            }
          },
          "required": [
            "medium_name",
            "nick_name",
            "account_number"
          ]
        }
      }
    ],
    "id": 414
  },
  {
    "messages": [
      {
        "role": "user",
        "content": "Check out messages from my friends"
      },
      {
        "role": "function call",
        "content": {
          "name": "SocialCommunication.SocialMedia.viewMediumMessage",
          "arguments": {}
        }
      },
      {
        "role": "assistant",
        "content": "Please provide media name"
      },
      {
        "role": "user",
        "content": "Telegram"
      },
      {
        "role": "function call",
        "content": {
          "name": "SocialCommunication.SocialMedia.viewMediumMessage",
          "arguments": {
            "medium_name": "Telegram"
          }
        }
      },
      {
        "role": "assistant",
        "content": "What's a friend's nickname?"
      },
      {
        "role": "user",
        "content": "It was wrong before. Media name should be Snapchat"
      },
      {
        "role": "function call",
        "content": {
          "name": "SocialCommunication.SocialMedia.viewMediumMessage",
          "arguments": {
            "medium_name": "Snapchat"
          }
        }
      },
      {
        "role": "assistant",
        "content": "What's a friend's nickname?"
      },
      {
        "role": "user",
        "content": "Friend's nickname is Tom"
      },
      {
        "role": "function call",
        "content": {
          "name": "SocialCommunication.SocialMedia.viewMediumMessage",
          "arguments": {
            "medium_name": "Snapchat",
            "name": "Tom"
          }
        }
      },
      {
        "role": "assistant",
        "content": "What's a friend's account"
      },
      {
        "role": "user",
        "content": "My friend's account is lucy_snap, can I help you with something else?"
      },
      {
        "role": "function call",
        "content": {
          "name": "SocialCommunication.SocialMedia.viewMediumMessage",
          "arguments": {
            "medium_name": "Snapchat",
            "name": "Tom",
            "account_number": "lucy_snap"
          }
        }
      }
    ],
    "multiple_tools": [
      {
        "name": "OfficeSoftware.Email.readUnreadMails",
        "description": "View unread messages from users",
        "parameters": {
          "type": "object",
          "properties": {},
          "required": []
        }
      },
      {
        "name": "SocialCommunication.SocialMedia.viewMediumMessage",
        "description": "View messages for specified friends in specified media (defaults to last week)",
        "parameters": {
          "type": "object",
          "properties": {
            "medium_name": {
              "type": "string",
              "description": "Media name"
            },
            "name": {
              "type": "string",
              "description": "Friend's nickname"
            },
            "account_number": {
              "type": "string",
              "description": "Friend's account"
            },
            "time": {
              "type": "string",
              "description": "Release Date"
            }
          },
          "required": [
            "medium_name",
            "name",
            "account_number",
            "time"
          ]
        }
      },
      {
        "name": "SocialCommunication.Community.getCommunityNotifications",
        "description": "Get notifications from select communities",
        "parameters": {
          "type": "object",
          "properties": {
            "community_name": {
              "type": "string",
              "description": "The name of the community to be notified"
            }
          },
          "required": [
            "community_name"
          ]
        }
      },
      {
        "name": "OnlineShopping.SecondhandTrading.viewSecondhandSaleMessage",
        "description": "View message list by default",
        "parameters": {
          "type": "object",
          "properties": {},
          "required": []
        }
      },
      {
        "name": "OnlineShopping.Mall.viewMessage",
        "description": "View messages for a specific friend or time, and see the entire list of messages by default",
        "parameters": {
          "type": "object",
          "properties": {},
          "required": []
        }
      }
    ],
    "single_tool": [
      {
        "name": "SocialCommunication.SocialMedia.viewMediumMessage",
        "description": "View messages for specified friends in specified media (defaults to last week)",
        "parameters": {
          "type": "object",
          "properties": {
            "medium_name": {
              "type": "string",
              "description": "Media name"
            },
            "name": {
              "type": "string",
              "description": "Friend's nickname"
            },
            "account_number": {
              "type": "string",
              "description": "Friend's account"
            },
            "time": {
              "type": "string",
              "description": "Release Date"
            }
          },
          "required": [
            "medium_name",
            "name",
            "account_number",
            "time"
          ]
        }
      }
    ],
    "id": 415
  },
  {
    "messages": [
      {
        "role": "user",
        "content": "Check out your friend's details"
      },
      {
        "role": "function call",
        "content": {
          "name": "SocialCommunication.SocialMedia.viewMediumFriendInfo",
          "arguments": {}
        }
      },
      {
        "role": "assistant",
        "content": "Please provide media name"
      },
      {
        "role": "user",
        "content": "Twitter"
      },
      {
        "role": "function call",
        "content": {
          "name": "SocialCommunication.SocialMedia.viewMediumFriendInfo",
          "arguments": {
            "medium_name": "Twitter"
          }
        }
      },
      {
        "role": "assistant",
        "content": "What's a friend's nickname?"
      },
      {
        "role": "user",
        "content": "It was wrong before. Media name should be Facebook"
      },
      {
        "role": "function call",
        "content": {
          "name": "SocialCommunication.SocialMedia.viewMediumFriendInfo",
          "arguments": {
            "medium_name": "Facebook"
          }
        }
      },
      {
        "role": "assistant",
        "content": "What's a friend's nickname?"
      },
      {
        "role": "user",
        "content": "My friend's nickname is TechGuru Assistant"
      },
      {
        "role": "function call",
        "content": {
          "name": "SocialCommunication.SocialMedia.viewMediumFriendInfo",
          "arguments": {
            "medium_name": "Facebook",
            "name": "TechGuru"
          }
        }
      }
    ],
    "multiple_tools": [
      {
        "name": "Education.OnlineClasses.viewTeacherDetail",
        "description": "View teacher's profile",
        "parameters": {
          "type": "object",
          "properties": {
            "teacher_name": {
              "type": "string",
              "description": "Educator name:"
            }
          },
          "required": [
            "teacher_name"
          ]
        }
      },
      {
        "name": "Health.MedicalServices.viewDoctorDetails",
        "description": "View details for assigned physician",
        "parameters": {
          "type": "object",
          "properties": {
            "hospital_name": {
              "type": "string",
              "description": "Hospital Name"
            },
            "department": {
              "type": "string",
              "description": "Department"
            },
            "location": {
              "type": "string",
              "description": "Area"
            },
            "doctor_name": {
              "type": "string",
              "description": "Doctor Name"
            }
          },
          "required": [
            "hospital_name",
            "department",
            "location",
            "doctor_name"
          ]
        }
      },
      {
        "name": "MusicRadio.OnlineMusic.getUserInfo",
        "description": "Get user information by username",
        "parameters": {
          "type": "object",
          "properties": {
            "name": {
              "type": "string",
              "description": "Username"
            }
          },
          "required": [
            "name"
          ]
        }
      },
      {
        "name": "SocialCommunication.SocialMedia.viewMediumFriendInfo",
        "description": "View details of selected friends in selected media",
        "parameters": {
          "type": "object",
          "properties": {
            "medium_name": {
              "type": "string",
              "description": "Media name"
            },
            "name": {
              "type": "string",
              "description": "Friend's nickname"
            },
            "account_number": {
              "type": "string",
              "description": "Friend's account"
            }
          },
          "required": [
            "medium_name",
            "name",
            "account_number"
          ]
        }
      },
      {
        "name": "SocialCommunication.Community.getCommunityUserInfo",
        "description": "Get user details for a specific community based on user nickname",
        "parameters": {
          "type": "object",
          "properties": {
            "community_name": {
              "type": "string",
              "description": "The name of the community where you want to get user information"
            },
            "user_nickname": {
              "type": "string",
              "description": "User's nickname"
            }
          },
          "required": [
            "community_name",
            "user_nickname"
          ]
        }
      }
    ],
    "single_tool": [
      {
        "name": "SocialCommunication.SocialMedia.viewMediumFriendInfo",
        "description": "View details of selected friends in selected media",
        "parameters": {
          "type": "object",
          "properties": {
            "medium_name": {
              "type": "string",
              "description": "Media name"
            },
            "name": {
              "type": "string",
              "description": "Friend's nickname"
            },
            "account_number": {
              "type": "string",
              "description": "Friend's account"
            }
          },
          "required": [
            "medium_name",
            "name",
            "account_number"
          ]
        }
      }
    ],
    "id": 417
  },
  {
    "messages": [
      {
        "role": "user",
        "content": "Take a look at your profile homepage"
      },
      {
        "role": "function call",
        "content": {
          "name": "SocialCommunication.SocialMedia.viewMediumFriendInfo",
          "arguments": {}
        }
      },
      {
        "role": "assistant",
        "content": "Which media platform would you like to see your friends' details on?"
      },
      {
        "role": "user",
        "content": "I want to see my friends' details on Instagram."
      },
      {
        "role": "function call",
        "content": {
          "name": "SocialCommunication.SocialMedia.viewMediumFriendInfo",
          "arguments": {
            "medium_name": "Instagram"
          }
        }
      },
      {
        "role": "assistant",
        "content": "What's a friend's nickname?"
      },
      {
        "role": "user",
        "content": "It was wrong before. Media name should be Twitter"
      },
      {
        "role": "function call",
        "content": {
          "name": "SocialCommunication.SocialMedia.viewMediumFriendInfo",
          "arguments": {
            "medium_name": "Twitter"
          }
        }
      },
      {
        "role": "assistant",
        "content": "What's a friend's nickname?"
      },
      {
        "role": "user",
        "content": "Friends are nicknamed SunnyDay, and we often discuss technical issues together."
      },
      {
        "role": "function call",
        "content": {
          "name": "SocialCommunication.SocialMedia.viewMediumFriendInfo",
          "arguments": {
            "medium_name": "Twitter",
            "name": "SunnyDay"
          }
        }
      }
    ],
    "multiple_tools": [
      {
        "name": "SocialCommunication.Community.getCommunityUserPosts",
        "description": "Get posts made by a user in a given community based on their nickname",
        "parameters": {
          "type": "object",
          "properties": {
            "community_name": {
              "type": "string",
              "description": "To get the community name of a post"
            },
            "user_nickname": {
              "type": "string",
              "description": "User's nickname"
            }
          },
          "required": [
            "community_name",
            "user_nickname"
          ]
        }
      },
      {
        "name": "UtilityTools.Memo.viewUpcoming",
        "description": "View current to-do",
        "parameters": {
          "type": "object",
          "properties": {},
          "required": []
        }
      },
      {
        "name": "SocialCommunication.SocialMedia.viewMediumFriendInfo",
        "description": "View details of selected friends in selected media",
        "parameters": {
          "type": "object",
          "properties": {
            "medium_name": {
              "type": "string",
              "description": "Media name"
            },
            "name": {
              "type": "string",
              "description": "Friend's nickname"
            },
            "account_number": {
              "type": "string",
              "description": "Friend's account"
            }
          },
          "required": [
            "medium_name",
            "name",
            "account_number"
          ]
        }
      },
      {
        "name": "Photography.PhotoEditing.viewPicture",
        "description": "View photo",
        "parameters": {
          "type": "object",
          "properties": {
            "name_or_path": {
              "type": "string",
              "description": "Photo name or path"
            }
          },
          "required": [
            "name_or_path"
          ]
        }
      },
      {
        "name": "Finance.Stocks.viewStockstrategy",
        "description": "View investment playbook",
        "parameters": {
          "type": "object",
          "properties": {},
          "required": []
        }
      }
    ],
    "single_tool": [
      {
        "name": "SocialCommunication.SocialMedia.viewMediumFriendInfo",
        "description": "View details of selected friends in selected media",
        "parameters": {
          "type": "object",
          "properties": {
            "medium_name": {
              "type": "string",
              "description": "Media name"
            },
            "name": {
              "type": "string",
              "description": "Friend's nickname"
            },
            "account_number": {
              "type": "string",
              "description": "Friend's account"
            }
          },
          "required": [
            "medium_name",
            "name",
            "account_number"
          ]
        }
      }
    ],
    "id": 418
  },
  {
    "messages": [
      {
        "role": "user",
        "content": "Add New concat"
      },
      {
        "role": "function call",
        "content": {
          "name": "SocialCommunication.Calling.addContact",
          "arguments": {}
        }
      },
      {
        "role": "assistant",
        "content": "Please provide contact name"
      },
      {
        "role": "user",
        "content": "The contact is Zhang San. Is there anything I can add?"
      },
      {
        "role": "function call",
        "content": {
          "name": "SocialCommunication.Calling.addContact",
          "arguments": {
            "contact_name": "Zhang San"
          }
        }
      },
      {
        "role": "assistant",
        "content": "Please provide the contact's phone number"
      },
      {
        "role": "user",
        "content": "It was wrong before. Contact person should be Li Hua"
      },
      {
        "role": "function call",
        "content": {
          "name": "SocialCommunication.Calling.addContact",
          "arguments": {
            "contact_name": "Li Hua"
          }
        }
      },
      {
        "role": "assistant",
        "content": "Please provide the contact's phone number"
      },
      {
        "role": "user",
        "content": "My phone number is 13987654321, how can I help?"
      },
      {
        "role": "function call",
        "content": {
          "name": "SocialCommunication.Calling.addContact",
          "arguments": {
            "contact_name": "Li Hua",
            "phone_number": "13987654321"
          }
        }
      },
      {
        "role": "assistant",
        "content": "Please provide the contact's email address"
      },
      {
        "role": "user",
        "content": "The contact's email address is example@email.com."
      },
      {
        "role": "function call",
        "content": {
          "name": "SocialCommunication.Calling.addContact",
          "arguments": {
            "contact_name": "Li Hua",
            "phone_number": "13987654321",
            "email": ""
          }
        }
      }
    ],
    "multiple_tools": [
      {
        "name": "OnlineShopping.ExpressDelivery.addAddress",
        "description": "Add the specified address to the address book",
        "parameters": {
          "type": "object",
          "properties": {
            "name": {
              "type": "string",
              "description": "Name"
            },
            "phone": {
              "type": "string",
              "description": "Phone No."
            },
            "address": {
              "type": "string",
              "description": "Address"
            }
          },
          "required": [
            "name",
            "phone",
            "address"
          ]
        }
      },
      {
        "name": "OnlineShopping.Mall.addDeliveryAddress",
        "description": "Add a new shipping address based on the information",
        "parameters": {
          "type": "object",
          "properties": {
            "receiver": {
              "type": "string",
              "description": "Receiver"
            },
            "phoneNumber": {
              "type": "string",
              "description": "Phone No."
            },
            "address": {
              "type": "string",
              "description": "Shipping Address"
            }
          },
          "required": [
            "receiver",
            "phoneNumber",
            "address"
          ]
        }
      },
      {
        "name": "Navigation.MapNavigation.addCommonAddress",
        "description": "Add usual address",
        "parameters": {
          "type": "object",
          "properties": {
            "address": {
              "type": "string",
              "description": "Primary address string to add"
            }
          },
          "required": [
            "address"
          ]
        }
      },
      {
        "name": "SocialCommunication.Calling.addContact",
        "description": "Used to add new contact information",
        "parameters": {
          "type": "object",
          "properties": {
            "contact_name": {
              "type": "string",
              "description": "Contact person"
            },
            "phone_number": {
              "type": "string",
              "description": "Missing contact phone number."
            },
            "email": {
              "type": "string",
              "description": "Contact email (optional)"
            }
          },
          "required": [
            "contact_name",
            "phone_number",
            "email"
          ]
        }
      },
      {
        "name": "UtilityTools.Search.addWebBookmark",
        "description": "Add a page to a default collection or to a specified collection",
        "parameters": {
          "type": "object",
          "properties": {
            "name": {
              "type": "string",
              "description": "Name"
            },
            "bookmark": {
              "type": "string",
              "description": "Bookmark title, provided by target title by default"
            }
          },
          "required": [
            "name",
            "bookmark"
          ]
        }
      }
    ],
    "single_tool": [
      {
        "name": "SocialCommunication.Calling.addContact",
        "description": "Used to add new contact information",
        "parameters": {
          "type": "object",
          "properties": {
            "contact_name": {
              "type": "string",
              "description": "Contact person"
            },
            "phone_number": {
              "type": "string",
              "description": "Missing contact phone number."
            },
            "email": {
              "type": "string",
              "description": "Contact email (optional)"
            }
          },
          "required": [
            "contact_name",
            "phone_number",
            "email"
          ]
        }
      }
    ],
    "id": 423
  },
  {
    "messages": [
      {
        "role": "user",
        "content": "Add me a new contact"
      },
      {
        "role": "function call",
        "content": {
          "name": "SocialCommunication.Calling.addContact",
          "arguments": {}
        }
      },
      {
        "role": "assistant",
        "content": "Please provide contact name"
      },
      {
        "role": "user",
        "content": "Li Hua is my friend, you can contact him."
      },
      {
        "role": "function call",
        "content": {
          "name": "SocialCommunication.Calling.addContact",
          "arguments": {
            "contact_name": "Li Hua"
          }
        }
      },
      {
        "role": "assistant",
        "content": "Please provide the contact's phone number"
      },
      {
        "role": "user",
        "content": "It was wrong before. Contact person should be Zhang San"
      },
      {
        "role": "function call",
        "content": {
          "name": "SocialCommunication.Calling.addContact",
          "arguments": {
            "contact_name": "Zhang San"
          }
        }
      },
      {
        "role": "assistant",
        "content": "Please provide the contact's phone number"
      },
      {
        "role": "user",
        "content": "My phone number is 13812345678, how can I help?"
      },
      {
        "role": "function call",
        "content": {
          "name": "SocialCommunication.Calling.addContact",
          "arguments": {
            "contact_name": "Zhang San",
            "phone_number": "13812345678"
          }
        }
      },
      {
        "role": "assistant",
        "content": "Please provide the contact's email address"
      },
      {
        "role": "user",
        "content": "The contact's email address is lihua@example.com."
      },
      {
        "role": "function call",
        "content": {
          "name": "SocialCommunication.Calling.addContact",
          "arguments": {
            "contact_name": "Zhang San",
            "phone_number": "13812345678",
            "email": "lihua@example.com"
          }
        }
      }
    ],
    "multiple_tools": [
      {
        "name": "SocialCommunication.Calling.addContact",
        "description": "Used to add new contact information",
        "parameters": {
          "type": "object",
          "properties": {
            "contact_name": {
              "type": "string",
              "description": "Contact person"
            },
            "phone_number": {
              "type": "string",
              "description": "Missing contact phone number."
            },
            "email": {
              "type": "string",
              "description": "Contact email (optional)"
            }
          },
          "required": [
            "contact_name",
            "phone_number",
            "email"
          ]
        }
      },
      {
        "name": "Navigation.MapNavigation.addCommonAddress",
        "description": "Add usual address",
        "parameters": {
          "type": "object",
          "properties": {
            "address": {
              "type": "string",
              "description": "Primary address string to add"
            }
          },
          "required": [
            "address"
          ]
        }
      },
      {
        "name": "OnlineShopping.ExpressDelivery.addAddress",
        "description": "Add the specified address to the address book",
        "parameters": {
          "type": "object",
          "properties": {
            "name": {
              "type": "string",
              "description": "Name"
            },
            "phone": {
              "type": "string",
              "description": "Phone No."
            },
            "address": {
              "type": "string",
              "description": "Address"
            }
          },
          "required": [
            "name",
            "phone",
            "address"
          ]
        }
      },
      {
        "name": "OnlineShopping.Mall.addDeliveryAddress",
        "description": "Add a new shipping address based on the information",
        "parameters": {
          "type": "object",
          "properties": {
            "receiver": {
              "type": "string",
              "description": "Receiver"
            },
            "phoneNumber": {
              "type": "string",
              "description": "Phone No."
            },
            "address": {
              "type": "string",
              "description": "Shipping Address"
            }
          },
          "required": [
            "receiver",
            "phoneNumber",
            "address"
          ]
        }
      },
      {
        "name": "SocialCommunication.InstantMessaging.addContact",
        "description": "Add New Contact",
        "parameters": {
          "type": "object",
          "properties": {
            "name": {
              "type": "string",
              "description": "Contact person"
            },
            "phone": {
              "type": "string",
              "description": "Cellphone"
            }
          },
          "required": [
            "name",
            "phone"
          ]
        }
      }
    ],
    "single_tool": [
      {
        "name": "SocialCommunication.Calling.addContact",
        "description": "Used to add new contact information",
        "parameters": {
          "type": "object",
          "properties": {
            "contact_name": {
              "type": "string",
              "description": "Contact person"
            },
            "phone_number": {
              "type": "string",
              "description": "Missing contact phone number."
            },
            "email": {
              "type": "string",
              "description": "Contact email (optional)"
            }
          },
          "required": [
            "contact_name",
            "phone_number",
            "email"
          ]
        }
      }
    ],
    "id": 424
  },
  {
    "messages": [
      {
        "role": "user",
        "content": "Modify a contact's information, but there are no specific parameters, can you help me see how to do it?"
      },
      {
        "role": "function call",
        "content": {
          "name": "SocialCommunication.Calling.modifyContact",
          "arguments": {}
        }
      },
      {
        "role": "assistant",
        "content": "What is the contact name to change"
      },
      {
        "role": "user",
        "content": "The contact name that needs to be changed is Li Si."
      },
      {
        "role": "function call",
        "content": {
          "name": "SocialCommunication.Calling.modifyContact",
          "arguments": {
            "contact_name": "Li Si"
          }
        }
      },
      {
        "role": "assistant",
        "content": "Please provide a new contact name"
      },
      {
        "role": "user",
        "content": "It was wrong before. Contact name to modify should be Li Ming"
      },
      {
        "role": "function call",
        "content": {
          "name": "SocialCommunication.Calling.modifyContact",
          "arguments": {
            "contact_name": "Li Ming"
          }
        }
      },
      {
        "role": "assistant",
        "content": "Please provide a new contact name"
      },
      {
        "role": "user",
        "content": "Li Hua"
      },
      {
        "role": "function call",
        "content": {
          "name": "SocialCommunication.Calling.modifyContact",
          "arguments": {
            "contact_name": "Li Ming",
            "new_contact_name": ""
          }
        }
      },
      {
        "role": "assistant",
        "content": "Please provide a new contact phone number"
      },
      {
        "role": "user",
        "content": "My new phone number is 13612345678, please update it."
      },
      {
        "role": "function call",
        "content": {
          "name": "SocialCommunication.Calling.modifyContact",
          "arguments": {
            "contact_name": "Li Ming",
            "new_contact_name": "",
            "new_phone_number": "13612345678"
          }
        }
      },
      {
        "role": "assistant",
        "content": "What is the contact phone number to modify"
      },
      {
        "role": "user",
        "content": "The phone number that needs to be changed is 13712345678."
      },
      {
        "role": "function call",
        "content": {
          "name": "SocialCommunication.Calling.modifyContact",
          "arguments": {
            "contact_name": "Li Ming",
            "new_contact_name": "",
            "new_phone_number": "13612345678",
            "phone_number": "13712345678"
          }
        }
      }
    ],
    "multiple_tools": [
      {
        "name": "OfficeSoftware.CloudStorage.netdiskSetFileAccessPermission",
        "description": "Set access rights for files in Drive",
        "parameters": {
          "type": "object",
          "properties": {
            "file_path": {
              "type": "string",
              "description": "File Path"
            },
            "permission_level": {
              "type": "string",
              "description": "Permission level, such as public, private, etc."
            }
          },
          "required": [
            "file_path",
            "permission_level"
          ]
        }
      },
      {
        "name": "ConvenientLiving.JobRecruitment.setJobPositionVisibility",
        "description": "Set if the position is visible to the candidate",
        "parameters": {
          "type": "object",
          "properties": {
            "position_name": {
              "type": "string",
              "description": "Job title, required"
            },
            "visibility": {
              "type": "boolean",
              "description": "Visibility, required"
            }
          },
          "required": [
            "position_name",
            "visibility"
          ]
        }
      },
      {
        "name": "OfficeSoftware.Documents.setDocumentPermissions",
        "description": "Set access rights for the specified document",
        "parameters": {
          "type": "object",
          "properties": {
            "document_name": {
              "type": "string",
              "description": "Document name to set permissions, required"
            }
          },
          "required": [
            "document_name"
          ]
        }
      },
      {
        "name": "SystemTools.SystemSettings.setSystemPrivacy",
        "description": "Set permissions for mobile app",
        "parameters": {
          "type": "object",
          "properties": {
            "app_name": {
              "type": "string",
              "description": "Αpp Name"
            },
            "location_access": {
              "type": "boolean",
              "description": "Whether to allow fetching locations"
            },
            "camera_access": {
              "type": "boolean",
              "description": "Whether to allow the use of cameras"
            }
          },
          "required": [
            "app_name",
            "location_access",
            "camera_access"
          ]
        }
      },
      {
        "name": "SocialCommunication.Calling.modifyContact",
        "description": "Modify the information for the specified contact",
        "parameters": {
          "type": "object",
          "properties": {
            "contact_name": {
              "type": "string",
              "description": "Contact name to modify"
            },
            "new_contact_name": {
              "type": "string",
              "description": "New contact name (optional)"
            },
            "new_phone_number": {
              "type": "string",
              "description": "New contact phone number (optional)"
            },
            "phone_number": {
              "type": "string",
              "description": "Contact phone number to modify"
            }
          },
          "required": [
            "contact_name",
            "new_contact_name",
            "new_phone_number",
            "phone_number"
          ]
        }
      }
    ],
    "single_tool": [
      {
        "name": "SocialCommunication.Calling.modifyContact",
        "description": "Modify the information for the specified contact",
        "parameters": {
          "type": "object",
          "properties": {
            "contact_name": {
              "type": "string",
              "description": "Contact name to modify"
            },
            "new_contact_name": {
              "type": "string",
              "description": "New contact name (optional)"
            },
            "new_phone_number": {
              "type": "string",
              "description": "New contact phone number (optional)"
            },
            "phone_number": {
              "type": "string",
              "description": "Contact phone number to modify"
            }
          },
          "required": [
            "contact_name",
            "new_contact_name",
            "new_phone_number",
            "phone_number"
          ]
        }
      }
    ],
    "id": 427
  },
  {
    "messages": [
      {
        "role": "user",
        "content": "I need to change a contact's phone number, but I forgot how to do it, can you guide me?"
      },
      {
        "role": "function call",
        "content": {
          "name": "SocialCommunication.Calling.modifyContact",
          "arguments": {}
        }
      },
      {
        "role": "assistant",
        "content": "What is the contact name to change"
      },
      {
        "role": "user",
        "content": "The contact name that needs to be changed is Zhang San."
      },
      {
        "role": "function call",
        "content": {
          "name": "SocialCommunication.Calling.modifyContact",
          "arguments": {
            "contact_name": "Zhang San"
          }
        }
      },
      {
        "role": "assistant",
        "content": "What's the new contact name"
      },
      {
        "role": "user",
        "content": "The new contact name is Zhang Sanfeng, who is my martial arts instructor."
      },
      {
        "role": "function call",
        "content": {
          "name": "SocialCommunication.Calling.modifyContact",
          "arguments": {
            "contact_name": "Zhang San",
            "new_contact_name": "Zhang Sanfeng"
          }
        }
      },
      {
        "role": "assistant",
        "content": "What is the new contact phone number"
      },
      {
        "role": "user",
        "content": "The new contact phone number is 13812345678, remember to save it."
      },
      {
        "role": "function call",
        "content": {
          "name": "SocialCommunication.Calling.modifyContact",
          "arguments": {
            "contact_name": "Zhang San",
            "new_contact_name": "Zhang Sanfeng",
            "new_phone_number": "13812345678"
          }
        }
      },
      {
        "role": "assistant",
        "content": "What is the contact phone number to modify"
      },
      {
        "role": "user",
        "content": "It was wrong before. New contact phone number (optional) should be 13800138000"
      },
      {
        "role": "function call",
        "content": {
          "name": "SocialCommunication.Calling.modifyContact",
          "arguments": {
            "contact_name": "Zhang San",
            "new_contact_name": "Zhang Sanfeng",
            "new_phone_number": "13800138000"
          }
        }
      },
      {
        "role": "assistant",
        "content": "What is the contact phone number to modify"
      },
      {
        "role": "user",
        "content": "The phone number that needs to be changed is 13512345678."
      },
      {
        "role": "function call",
        "content": {
          "name": "SocialCommunication.Calling.modifyContact",
          "arguments": {
            "contact_name": "Zhang San",
            "new_contact_name": "Zhang Sanfeng",
            "new_phone_number": "13800138000",
            "phone_number": "13512345678"
          }
        }
      }
    ],
    "multiple_tools": [
      {
        "name": "OnlineShopping.Mall.modifyDeliveryAddress",
        "description": "Change address based on consignee",
        "parameters": {
          "type": "object",
          "properties": {
            "receiver": {
              "type": "string",
              "description": "Receiver"
            }
          },
          "required": [
            "receiver"
          ]
        }
      },
      {
        "name": "SystemTools.SystemSettings.modifyuserAccounts",
        "description": "Modify the current user's information",
        "parameters": {
          "type": "object",
          "properties": {
            "phone_number": {
              "type": "string",
              "description": "Phone No."
            },
            "nickname": {
              "type": "string",
              "description": "Nickname"
            }
          },
          "required": [
            "phone_number",
            "nickname"
          ]
        }
      },
      {
        "name": "SocialCommunication.Calling.modifyContact",
        "description": "Modify the information for the specified contact",
        "parameters": {
          "type": "object",
          "properties": {
            "contact_name": {
              "type": "string",
              "description": "Contact name to modify"
            },
            "new_contact_name": {
              "type": "string",
              "description": "New contact name (optional)"
            },
            "new_phone_number": {
              "type": "string",
              "description": "New contact phone number (optional)"
            },
            "phone_number": {
              "type": "string",
              "description": "Contact phone number to modify"
            }
          },
          "required": [
            "contact_name",
            "new_contact_name",
            "new_phone_number",
            "phone_number"
          ]
        }
      },
      {
        "name": "SocialCommunication.SocialMedia.updateMediumInfo",
        "description": "Edit profile information",
        "parameters": {
          "type": "object",
          "properties": {
            "medium_name": {
              "type": "string",
              "description": "Media name"
            },
            "new_nickname": {
              "type": "string",
              "description": "Updated nickname"
            }
          },
          "required": [
            "medium_name",
            "new_nickname"
          ]
        }
      },
      {
        "name": "Finance.Payment.updatePayUserInfo",
        "description": "Update account user information",
        "parameters": {
          "type": "object",
          "properties": {
            "user_name": {
              "type": "string",
              "description": "username"
            },
            "phone": {
              "type": "string",
              "description": "User's phone number"
            },
            "address": {
              "type": "string",
              "description": "User Address"
            }
          },
          "required": [
            "user_name",
            "phone",
            "address"
          ]
        }
      }
    ],
    "single_tool": [
      {
        "name": "SocialCommunication.Calling.modifyContact",
        "description": "Modify the information for the specified contact",
        "parameters": {
          "type": "object",
          "properties": {
            "contact_name": {
              "type": "string",
              "description": "Contact name to modify"
            },
            "new_contact_name": {
              "type": "string",
              "description": "New contact name (optional)"
            },
            "new_phone_number": {
              "type": "string",
              "description": "New contact phone number (optional)"
            },
            "phone_number": {
              "type": "string",
              "description": "Contact phone number to modify"
            }
          },
          "required": [
            "contact_name",
            "new_contact_name",
            "new_phone_number",
            "phone_number"
          ]
        }
      }
    ],
    "id": 428
  },
  {
    "messages": [
      {
        "role": "user",
        "content": "Where are the different application permissions set?"
      },
      {
        "role": "function call",
        "content": {
          "name": "SystemTools.SystemSettings.setSystemPrivacy",
          "arguments": {}
        }
      },
      {
        "role": "assistant",
        "content": "What's the app name"
      },
      {
        "role": "user",
        "content": "The app name is WeChat"
      },
      {
        "role": "function call",
        "content": {
          "name": "SystemTools.SystemSettings.setSystemPrivacy",
          "arguments": {
            "app_name": "WeChat"
          }
        }
      },
      {
        "role": "assistant",
        "content": "Whether to allow fetching locations"
      },
      {
        "role": "user",
        "content": "It was wrong before. Αpp Name should be Baidu Map"
      },
      {
        "role": "function call",
        "content": {
          "name": "SystemTools.SystemSettings.setSystemPrivacy",
          "arguments": {
            "app_name": "Baidu Map"
          }
        }
      },
      {
        "role": "assistant",
        "content": "Whether to allow fetching locations"
      },
      {
        "role": "user",
        "content": "Allow fetching locations, True"
      },
      {
        "role": "function call",
        "content": {
          "name": "SystemTools.SystemSettings.setSystemPrivacy",
          "arguments": {
            "app_name": "Baidu Map",
            "location_access": true
          }
        }
      }
    ],
    "multiple_tools": [
      {
        "name": "OfficeSoftware.Documents.setFolderPermissions",
        "description": "Set access rights for the specified folder",
        "parameters": {
          "type": "object",
          "properties": {
            "folder_name": {
              "type": "string",
              "description": "Folder name to set permissions, required"
            }
          },
          "required": [
            "folder_name"
          ]
        }
      },
      {
        "name": "ConvenientLiving.JobRecruitment.setJobPositionVisibility",
        "description": "Set if the position is visible to the candidate",
        "parameters": {
          "type": "object",
          "properties": {
            "position_name": {
              "type": "string",
              "description": "Job title, required"
            },
            "visibility": {
              "type": "boolean",
              "description": "Visibility, required"
            }
          },
          "required": [
            "position_name",
            "visibility"
          ]
        }
      },
      {
        "name": "SystemTools.SystemSettings.setSystemPrivacy",
        "description": "Set permissions for mobile app",
        "parameters": {
          "type": "object",
          "properties": {
            "app_name": {
              "type": "string",
              "description": "Αpp Name"
            },
            "location_access": {
              "type": "boolean",
              "description": "Whether to allow fetching locations"
            },
            "camera_access": {
              "type": "boolean",
              "description": "Whether to allow the use of cameras"
            }
          },
          "required": [
            "app_name",
            "location_access",
            "camera_access"
          ]
        }
      },
      {
        "name": "OfficeSoftware.CloudStorage.netdiskSetFileAccessPermission",
        "description": "Set access rights for files in Drive",
        "parameters": {
          "type": "object",
          "properties": {
            "file_path": {
              "type": "string",
              "description": "File Path"
            },
            "permission_level": {
              "type": "string",
              "description": "Permission level, such as public, private, etc."
            }
          },
          "required": [
            "file_path",
            "permission_level"
          ]
        }
      },
      {
        "name": "OfficeSoftware.Documents.setDocumentPermissions",
        "description": "Set access rights for the specified document",
        "parameters": {
          "type": "object",
          "properties": {
            "document_name": {
              "type": "string",
              "description": "Document name to set permissions, required"
            }
          },
          "required": [
            "document_name"
          ]
        }
      }
    ],
    "single_tool": [
      {
        "name": "SystemTools.SystemSettings.setSystemPrivacy",
        "description": "Set permissions for mobile app",
        "parameters": {
          "type": "object",
          "properties": {
            "app_name": {
              "type": "string",
              "description": "Αpp Name"
            },
            "location_access": {
              "type": "boolean",
              "description": "Whether to allow fetching locations"
            },
            "camera_access": {
              "type": "boolean",
              "description": "Whether to allow the use of cameras"
            }
          },
          "required": [
            "app_name",
            "location_access",
            "camera_access"
          ]
        }
      }
    ],
    "id": 435
  },
  {
    "messages": [
      {
        "role": "user",
        "content": "Adjust your phone's date and time"
      },
      {
        "role": "function call",
        "content": {
          "name": "SystemTools.SystemSettings.setSystemDateAndTime",
          "arguments": {}
        }
      },
      {
        "role": "assistant",
        "content": "Please provide the date format you would like to set as YYYY-MM-DD"
      },
      {
        "role": "user",
        "content": "2023-05-20, this date format meets my needs."
      },
      {
        "role": "function call",
        "content": {
          "name": "SystemTools.SystemSettings.setSystemDateAndTime",
          "arguments": {
            "date": "2023-05-20"
          }
        }
      },
      {
        "role": "assistant",
        "content": "Please provide the time format to be set in hours, minutes and seconds"
      },
      {
        "role": "user",
        "content": "It was wrong before. Date in the format YYYY-MM-DD should be 2023-12-25"
      },
      {
        "role": "function call",
        "content": {
          "name": "SystemTools.SystemSettings.setSystemDateAndTime",
          "arguments": {
            "date": "2023-12-25"
          }
        }
      },
      {
        "role": "assistant",
        "content": "Please provide the time format to be set in hours, minutes and seconds"
      },
      {
        "role": "user",
        "content": "14:45:00, this is the time I'm going to set."
      },
      {
        "role": "function call",
        "content": {
          "name": "SystemTools.SystemSettings.setSystemDateAndTime",
          "arguments": {
            "date": "2023-12-25",
            "time": "14:45:00"
          }
        }
      }
    ],
    "multiple_tools": [
      {
        "name": "UtilityTools.AIGC.aigcPictureEnhancement",
        "description": "Adjust the contrast of an image that is too dark or too bright to make the image more vivid",
        "parameters": {
          "type": "object",
          "properties": {
            "file": {
              "type": "string",
              "description": "Pending Picture File Path"
            }
          },
          "required": [
            "file"
          ]
        }
      },
      {
        "name": "Finance.Funds.updateFundRedeemAmount",
        "description": "Update Redemption Amount for Designated Funds",
        "parameters": {
          "type": "object",
          "properties": {
            "fund_name": {
              "type": "string",
              "description": "Fund name"
            },
            "fund_code": {
              "type": "string",
              "description": "Fund  Code"
            },
            "new_amount": {
              "type": "float",
              "description": "Updated redemption amount, unit (yuan)"
            },
            "delta_amount": {
              "type": "float",
              "description": "Increase or decrease in redemption amount, unit (yuan)"
            }
          },
          "required": [
            "fund_name",
            "fund_code",
            "new_amount",
            "delta_amount"
          ]
        }
      },
      {
        "name": "OfficeSoftware.Email.appendixManageMail",
        "description": "Get all attachments",
        "parameters": {
          "type": "object",
          "properties": {},
          "required": []
        }
      },
      {
        "name": "SystemTools.SystemSettings.setSystemDateAndTime",
        "description": "Set the date and time of your phone",
        "parameters": {
          "type": "object",
          "properties": {
            "date": {
              "type": "string",
              "description": "Date in the format YYYY-MM-DD"
            },
            "time": {
              "type": "string",
              "description": "Time in hour: minute: second format"
            },
            "time_zone": {
              "type": "string",
              "description": "Time zone, e.g. Beijing time"
            }
          },
          "required": [
            "date",
            "time",
            "time_zone"
          ]
        }
      },
      {
        "name": "Finance.Stocks.viewStockincome",
        "description": "Reference profit and loss for the day",
        "parameters": {
          "type": "object",
          "properties": {},
          "required": []
        }
      }
    ],
    "single_tool": [
      {
        "name": "SystemTools.SystemSettings.setSystemDateAndTime",
        "description": "Set the date and time of your phone",
        "parameters": {
          "type": "object",
          "properties": {
            "date": {
              "type": "string",
              "description": "Date in the format YYYY-MM-DD"
            },
            "time": {
              "type": "string",
              "description": "Time in hour: minute: second format"
            },
            "time_zone": {
              "type": "string",
              "description": "Time zone, e.g. Beijing time"
            }
          },
          "required": [
            "date",
            "time",
            "time_zone"
          ]
        }
      }
    ],
    "id": 438
  },
  {
    "messages": [
      {
        "role": "user",
        "content": "Please help me set the time and date of my phone"
      },
      {
        "role": "function call",
        "content": {
          "name": "SystemTools.SystemSettings.setSystemDateAndTime",
          "arguments": {}
        }
      },
      {
        "role": "assistant",
        "content": "Please provide the date you would like to set"
      },
      {
        "role": "user",
        "content": "2023-04-15 My friend's birthday, I need to prepare a surprise for him on this day."
      },
      {
        "role": "function call",
        "content": {
          "name": "SystemTools.SystemSettings.setSystemDateAndTime",
          "arguments": {
            "date": "2023-04-15"
          }
        }
      },
      {
        "role": "assistant",
        "content": "Please provide time format in hours, minutes and seconds"
      },
      {
        "role": "user",
        "content": "It was wrong before. Date in the format YYYY-MM-DD should be 2023-12-25"
      },
      {
        "role": "function call",
        "content": {
          "name": "SystemTools.SystemSettings.setSystemDateAndTime",
          "arguments": {
            "date": "2023-12-25"
          }
        }
      },
      {
        "role": "assistant",
        "content": "Please provide time format in hours, minutes and seconds"
      },
      {
        "role": "user",
        "content": "10:30:00, this is the time format you need."
      },
      {
        "role": "function call",
        "content": {
          "name": "SystemTools.SystemSettings.setSystemDateAndTime",
          "arguments": {
            "date": "2023-12-25",
            "time": "10:30:00"
          }
        }
      }
    ],
    "multiple_tools": [
      {
        "name": "SystemTools.SystemSettings.setSystemDateAndTime",
        "description": "Set the date and time of your phone",
        "parameters": {
          "type": "object",
          "properties": {
            "date": {
              "type": "string",
              "description": "Date in the format YYYY-MM-DD"
            },
            "time": {
              "type": "string",
              "description": "Time in hour: minute: second format"
            },
            "time_zone": {
              "type": "string",
              "description": "Time zone, e.g. Beijing time"
            }
          },
          "required": [
            "date",
            "time",
            "time_zone"
          ]
        }
      },
      {
        "name": "SystemTools.SystemSettings.setSystemScreenTimeout",
        "description": "Set the auto message screen time for your phone screen",
        "parameters": {
          "type": "object",
          "properties": {
            "timeout_duration": {
              "type": "integer",
              "description": "Maximum duration of screen inactivity, in seconds"
            }
          },
          "required": [
            "timeout_duration"
          ]
        }
      },
      {
        "name": "UtilityTools.AlarmClock.editTimer",
        "description": "Modify timer ring settings",
        "parameters": {
          "type": "object",
          "properties": {
            "timer_name": {
              "type": "string",
              "description": "Timer Name:      {0}"
            },
            "timer": {
              "type": "string",
              "description": "Timer time"
            }
          },
          "required": [
            "timer_name",
            "timer"
          ]
        }
      },
      {
        "name": "Photography.PhotoTaking.takePhotoDelay",
        "description": "Take photos after a set period of time",
        "parameters": {
          "type": "object",
          "properties": {
            "delay": {
              "type": "integer",
              "description": "Delay duration, in seconds"
            }
          },
          "required": [
            "delay"
          ]
        }
      },
      {
        "name": "ConvenientLiving.FoodDelivery.getRestaurantOrderDeliveryEstimate",
        "description": "Estimated time to get deliveries based on orders",
        "parameters": {
          "type": "object",
          "properties": {
            "order_name": {
              "type": "string",
              "description": "Contents of the order"
            }
          },
          "required": [
            "order_name"
          ]
        }
      }
    ],
    "single_tool": [
      {
        "name": "SystemTools.SystemSettings.setSystemDateAndTime",
        "description": "Set the date and time of your phone",
        "parameters": {
          "type": "object",
          "properties": {
            "date": {
              "type": "string",
              "description": "Date in the format YYYY-MM-DD"
            },
            "time": {
              "type": "string",
              "description": "Time in hour: minute: second format"
            },
            "time_zone": {
              "type": "string",
              "description": "Time zone, e.g. Beijing time"
            }
          },
          "required": [
            "date",
            "time",
            "time_zone"
          ]
        }
      }
    ],
    "id": 439
  },
  {
    "messages": [
      {
        "role": "user",
        "content": "Adjust your phone's vibration settings"
      },
      {
        "role": "function call",
        "content": {
          "name": "SystemTools.SystemSettings.setSystemVibration",
          "arguments": {}
        }
      },
      {
        "role": "assistant",
        "content": "Whether the vibration mode you want to set is continuous or intermittent How to set the vibration intensity"
      },
      {
        "role": "user",
        "content": "I want the setting to be intermittent vibration and the intensity to be medium."
      },
      {
        "role": "function call",
        "content": {
          "name": "SystemTools.SystemSettings.setSystemVibration",
          "arguments": {
            "vibration_mode": "Break"
          }
        }
      },
      {
        "role": "assistant",
        "content": "Please provide vibration strength 1 to 10"
      },
      {
        "role": "user",
        "content": "It was wrong before. Vibration modes such as continuous, intermittent should be Continuous"
      },
      {
        "role": "function call",
        "content": {
          "name": "SystemTools.SystemSettings.setSystemVibration",
          "arguments": {
            "vibration_mode": "Continuous"
          }
        }
      },
      {
        "role": "assistant",
        "content": "Please provide vibration strength 1 to 10"
      },
      {
        "role": "user",
        "content": "Vibration intensity set to 3"
      },
      {
        "role": "function call",
        "content": {
          "name": "SystemTools.SystemSettings.setSystemVibration",
          "arguments": {
            "vibration_mode": "Continuous",
            "vibration_intensity": 3
          }
        }
      }
    ],
    "multiple_tools": [
      {
        "name": "SystemTools.SystemSettings.setSystemVibration",
        "description": "Turn on or off the vibration of the phone, set the mode and intensity of the vibration",
        "parameters": {
          "type": "object",
          "properties": {
            "vibration_status": {
              "type": "boolean",
              "description": "Turn vibration on or off, true for on, false for off"
            },
            "vibration_mode": {
              "type": "string",
              "description": "Vibration modes such as continuous, intermittent"
            },
            "vibration_intensity": {
              "type": "integer",
              "description": "Vibration intensity, 1 to 10"
            }
          },
          "required": [
            "vibration_status",
            "vibration_mode",
            "vibration_intensity"
          ]
        }
      },
      {
        "name": "SystemTools.SystemSettings.setSystemGesture",
        "description": "Set custom mobile gesture action",
        "parameters": {
          "type": "object",
          "properties": {
            "gesture_name": {
              "type": "string",
              "description": "The name of the gesture, such as a screenshot gesture"
            },
            "gesture_action": {
              "type": "integer",
              "description": "Corresponding actions, such as taking a screenshot, opening the app"
            }
          },
          "required": [
            "gesture_name",
            "gesture_action"
          ]
        }
      },
      {
        "name": "Navigation.TaxiCarRental.issueTaxiInvoice",
        "description": "Invoicing taxi rides",
        "parameters": {
          "type": "object",
          "properties": {
            "time": {
              "type": "string",
              "description": "Order time"
            },
            "destination": {
              "type": "string",
              "description": "Destination"
            }
          },
          "required": [
            "time",
            "destination"
          ]
        }
      },
      {
        "name": "OnlineShopping.SecondhandTrading.buySecondhandSaleCommodity",
        "description": "Goods purchased",
        "parameters": {
          "type": "object",
          "properties": {
            "search_name": {
              "type": "string",
              "description": "Trade Name/Keywords"
            }
          },
          "required": [
            "search_name"
          ]
        }
      },
      {
        "name": "Photography.VideoRecording.videoMotionTracking",
        "description": "Turn on or off automatic tracking of moving objects in shooting",
        "parameters": {
          "type": "object",
          "properties": {
            "open": {
              "type": "boolean",
              "description": "Whether to turn on motion tracking"
            },
            "level": {
              "type": "integer",
              "description": "Tracking speed, 1 to 5"
            }
          },
          "required": [
            "open",
            "level"
          ]
        }
      }
    ],
    "single_tool": [
      {
        "name": "SystemTools.SystemSettings.setSystemVibration",
        "description": "Turn on or off the vibration of the phone, set the mode and intensity of the vibration",
        "parameters": {
          "type": "object",
          "properties": {
            "vibration_status": {
              "type": "boolean",
              "description": "Turn vibration on or off, true for on, false for off"
            },
            "vibration_mode": {
              "type": "string",
              "description": "Vibration modes such as continuous, intermittent"
            },
            "vibration_intensity": {
              "type": "integer",
              "description": "Vibration intensity, 1 to 10"
            }
          },
          "required": [
            "vibration_status",
            "vibration_mode",
            "vibration_intensity"
          ]
        }
      }
    ],
    "id": 443
  },
  {
    "messages": [
      {
        "role": "user",
        "content": "Where is the vibration setting of the phone?"
      },
      {
        "role": "function call",
        "content": {
          "name": "SystemTools.SystemSettings.setSystemVibration",
          "arguments": {}
        }
      },
      {
        "role": "assistant",
        "content": "Whether the vibration mode you want to set is continuous or intermittent How to set the vibration intensity"
      },
      {
        "role": "user",
        "content": "I want the setting to be continuous vibration and the intensity to be medium."
      },
      {
        "role": "function call",
        "content": {
          "name": "SystemTools.SystemSettings.setSystemVibration",
          "arguments": {
            "vibration_mode": "Continuous"
          }
        }
      },
      {
        "role": "assistant",
        "content": "What is the vibration intensity from 1 to 10"
      },
      {
        "role": "user",
        "content": "It was wrong before. Vibration modes such as continuous, intermittent should be Break"
      },
      {
        "role": "function call",
        "content": {
          "name": "SystemTools.SystemSettings.setSystemVibration",
          "arguments": {
            "vibration_mode": "Break"
          }
        }
      },
      {
        "role": "assistant",
        "content": "What is the vibration intensity from 1 to 10"
      },
      {
        "role": "user",
        "content": "The vibration intensity is 5 and feels moderate."
      },
      {
        "role": "function call",
        "content": {
          "name": "SystemTools.SystemSettings.setSystemVibration",
          "arguments": {
            "vibration_mode": "Break",
            "vibration_intensity": 5
          }
        }
      }
    ],
    "multiple_tools": [
      {
        "name": "SystemTools.SystemSettings.setSystemVibration",
        "description": "Turn on or off the vibration of the phone, set the mode and intensity of the vibration",
        "parameters": {
          "type": "object",
          "properties": {
            "vibration_status": {
              "type": "boolean",
              "description": "Turn vibration on or off, true for on, false for off"
            },
            "vibration_mode": {
              "type": "string",
              "description": "Vibration modes such as continuous, intermittent"
            },
            "vibration_intensity": {
              "type": "integer",
              "description": "Vibration intensity, 1 to 10"
            }
          },
          "required": [
            "vibration_status",
            "vibration_mode",
            "vibration_intensity"
          ]
        }
      },
      {
        "name": "Navigation.MapNavigation.vehicleNavigationRoute",
        "description": "Specify a vehicle as a way to get around and search for a route",
        "parameters": {
          "type": "object",
          "properties": {
            "departure": {
              "type": "string",
              "description": "The name or address of the departure location, the default current location"
            },
            "destination": {
              "type": "string",
              "description": "Name or address of the destination"
            },
            "vehicle": {
              "type": "string",
              "description": "Specify how you want to travel"
            }
          },
          "required": [
            "departure",
            "destination",
            "vehicle"
          ]
        }
      },
      {
        "name": "Travel.ScenicAreaServices.getScenicSpotVideo",
        "description": "Get relevant videos for selected scenic spots",
        "parameters": {
          "type": "object",
          "properties": {
            "name": {
              "type": "string",
              "description": "Name of the tourist area"
            }
          },
          "required": [
            "name"
          ]
        }
      },
      {
        "name": "Navigation.FlightTickets.searchCheapFlights",
        "description": "Search cheap flights by specified criteria",
        "parameters": {
          "type": "object",
          "properties": {
            "type": {
              "type": "string",
              "description": "One way, round trip"
            },
            "departure": {
              "type": "string",
              "description": "Origination"
            },
            "destination": {
              "type": "string",
              "description": "Reach ground"
            },
            "travel_date": {
              "type": "string",
              "description": "Specify date, next month, next three months, etc."
            }
          },
          "required": [
            "type",
            "departure",
            "destination",
            "travel_date"
          ]
        }
      },
      {
        "name": "Photography.VideoRecording.videoMotionTracking",
        "description": "Turn on or off automatic tracking of moving objects in shooting",
        "parameters": {
          "type": "object",
          "properties": {
            "open": {
              "type": "boolean",
              "description": "Whether to turn on motion tracking"
            },
            "level": {
              "type": "integer",
              "description": "Tracking speed, 1 to 5"
            }
          },
          "required": [
            "open",
            "level"
          ]
        }
      }
    ],
    "single_tool": [
      {
        "name": "SystemTools.SystemSettings.setSystemVibration",
        "description": "Turn on or off the vibration of the phone, set the mode and intensity of the vibration",
        "parameters": {
          "type": "object",
          "properties": {
            "vibration_status": {
              "type": "boolean",
              "description": "Turn vibration on or off, true for on, false for off"
            },
            "vibration_mode": {
              "type": "string",
              "description": "Vibration modes such as continuous, intermittent"
            },
            "vibration_intensity": {
              "type": "integer",
              "description": "Vibration intensity, 1 to 10"
            }
          },
          "required": [
            "vibration_status",
            "vibration_mode",
            "vibration_intensity"
          ]
        }
      }
    ],
    "id": 444
  },
  {
    "messages": [
      {
        "role": "user",
        "content": "Update my personal information"
      },
      {
        "role": "function call",
        "content": {
          "name": "SystemTools.SystemSettings.modifyuserAccounts",
          "arguments": {}
        }
      },
      {
        "role": "assistant",
        "content": "Please provide your mobile number."
      },
      {
        "role": "user",
        "content": "My phone number is 19987654321, how can I help?"
      },
      {
        "role": "function call",
        "content": {
          "name": "SystemTools.SystemSettings.modifyuserAccounts",
          "arguments": {
            "phone_number": "19987654321"
          }
        }
      },
      {
        "role": "assistant",
        "content": "Please provide your nickname"
      },
      {
        "role": "user",
        "content": "It was wrong before. Phone No. should be 15678912345"
      },
      {
        "role": "function call",
        "content": {
          "name": "SystemTools.SystemSettings.modifyuserAccounts",
          "arguments": {
            "phone_number": "15678912345"
          }
        }
      },
      {
        "role": "assistant",
        "content": "Please provide your nickname"
      },
      {
        "role": "user",
        "content": "Poet under the stars"
      },
      {
        "role": "function call",
        "content": {
          "name": "SystemTools.SystemSettings.modifyuserAccounts",
          "arguments": {
            "phone_number": "15678912345",
            "nickname": "Poet under the stars"
          }
        }
      }
    ],
    "multiple_tools": [
      {
        "name": "Health.HealthManagement.updateProfile",
        "description": "Update user profile based on height, weight, age, etc.",
        "parameters": {
          "type": "object",
          "properties": {
            "height": {
              "type": "float",
              "description": "Height (in cm)"
            },
            "weight": {
              "type": "float",
              "description": "Weight (kg)"
            },
            "age": {
              "type": "float",
              "description": "Age"
            }
          },
          "required": [
            "height",
            "weight",
            "age"
          ]
        }
      },
      {
        "name": "Finance.Payment.updatePayUserInfo",
        "description": "Update account user information",
        "parameters": {
          "type": "object",
          "properties": {
            "user_name": {
              "type": "string",
              "description": "username"
            },
            "phone": {
              "type": "string",
              "description": "User's phone number"
            },
            "address": {
              "type": "string",
              "description": "User Address"
            }
          },
          "required": [
            "user_name",
            "phone",
            "address"
          ]
        }
      },
      {
        "name": "SocialCommunication.Calling.modifyContact",
        "description": "Modify the information for the specified contact",
        "parameters": {
          "type": "object",
          "properties": {
            "contact_name": {
              "type": "string",
              "description": "Contact name to modify"
            },
            "new_contact_name": {
              "type": "string",
              "description": "New contact name (optional)"
            },
            "new_phone_number": {
              "type": "string",
              "description": "New contact phone number (optional)"
            },
            "phone_number": {
              "type": "string",
              "description": "Contact phone number to modify"
            }
          },
          "required": [
            "contact_name",
            "new_contact_name",
            "new_phone_number",
            "phone_number"
          ]
        }
      },
      {
        "name": "SystemTools.SystemSettings.modifyuserAccounts",
        "description": "Modify the current user's information",
        "parameters": {
          "type": "object",
          "properties": {
            "phone_number": {
              "type": "string",
              "description": "Phone No."
            },
            "nickname": {
              "type": "string",
              "description": "Nickname"
            }
          },
          "required": [
            "phone_number",
            "nickname"
          ]
        }
      },
      {
        "name": "SocialCommunication.SocialMedia.updateMediumInfo",
        "description": "Edit profile information",
        "parameters": {
          "type": "object",
          "properties": {
            "medium_name": {
              "type": "string",
              "description": "Media name"
            },
            "new_nickname": {
              "type": "string",
              "description": "Updated nickname"
            }
          },
          "required": [
            "medium_name",
            "new_nickname"
          ]
        }
      }
    ],
    "single_tool": [
      {
        "name": "SystemTools.SystemSettings.modifyuserAccounts",
        "description": "Modify the current user's information",
        "parameters": {
          "type": "object",
          "properties": {
            "phone_number": {
              "type": "string",
              "description": "Phone No."
            },
            "nickname": {
              "type": "string",
              "description": "Nickname"
            }
          },
          "required": [
            "phone_number",
            "nickname"
          ]
        }
      }
    ],
    "id": 449
  },
  {
    "messages": [
      {
        "role": "user",
        "content": "Product Search"
      },
      {
        "role": "function call",
        "content": {
          "name": "OnlineShopping.Mall.searchCommodity",
          "arguments": {}
        }
      },
      {
        "role": "assistant",
        "content": "Please provide a product name"
      },
      {
        "role": "user",
        "content": "Smartwatches are what I want to know about."
      },
      {
        "role": "function call",
        "content": {
          "name": "OnlineShopping.Mall.searchCommodity",
          "arguments": {
            "goods": "A smart watch"
          }
        }
      },
      {
        "role": "assistant",
        "content": "Please provide a price range"
      },
      {
        "role": "user",
        "content": "It was wrong before. Product Name should be iPhone 14 Pro Max"
      },
      {
        "role": "function call",
        "content": {
          "name": "OnlineShopping.Mall.searchCommodity",
          "arguments": {
            "goods": "iPhone 14 Pro Max"
          }
        }
      },
      {
        "role": "assistant",
        "content": "Please provide a price range"
      },
      {
        "role": "user",
        "content": "I intend to find the right product between 500 and 1500."
      },
      {
        "role": "function call",
        "content": {
          "name": "OnlineShopping.Mall.searchCommodity",
          "arguments": {
            "goods": "iPhone 14 Pro Max",
            "price_range": "500-1500"
          }
        }
      },
      {
        "role": "assistant",
        "content": "Please provide the range or specific value of merchandise sales"
      },
      {
        "role": "user",
        "content": "More than 1000 units sold"
      },
      {
        "role": "function call",
        "content": {
          "name": "OnlineShopping.Mall.searchCommodity",
          "arguments": {
            "goods": "iPhone 14 Pro Max",
            "price_range": "500-1500",
            "sales_volume": "Greater than 1000"
          }
        }
      }
    ],
    "multiple_tools": [
      {
        "name": "OnlineShopping.Mall.searchCommodity",
        "description": "Query products by specified commodity category name",
        "parameters": {
          "type": "object",
          "properties": {
            "goods": {
              "type": "string",
              "description": "Product Name"
            },
            "sales_volume": {
              "type": "string",
              "description": "Merchandise sales"
            },
            "price_range": {
              "type": "string",
              "description": "Price Range"
            }
          },
          "required": [
            "goods",
            "sales_volume",
            "price_range"
          ]
        }
      },
      {
        "name": "VideoPlayback.OnlineVideos.searchOnlineVideo",
        "description": "Search online videos, which can be searched based on keywords (director/publisher/video keywords); can be searched based on categories; can be searched based on AI smart search",
        "parameters": {
          "type": "object",
          "properties": {
            "keyword": {
              "type": "array",
              "description": "Director/Publisher/Video Keyword Search"
            },
            "video_type": {
              "type": "string",
              "description": "Video Type Categories, Recommended, Popular, Chase, Film and Television New Journey"
            },
            "ai_search": {
              "type": "string",
              "description": "Based on search history, viewing history can only be turned off by default"
            }
          },
          "required": [
            "keyword",
            "video_type",
            "ai_search"
          ]
        }
      },
      {
        "name": "OfficeSoftware.Documents.searchDocuments",
        "description": "Search documents by keyword",
        "parameters": {
          "type": "object",
          "properties": {
            "keyword": {
              "type": "string",
              "description": "Search keywords, required"
            }
          },
          "required": [
            "keyword"
          ]
        }
      },
      {
        "name": "UtilityTools.Search.searchWeb",
        "description": "Web search (text, voice, photo search default text)",
        "parameters": {
          "type": "object",
          "properties": {
            "keyword": {
              "type": "string",
              "description": "Search Content"
            },
            "type": {
              "type": "string",
              "description": "Text; Voice; Picture; Default Text"
            }
          },
          "required": [
            "keyword",
            "type"
          ]
        }
      },
      {
        "name": "MusicRadio.RadioStations.radioSearchPlaylist",
        "description": "Search Playlists",
        "parameters": {
          "type": "object",
          "properties": {
            "keyword": {
              "type": "string",
              "description": "category"
            }
          },
          "required": [
            "keyword"
          ]
        }
      }
    ],
    "single_tool": [
      {
        "name": "OnlineShopping.Mall.searchCommodity",
        "description": "Query products by specified commodity category name",
        "parameters": {
          "type": "object",
          "properties": {
            "goods": {
              "type": "string",
              "description": "Product Name"
            },
            "sales_volume": {
              "type": "string",
              "description": "Merchandise sales"
            },
            "price_range": {
              "type": "string",
              "description": "Price Range"
            }
          },
          "required": [
            "goods",
            "sales_volume",
            "price_range"
          ]
        }
      }
    ],
    "id": 474
  },
  {
    "messages": [
      {
        "role": "user",
        "content": "View item order details"
      },
      {
        "role": "function call",
        "content": {
          "name": "OnlineShopping.Mall.searchCommodityOrderDetails",
          "arguments": {}
        }
      },
      {
        "role": "assistant",
        "content": "Please provide whether the review status of the reservation is reviewed or pending"
      },
      {
        "role": "user",
        "content": "The review status for this reservation is Reviewed."
      },
      {
        "role": "function call",
        "content": {
          "name": "OnlineShopping.Mall.searchCommodityOrderDetails",
          "arguments": {
            "evaluate_stage": "Evaluated"
          }
        }
      },
      {
        "role": "assistant",
        "content": "Please provide a product name"
      },
      {
        "role": "user",
        "content": "I recently picked up a laptop and would like to know more."
      },
      {
        "role": "function call",
        "content": {
          "name": "OnlineShopping.Mall.searchCommodityOrderDetails",
          "arguments": {
            "evaluate_stage": "Evaluated",
            "goods": "Laptop"
          }
        }
      },
      {
        "role": "assistant",
        "content": "What is the status of the order e.g. Pending Payment Pending Receipt Completed Cancelled Refund After Sale"
      },
      {
        "role": "user",
        "content": "It was wrong before. Product Name should be Skin care products"
      },
      {
        "role": "function call",
        "content": {
          "name": "OnlineShopping.Mall.searchCommodityOrderDetails",
          "arguments": {
            "evaluate_stage": "Evaluated",
            "goods": "Skin care products"
          }
        }
      },
      {
        "role": "assistant",
        "content": "What is the status of the order e.g. Pending Payment Pending Receipt Completed Cancelled Refund After Sale"
      },
      {
        "role": "user",
        "content": "Completed"
      },
      {
        "role": "function call",
        "content": {
          "name": "OnlineShopping.Mall.searchCommodityOrderDetails",
          "arguments": {
            "evaluate_stage": "Evaluated",
            "goods": "Skin care products",
            "order_stage": "Completed"
          }
        }
      }
    ],
    "multiple_tools": [
      {
        "name": "OnlineShopping.Mall.searchCommodityOrderDetails",
        "description": "View details of an item order based on criteria",
        "parameters": {
          "type": "object",
          "properties": {
            "goods": {
              "type": "string",
              "description": "Product Name"
            },
            "order_stage": {
              "type": "string",
              "description": "Order status, e.g. Pending Payment, Pending Receipt, Completed, Cancelled, Refund/After Sales"
            },
            "evaluate_stage": {
              "type": "string",
              "description": "Review status, e.g. reviewed, pending review"
            }
          },
          "required": [
            "goods",
            "order_stage",
            "evaluate_stage"
          ]
        }
      },
      {
        "name": "Education.OnlineClasses.viewCourseOrdersDetails",
        "description": "View a reservation's details",
        "parameters": {
          "type": "object",
          "properties": {
            "course_name": {
              "type": "string",
              "description": "Course Title"
            }
          },
          "required": [
            "course_name"
          ]
        }
      },
      {
        "name": "OnlineShopping.SecondhandTrading.searchSecondhandSaleOrdersDetails",
        "description": "View specific item order details based on criteria",
        "parameters": {
          "type": "object",
          "properties": {
            "goods_name": {
              "type": "string",
              "description": "Product name keywords"
            }
          },
          "required": [
            "goods_name"
          ]
        }
      },
      {
        "name": "Navigation.TaxiCarRental.viewCarRentalOrdersDetails",
        "description": "Review the details of a rental order",
        "parameters": {
          "type": "object",
          "properties": {
            "time": {
              "type": "string",
              "description": "Release Date"
            }
          },
          "required": [
            "time"
          ]
        }
      },
      {
        "name": "Navigation.Bicycles.searchBikesOrderDetails",
        "description": "View bike order details",
        "parameters": {
          "type": "object",
          "properties": {},
          "required": []
        }
      }
    ],
    "single_tool": [
      {
        "name": "OnlineShopping.Mall.searchCommodityOrderDetails",
        "description": "View details of an item order based on criteria",
        "parameters": {
          "type": "object",
          "properties": {
            "goods": {
              "type": "string",
              "description": "Product Name"
            },
            "order_stage": {
              "type": "string",
              "description": "Order status, e.g. Pending Payment, Pending Receipt, Completed, Cancelled, Refund/After Sales"
            },
            "evaluate_stage": {
              "type": "string",
              "description": "Review status, e.g. reviewed, pending review"
            }
          },
          "required": [
            "goods",
            "order_stage",
            "evaluate_stage"
          ]
        }
      }
    ],
    "id": 478
  },
  {
    "messages": [
      {
        "role": "user",
        "content": "See what's in my favorites"
      },
      {
        "role": "function call",
        "content": {
          "name": "OnlineShopping.Mall.viewMyCollection",
          "arguments": {}
        }
      },
      {
        "role": "assistant",
        "content": "Please provide a product name"
      },
      {
        "role": "user",
        "content": "What I want is a comfortable pair of sweatpants."
      },
      {
        "role": "function call",
        "content": {
          "name": "OnlineShopping.Mall.viewMyCollection",
          "arguments": {
            "goods": "Sweatpants"
          }
        }
      },
      {
        "role": "assistant",
        "content": "What price range would you like to see"
      },
      {
        "role": "user",
        "content": "It was wrong before. Product Name should be Delong Brand Coffee Machine"
      },
      {
        "role": "function call",
        "content": {
          "name": "OnlineShopping.Mall.viewMyCollection",
          "arguments": {
            "goods": "Delong Brand Coffee Machine"
          }
        }
      },
      {
        "role": "assistant",
        "content": "What price range would you like to see"
      },
      {
        "role": "user",
        "content": "I would like to see a price range of 50-300."
      },
      {
        "role": "function call",
        "content": {
          "name": "OnlineShopping.Mall.viewMyCollection",
          "arguments": {
            "goods": "Delong Brand Coffee Machine",
            "price_range": "50-300"
          }
        }
      }
    ],
    "multiple_tools": [
      {
        "name": "NewsMagazines.NewspapersMagazines.viewCollectMagazine",
        "description": "View list of favorites",
        "parameters": {
          "type": "object",
          "properties": {},
          "required": []
        }
      },
      {
        "name": "OnlineShopping.SecondhandTrading.viewSecondhandSaleMyCollect",
        "description": "See all my favorites",
        "parameters": {
          "type": "object",
          "properties": {},
          "required": []
        }
      },
      {
        "name": "OfficeSoftware.CloudStorage.viewNetdiskCollection",
        "description": "View Drive Favorites",
        "parameters": {
          "type": "object",
          "properties": {},
          "required": []
        }
      },
      {
        "name": "OnlineShopping.Mall.viewMyCollection",
        "description": "See a list of all items in my favorites",
        "parameters": {
          "type": "object",
          "properties": {
            "goods": {
              "type": "string",
              "description": "Product Name"
            },
            "sales_volume": {
              "type": "string",
              "description": "Merchandise sales"
            },
            "price_range": {
              "type": "string",
              "description": "Price Range"
            }
          },
          "required": [
            "goods",
            "sales_volume",
            "price_range"
          ]
        }
      },
      {
        "name": "MusicRadio.OnlineMusic.getFavoritePlaylist",
        "description": "Get a list of my default favorites",
        "parameters": {
          "type": "object",
          "properties": {},
          "required": []
        }
      }
    ],
    "single_tool": [
      {
        "name": "OnlineShopping.Mall.viewMyCollection",
        "description": "See a list of all items in my favorites",
        "parameters": {
          "type": "object",
          "properties": {
            "goods": {
              "type": "string",
              "description": "Product Name"
            },
            "sales_volume": {
              "type": "string",
              "description": "Merchandise sales"
            },
            "price_range": {
              "type": "string",
              "description": "Price Range"
            }
          },
          "required": [
            "goods",
            "sales_volume",
            "price_range"
          ]
        }
      }
    ],
    "id": 484
  },
  {
    "messages": [
      {
        "role": "user",
        "content": "Add a pickup address"
      },
      {
        "role": "function call",
        "content": {
          "name": "OnlineShopping.Mall.addDeliveryAddress",
          "arguments": {}
        }
      },
      {
        "role": "assistant",
        "content": "Please provide a new shipping address including the zip code of the city where the address is located and the name and contact number of the recipient"
      },
      {
        "role": "user",
        "content": "Name of Consignee: Zhang San, Tel: 13800138000, Address: No. 100, Jianguo Road, Chaoyang District, Beijing, Zip Code: 100020."
      },
      {
        "role": "function call",
        "content": {
          "name": "OnlineShopping.Mall.addDeliveryAddress",
          "arguments": {
            "address": "100 Jianguo Road, Chaoyang District, Beijing"
          }
        }
      },
      {
        "role": "assistant",
        "content": "Please provide phone number."
      },
      {
        "role": "user",
        "content": "It was wrong before. Shipping Address should be No. 2000 Century Avenue, Pudong New Area, Shanghai"
      },
      {
        "role": "function call",
        "content": {
          "name": "OnlineShopping.Mall.addDeliveryAddress",
          "arguments": {
            "address": "No. 2000 Century Avenue, Pudong New Area, Shanghai"
          }
        }
      },
      {
        "role": "assistant",
        "content": "Please provide phone number."
      },
      {
        "role": "user",
        "content": "My phone number is 13912345678, how can I help?"
      },
      {
        "role": "function call",
        "content": {
          "name": "OnlineShopping.Mall.addDeliveryAddress",
          "arguments": {
            "address": "No. 2000 Century Avenue, Pudong New Area, Shanghai",
            "phoneNumber": "13912345678"
          }
        }
      }
    ],
    "multiple_tools": [
      {
        "name": "UtilityTools.Search.addWebTab",
        "description": "Add Pages",
        "parameters": {
          "type": "object",
          "properties": {},
          "required": []
        }
      },
      {
        "name": "OnlineShopping.ExpressDelivery.addAddress",
        "description": "Add the specified address to the address book",
        "parameters": {
          "type": "object",
          "properties": {
            "name": {
              "type": "string",
              "description": "Name"
            },
            "phone": {
              "type": "string",
              "description": "Phone No."
            },
            "address": {
              "type": "string",
              "description": "Address"
            }
          },
          "required": [
            "name",
            "phone",
            "address"
          ]
        }
      },
      {
        "name": "OnlineShopping.Mall.addDeliveryAddress",
        "description": "Add a new shipping address based on the information",
        "parameters": {
          "type": "object",
          "properties": {
            "receiver": {
              "type": "string",
              "description": "Receiver"
            },
            "phoneNumber": {
              "type": "string",
              "description": "Phone No."
            },
            "address": {
              "type": "string",
              "description": "Shipping Address"
            }
          },
          "required": [
            "receiver",
            "phoneNumber",
            "address"
          ]
        }
      },
      {
        "name": "Navigation.MapNavigation.addCommonAddress",
        "description": "Add usual address",
        "parameters": {
          "type": "object",
          "properties": {
            "address": {
              "type": "string",
              "description": "Primary address string to add"
            }
          },
          "required": [
            "address"
          ]
        }
      },
      {
        "name": "UtilityTools.Search.addWebBookmark",
        "description": "Add a page to a default collection or to a specified collection",
        "parameters": {
          "type": "object",
          "properties": {
            "name": {
              "type": "string",
              "description": "Name"
            },
            "bookmark": {
              "type": "string",
              "description": "Bookmark title, provided by target title by default"
            }
          },
          "required": [
            "name",
            "bookmark"
          ]
        }
      }
    ],
    "single_tool": [
      {
        "name": "OnlineShopping.Mall.addDeliveryAddress",
        "description": "Add a new shipping address based on the information",
        "parameters": {
          "type": "object",
          "properties": {
            "receiver": {
              "type": "string",
              "description": "Receiver"
            },
            "phoneNumber": {
              "type": "string",
              "description": "Phone No."
            },
            "address": {
              "type": "string",
              "description": "Shipping Address"
            }
          },
          "required": [
            "receiver",
            "phoneNumber",
            "address"
          ]
        }
      }
    ],
    "id": 486
  },
  {
    "messages": [
      {
        "role": "user",
        "content": "Check out my recent express shipping information"
      },
      {
        "role": "function call",
        "content": {
          "name": "OnlineShopping.ExpressDelivery.searchExpress",
          "arguments": {}
        }
      },
      {
        "role": "assistant",
        "content": "Please provide the courier slip number"
      },
      {
        "role": "user",
        "content": "My courier number is 987654321098765, please check it."
      },
      {
        "role": "function call",
        "content": {
          "name": "OnlineShopping.ExpressDelivery.searchExpress",
          "arguments": {
            "express_id": "987654321098765"
          }
        }
      },
      {
        "role": "assistant",
        "content": "Please provide the recipient address and delivery date"
      },
      {
        "role": "user",
        "content": "The address of the recipient is 1000 Lujiazui Ring Road, Pudong New Area, Shanghai, and the delivery date is May 5."
      },
      {
        "role": "function call",
        "content": {
          "name": "OnlineShopping.ExpressDelivery.searchExpress",
          "arguments": {
            "express_id": "987654321098765",
            "date": "May 5"
          }
        }
      },
      {
        "role": "assistant",
        "content": "What is the sender's name"
      },
      {
        "role": "user",
        "content": "It was wrong before. Tracking Number should be 987654321"
      },
      {
        "role": "function call",
        "content": {
          "name": "OnlineShopping.ExpressDelivery.searchExpress",
          "arguments": {
            "express_id": "987654321",
            "date": "May 5"
          }
        }
      },
      {
        "role": "assistant",
        "content": "What is the sender's name"
      },
      {
        "role": "user",
        "content": "The sender's name is Wang Wu."
      },
      {
        "role": "function call",
        "content": {
          "name": "OnlineShopping.ExpressDelivery.searchExpress",
          "arguments": {
            "express_id": "987654321",
            "date": "May 5",
            "send_name": "Wangwu"
          }
        }
      },
      {
        "role": "assistant",
        "content": "Please provide the recipient's name and address"
      },
      {
        "role": "user",
        "content": "The recipient is Zhao Liu and the address is No. 1000 Lujiazui Ring Road, Pudong New Area, Shanghai."
      },
      {
        "role": "function call",
        "content": {
          "name": "OnlineShopping.ExpressDelivery.searchExpress",
          "arguments": {
            "express_id": "987654321",
            "date": "May 5",
            "send_name": "Wangwu",
            "recipient_name": "Zhao Liu"
          }
        }
      }
    ],
    "multiple_tools": [
      {
        "name": "OnlineShopping.Mall.viewOrdersLogistics",
        "description": "View shipping information for an order",
        "parameters": {
          "type": "object",
          "properties": {
            "goods": {
              "type": "string",
              "description": "Product Name"
            }
          },
          "required": [
            "goods"
          ]
        }
      },
      {
        "name": "MusicRadio.Karaoke.getFriendPosts",
        "description": "Get assigned social updates or get all social updates based on your friend's name",
        "parameters": {
          "type": "object",
          "properties": {
            "name": {
              "type": "string",
              "description": "Friend name, defaults to all friends"
            }
          },
          "required": [
            "name"
          ]
        }
      },
      {
        "name": "OnlineShopping.SecondhandTrading.viewSecondhandSaleLogistics",
        "description": "View shipping information for an order",
        "parameters": {
          "type": "object",
          "properties": {
            "goods_name": {
              "type": "string",
              "description": "Product Name"
            }
          },
          "required": [
            "goods_name"
          ]
        }
      },
      {
        "name": "OnlineShopping.ExpressDelivery.searchExpress",
        "description": "Search courier logistics based on information such as designated courier number, recipient, address, etc.",
        "parameters": {
          "type": "object",
          "properties": {
            "express_id": {
              "type": "string",
              "description": "Tracking Number"
            },
            "date": {
              "type": "string",
              "description": "Shipping date"
            },
            "send_name": {
              "type": "string",
              "description": "Name Of Sender"
            },
            "recipient_name": {
              "type": "string",
              "description": "Recipient's name"
            }
          },
          "required": [
            "express_id",
            "date",
            "send_name",
            "recipient_name"
          ]
        }
      },
      {
        "name": "SystemTools.SystemOptimization.checkSystemUpdates",
        "description": "Check for available system updates",
        "parameters": {
          "type": "object",
          "properties": {},
          "required": []
        }
      }
    ],
    "single_tool": [
      {
        "name": "OnlineShopping.ExpressDelivery.searchExpress",
        "description": "Search courier logistics based on information such as designated courier number, recipient, address, etc.",
        "parameters": {
          "type": "object",
          "properties": {
            "express_id": {
              "type": "string",
              "description": "Tracking Number"
            },
            "date": {
              "type": "string",
              "description": "Shipping date"
            },
            "send_name": {
              "type": "string",
              "description": "Name Of Sender"
            },
            "recipient_name": {
              "type": "string",
              "description": "Recipient's name"
            }
          },
          "required": [
            "express_id",
            "date",
            "send_name",
            "recipient_name"
          ]
        }
      }
    ],
    "id": 491
  },
  {
    "messages": [
      {
        "role": "user",
        "content": "Express Search Query"
      },
      {
        "role": "function call",
        "content": {
          "name": "OnlineShopping.ExpressDelivery.searchExpress",
          "arguments": {}
        }
      },
      {
        "role": "assistant",
        "content": "Please provide the courier slip number"
      },
      {
        "role": "user",
        "content": "My courier number is 123456789012345, please check it for me."
      },
      {
        "role": "function call",
        "content": {
          "name": "OnlineShopping.ExpressDelivery.searchExpress",
          "arguments": {
            "express_id": "123456789012345"
          }
        }
      },
      {
        "role": "assistant",
        "content": "Please provide the recipient address and delivery date"
      },
      {
        "role": "user",
        "content": "The address of the recipient is No. 123, XX Road, Chaoyang District, Beijing, and the delivery date is May 1."
      },
      {
        "role": "function call",
        "content": {
          "name": "OnlineShopping.ExpressDelivery.searchExpress",
          "arguments": {
            "express_id": "123456789012345",
            "date": "May 1st"
          }
        }
      },
      {
        "role": "assistant",
        "content": "What is the sender's name"
      },
      {
        "role": "user",
        "content": "The sender's name is Zhang San."
      },
      {
        "role": "function call",
        "content": {
          "name": "OnlineShopping.ExpressDelivery.searchExpress",
          "arguments": {
            "express_id": "123456789012345",
            "date": "May 1st",
            "send_name": "Zhang San"
          }
        }
      },
      {
        "role": "assistant",
        "content": "What is the recipient's name?"
      },
      {
        "role": "user",
        "content": "It was wrong before. Tracking Number should be 987654321"
      },
      {
        "role": "function call",
        "content": {
          "name": "OnlineShopping.ExpressDelivery.searchExpress",
          "arguments": {
            "express_id": "987654321",
            "date": "May 1st",
            "send_name": "Zhang San"
          }
        }
      },
      {
        "role": "assistant",
        "content": "What is the recipient's name?"
      },
      {
        "role": "user",
        "content": "The recipient's name is Li Si, but please make sure the information is accurate so as not to make mistakes."
      },
      {
        "role": "function call",
        "content": {
          "name": "OnlineShopping.ExpressDelivery.searchExpress",
          "arguments": {
            "express_id": "987654321",
            "date": "May 1st",
            "send_name": "Zhang San",
            "recipient_name": "Li Si"
          }
        }
      }
    ],
    "multiple_tools": [
      {
        "name": "Education.ChildrenEducation.searchChildMathProblem",
        "description": "Search for children's math questions",
        "parameters": {
          "type": "object",
          "properties": {
            "grade": {
              "type": "integer",
              "description": "Grades, e.g. Grade 1, Grade 2"
            }
          },
          "required": [
            "grade"
          ]
        }
      },
      {
        "name": "SocialCommunication.Community.searchCommunityTopics",
        "description": "Search for related topics in specific communities by keyword",
        "parameters": {
          "type": "object",
          "properties": {
            "community_name": {
              "type": "string",
              "description": "Community name of the topic to search"
            },
            "key_words": {
              "type": "string",
              "description": "Keywords used to search topics"
            }
          },
          "required": [
            "community_name",
            "key_words"
          ]
        }
      },
      {
        "name": "OfficeSoftware.Email.searchMail",
        "description": "Search messages by email keyword",
        "parameters": {
          "type": "object",
          "properties": {
            "keyword": {
              "type": "string",
              "description": "KEYWORDS"
            },
            "max_results": {
              "type": "integer",
              "description": "Maximum number of returned results, default is 10"
            }
          },
          "required": [
            "keyword",
            "max_results"
          ]
        }
      },
      {
        "name": "SocialCommunication.InstantMessaging.searchMessage",
        "description": "Search historical messages for a specific contact or group based on keywords",
        "parameters": {
          "type": "object",
          "properties": {
            "receiver_name": {
              "type": "string",
              "description": "Name of the contact or group to search for the message"
            },
            "keyword": {
              "type": "string",
              "description": "Keywords for search"
            }
          },
          "required": [
            "receiver_name",
            "keyword"
          ]
        }
      },
      {
        "name": "OnlineShopping.ExpressDelivery.searchExpress",
        "description": "Search courier logistics based on information such as designated courier number, recipient, address, etc.",
        "parameters": {
          "type": "object",
          "properties": {
            "express_id": {
              "type": "string",
              "description": "Tracking Number"
            },
            "date": {
              "type": "string",
              "description": "Shipping date"
            },
            "send_name": {
              "type": "string",
              "description": "Name Of Sender"
            },
            "recipient_name": {
              "type": "string",
              "description": "Recipient's name"
            }
          },
          "required": [
            "express_id",
            "date",
            "send_name",
            "recipient_name"
          ]
        }
      }
    ],
    "single_tool": [
      {
        "name": "OnlineShopping.ExpressDelivery.searchExpress",
        "description": "Search courier logistics based on information such as designated courier number, recipient, address, etc.",
        "parameters": {
          "type": "object",
          "properties": {
            "express_id": {
              "type": "string",
              "description": "Tracking Number"
            },
            "date": {
              "type": "string",
              "description": "Shipping date"
            },
            "send_name": {
              "type": "string",
              "description": "Name Of Sender"
            },
            "recipient_name": {
              "type": "string",
              "description": "Recipient's name"
            }
          },
          "required": [
            "express_id",
            "date",
            "send_name",
            "recipient_name"
          ]
        }
      }
    ],
    "id": 492
  },
  {
    "messages": [
      {
        "role": "user",
        "content": "I need to send a shipment to my friend"
      },
      {
        "role": "function call",
        "content": {
          "name": "OnlineShopping.ExpressDelivery.placeExpressOrder",
          "arguments": {}
        }
      },
      {
        "role": "assistant",
        "content": "Please provide a shipping address"
      },
      {
        "role": "user",
        "content": "The delivery address is 200 Century Avenue, Pudong New Area, Shanghai, please confirm."
      },
      {
        "role": "function call",
        "content": {
          "name": "OnlineShopping.ExpressDelivery.placeExpressOrder",
          "arguments": {
            "recipient_address": "No. 200 Century Avenue, Pudong New Area, Shanghai"
          }
        }
      },
      {
        "role": "assistant",
        "content": "What is the recipient's name?"
      },
      {
        "role": "user",
        "content": "The recipient's name is Wang Gong."
      },
      {
        "role": "function call",
        "content": {
          "name": "OnlineShopping.ExpressDelivery.placeExpressOrder",
          "arguments": {
            "recipient_address": "No. 200 Century Avenue, Pudong New Area, Shanghai",
            "recipient_name": "Wang Gong"
          }
        }
      },
      {
        "role": "assistant",
        "content": "What is the recipient's phone number"
      },
      {
        "role": "user",
        "content": "It was wrong before. Recipient's name should be Zhang San"
      },
      {
        "role": "function call",
        "content": {
          "name": "OnlineShopping.ExpressDelivery.placeExpressOrder",
          "arguments": {
            "recipient_address": "No. 200 Century Avenue, Pudong New Area, Shanghai",
            "recipient_name": "Zhang San"
          }
        }
      },
      {
        "role": "assistant",
        "content": "What is the recipient's phone number"
      },
      {
        "role": "user",
        "content": "My phone number is 15898765432, please remember."
      },
      {
        "role": "function call",
        "content": {
          "name": "OnlineShopping.ExpressDelivery.placeExpressOrder",
          "arguments": {
            "recipient_address": "No. 200 Century Avenue, Pudong New Area, Shanghai",
            "recipient_name": "Zhang San",
            "recipient_phone": "15898765432"
          }
        }
      }
    ],
    "multiple_tools": [
      {
        "name": "Education.ChildrenEducation.getChildLearningProgress",
        "description": "Get your child's progress",
        "parameters": {
          "type": "object",
          "properties": {},
          "required": []
        }
      },
      {
        "name": "SocialCommunication.SocialMedia.addMediumFriend",
        "description": "Send a friend request to a specific user in a specific medium",
        "parameters": {
          "type": "object",
          "properties": {
            "medium_name": {
              "type": "string",
              "description": "Media name"
            },
            "nick_name": {
              "type": "string",
              "description": "Friend's nickname"
            },
            "account_number": {
              "type": "string",
              "description": "Friend's account"
            }
          },
          "required": [
            "medium_name",
            "nick_name",
            "account_number"
          ]
        }
      },
      {
        "name": "MusicRadio.Karaoke.getAccompaniments",
        "description": "Get a list of song accompaniments for a given song title",
        "parameters": {
          "type": "object",
          "properties": {
            "song_name": {
              "type": "string",
              "description": "Song Name"
            },
            "singer_name": {
              "type": "string",
              "description": "Singer name"
            }
          },
          "required": [
            "song_name",
            "singer_name"
          ]
        }
      },
      {
        "name": "OnlineShopping.ExpressDelivery.placeExpressOrder",
        "description": "Initiating a Sender to a Specified Recipient",
        "parameters": {
          "type": "object",
          "properties": {
            "recipient_name": {
              "type": "string",
              "description": "Recipient's name"
            },
            "recipient_phone": {
              "type": "string",
              "description": "Recipient phone number"
            },
            "recipient_address": {
              "type": "string",
              "description": "<g id=\"Bold\">Receiver's</g> <g id=\"Bold\">Address:</g>"
            }
          },
          "required": [
            "recipient_name",
            "recipient_phone",
            "recipient_address"
          ]
        }
      },
      {
        "name": "MusicRadio.Karaoke.manageAccount",
        "description": "Manage your account by following the steps in Account Management",
        "parameters": {
          "type": "object",
          "properties": {
            "action": {
              "type": "string",
              "description": "Account management actions"
            }
          },
          "required": [
            "action"
          ]
        }
      }
    ],
    "single_tool": [
      {
        "name": "OnlineShopping.ExpressDelivery.placeExpressOrder",
        "description": "Initiating a Sender to a Specified Recipient",
        "parameters": {
          "type": "object",
          "properties": {
            "recipient_name": {
              "type": "string",
              "description": "Recipient's name"
            },
            "recipient_phone": {
              "type": "string",
              "description": "Recipient phone number"
            },
            "recipient_address": {
              "type": "string",
              "description": "<g id=\"Bold\">Receiver's</g> <g id=\"Bold\">Address:</g>"
            }
          },
          "required": [
            "recipient_name",
            "recipient_phone",
            "recipient_address"
          ]
        }
      }
    ],
    "id": 493
  },
  {
    "messages": [
      {
        "role": "user",
        "content": "Please help me schedule a courier to pick up the package"
      },
      {
        "role": "function call",
        "content": {
          "name": "OnlineShopping.ExpressDelivery.returnExpressPreOrder",
          "arguments": {}
        }
      },
      {
        "role": "assistant",
        "content": "What time is the mailing time"
      },
      {
        "role": "user",
        "content": "The mailing time is 3:30 pm on March 15th, that's right."
      },
      {
        "role": "function call",
        "content": {
          "name": "OnlineShopping.ExpressDelivery.returnExpressPreOrder",
          "arguments": {
            "date": "March 15th at 3:30 pm"
          }
        }
      },
      {
        "role": "assistant",
        "content": "Please provide a shipping address"
      },
      {
        "role": "user",
        "content": "It was wrong before. Shipping time should be DAY AFTER TOMORROW"
      },
      {
        "role": "function call",
        "content": {
          "name": "OnlineShopping.ExpressDelivery.returnExpressPreOrder",
          "arguments": {
            "date": "DAY AFTER TOMORROW"
          }
        }
      },
      {
        "role": "assistant",
        "content": "Please provide a shipping address"
      },
      {
        "role": "user",
        "content": "Zhangjiang Hi-Tech Park, Pudong New Area, Shanghai, the specific house number is 888."
      },
      {
        "role": "function call",
        "content": {
          "name": "OnlineShopping.ExpressDelivery.returnExpressPreOrder",
          "arguments": {
            "date": "DAY AFTER TOMORROW",
            "recipient_address": "Zhangjiang Hi-Tech Park, Pudong New Area, Shanghai"
          }
        }
      }
    ],
    "multiple_tools": [
      {
        "name": "MusicRadio.Karaoke.getAccompaniments",
        "description": "Get a list of song accompaniments for a given song title",
        "parameters": {
          "type": "object",
          "properties": {
            "song_name": {
              "type": "string",
              "description": "Song Name"
            },
            "singer_name": {
              "type": "string",
              "description": "Singer name"
            }
          },
          "required": [
            "song_name",
            "singer_name"
          ]
        }
      },
      {
        "name": "ConvenientLiving.JobRecruitment.getJobSalaryRange",
        "description": "Enter the job title to get its approximate salary range",
        "parameters": {
          "type": "object",
          "properties": {
            "job_title": {
              "type": "string",
              "description": "Position name"
            }
          },
          "required": [
            "job_title"
          ]
        }
      },
      {
        "name": "NewsMagazines.NewspapersMagazines.getMagazine",
        "description": "Get a magazine based on its name, number of issues, etc.",
        "parameters": {
          "type": "object",
          "properties": {
            "name": {
              "type": "string",
              "description": "Magazine Name"
            },
            "issue": {
              "type": "string",
              "description": "Number of periods"
            }
          },
          "required": [
            "name",
            "issue"
          ]
        }
      },
      {
        "name": "OnlineShopping.ExpressDelivery.returnExpressPreOrder",
        "description": "Specify a time to initiate the shipment to the courier",
        "parameters": {
          "type": "object",
          "properties": {
            "date": {
              "type": "string",
              "description": "Shipping time"
            },
            "recipient_address": {
              "type": "string",
              "description": "<g id=\"Bold\">Receiver's</g> <g id=\"Bold\">Address:</g>"
            }
          },
          "required": [
            "date",
            "recipient_address"
          ]
        }
      },
      {
        "name": "Finance.Insurance.getInsuranceClaimProgress",
        "description": "Check the progress of your insurance claim",
        "parameters": {
          "type": "object",
          "properties": {
            "insurance_name": {
              "type": "string",
              "description": "Insurance Product Name"
            },
            "insurance_type": {
              "type": "string",
              "description": "Types of insurance products, such as life insurance, health insurance, property insurance, car insurance, etc."
            }
          },
          "required": [
            "insurance_name",
            "insurance_type"
          ]
        }
      }
    ],
    "single_tool": [
      {
        "name": "OnlineShopping.ExpressDelivery.returnExpressPreOrder",
        "description": "Specify a time to initiate the shipment to the courier",
        "parameters": {
          "type": "object",
          "properties": {
            "date": {
              "type": "string",
              "description": "Shipping time"
            },
            "recipient_address": {
              "type": "string",
              "description": "<g id=\"Bold\">Receiver's</g> <g id=\"Bold\">Address:</g>"
            }
          },
          "required": [
            "date",
            "recipient_address"
          ]
        }
      }
    ],
    "id": 494
  },
  {
    "messages": [
      {
        "role": "user",
        "content": "Can you help me share the logistics details of this courier?"
      },
      {
        "role": "function call",
        "content": {
          "name": "OnlineShopping.ExpressDelivery.shareExpress",
          "arguments": {}
        }
      },
      {
        "role": "assistant",
        "content": "What time is the delivery date"
      },
      {
        "role": "user",
        "content": "Sent last Friday"
      },
      {
        "role": "function call",
        "content": {
          "name": "OnlineShopping.ExpressDelivery.shareExpress",
          "arguments": {
            "date": "Last Friday"
          }
        }
      },
      {
        "role": "assistant",
        "content": "Who should you share it with Please provide the name or contact information of the person you want to share it with"
      },
      {
        "role": "user",
        "content": "It was wrong before. Shipping date should be Mar 15"
      },
      {
        "role": "function call",
        "content": {
          "name": "OnlineShopping.ExpressDelivery.shareExpress",
          "arguments": {
            "date": "Mar 15"
          }
        }
      },
      {
        "role": "assistant",
        "content": "Who should you share it with Please provide the name or contact information of the person you want to share it with"
      },
      {
        "role": "user",
        "content": "Share it with Zhang Haoyu, whose email address is zhanghaoyu@oppo.com."
      },
      {
        "role": "function call",
        "content": {
          "name": "OnlineShopping.ExpressDelivery.shareExpress",
          "arguments": {
            "date": "Mar 15",
            "to": "Boss email zhanghaoyu@oppo.com"
          }
        }
      }
    ],
    "multiple_tools": [
      {
        "name": "NewsMagazines.News.shareNews",
        "description": "Share news",
        "parameters": {
          "type": "object",
          "properties": {
            "news_name": {
              "type": "string",
              "description": "News Name"
            },
            "to": {
              "type": "string",
              "description": "WeChat/qq/TikTok"
            }
          },
          "required": [
            "news_name",
            "to"
          ]
        }
      },
      {
        "name": "SocialCommunication.Community.shareCommunityPost",
        "description": "Share a specific post to a specific medium or to someone",
        "parameters": {
          "type": "object",
          "properties": {
            "community_name": {
              "type": "string",
              "description": "The name of the community where the post is located"
            },
            "title": {
              "type": "string",
              "description": "Prev Post Caption"
            },
            "medium": {
              "type": "string",
              "description": "Share media"
            },
            "user_name": {
              "type": "string",
              "description": "Shared by"
            }
          },
          "required": [
            "community_name",
            "title",
            "medium",
            "user_name"
          ]
        }
      },
      {
        "name": "OnlineShopping.ExpressDelivery.shareExpress",
        "description": "Share specific courier logistics information with the intended audience",
        "parameters": {
          "type": "object",
          "properties": {
            "to": {
              "type": "string",
              "description": "Shared with"
            },
            "date": {
              "type": "string",
              "description": "Shipping date"
            }
          },
          "required": [
            "to",
            "date"
          ]
        }
      },
      {
        "name": "UtilityTools.Search.shareWebPage",
        "description": "Share the current page to other platforms/media",
        "parameters": {
          "type": "object",
          "properties": {
            "media": {
              "type": "string",
              "description": "Media or platform to share"
            },
            "person": {
              "type": "string",
              "description": "Specify who to share with"
            }
          },
          "required": [
            "media",
            "person"
          ]
        }
      },
      {
        "name": "MusicRadio.RadioStations.radioShareRadio",
        "description": "Share the station to social platforms based on the station name",
        "parameters": {
          "type": "object",
          "properties": {
            "radio_name": {
              "type": "string",
              "description": "Radio Name"
            },
            "to": {
              "type": "string",
              "description": "Sharing platform"
            }
          },
          "required": [
            "radio_name",
            "to"
          ]
        }
      }
    ],
    "single_tool": [
      {
        "name": "OnlineShopping.ExpressDelivery.shareExpress",
        "description": "Share specific courier logistics information with the intended audience",
        "parameters": {
          "type": "object",
          "properties": {
            "to": {
              "type": "string",
              "description": "Shared with"
            },
            "date": {
              "type": "string",
              "description": "Shipping date"
            }
          },
          "required": [
            "to",
            "date"
          ]
        }
      }
    ],
    "id": 495
  },
  {
    "messages": [
      {
        "role": "user",
        "content": "I need to add a new address to my address book"
      },
      {
        "role": "function call",
        "content": {
          "name": "OnlineShopping.ExpressDelivery.addAddress",
          "arguments": {}
        }
      },
      {
        "role": "assistant",
        "content": "Please provide a name"
      },
      {
        "role": "user",
        "content": "My name is Zhou Wu Zheng Tianming."
      },
      {
        "role": "function call",
        "content": {
          "name": "OnlineShopping.ExpressDelivery.addAddress",
          "arguments": {
            "name": "Zhou Wuzheng"
          }
        }
      },
      {
        "role": "assistant",
        "content": "Please provide phone number."
      },
      {
        "role": "user",
        "content": "It was wrong before. Name should be Miss Sun"
      },
      {
        "role": "function call",
        "content": {
          "name": "OnlineShopping.ExpressDelivery.addAddress",
          "arguments": {
            "name": "Miss Sun"
          }
        }
      },
      {
        "role": "assistant",
        "content": "Please provide phone number."
      },
      {
        "role": "user",
        "content": "My phone number is 13299887766, how can I help?"
      },
      {
        "role": "function call",
        "content": {
          "name": "OnlineShopping.ExpressDelivery.addAddress",
          "arguments": {
            "name": "Miss Sun",
            "phone": "13299887766"
          }
        }
      }
    ],
    "multiple_tools": [
      {
        "name": "UtilityTools.Search.addWebBookmark",
        "description": "Add a page to a default collection or to a specified collection",
        "parameters": {
          "type": "object",
          "properties": {
            "name": {
              "type": "string",
              "description": "Name"
            },
            "bookmark": {
              "type": "string",
              "description": "Bookmark title, provided by target title by default"
            }
          },
          "required": [
            "name",
            "bookmark"
          ]
        }
      },
      {
        "name": "Navigation.MapNavigation.addCommonAddress",
        "description": "Add usual address",
        "parameters": {
          "type": "object",
          "properties": {
            "address": {
              "type": "string",
              "description": "Primary address string to add"
            }
          },
          "required": [
            "address"
          ]
        }
      },
      {
        "name": "OnlineShopping.ExpressDelivery.addAddress",
        "description": "Add the specified address to the address book",
        "parameters": {
          "type": "object",
          "properties": {
            "name": {
              "type": "string",
              "description": "Name"
            },
            "phone": {
              "type": "string",
              "description": "Phone No."
            },
            "address": {
              "type": "string",
              "description": "Address"
            }
          },
          "required": [
            "name",
            "phone",
            "address"
          ]
        }
      },
      {
        "name": "OnlineShopping.Mall.addDeliveryAddress",
        "description": "Add a new shipping address based on the information",
        "parameters": {
          "type": "object",
          "properties": {
            "receiver": {
              "type": "string",
              "description": "Receiver"
            },
            "phoneNumber": {
              "type": "string",
              "description": "Phone No."
            },
            "address": {
              "type": "string",
              "description": "Shipping Address"
            }
          },
          "required": [
            "receiver",
            "phoneNumber",
            "address"
          ]
        }
      },
      {
        "name": "UtilityTools.Search.addWebTab",
        "description": "Add Pages",
        "parameters": {
          "type": "object",
          "properties": {},
          "required": []
        }
      }
    ],
    "single_tool": [
      {
        "name": "OnlineShopping.ExpressDelivery.addAddress",
        "description": "Add the specified address to the address book",
        "parameters": {
          "type": "object",
          "properties": {
            "name": {
              "type": "string",
              "description": "Name"
            },
            "phone": {
              "type": "string",
              "description": "Phone No."
            },
            "address": {
              "type": "string",
              "description": "Address"
            }
          },
          "required": [
            "name",
            "phone",
            "address"
          ]
        }
      }
    ],
    "id": 498
  },
  {
    "messages": [
      {
        "role": "user",
        "content": "Add an address to your address book"
      },
      {
        "role": "function call",
        "content": {
          "name": "OnlineShopping.ExpressDelivery.addAddress",
          "arguments": {}
        }
      },
      {
        "role": "assistant",
        "content": "Please provide an address to add"
      },
      {
        "role": "user",
        "content": "The address is No. 2 Zhongshan Mausoleum, Xuanwu District, Nanjing City, Jiangsu Province. Please add it for me."
      },
      {
        "role": "function call",
        "content": {
          "name": "OnlineShopping.ExpressDelivery.addAddress",
          "arguments": {
            "address": "No. 2 Zhongshanling, Xuanwu District, Nanjing City, Jiangsu Province"
          }
        }
      },
      {
        "role": "assistant",
        "content": "Please provide a name"
      },
      {
        "role": "user",
        "content": "It was wrong before. Address should be No. 686, Jiefang Avenue, Jianghan District, Wuhan City, Hubei Province"
      },
      {
        "role": "function call",
        "content": {
          "name": "OnlineShopping.ExpressDelivery.addAddress",
          "arguments": {
            "address": "No. 686, Jiefang Avenue, Jianghan District, Wuhan City, Hubei Province"
          }
        }
      },
      {
        "role": "assistant",
        "content": "Please provide a name"
      },
      {
        "role": "user",
        "content": "Xiao Zhang"
      },
      {
        "role": "function call",
        "content": {
          "name": "OnlineShopping.ExpressDelivery.addAddress",
          "arguments": {
            "address": "No. 686, Jiefang Avenue, Jianghan District, Wuhan City, Hubei Province",
            "name": "Xiao Zhang"
          }
        }
      }
    ],
    "multiple_tools": [
      {
        "name": "UtilityTools.Search.addWebBookmark",
        "description": "Add a page to a default collection or to a specified collection",
        "parameters": {
          "type": "object",
          "properties": {
            "name": {
              "type": "string",
              "description": "Name"
            },
            "bookmark": {
              "type": "string",
              "description": "Bookmark title, provided by target title by default"
            }
          },
          "required": [
            "name",
            "bookmark"
          ]
        }
      },
      {
        "name": "OnlineShopping.Mall.addDeliveryAddress",
        "description": "Add a new shipping address based on the information",
        "parameters": {
          "type": "object",
          "properties": {
            "receiver": {
              "type": "string",
              "description": "Receiver"
            },
            "phoneNumber": {
              "type": "string",
              "description": "Phone No."
            },
            "address": {
              "type": "string",
              "description": "Shipping Address"
            }
          },
          "required": [
            "receiver",
            "phoneNumber",
            "address"
          ]
        }
      },
      {
        "name": "Navigation.MapNavigation.addCommonAddress",
        "description": "Add usual address",
        "parameters": {
          "type": "object",
          "properties": {
            "address": {
              "type": "string",
              "description": "Primary address string to add"
            }
          },
          "required": [
            "address"
          ]
        }
      },
      {
        "name": "UtilityTools.Search.addWebTab",
        "description": "Add Pages",
        "parameters": {
          "type": "object",
          "properties": {},
          "required": []
        }
      },
      {
        "name": "OnlineShopping.ExpressDelivery.addAddress",
        "description": "Add the specified address to the address book",
        "parameters": {
          "type": "object",
          "properties": {
            "name": {
              "type": "string",
              "description": "Name"
            },
            "phone": {
              "type": "string",
              "description": "Phone No."
            },
            "address": {
              "type": "string",
              "description": "Address"
            }
          },
          "required": [
            "name",
            "phone",
            "address"
          ]
        }
      }
    ],
    "single_tool": [
      {
        "name": "OnlineShopping.ExpressDelivery.addAddress",
        "description": "Add the specified address to the address book",
        "parameters": {
          "type": "object",
          "properties": {
            "name": {
              "type": "string",
              "description": "Name"
            },
            "phone": {
              "type": "string",
              "description": "Phone No."
            },
            "address": {
              "type": "string",
              "description": "Address"
            }
          },
          "required": [
            "name",
            "phone",
            "address"
          ]
        }
      }
    ],
    "id": 499
  },
  {
    "messages": [
      {
        "role": "user",
        "content": "Address updated."
      },
      {
        "role": "function call",
        "content": {
          "name": "OnlineShopping.ExpressDelivery.updateAddress",
          "arguments": {}
        }
      },
      {
        "role": "assistant",
        "content": "Please provide the recipient's phone number"
      },
      {
        "role": "user",
        "content": "Okay, the recipient's phone number is 13800138000."
      },
      {
        "role": "function call",
        "content": {
          "name": "OnlineShopping.ExpressDelivery.updateAddress",
          "arguments": {
            "phone": "13800138000"
          }
        }
      },
      {
        "role": "assistant",
        "content": "Please provide the recipient address"
      },
      {
        "role": "user",
        "content": "The address of the recipient is No. 1 Keyuan Road, Science Park, Nanshan District, located in Shenzhen."
      },
      {
        "role": "function call",
        "content": {
          "name": "OnlineShopping.ExpressDelivery.updateAddress",
          "arguments": {
            "phone": "13800138000",
            "address": "No. 1, Keyuan Road, Science Park, Nanshan District"
          }
        }
      },
      {
        "role": "assistant",
        "content": "Please provide updated content"
      },
      {
        "role": "user",
        "content": "It was wrong before. Recipient phone number should be 13698765432"
      },
      {
        "role": "function call",
        "content": {
          "name": "OnlineShopping.ExpressDelivery.updateAddress",
          "arguments": {
            "phone": "13698765432",
            "address": "No. 1, Keyuan Road, Science Park, Nanshan District"
          }
        }
      },
      {
        "role": "assistant",
        "content": "Please provide updated content"
      },
      {
        "role": "user",
        "content": "The new content is about the progress of the project located at No. 2 Keyuan Road, Science Park, Nanshan District. At present, everything is going well. It is expected that the preliminary construction will be completed next month."
      },
      {
        "role": "function call",
        "content": {
          "name": "OnlineShopping.ExpressDelivery.updateAddress",
          "arguments": {
            "phone": "13698765432",
            "address": "No. 1, Keyuan Road, Science Park, Nanshan District",
            "new_address": "No. 2, Keyuan Road, Science Park, Nanshan District"
          }
        }
      }
    ],
    "multiple_tools": [
      {
        "name": "Navigation.MapNavigation.viewCommonAddresses",
        "description": "View all currently logged Primary Addresses",
        "parameters": {
          "type": "object",
          "properties": {},
          "required": []
        }
      },
      {
        "name": "OfficeSoftware.Email.updateMailDraft",
        "description": "Update specified message draft",
        "parameters": {
          "type": "object",
          "properties": {
            "mail_title": {
              "type": "string",
              "description": "Draft title to update"
            }
          },
          "required": [
            "mail_title"
          ]
        }
      },
      {
        "name": "OnlineShopping.Mall.modifyDeliveryAddress",
        "description": "Change address based on consignee",
        "parameters": {
          "type": "object",
          "properties": {
            "receiver": {
              "type": "string",
              "description": "Receiver"
            }
          },
          "required": [
            "receiver"
          ]
        }
      },
      {
        "name": "SocialCommunication.InstantMessaging.updateGroupInfo",
        "description": "Update announcements and other information for a specific group",
        "parameters": {
          "type": "object",
          "properties": {
            "group_name": {
              "type": "string",
              "description": "Name of the group to update"
            },
            "new_announcement": {
              "type": "string",
              "description": "Updated group announcements"
            }
          },
          "required": [
            "group_name",
            "new_announcement"
          ]
        }
      },
      {
        "name": "OnlineShopping.ExpressDelivery.updateAddress",
        "description": "Update old address to specified address",
        "parameters": {
          "type": "object",
          "properties": {
            "name": {
              "type": "string",
              "description": "Recipient's name"
            },
            "phone": {
              "type": "string",
              "description": "Recipient phone number"
            },
            "address": {
              "type": "string",
              "description": "To"
            },
            "new_address": {
              "type": "string",
              "description": "What's new after the update"
            }
          },
          "required": [
            "name",
            "phone",
            "address",
            "new_address"
          ]
        }
      }
    ],
    "single_tool": [
      {
        "name": "OnlineShopping.ExpressDelivery.updateAddress",
        "description": "Update old address to specified address",
        "parameters": {
          "type": "object",
          "properties": {
            "name": {
              "type": "string",
              "description": "Recipient's name"
            },
            "phone": {
              "type": "string",
              "description": "Recipient phone number"
            },
            "address": {
              "type": "string",
              "description": "To"
            },
            "new_address": {
              "type": "string",
              "description": "What's new after the update"
            }
          },
          "required": [
            "name",
            "phone",
            "address",
            "new_address"
          ]
        }
      }
    ],
    "id": 500
  },
  {
    "messages": [
      {
        "role": "user",
        "content": "Find my courier address book"
      },
      {
        "role": "function call",
        "content": {
          "name": "OnlineShopping.ExpressDelivery.searchContactInfos",
          "arguments": {}
        }
      },
      {
        "role": "assistant",
        "content": "Please provide the name of the contact"
      },
      {
        "role": "user",
        "content": "Li Na"
      },
      {
        "role": "function call",
        "content": {
          "name": "OnlineShopping.ExpressDelivery.searchContactInfos",
          "arguments": {
            "name": "Li Na"
          }
        }
      },
      {
        "role": "assistant",
        "content": "Please provide the contact's phone number and address"
      },
      {
        "role": "user",
        "content": "It was wrong before. Name should be Zhang Wei"
      },
      {
        "role": "function call",
        "content": {
          "name": "OnlineShopping.ExpressDelivery.searchContactInfos",
          "arguments": {
            "name": "Zhang Wei"
          }
        }
      },
      {
        "role": "assistant",
        "content": "Please provide the contact's phone number and address"
      },
      {
        "role": "user",
        "content": "My phone number is 13698765432 and the address is 1000 Lujiazui Ring Road, Pudong New Area, Shanghai."
      },
      {
        "role": "function call",
        "content": {
          "name": "OnlineShopping.ExpressDelivery.searchContactInfos",
          "arguments": {
            "name": "Zhang Wei",
            "phone": "13698765432"
          }
        }
      },
      {
        "role": "assistant",
        "content": "Please provide the contact's address"
      },
      {
        "role": "user",
        "content": "The address of the contact person is a certain street in Chaoyang District, Beijing."
      },
      {
        "role": "function call",
        "content": {
          "name": "OnlineShopping.ExpressDelivery.searchContactInfos",
          "arguments": {
            "name": "Zhang Wei",
            "phone": "13698765432",
            "address": "Room 301, Future Business Center 17"
          }
        }
      }
    ],
    "multiple_tools": [
      {
        "name": "SocialCommunication.InstantMessaging.searchContact",
        "description": "Search contacts by keyword; get a list of contacts",
        "parameters": {
          "type": "object",
          "properties": {
            "key_word": {
              "type": "string",
              "description": "Keywords used to search for contacts"
            }
          },
          "required": [
            "key_word"
          ]
        }
      },
      {
        "name": "Navigation.MapNavigation.searchLocation",
        "description": "Search for a location by keyword, which can be a location, a point of interest such as a gas station, a charging pile, etc., and return a list of address information",
        "parameters": {
          "type": "object",
          "properties": {
            "keyword": {
              "type": "string",
              "description": "Keywords for search"
            }
          },
          "required": [
            "keyword"
          ]
        }
      },
      {
        "name": "ConvenientLiving.GovernmentServices.searchEnterpriseByName",
        "description": "Search related businesses based on keywords entered",
        "parameters": {
          "type": "object",
          "properties": {
            "keyword": {
              "type": "string",
              "description": "Search keywords"
            }
          },
          "required": [
            "keyword"
          ]
        }
      },
      {
        "name": "MusicRadio.RadioStations.searchMusicRadio",
        "description": "Search stations by keyword",
        "parameters": {
          "type": "object",
          "properties": {
            "keywords": {
              "type": "string",
              "description": "Keywords, such as station type, etc."
            }
          },
          "required": [
            "keywords"
          ]
        }
      },
      {
        "name": "OnlineShopping.ExpressDelivery.searchContactInfos",
        "description": "Search for contacts based on given name, phone, address, etc.",
        "parameters": {
          "type": "object",
          "properties": {
            "name": {
              "type": "string",
              "description": "Name"
            },
            "phone": {
              "type": "string",
              "description": "Phone No."
            },
            "address": {
              "type": "string",
              "description": "Address"
            }
          },
          "required": [
            "name",
            "phone",
            "address"
          ]
        }
      }
    ],
    "single_tool": [
      {
        "name": "OnlineShopping.ExpressDelivery.searchContactInfos",
        "description": "Search for contacts based on given name, phone, address, etc.",
        "parameters": {
          "type": "object",
          "properties": {
            "name": {
              "type": "string",
              "description": "Name"
            },
            "phone": {
              "type": "string",
              "description": "Phone No."
            },
            "address": {
              "type": "string",
              "description": "Address"
            }
          },
          "required": [
            "name",
            "phone",
            "address"
          ]
        }
      }
    ],
    "id": 501
  },
  {
    "messages": [
      {
        "role": "user",
        "content": "The delivery service is too poor, I want to complain"
      },
      {
        "role": "function call",
        "content": {
          "name": "OnlineShopping.ExpressDelivery.complaintExpress",
          "arguments": {}
        }
      },
      {
        "role": "assistant",
        "content": "Please provide the content of your complaint"
      },
      {
        "role": "user",
        "content": "The box is wet and the contents are damaged, I need you to deal with this as soon as possible."
      },
      {
        "role": "function call",
        "content": {
          "name": "OnlineShopping.ExpressDelivery.complaintExpress",
          "arguments": {
            "complaint_content": "The box is soaked and the items are damaged"
          }
        }
      },
      {
        "role": "assistant",
        "content": "Please provide your courier slip number so we can process your complaint"
      },
      {
        "role": "user",
        "content": "It was wrong before. Complaint Contents should be Bad attitude of courier"
      },
      {
        "role": "function call",
        "content": {
          "name": "OnlineShopping.ExpressDelivery.complaintExpress",
          "arguments": {
            "complaint_content": "Bad attitude of courier"
          }
        }
      },
      {
        "role": "assistant",
        "content": "Please provide your courier slip number so we can process your complaint"
      },
      {
        "role": "user",
        "content": "My courier number is DB12345, please check it for me."
      },
      {
        "role": "function call",
        "content": {
          "name": "OnlineShopping.ExpressDelivery.complaintExpress",
          "arguments": {
            "complaint_content": "Bad attitude of courier",
            "express_id": "DB12345"
          }
        }
      }
    ],
    "multiple_tools": [
      {
        "name": "ConvenientLiving.BuyingRentingHomes.getRealEstateAgencyInfo",
        "description": "Get contact info for a real estate agent",
        "parameters": {
          "type": "object",
          "properties": {
            "house_name": {
              "type": "string",
              "description": "Property name"
            }
          },
          "required": [
            "house_name"
          ]
        }
      },
      {
        "name": "Navigation.FlightTickets.bookFlightSpecialServices",
        "description": "Booking special airline services such as wheelchair service, unaccompanied minors service, etc.",
        "parameters": {
          "type": "object",
          "properties": {
            "service_type": {
              "type": "string",
              "description": "Types of special services, such as wheelchair access, unaccompanied minors"
            },
            "flight_number": {
              "type": "string",
              "description": "Flight number to book service"
            }
          },
          "required": [
            "service_type",
            "flight_number"
          ]
        }
      },
      {
        "name": "ConvenientLiving.UtilityPayments.getServiceProviders",
        "description": "Get information on suppliers that provide services such as utilities",
        "parameters": {
          "type": "object",
          "properties": {
            "service_type": {
              "type": "string",
              "description": "Types of paid services, such as utilities, gas, etc."
            },
            "location": {
              "type": "string",
              "description": "Region, default local"
            }
          },
          "required": [
            "service_type",
            "location"
          ]
        }
      },
      {
        "name": "OnlineShopping.ExpressDelivery.complaintExpress",
        "description": "Make a complaint about a courier issue",
        "parameters": {
          "type": "object",
          "properties": {
            "express_id": {
              "type": "string",
              "description": "Tracking Number"
            },
            "signing_date": {
              "type": "string",
              "description": "The date of signing"
            },
            "complaint_content": {
              "type": "string",
              "description": "Complaint Contents"
            }
          },
          "required": [
            "express_id",
            "signing_date",
            "complaint_content"
          ]
        }
      },
      {
        "name": "OnlineShopping.ExpressDelivery.rateExpressService",
        "description": "Rate courier service",
        "parameters": {
          "type": "object",
          "properties": {
            "express_id": {
              "type": "string",
              "description": "Tracking Number"
            },
            "signing_date": {
              "type": "string",
              "description": "The date of signing"
            },
            "rating": {
              "type": "string",
              "description": "Rating, 1-5 points"
            },
            "comment": {
              "type": "string",
              "description": "Scoring contents"
            }
          },
          "required": [
            "express_id",
            "signing_date",
            "rating",
            "comment"
          ]
        }
      }
    ],
    "single_tool": [
      {
        "name": "OnlineShopping.ExpressDelivery.complaintExpress",
        "description": "Make a complaint about a courier issue",
        "parameters": {
          "type": "object",
          "properties": {
            "express_id": {
              "type": "string",
              "description": "Tracking Number"
            },
            "signing_date": {
              "type": "string",
              "description": "The date of signing"
            },
            "complaint_content": {
              "type": "string",
              "description": "Complaint Contents"
            }
          },
          "required": [
            "express_id",
            "signing_date",
            "complaint_content"
          ]
        }
      }
    ],
    "id": 502
  },
  {
    "messages": [
      {
        "role": "user",
        "content": "Are there any popular livestreams lately that I'd like to see"
      },
      {
        "role": "function call",
        "content": {
          "name": "VideoPlayback.LiveStreaming.playLiveStream",
          "arguments": {}
        }
      },
      {
        "role": "assistant",
        "content": "What is the name of the livestream"
      },
      {
        "role": "user",
        "content": "The name of the livestream is Esports Night."
      },
      {
        "role": "function call",
        "content": {
          "name": "VideoPlayback.LiveStreaming.playLiveStream",
          "arguments": {
            "livestream_name": "E-sports night"
          }
        }
      },
      {
        "role": "assistant",
        "content": "Please provide the name of the livestream blogger and the keywords of the livestream content"
      },
      {
        "role": "user",
        "content": "It was wrong before. Livestream Name should be Morning News"
      },
      {
        "role": "function call",
        "content": {
          "name": "VideoPlayback.LiveStreaming.playLiveStream",
          "arguments": {
            "livestream_name": "Morning News"
          }
        }
      },
      {
        "role": "assistant",
        "content": "Please provide the name of the livestream blogger and the keywords of the livestream content"
      },
      {
        "role": "user",
        "content": "The name of the live blogger is the little prince of e-sports, and the keywords of the live content are game commentary and e-sports events."
      },
      {
        "role": "function call",
        "content": {
          "name": "VideoPlayback.LiveStreaming.playLiveStream",
          "arguments": {
            "livestream_name": "Morning News",
            "streamer_name": "The Little Prince of Esports"
          }
        }
      },
      {
        "role": "assistant",
        "content": "Please provide a channel name"
      },
      {
        "role": "user",
        "content": "Esports Channels"
      },
      {
        "role": "function call",
        "content": {
          "name": "VideoPlayback.LiveStreaming.playLiveStream",
          "arguments": {
            "livestream_name": "Morning News",
            "streamer_name": "The Little Prince of Esports",
            "channel_name": "Gaming"
          }
        }
      }
    ],
    "multiple_tools": [
      {
        "name": "MusicRadio.RadioStations.radioGetCollectedRadioes",
        "description": "Get a list of all your favorite stations",
        "parameters": {
          "type": "object",
          "properties": {},
          "required": []
        }
      },
      {
        "name": "OnlineShopping.SecondhandTrading.viewSecondhandSaleMyCollect",
        "description": "See all my favorites",
        "parameters": {
          "type": "object",
          "properties": {},
          "required": []
        }
      },
      {
        "name": "Finance.Banking.searchFinancialProducts",
        "description": "Search for bank financial products based on specific criteria",
        "parameters": {
          "type": "object",
          "properties": {
            "keywords": {
              "type": "string",
              "description": "Search for keywords such as high yield, short term, etc."
            }
          },
          "required": [
            "keywords"
          ]
        }
      },
      {
        "name": "VideoPlayback.LiveStreaming.playLiveStream",
        "description": "Watch livestream (name of livestream blogger, key content of livestream; barrage/comment; share livestream link, gift giving, etc.)",
        "parameters": {
          "type": "object",
          "properties": {
            "livestream_name": {
              "type": "string",
              "description": "Livestream Name"
            },
            "streamer_name": {
              "type": "string",
              "description": "Broadcaster Name"
            },
            "channel_name": {
              "type": "string",
              "description": "Channel name"
            }
          },
          "required": [
            "livestream_name",
            "streamer_name",
            "channel_name"
          ]
        }
      },
      {
        "name": "Navigation.MapNavigation.viewCollectLocation",
        "description": "View a list of favorite places",
        "parameters": {
          "type": "object",
          "properties": {},
          "required": []
        }
      }
    ],
    "single_tool": [
      {
        "name": "VideoPlayback.LiveStreaming.playLiveStream",
        "description": "Watch livestream (name of livestream blogger, key content of livestream; barrage/comment; share livestream link, gift giving, etc.)",
        "parameters": {
          "type": "object",
          "properties": {
            "livestream_name": {
              "type": "string",
              "description": "Livestream Name"
            },
            "streamer_name": {
              "type": "string",
              "description": "Broadcaster Name"
            },
            "channel_name": {
              "type": "string",
              "description": "Channel name"
            }
          },
          "required": [
            "livestream_name",
            "streamer_name",
            "channel_name"
          ]
        }
      }
    ],
    "id": 506
  },
  {
    "messages": [
      {
        "role": "user",
        "content": "Schedule a livestream, but have not decided which one, let me see what options are available first."
      },
      {
        "role": "function call",
        "content": {
          "name": "VideoPlayback.LiveStreaming.orderLiveStream",
          "arguments": {}
        }
      },
      {
        "role": "assistant",
        "content": "What is the name of the livestream you would like to schedule?"
      },
      {
        "role": "user",
        "content": "I would like to book a live broadcast of the Healthy Eating seminar."
      },
      {
        "role": "function call",
        "content": {
          "name": "VideoPlayback.LiveStreaming.orderLiveStream",
          "arguments": {
            "livestream_name": "Healthy Eating Seminar"
          }
        }
      },
      {
        "role": "assistant",
        "content": "What is the name of the anchor"
      },
      {
        "role": "user",
        "content": "The name of the anchor is Zhang Tingting, who is a very popular anchor."
      },
      {
        "role": "function call",
        "content": {
          "name": "VideoPlayback.LiveStreaming.orderLiveStream",
          "arguments": {
            "livestream_name": "Healthy Eating Seminar",
            "streamer_name": "Zhang Tingting"
          }
        }
      },
      {
        "role": "assistant",
        "content": "What is the channel name"
      },
      {
        "role": "user",
        "content": "It was wrong before. Broadcaster Name should be Li Xiaoyao"
      },
      {
        "role": "function call",
        "content": {
          "name": "VideoPlayback.LiveStreaming.orderLiveStream",
          "arguments": {
            "livestream_name": "Healthy Eating Seminar",
            "streamer_name": "Li Xiaoyao"
          }
        }
      },
      {
        "role": "assistant",
        "content": "What is the channel name"
      },
      {
        "role": "user",
        "content": "Lifestyle Channel"
      },
      {
        "role": "function call",
        "content": {
          "name": "VideoPlayback.LiveStreaming.orderLiveStream",
          "arguments": {
            "livestream_name": "Healthy Eating Seminar",
            "streamer_name": "Li Xiaoyao",
            "channel_name": "Lifestyle Channel"
          }
        }
      }
    ],
    "multiple_tools": [
      {
        "name": "Navigation.TrainTickets.queryTrainSchedule",
        "description": "Find departure, arrival, and stops for specific trips",
        "parameters": {
          "type": "object",
          "properties": {
            "train_number": {
              "type": "string",
              "description": "Trips to inquire about"
            },
            "time": {
              "type": "string",
              "description": "Query Date"
            }
          },
          "required": [
            "train_number",
            "time"
          ]
        }
      },
      {
        "name": "UtilityTools.AIGC.aigcTextSummary",
        "description": "Compress longer text content, retaining only the main information and key points of the original text",
        "parameters": {
          "type": "object",
          "properties": {
            "text": {
              "type": "string",
              "description": "Long text content"
            }
          },
          "required": [
            "text"
          ]
        }
      },
      {
        "name": "SystemTools.SystemSettings.setSystemLAccessibility",
        "description": "Set accessibility options for your phone",
        "parameters": {
          "type": "object",
          "properties": {
            "screen_reader": {
              "type": "boolean",
              "description": "Whether to turn on the screen reader"
            },
            "magnification": {
              "type": "boolean",
              "description": "Whether to turn on the zoom function"
            }
          },
          "required": [
            "screen_reader",
            "magnification"
          ]
        }
      },
      {
        "name": "VideoPlayback.LiveStreaming.orderLiveStream",
        "description": "Schedule a livestream",
        "parameters": {
          "type": "object",
          "properties": {
            "livestream_name": {
              "type": "string",
              "description": "Livestream Name"
            },
            "streamer_name": {
              "type": "string",
              "description": "Broadcaster Name"
            },
            "channel_name": {
              "type": "string",
              "description": "Channel name"
            },
            "livestream_time": {
              "type": "string",
              "description": "live broadcast time"
            }
          },
          "required": [
            "livestream_name",
            "streamer_name",
            "channel_name",
            "livestream_time"
          ]
        }
      },
      {
        "name": "ConvenientLiving.JobRecruitment.getRecommendedJobs",
        "description": "Suggest a position based on the user's resume and preferences",
        "parameters": {
          "type": "object",
          "properties": {
            "resume_path": {
              "type": "string",
              "description": "Local path to resume file"
            }
          },
          "required": [
            "resume_path"
          ]
        }
      }
    ],
    "single_tool": [
      {
        "name": "VideoPlayback.LiveStreaming.orderLiveStream",
        "description": "Schedule a livestream",
        "parameters": {
          "type": "object",
          "properties": {
            "livestream_name": {
              "type": "string",
              "description": "Livestream Name"
            },
            "streamer_name": {
              "type": "string",
              "description": "Broadcaster Name"
            },
            "channel_name": {
              "type": "string",
              "description": "Channel name"
            },
            "livestream_time": {
              "type": "string",
              "description": "live broadcast time"
            }
          },
          "required": [
            "livestream_name",
            "streamer_name",
            "channel_name",
            "livestream_time"
          ]
        }
      }
    ],
    "id": 510
  },
  {
    "messages": [
      {
        "role": "user",
        "content": "Are there any recent livestreams worth booking? Give me a recommendation."
      },
      {
        "role": "function call",
        "content": {
          "name": "VideoPlayback.LiveStreaming.orderLiveStream",
          "arguments": {}
        }
      },
      {
        "role": "assistant",
        "content": "What is the name of the livestream"
      },
      {
        "role": "user",
        "content": "Global Tourism Sharing"
      },
      {
        "role": "function call",
        "content": {
          "name": "VideoPlayback.LiveStreaming.orderLiveStream",
          "arguments": {
            "livestream_name": "Global Tourism Sharing"
          }
        }
      },
      {
        "role": "assistant",
        "content": "What is the name of the anchor"
      },
      {
        "role": "user",
        "content": "Li Xiaoyao's Game World"
      },
      {
        "role": "function call",
        "content": {
          "name": "VideoPlayback.LiveStreaming.orderLiveStream",
          "arguments": {
            "livestream_name": "Global Tourism Sharing",
            "streamer_name": "Li Xiaoyao"
          }
        }
      },
      {
        "role": "assistant",
        "content": "What is the channel name"
      },
      {
        "role": "user",
        "content": "It was wrong before. Livestream Name should be Healthy Eating Seminar"
      },
      {
        "role": "function call",
        "content": {
          "name": "VideoPlayback.LiveStreaming.orderLiveStream",
          "arguments": {
            "livestream_name": "Healthy Eating Seminar",
            "streamer_name": "Li Xiaoyao"
          }
        }
      },
      {
        "role": "assistant",
        "content": "What is the channel name"
      },
      {
        "role": "user",
        "content": "Channel name is Globetrotter Discovery"
      },
      {
        "role": "function call",
        "content": {
          "name": "VideoPlayback.LiveStreaming.orderLiveStream",
          "arguments": {
            "livestream_name": "Healthy Eating Seminar",
            "streamer_name": "Li Xiaoyao",
            "channel_name": "Globetrotter"
          }
        }
      }
    ],
    "multiple_tools": [
      {
        "name": "MusicRadio.RadioStations.radioGetRecommendedSongs",
        "description": "Get a list of recommended songs based on the user's historical preferences",
        "parameters": {
          "type": "object",
          "properties": {},
          "required": []
        }
      },
      {
        "name": "MusicRadio.Karaoke.getRecommendedAccompaniments",
        "description": "Get my recommended song accompaniment based on historical preferences",
        "parameters": {
          "type": "object",
          "properties": {},
          "required": []
        }
      },
      {
        "name": "VideoPlayback.LiveStreaming.orderLiveStream",
        "description": "Schedule a livestream",
        "parameters": {
          "type": "object",
          "properties": {
            "livestream_name": {
              "type": "string",
              "description": "Livestream Name"
            },
            "streamer_name": {
              "type": "string",
              "description": "Broadcaster Name"
            },
            "channel_name": {
              "type": "string",
              "description": "Channel name"
            },
            "livestream_time": {
              "type": "string",
              "description": "live broadcast time"
            }
          },
          "required": [
            "livestream_name",
            "streamer_name",
            "channel_name",
            "livestream_time"
          ]
        }
      },
      {
        "name": "NewsMagazines.NewspapersMagazines.getRecommendedMagazines",
        "description": "Recommend newspapers and magazines according to user preferences",
        "parameters": {
          "type": "object",
          "properties": {},
          "required": []
        }
      },
      {
        "name": "MusicRadio.OnlineMusic.getRecommendedPlaylists",
        "description": "Get recommended songs by mood and scene",
        "parameters": {
          "type": "object",
          "properties": {
            "mood": {
              "type": "string",
              "description": "Emotions"
            },
            "scene": {
              "type": "string",
              "description": "setting"
            }
          },
          "required": [
            "mood",
            "scene"
          ]
        }
      }
    ],
    "single_tool": [
      {
        "name": "VideoPlayback.LiveStreaming.orderLiveStream",
        "description": "Schedule a livestream",
        "parameters": {
          "type": "object",
          "properties": {
            "livestream_name": {
              "type": "string",
              "description": "Livestream Name"
            },
            "streamer_name": {
              "type": "string",
              "description": "Broadcaster Name"
            },
            "channel_name": {
              "type": "string",
              "description": "Channel name"
            },
            "livestream_time": {
              "type": "string",
              "description": "live broadcast time"
            }
          },
          "required": [
            "livestream_name",
            "streamer_name",
            "channel_name",
            "livestream_time"
          ]
        }
      }
    ],
    "id": 511
  },
  {
    "messages": [
      {
        "role": "user",
        "content": "Play short video"
      },
      {
        "role": "function call",
        "content": {
          "name": "VideoPlayback.ShortVideos.playShortVideo",
          "arguments": {}
        }
      },
      {
        "role": "assistant",
        "content": "What is the short video name"
      },
      {
        "role": "user",
        "content": "Travel Diary: A Trip to Japan"
      },
      {
        "role": "function call",
        "content": {
          "name": "VideoPlayback.ShortVideos.playShortVideo",
          "arguments": {
            "video_name": "Travel Diary: A Trip to Japan"
          }
        }
      },
      {
        "role": "assistant",
        "content": "Whether full-screen viewing is required"
      },
      {
        "role": "user",
        "content": "It was wrong before. Short video name should be Laughing Cat Highlights"
      },
      {
        "role": "function call",
        "content": {
          "name": "VideoPlayback.ShortVideos.playShortVideo",
          "arguments": {
            "video_name": "Laughing Cat Highlights"
          }
        }
      },
      {
        "role": "assistant",
        "content": "Whether full-screen viewing is required"
      },
      {
        "role": "user",
        "content": "No, just keep the current window size."
      },
      {
        "role": "function call",
        "content": {
          "name": "VideoPlayback.ShortVideos.playShortVideo",
          "arguments": {
            "video_name": "Laughing Cat Highlights",
            "full_screen": false
          }
        }
      },
      {
        "role": "assistant",
        "content": "What is the playback speed?"
      },
      {
        "role": "user",
        "content": "1.0, I want to maintain normal speed."
      },
      {
        "role": "function call",
        "content": {
          "name": "VideoPlayback.ShortVideos.playShortVideo",
          "arguments": {
            "video_name": "Laughing Cat Highlights",
            "full_screen": false,
            "playback_speed": 1.0
          }
        }
      },
      {
        "role": "assistant",
        "content": "Whether to open the barrage"
      },
      {
        "role": "user",
        "content": "No?"
      },
      {
        "role": "function call",
        "content": {
          "name": "VideoPlayback.ShortVideos.playShortVideo",
          "arguments": {
            "video_name": "Laughing Cat Highlights",
            "full_screen": false,
            "playback_speed": 1.0,
            "danmaku": false
          }
        }
      }
    ],
    "multiple_tools": [
      {
        "name": "VideoPlayback.ShortVideos.coinShortvideo",
        "description": "Coin a short video",
        "parameters": {
          "type": "object",
          "properties": {
            "name": {
              "type": "string",
              "description": "Short video name"
            },
            "count": {
              "type": "integer",
              "description": "Number of coins, default 1 coin"
            }
          },
          "required": [
            "name",
            "count"
          ]
        }
      },
      {
        "name": "Finance.Funds.getFundHistoryNetWorth",
        "description": "Historical Net Worth of Designated Funds",
        "parameters": {
          "type": "object",
          "properties": {
            "fund_name": {
              "type": "string",
              "description": "Fund name"
            },
            "fund_code": {
              "type": "string",
              "description": "Fund  Code"
            },
            "start_date": {
              "type": "string",
              "description": "Start date"
            },
            "end_date": {
              "type": "string",
              "description": "结束日期"
            }
          },
          "required": [
            "fund_name",
            "fund_code",
            "start_date",
            "end_date"
          ]
        }
      },
      {
        "name": "VideoPlayback.ShortVideos.playShortVideo",
        "description": "Watch the short video, watch from scratch by default",
        "parameters": {
          "type": "object",
          "properties": {
            "video_name": {
              "type": "string",
              "description": "Short video name"
            },
            "full_screen": {
              "type": "boolean",
              "description": "Full Screen"
            },
            "playback_speed": {
              "type": "float",
              "description": "Playback Speed"
            },
            "danmaku": {
              "type": "boolean",
              "description": "enable bullet text"
            }
          },
          "required": [
            "video_name",
            "full_screen",
            "playback_speed",
            "danmaku"
          ]
        }
      },
      {
        "name": "Photography.PhotoTaking.takePhotoDelay",
        "description": "Take photos after a set period of time",
        "parameters": {
          "type": "object",
          "properties": {
            "delay": {
              "type": "integer",
              "description": "Delay duration, in seconds"
            }
          },
          "required": [
            "delay"
          ]
        }
      },
      {
        "name": "Photography.VideoEditing.videoEditCut",
        "description": "Capture clips from specific time periods in the video",
        "parameters": {
          "type": "object",
          "properties": {
            "name_or_path": {
              "type": "string",
              "description": "The name or path of the video"
            },
            "start_time": {
              "type": "integer",
              "description": "Start time period for capturing video, in seconds"
            },
            "end_time": {
              "type": "integer",
              "description": "End time period for intercepted video, in seconds"
            }
          },
          "required": [
            "name_or_path",
            "start_time",
            "end_time"
          ]
        }
      }
    ],
    "single_tool": [
      {
        "name": "VideoPlayback.ShortVideos.playShortVideo",
        "description": "Watch the short video, watch from scratch by default",
        "parameters": {
          "type": "object",
          "properties": {
            "video_name": {
              "type": "string",
              "description": "Short video name"
            },
            "full_screen": {
              "type": "boolean",
              "description": "Full Screen"
            },
            "playback_speed": {
              "type": "float",
              "description": "Playback Speed"
            },
            "danmaku": {
              "type": "boolean",
              "description": "enable bullet text"
            }
          },
          "required": [
            "video_name",
            "full_screen",
            "playback_speed",
            "danmaku"
          ]
        }
      }
    ],
    "id": 512
  },
  {
    "messages": [
      {
        "role": "user",
        "content": "Learn how to buy insurance products"
      },
      {
        "role": "function call",
        "content": {
          "name": "Finance.Insurance.purchaseInsurance",
          "arguments": {}
        }
      },
      {
        "role": "assistant",
        "content": "What is the name of the insurance product you want to purchase"
      },
      {
        "role": "user",
        "content": "The name of the insurance product I want to buy is “Lifetime Happiness” Life Insurance."
      },
      {
        "role": "function call",
        "content": {
          "name": "Finance.Insurance.purchaseInsurance",
          "arguments": {
            "insurance_name": "A Life of Happiness"
          }
        }
      },
      {
        "role": "assistant",
        "content": "What type of insurance product would you like to purchase e.g. Life Insurance Health Insurance Property Insurance Vehicle Insurance etc."
      },
      {
        "role": "user",
        "content": "I'm interested in property insurance, can you tell me more about it?"
      },
      {
        "role": "function call",
        "content": {
          "name": "Finance.Insurance.purchaseInsurance",
          "arguments": {
            "insurance_name": "A Life of Happiness",
            "insurance_type": "Property insurance"
          }
        }
      },
      {
        "role": "assistant",
        "content": "Provide beneficiary and protected property information"
      },
      {
        "role": "user",
        "content": "The beneficiary is myself, the protected property is my little villa, it is located in a quiet suburb and is a great place for me to relax on the weekend."
      },
      {
        "role": "function call",
        "content": {
          "name": "Finance.Insurance.purchaseInsurance",
          "arguments": {
            "insurance_name": "A Life of Happiness",
            "insurance_type": "Property insurance",
            "insurance_benefit": "My cottage"
          }
        }
      },
      {
        "role": "assistant",
        "content": "How many years are covered"
      },
      {
        "role": "user",
        "content": "It was wrong before. Types of insurance products, such as life insurance, health insurance, property insurance, car insurance, etc. should be health insurance "
      },
      {
        "role": "function call",
        "content": {
          "name": "Finance.Insurance.purchaseInsurance",
          "arguments": {
            "insurance_name": "A Life of Happiness",
            "insurance_type": "health insurance ",
            "insurance_benefit": "My cottage"
          }
        }
      },
      {
        "role": "assistant",
        "content": "How many years are covered"
      },
      {
        "role": "user",
        "content": "10 Years"
      },
      {
        "role": "function call",
        "content": {
          "name": "Finance.Insurance.purchaseInsurance",
          "arguments": {
            "insurance_name": "A Life of Happiness",
            "insurance_type": "health insurance ",
            "insurance_benefit": "My cottage",
            "period": 10
          }
        }
      }
    ],
    "multiple_tools": [
      {
        "name": "Finance.Stocks.buyStock",
        "description": "Purchase of Designated Shares",
        "parameters": {
          "type": "object",
          "properties": {
            "stock_code": {
              "type": "string",
              "description": "Ticker"
            },
            "stock_name": {
              "type": "string",
              "description": "Stock Key Name"
            },
            "price": {
              "type": "float",
              "description": "Purchase Amount, Unit: Yuan"
            },
            "amount": {
              "type": "string",
              "description": "Bid Volume; Specific Value; Whole Warehouse; Half Warehouse; 1/3 Warehouse; 1/4 Warehouse"
            }
          },
          "required": [
            "stock_code",
            "stock_name",
            "price",
            "amount"
          ]
        }
      },
      {
        "name": "UtilityTools.Weather.getLivingIndex",
        "description": "Get the Life Services Index for a given day and a given location",
        "parameters": {
          "type": "object",
          "properties": {
            "date": {
              "type": "string",
              "description": "Date, defaults to current time"
            },
            "location": {
              "type": "string",
              "description": "Location, defaults to local"
            }
          },
          "required": [
            "date",
            "location"
          ]
        }
      },
      {
        "name": "Finance.Insurance.purchaseInsurance",
        "description": "Purchase insurance products",
        "parameters": {
          "type": "object",
          "properties": {
            "insurance_name": {
              "type": "string",
              "description": "Insurance Product Name"
            },
            "insurance_type": {
              "type": "string",
              "description": "Types of insurance products, such as life insurance, health insurance, property insurance, car insurance, etc."
            },
            "insurance_benefit": {
              "type": "string",
              "description": "Beneficiary/Protected Property"
            },
            "amount": {
              "type": "float",
              "description": "Coverage Amount"
            },
            "period": {
              "type": "integer",
              "description": "Insurance period, fixed time for some products, units (years)"
            }
          },
          "required": [
            "insurance_name",
            "insurance_type",
            "insurance_benefit",
            "amount",
            "period"
          ]
        }
      },
      {
        "name": "Finance.Insurance.downloadInsuranceDocument",
        "description": "Download insurance documents",
        "parameters": {
          "type": "object",
          "properties": {
            "insurance_name": {
              "type": "string",
              "description": "Insurance Product Name"
            },
            "insurance_type": {
              "type": "string",
              "description": "Types of insurance products, such as life insurance, health insurance, etc."
            },
            "document_type": {
              "type": "string",
              "description": "Document type, such as policy contract, claim description, etc."
            }
          },
          "required": [
            "insurance_name",
            "insurance_type",
            "document_type"
          ]
        }
      },
      {
        "name": "ConvenientLiving.FoodDelivery.placeRestaurantOrder",
        "description": "Order select restaurants and dishes",
        "parameters": {
          "type": "object",
          "properties": {
            "restaurant_name": {
              "type": "string",
              "description": "Name of the restaurant"
            },
            "dishes": {
              "type": "string",
              "description": "Array containing item IDs"
            },
            "delivery_address": {
              "type": "string",
              "description": "Delivery address"
            },
            "delivery_time": {
              "type": "string",
              "description": "Expected delivery time in HH: mm format"
            },
            "note": {
              "type": "string",
              "description": "Remarks"
            }
          },
          "required": [
            "restaurant_name",
            "dishes",
            "delivery_address",
            "delivery_time",
            "note"
          ]
        }
      }
    ],
    "single_tool": [
      {
        "name": "Finance.Insurance.purchaseInsurance",
        "description": "Purchase insurance products",
        "parameters": {
          "type": "object",
          "properties": {
            "insurance_name": {
              "type": "string",
              "description": "Insurance Product Name"
            },
            "insurance_type": {
              "type": "string",
              "description": "Types of insurance products, such as life insurance, health insurance, property insurance, car insurance, etc."
            },
            "insurance_benefit": {
              "type": "string",
              "description": "Beneficiary/Protected Property"
            },
            "amount": {
              "type": "float",
              "description": "Coverage Amount"
            },
            "period": {
              "type": "integer",
              "description": "Insurance period, fixed time for some products, units (years)"
            }
          },
          "required": [
            "insurance_name",
            "insurance_type",
            "insurance_benefit",
            "amount",
            "period"
          ]
        }
      }
    ],
    "id": 516
  },
  {
    "messages": [
      {
        "role": "user",
        "content": "Can you help me see what steps I need to take to file an insurance claim?"
      },
      {
        "role": "function call",
        "content": {
          "name": "Finance.Insurance.claimInsurance",
          "arguments": {}
        }
      },
      {
        "role": "assistant",
        "content": "What is the name of the insurance product"
      },
      {
        "role": "user",
        "content": "What I need is full corporate coverage, can you tell me more?"
      },
      {
        "role": "function call",
        "content": {
          "name": "Finance.Insurance.claimInsurance",
          "arguments": {
            "insurance_name": "Enterprise all-encompassing"
          }
        }
      },
      {
        "role": "assistant",
        "content": "What are the types of insurance products, such as life insurance, health insurance, property insurance, car insurance, etc."
      },
      {
        "role": "user",
        "content": "It was wrong before. Insurance Product Name should be Worry-free car crashes"
      },
      {
        "role": "function call",
        "content": {
          "name": "Finance.Insurance.claimInsurance",
          "arguments": {
            "insurance_name": "Worry-free car crashes"
          }
        }
      },
      {
        "role": "assistant",
        "content": "What are the types of insurance products, such as life insurance, health insurance, property insurance, car insurance, etc."
      },
      {
        "role": "user",
        "content": "What I need to know about property insurance."
      },
      {
        "role": "function call",
        "content": {
          "name": "Finance.Insurance.claimInsurance",
          "arguments": {
            "insurance_name": "Worry-free car crashes",
            "insurance_type": "Property insurance"
          }
        }
      },
      {
        "role": "assistant",
        "content": "What was the reason for the claim?"
      },
      {
        "role": "user",
        "content": "Property damage caused by office flooding."
      },
      {
        "role": "function call",
        "content": {
          "name": "Finance.Insurance.claimInsurance",
          "arguments": {
            "insurance_name": "Worry-free car crashes",
            "insurance_type": "Property insurance",
            "claim_reason": "Office Flooding"
          }
        }
      }
    ],
    "multiple_tools": [
      {
        "name": "Finance.Insurance.getInsuranceCoverage",
        "description": "Check the coverage of insurance products",
        "parameters": {
          "type": "object",
          "properties": {
            "insurance_name": {
              "type": "string",
              "description": "Insurance Product Name"
            },
            "insurance_type": {
              "type": "string",
              "description": "Types of insurance products, such as life insurance, health insurance, property insurance, car insurance, etc."
            }
          },
          "required": [
            "insurance_name",
            "insurance_type"
          ]
        }
      },
      {
        "name": "Finance.Insurance.claimInsurance",
        "description": "Apply for Insurance Claims",
        "parameters": {
          "type": "object",
          "properties": {
            "insurance_name": {
              "type": "string",
              "description": "Insurance Product Name"
            },
            "insurance_type": {
              "type": "string",
              "description": "Types of insurance products, such as life insurance, health insurance, property insurance, car insurance, etc."
            },
            "claim_reason": {
              "type": "string",
              "description": "Claim reason"
            },
            "claim_amount": {
              "type": "float",
              "description": "Claim amount, unit (yuan)"
            }
          },
          "required": [
            "insurance_name",
            "insurance_type",
            "claim_reason",
            "claim_amount"
          ]
        }
      },
      {
        "name": "Finance.Insurance.getInsuranceFAQ",
        "description": "Frequently asked questions and answers about insurance",
        "parameters": {
          "type": "object",
          "properties": {
            "keyword": {
              "type": "string",
              "description": "Question Keywords"
            }
          },
          "required": [
            "keyword"
          ]
        }
      },
      {
        "name": "Finance.Insurance.downloadInsuranceDocument",
        "description": "Download insurance documents",
        "parameters": {
          "type": "object",
          "properties": {
            "insurance_name": {
              "type": "string",
              "description": "Insurance Product Name"
            },
            "insurance_type": {
              "type": "string",
              "description": "Types of insurance products, such as life insurance, health insurance, etc."
            },
            "document_type": {
              "type": "string",
              "description": "Document type, such as policy contract, claim description, etc."
            }
          },
          "required": [
            "insurance_name",
            "insurance_type",
            "document_type"
          ]
        }
      },
      {
        "name": "OfficeSoftware.Documents.searchDocuments",
        "description": "Search documents by keyword",
        "parameters": {
          "type": "object",
          "properties": {
            "keyword": {
              "type": "string",
              "description": "Search keywords, required"
            }
          },
          "required": [
            "keyword"
          ]
        }
      }
    ],
    "single_tool": [
      {
        "name": "Finance.Insurance.claimInsurance",
        "description": "Apply for Insurance Claims",
        "parameters": {
          "type": "object",
          "properties": {
            "insurance_name": {
              "type": "string",
              "description": "Insurance Product Name"
            },
            "insurance_type": {
              "type": "string",
              "description": "Types of insurance products, such as life insurance, health insurance, property insurance, car insurance, etc."
            },
            "claim_reason": {
              "type": "string",
              "description": "Claim reason"
            },
            "claim_amount": {
              "type": "float",
              "description": "Claim amount, unit (yuan)"
            }
          },
          "required": [
            "insurance_name",
            "insurance_type",
            "claim_reason",
            "claim_amount"
          ]
        }
      }
    ],
    "id": 517
  },
  {
    "messages": [
      {
        "role": "user",
        "content": "Insurance Claims"
      },
      {
        "role": "function call",
        "content": {
          "name": "Finance.Insurance.claimInsurance",
          "arguments": {}
        }
      },
      {
        "role": "assistant",
        "content": "Please provide insurance product name"
      },
      {
        "role": "user",
        "content": "Worry-free car crashes"
      },
      {
        "role": "function call",
        "content": {
          "name": "Finance.Insurance.claimInsurance",
          "arguments": {
            "insurance_name": "Worry-free car crashes"
          }
        }
      },
      {
        "role": "assistant",
        "content": "What is the type of insurance product, such as life insurance, health insurance, property insurance, car insurance, etc."
      },
      {
        "role": "user",
        "content": "What I need to know about car insurance."
      },
      {
        "role": "function call",
        "content": {
          "name": "Finance.Insurance.claimInsurance",
          "arguments": {
            "insurance_name": "Worry-free car crashes",
            "insurance_type": "Car Insurance"
          }
        }
      },
      {
        "role": "assistant",
        "content": "What was the reason for the claim?"
      },
      {
        "role": "user",
        "content": "It was wrong before. Types of insurance products, such as life insurance, health insurance, property insurance, car insurance, etc. should be Property insurance"
      },
      {
        "role": "function call",
        "content": {
          "name": "Finance.Insurance.claimInsurance",
          "arguments": {
            "insurance_name": "Worry-free car crashes",
            "insurance_type": "Property insurance"
          }
        }
      },
      {
        "role": "assistant",
        "content": "What was the reason for the claim?"
      },
      {
        "role": "user",
        "content": "The cause of the claim is a traffic accident."
      },
      {
        "role": "function call",
        "content": {
          "name": "Finance.Insurance.claimInsurance",
          "arguments": {
            "insurance_name": "Worry-free car crashes",
            "insurance_type": "Property insurance",
            "claim_reason": "Traffic collision"
          }
        }
      }
    ],
    "multiple_tools": [
      {
        "name": "Finance.Insurance.getInsuranceFAQ",
        "description": "Frequently asked questions and answers about insurance",
        "parameters": {
          "type": "object",
          "properties": {
            "keyword": {
              "type": "string",
              "description": "Question Keywords"
            }
          },
          "required": [
            "keyword"
          ]
        }
      },
      {
        "name": "Finance.Insurance.downloadInsuranceDocument",
        "description": "Download insurance documents",
        "parameters": {
          "type": "object",
          "properties": {
            "insurance_name": {
              "type": "string",
              "description": "Insurance Product Name"
            },
            "insurance_type": {
              "type": "string",
              "description": "Types of insurance products, such as life insurance, health insurance, etc."
            },
            "document_type": {
              "type": "string",
              "description": "Document type, such as policy contract, claim description, etc."
            }
          },
          "required": [
            "insurance_name",
            "insurance_type",
            "document_type"
          ]
        }
      },
      {
        "name": "Finance.Insurance.getInsuranceClaimProgress",
        "description": "Check the progress of your insurance claim",
        "parameters": {
          "type": "object",
          "properties": {
            "insurance_name": {
              "type": "string",
              "description": "Insurance Product Name"
            },
            "insurance_type": {
              "type": "string",
              "description": "Types of insurance products, such as life insurance, health insurance, property insurance, car insurance, etc."
            }
          },
          "required": [
            "insurance_name",
            "insurance_type"
          ]
        }
      },
      {
        "name": "Finance.Insurance.purchaseInsurance",
        "description": "Purchase insurance products",
        "parameters": {
          "type": "object",
          "properties": {
            "insurance_name": {
              "type": "string",
              "description": "Insurance Product Name"
            },
            "insurance_type": {
              "type": "string",
              "description": "Types of insurance products, such as life insurance, health insurance, property insurance, car insurance, etc."
            },
            "insurance_benefit": {
              "type": "string",
              "description": "Beneficiary/Protected Property"
            },
            "amount": {
              "type": "float",
              "description": "Coverage Amount"
            },
            "period": {
              "type": "integer",
              "description": "Insurance period, fixed time for some products, units (years)"
            }
          },
          "required": [
            "insurance_name",
            "insurance_type",
            "insurance_benefit",
            "amount",
            "period"
          ]
        }
      },
      {
        "name": "Finance.Insurance.claimInsurance",
        "description": "Apply for Insurance Claims",
        "parameters": {
          "type": "object",
          "properties": {
            "insurance_name": {
              "type": "string",
              "description": "Insurance Product Name"
            },
            "insurance_type": {
              "type": "string",
              "description": "Types of insurance products, such as life insurance, health insurance, property insurance, car insurance, etc."
            },
            "claim_reason": {
              "type": "string",
              "description": "Claim reason"
            },
            "claim_amount": {
              "type": "float",
              "description": "Claim amount, unit (yuan)"
            }
          },
          "required": [
            "insurance_name",
            "insurance_type",
            "claim_reason",
            "claim_amount"
          ]
        }
      }
    ],
    "single_tool": [
      {
        "name": "Finance.Insurance.claimInsurance",
        "description": "Apply for Insurance Claims",
        "parameters": {
          "type": "object",
          "properties": {
            "insurance_name": {
              "type": "string",
              "description": "Insurance Product Name"
            },
            "insurance_type": {
              "type": "string",
              "description": "Types of insurance products, such as life insurance, health insurance, property insurance, car insurance, etc."
            },
            "claim_reason": {
              "type": "string",
              "description": "Claim reason"
            },
            "claim_amount": {
              "type": "float",
              "description": "Claim amount, unit (yuan)"
            }
          },
          "required": [
            "insurance_name",
            "insurance_type",
            "claim_reason",
            "claim_amount"
          ]
        }
      }
    ],
    "id": 518
  },
  {
    "messages": [
      {
        "role": "user",
        "content": "I need to download some insurance related documents, can you help me process them?"
      },
      {
        "role": "function call",
        "content": {
          "name": "Finance.Insurance.downloadInsuranceDocument",
          "arguments": {}
        }
      },
      {
        "role": "assistant",
        "content": "What is the name of the insurance product"
      },
      {
        "role": "user",
        "content": "The name of the insurance product I'm inquiring about is the Sunshine Life Protection Plan."
      },
      {
        "role": "function call",
        "content": {
          "name": "Finance.Insurance.downloadInsuranceDocument",
          "arguments": {
            "insurance_name": "Sunshine Life"
          }
        }
      },
      {
        "role": "assistant",
        "content": "What are the types of insurance products, such as life insurance, health insurance, etc."
      },
      {
        "role": "user",
        "content": "It was wrong before. Insurance Product Name should be Happiness Lifetime Critical Illness Insurance"
      },
      {
        "role": "function call",
        "content": {
          "name": "Finance.Insurance.downloadInsuranceDocument",
          "arguments": {
            "insurance_name": "Happiness Lifetime Critical Illness Insurance"
          }
        }
      },
      {
        "role": "assistant",
        "content": "What are the types of insurance products, such as life insurance, health insurance, etc."
      },
      {
        "role": "user",
        "content": "I am considering purchasing life insurance."
      },
      {
        "role": "function call",
        "content": {
          "name": "Finance.Insurance.downloadInsuranceDocument",
          "arguments": {
            "insurance_name": "Happiness Lifetime Critical Illness Insurance",
            "insurance_type": "Life Insurance"
          }
        }
      }
    ],
    "multiple_tools": [
      {
        "name": "VideoPlayback.OnlineVideos.downloadOnlineVideo",
        "description": "Download online video",
        "parameters": {
          "type": "object",
          "properties": {
            "name": {
              "type": "string",
              "description": "Video Name"
            },
            "definition": {
              "type": "string",
              "description": "Download Video Quality Selection"
            },
            "path": {
              "type": "string",
              "description": "Download Path Select Default Path"
            }
          },
          "required": [
            "name",
            "definition",
            "path"
          ]
        }
      },
      {
        "name": "OfficeSoftware.Email.downloadMailAttachment",
        "description": "Download attachments to specified messages locally",
        "parameters": {
          "type": "object",
          "properties": {
            "mail_title": {
              "type": "string",
              "description": "Subject of the message with the attachment"
            }
          },
          "required": [
            "mail_title"
          ]
        }
      },
      {
        "name": "ConvenientLiving.GovernmentServices.downloadServiceDocument",
        "description": "Download docs for city services",
        "parameters": {
          "type": "object",
          "properties": {
            "document_name": {
              "type": "string",
              "description": "Name of the document to download"
            }
          },
          "required": [
            "document_name"
          ]
        }
      },
      {
        "name": "Finance.Insurance.downloadInsuranceDocument",
        "description": "Download insurance documents",
        "parameters": {
          "type": "object",
          "properties": {
            "insurance_name": {
              "type": "string",
              "description": "Insurance Product Name"
            },
            "insurance_type": {
              "type": "string",
              "description": "Types of insurance products, such as life insurance, health insurance, etc."
            },
            "document_type": {
              "type": "string",
              "description": "Document type, such as policy contract, claim description, etc."
            }
          },
          "required": [
            "insurance_name",
            "insurance_type",
            "document_type"
          ]
        }
      },
      {
        "name": "UtilityTools.Reading.downloadReadingBook",
        "description": "Download books by title",
        "parameters": {
          "type": "object",
          "properties": {
            "book_name": {
              "type": "string",
              "description": "title of a book"
            },
            "book_author": {
              "type": "string",
              "description": "Author name"
            }
          },
          "required": [
            "book_name",
            "book_author"
          ]
        }
      }
    ],
    "single_tool": [
      {
        "name": "Finance.Insurance.downloadInsuranceDocument",
        "description": "Download insurance documents",
        "parameters": {
          "type": "object",
          "properties": {
            "insurance_name": {
              "type": "string",
              "description": "Insurance Product Name"
            },
            "insurance_type": {
              "type": "string",
              "description": "Types of insurance products, such as life insurance, health insurance, etc."
            },
            "document_type": {
              "type": "string",
              "description": "Document type, such as policy contract, claim description, etc."
            }
          },
          "required": [
            "insurance_name",
            "insurance_type",
            "document_type"
          ]
        }
      }
    ],
    "id": 529
  },
  {
    "messages": [
      {
        "role": "user",
        "content": "Can you help me download those insurance documents? I need them."
      },
      {
        "role": "function call",
        "content": {
          "name": "Finance.Insurance.downloadInsuranceDocument",
          "arguments": {}
        }
      },
      {
        "role": "assistant",
        "content": "What is the name of the insurance product"
      },
      {
        "role": "user",
        "content": "The insurance product we are considering is Family Comprehensive Insurance."
      },
      {
        "role": "function call",
        "content": {
          "name": "Finance.Insurance.downloadInsuranceDocument",
          "arguments": {
            "insurance_name": "Family Welfare Family Comprehensive Insurance"
          }
        }
      },
      {
        "role": "assistant",
        "content": "What are the types of insurance products, such as life insurance, health insurance, etc."
      },
      {
        "role": "user",
        "content": "It was wrong before. Insurance Product Name should be Happiness Lifetime Critical Illness Insurance"
      },
      {
        "role": "function call",
        "content": {
          "name": "Finance.Insurance.downloadInsuranceDocument",
          "arguments": {
            "insurance_name": "Happiness Lifetime Critical Illness Insurance"
          }
        }
      },
      {
        "role": "assistant",
        "content": "What are the types of insurance products, such as life insurance, health insurance, etc."
      },
      {
        "role": "user",
        "content": "What I need is comprehensive insurance, which can cover many aspects of protection."
      },
      {
        "role": "function call",
        "content": {
          "name": "Finance.Insurance.downloadInsuranceDocument",
          "arguments": {
            "insurance_name": "Happiness Lifetime Critical Illness Insurance",
            "insurance_type": "comprehensive insurance (= covering all risks) "
          }
        }
      }
    ],
    "multiple_tools": [
      {
        "name": "UtilityTools.Reading.downloadReadingBook",
        "description": "Download books by title",
        "parameters": {
          "type": "object",
          "properties": {
            "book_name": {
              "type": "string",
              "description": "title of a book"
            },
            "book_author": {
              "type": "string",
              "description": "Author name"
            }
          },
          "required": [
            "book_name",
            "book_author"
          ]
        }
      },
      {
        "name": "ConvenientLiving.GovernmentServices.downloadServiceDocument",
        "description": "Download docs for city services",
        "parameters": {
          "type": "object",
          "properties": {
            "document_name": {
              "type": "string",
              "description": "Name of the document to download"
            }
          },
          "required": [
            "document_name"
          ]
        }
      },
      {
        "name": "Finance.Insurance.downloadInsuranceDocument",
        "description": "Download insurance documents",
        "parameters": {
          "type": "object",
          "properties": {
            "insurance_name": {
              "type": "string",
              "description": "Insurance Product Name"
            },
            "insurance_type": {
              "type": "string",
              "description": "Types of insurance products, such as life insurance, health insurance, etc."
            },
            "document_type": {
              "type": "string",
              "description": "Document type, such as policy contract, claim description, etc."
            }
          },
          "required": [
            "insurance_name",
            "insurance_type",
            "document_type"
          ]
        }
      },
      {
        "name": "NewsMagazines.NewspapersMagazines.downloadMagazine",
        "description": "Download magazines locally based on magazine name, number of issues, etc.",
        "parameters": {
          "type": "object",
          "properties": {
            "name": {
              "type": "string",
              "description": "Magazine Name"
            },
            "issue": {
              "type": "string",
              "description": "Number of periods"
            }
          },
          "required": [
            "name",
            "issue"
          ]
        }
      },
      {
        "name": "VideoPlayback.OnlineVideos.downloadOnlineVideo",
        "description": "Download online video",
        "parameters": {
          "type": "object",
          "properties": {
            "name": {
              "type": "string",
              "description": "Video Name"
            },
            "definition": {
              "type": "string",
              "description": "Download Video Quality Selection"
            },
            "path": {
              "type": "string",
              "description": "Download Path Select Default Path"
            }
          },
          "required": [
            "name",
            "definition",
            "path"
          ]
        }
      }
    ],
    "single_tool": [
      {
        "name": "Finance.Insurance.downloadInsuranceDocument",
        "description": "Download insurance documents",
        "parameters": {
          "type": "object",
          "properties": {
            "insurance_name": {
              "type": "string",
              "description": "Insurance Product Name"
            },
            "insurance_type": {
              "type": "string",
              "description": "Types of insurance products, such as life insurance, health insurance, etc."
            },
            "document_type": {
              "type": "string",
              "description": "Document type, such as policy contract, claim description, etc."
            }
          },
          "required": [
            "insurance_name",
            "insurance_type",
            "document_type"
          ]
        }
      }
    ],
    "id": 530
  },
  {
    "messages": [
      {
        "role": "user",
        "content": "I need to update my retention information to make sure everything is up to date"
      },
      {
        "role": "function call",
        "content": {
          "name": "Finance.Insurance.updateInsuranceCustomerInfo",
          "arguments": {}
        }
      },
      {
        "role": "assistant",
        "content": "What's the name?"
      },
      {
        "role": "user",
        "content": "My name is Li Hua, how can I help you?"
      },
      {
        "role": "function call",
        "content": {
          "name": "Finance.Insurance.updateInsuranceCustomerInfo",
          "arguments": {
            "name": "Li Hua"
          }
        }
      },
      {
        "role": "assistant",
        "content": "Please provide your phone number so we can update your retention information"
      },
      {
        "role": "user",
        "content": "It was wrong before. Name should be Wangwu"
      },
      {
        "role": "function call",
        "content": {
          "name": "Finance.Insurance.updateInsuranceCustomerInfo",
          "arguments": {
            "name": "Wangwu"
          }
        }
      },
      {
        "role": "assistant",
        "content": "Please provide your phone number so we can update your retention information"
      },
      {
        "role": "user",
        "content": "My phone number is 17712344321 and can be used to update information."
      },
      {
        "role": "function call",
        "content": {
          "name": "Finance.Insurance.updateInsuranceCustomerInfo",
          "arguments": {
            "name": "Wangwu",
            "phone_number": "17712344321"
          }
        }
      }
    ],
    "multiple_tools": [
      {
        "name": "Finance.Insurance.updateInsuranceCustomerInfo",
        "description": "Update user retention information",
        "parameters": {
          "type": "object",
          "properties": {
            "name": {
              "type": "string",
              "description": "Name"
            },
            "phone_number": {
              "type": "string",
              "description": "Phone No."
            },
            "email": {
              "type": "string",
              "description": "Email"
            }
          },
          "required": [
            "name",
            "phone_number",
            "email"
          ]
        }
      },
      {
        "name": "OnlineShopping.SecondhandTrading.viewSecondhandSaleMessage",
        "description": "View message list by default",
        "parameters": {
          "type": "object",
          "properties": {},
          "required": []
        }
      },
      {
        "name": "OfficeSoftware.Email.updateMailDraft",
        "description": "Update specified message draft",
        "parameters": {
          "type": "object",
          "properties": {
            "mail_title": {
              "type": "string",
              "description": "Draft title to update"
            }
          },
          "required": [
            "mail_title"
          ]
        }
      },
      {
        "name": "SocialCommunication.InstantMessaging.updateGroupInfo",
        "description": "Update announcements and other information for a specific group",
        "parameters": {
          "type": "object",
          "properties": {
            "group_name": {
              "type": "string",
              "description": "Name of the group to update"
            },
            "new_announcement": {
              "type": "string",
              "description": "Updated group announcements"
            }
          },
          "required": [
            "group_name",
            "new_announcement"
          ]
        }
      },
      {
        "name": "SocialCommunication.Community.getCommunityNotifications",
        "description": "Get notifications from select communities",
        "parameters": {
          "type": "object",
          "properties": {
            "community_name": {
              "type": "string",
              "description": "The name of the community to be notified"
            }
          },
          "required": [
            "community_name"
          ]
        }
      }
    ],
    "single_tool": [
      {
        "name": "Finance.Insurance.updateInsuranceCustomerInfo",
        "description": "Update user retention information",
        "parameters": {
          "type": "object",
          "properties": {
            "name": {
              "type": "string",
              "description": "Name"
            },
            "phone_number": {
              "type": "string",
              "description": "Phone No."
            },
            "email": {
              "type": "string",
              "description": "Email"
            }
          },
          "required": [
            "name",
            "phone_number",
            "email"
          ]
        }
      }
    ],
    "id": 531
  },
  {
    "messages": [
      {
        "role": "user",
        "content": "Please help me refresh the data retained by the user to see if anything has changed"
      },
      {
        "role": "function call",
        "content": {
          "name": "Finance.Insurance.updateInsuranceCustomerInfo",
          "arguments": {}
        }
      },
      {
        "role": "assistant",
        "content": "Please provide a name"
      },
      {
        "role": "user",
        "content": "My name is Wang Wu, how can I help you?"
      },
      {
        "role": "function call",
        "content": {
          "name": "Finance.Insurance.updateInsuranceCustomerInfo",
          "arguments": {
            "name": "Wangwu"
          }
        }
      },
      {
        "role": "assistant",
        "content": "Please provide your phone number so we can update your retention information"
      },
      {
        "role": "user",
        "content": "It was wrong before. Name should be Li Hua"
      },
      {
        "role": "function call",
        "content": {
          "name": "Finance.Insurance.updateInsuranceCustomerInfo",
          "arguments": {
            "name": "Li Hua"
          }
        }
      },
      {
        "role": "assistant",
        "content": "Please provide your phone number so we can update your retention information"
      },
      {
        "role": "user",
        "content": "My phone number is 13212344321 and can be used to update information."
      },
      {
        "role": "function call",
        "content": {
          "name": "Finance.Insurance.updateInsuranceCustomerInfo",
          "arguments": {
            "name": "Li Hua",
            "phone_number": "13212344321"
          }
        }
      }
    ],
    "multiple_tools": [
      {
        "name": "ConvenientLiving.JobRecruitment.setJobPositionVisibility",
        "description": "Set if the position is visible to the candidate",
        "parameters": {
          "type": "object",
          "properties": {
            "position_name": {
              "type": "string",
              "description": "Job title, required"
            },
            "visibility": {
              "type": "boolean",
              "description": "Visibility, required"
            }
          },
          "required": [
            "position_name",
            "visibility"
          ]
        }
      },
      {
        "name": "Finance.Insurance.updateInsuranceCustomerInfo",
        "description": "Update user retention information",
        "parameters": {
          "type": "object",
          "properties": {
            "name": {
              "type": "string",
              "description": "Name"
            },
            "phone_number": {
              "type": "string",
              "description": "Phone No."
            },
            "email": {
              "type": "string",
              "description": "Email"
            }
          },
          "required": [
            "name",
            "phone_number",
            "email"
          ]
        }
      },
      {
        "name": "OfficeSoftware.Documents.setDocumentPermissions",
        "description": "Set access rights for the specified document",
        "parameters": {
          "type": "object",
          "properties": {
            "document_name": {
              "type": "string",
              "description": "Document name to set permissions, required"
            }
          },
          "required": [
            "document_name"
          ]
        }
      },
      {
        "name": "Health.HealthManagement.shareHealthData",
        "description": "Share the user's health data through a third-party app",
        "parameters": {
          "type": "object",
          "properties": {
            "media": {
              "type": "string",
              "description": "Choose Socials To Share Single Post"
            },
            "name": {
              "type": "string",
              "description": "Friend name"
            }
          },
          "required": [
            "media",
            "name"
          ]
        }
      },
      {
        "name": "SystemTools.SystemSettings.setSystemPrivacy",
        "description": "Set permissions for mobile app",
        "parameters": {
          "type": "object",
          "properties": {
            "app_name": {
              "type": "string",
              "description": "Αpp Name"
            },
            "location_access": {
              "type": "boolean",
              "description": "Whether to allow fetching locations"
            },
            "camera_access": {
              "type": "boolean",
              "description": "Whether to allow the use of cameras"
            }
          },
          "required": [
            "app_name",
            "location_access",
            "camera_access"
          ]
        }
      }
    ],
    "single_tool": [
      {
        "name": "Finance.Insurance.updateInsuranceCustomerInfo",
        "description": "Update user retention information",
        "parameters": {
          "type": "object",
          "properties": {
            "name": {
              "type": "string",
              "description": "Name"
            },
            "phone_number": {
              "type": "string",
              "description": "Phone No."
            },
            "email": {
              "type": "string",
              "description": "Email"
            }
          },
          "required": [
            "name",
            "phone_number",
            "email"
          ]
        }
      }
    ],
    "id": 532
  },
  {
    "messages": [
      {
        "role": "user",
        "content": "Subscribe to some funds, can you help me see what options are available?"
      },
      {
        "role": "function call",
        "content": {
          "name": "Finance.Funds.purchaseFund",
          "arguments": {}
        }
      },
      {
        "role": "assistant",
        "content": "Please provide fund name"
      },
      {
        "role": "user",
        "content": "Tech Star"
      },
      {
        "role": "function call",
        "content": {
          "name": "Finance.Funds.purchaseFund",
          "arguments": {
            "fund_name": "Tech Star"
          }
        }
      },
      {
        "role": "assistant",
        "content": "Please provide fund code"
      },
      {
        "role": "user",
        "content": "It was wrong before. Fund name should be Growth Vanguard Hybrid"
      },
      {
        "role": "function call",
        "content": {
          "name": "Finance.Funds.purchaseFund",
          "arguments": {
            "fund_name": "Growth Vanguard Hybrid"
          }
        }
      },
      {
        "role": "assistant",
        "content": "Please provide fund code"
      },
      {
        "role": "user",
        "content": "789012 is my fund code."
      },
      {
        "role": "function call",
        "content": {
          "name": "Finance.Funds.purchaseFund",
          "arguments": {
            "fund_name": "Growth Vanguard Hybrid",
            "fund_code": "789012"
          }
        }
      }
    ],
    "multiple_tools": [
      {
        "name": "ConvenientLiving.JobRecruitment.getRecommendedJobs",
        "description": "Suggest a position based on the user's resume and preferences",
        "parameters": {
          "type": "object",
          "properties": {
            "resume_path": {
              "type": "string",
              "description": "Local path to resume file"
            }
          },
          "required": [
            "resume_path"
          ]
        }
      },
      {
        "name": "ConvenientLiving.FoodDelivery.rateRestaurant",
        "description": "Rate selected restaurants",
        "parameters": {
          "type": "object",
          "properties": {
            "restaurant_name": {
              "type": "string",
              "description": "Name of the restaurant"
            },
            "rating": {
              "type": "integer",
              "description": "Rating, 1 to 5"
            },
            "comment": {
              "type": "string",
              "description": "Review Content"
            }
          },
          "required": [
            "restaurant_name",
            "rating",
            "comment"
          ]
        }
      },
      {
        "name": "Finance.Funds.purchaseFund",
        "description": "Subscription for designated funds",
        "parameters": {
          "type": "object",
          "properties": {
            "fund_name": {
              "type": "string",
              "description": "Fund name"
            },
            "fund_code": {
              "type": "string",
              "description": "Fund  Code"
            },
            "amount": {
              "type": "float",
              "description": "Amount"
            }
          },
          "required": [
            "fund_name",
            "fund_code",
            "amount"
          ]
        }
      },
      {
        "name": "Navigation.TrainTickets.queryHighSpeedRailRoutes",
        "description": "Find high-speeded rail routes from and to specific destinations",
        "parameters": {
          "type": "object",
          "properties": {
            "departure_station": {
              "type": "string",
              "description": "Departure Station"
            },
            "destination_station": {
              "type": "string",
              "description": "arrival station"
            },
            "max_results": {
              "type": "integer",
              "description": "Returns the maximum number of results, optional, default is 5"
            }
          },
          "required": [
            "departure_station",
            "destination_station",
            "max_results"
          ]
        }
      },
      {
        "name": "SystemTools.SystemSettings.setSystemLAccessibility",
        "description": "Set accessibility options for your phone",
        "parameters": {
          "type": "object",
          "properties": {
            "screen_reader": {
              "type": "boolean",
              "description": "Whether to turn on the screen reader"
            },
            "magnification": {
              "type": "boolean",
              "description": "Whether to turn on the zoom function"
            }
          },
          "required": [
            "screen_reader",
            "magnification"
          ]
        }
      }
    ],
    "single_tool": [
      {
        "name": "Finance.Funds.purchaseFund",
        "description": "Subscription for designated funds",
        "parameters": {
          "type": "object",
          "properties": {
            "fund_name": {
              "type": "string",
              "description": "Fund name"
            },
            "fund_code": {
              "type": "string",
              "description": "Fund  Code"
            },
            "amount": {
              "type": "float",
              "description": "Amount"
            }
          },
          "required": [
            "fund_name",
            "fund_code",
            "amount"
          ]
        }
      }
    ],
    "id": 536
  },
  {
    "messages": [
      {
        "role": "user",
        "content": "Fund Subscription"
      },
      {
        "role": "function call",
        "content": {
          "name": "Finance.Funds.purchaseFund",
          "arguments": {}
        }
      },
      {
        "role": "assistant",
        "content": "Please provide fund name"
      },
      {
        "role": "user",
        "content": "Growth Vanguard Hybrid"
      },
      {
        "role": "function call",
        "content": {
          "name": "Finance.Funds.purchaseFund",
          "arguments": {
            "fund_name": "Growth Vanguard Hybrid"
          }
        }
      },
      {
        "role": "assistant",
        "content": "Please provide fund code"
      },
      {
        "role": "user",
        "content": "It was wrong before. Fund name should be Tech Star"
      },
      {
        "role": "function call",
        "content": {
          "name": "Finance.Funds.purchaseFund",
          "arguments": {
            "fund_name": "Tech Star"
          }
        }
      },
      {
        "role": "assistant",
        "content": "Please provide fund code"
      },
      {
        "role": "user",
        "content": "123456 is my fund code."
      },
      {
        "role": "function call",
        "content": {
          "name": "Finance.Funds.purchaseFund",
          "arguments": {
            "fund_name": "Tech Star",
            "fund_code": "123456"
          }
        }
      }
    ],
    "multiple_tools": [
      {
        "name": "Finance.Funds.purchaseFund",
        "description": "Subscription for designated funds",
        "parameters": {
          "type": "object",
          "properties": {
            "fund_name": {
              "type": "string",
              "description": "Fund name"
            },
            "fund_code": {
              "type": "string",
              "description": "Fund  Code"
            },
            "amount": {
              "type": "float",
              "description": "Amount"
            }
          },
          "required": [
            "fund_name",
            "fund_code",
            "amount"
          ]
        }
      },
      {
        "name": "Finance.Funds.getFundSectorInfo",
        "description": "Check the details of a fund based on a specific sector",
        "parameters": {
          "type": "object",
          "properties": {
            "sector": {
              "type": "string",
              "description": "Fund Segment Name"
            }
          },
          "required": [
            "sector"
          ]
        }
      },
      {
        "name": "Travel.ScenicAreaServices.getScenicSpotInfo",
        "description": "Get detailed descriptions of designated attractions",
        "parameters": {
          "type": "object",
          "properties": {
            "name": {
              "type": "string",
              "description": "Name of the tourist area"
            }
          },
          "required": [
            "name"
          ]
        }
      },
      {
        "name": "Finance.Stocks.viewStockoperate",
        "description": "Query the stock market on the day of trading; the day of consignment; historical trading; historical consignment; T operation",
        "parameters": {
          "type": "object",
          "properties": {
            "transaction_today": {
              "type": "boolean",
              "description": "Deal of the day Default: 0 No"
            },
            "entrust_today": {
              "type": "boolean",
              "description": "Delegation of the day default: 0 No"
            },
            "transaction_his": {
              "type": "boolean",
              "description": "History Closing Default: 0 No"
            },
            "entrust_his": {
              "type": "boolean",
              "description": "Historical delegation default: 0 No"
            },
            "T_operate": {
              "type": "boolean",
              "description": "T Operation default: 0 No"
            }
          },
          "required": [
            "transaction_today",
            "entrust_today",
            "transaction_his",
            "entrust_his",
            "T_operate"
          ]
        }
      },
      {
        "name": "Finance.Funds.getFundDividend",
        "description": "Query dividend information of designated funds",
        "parameters": {
          "type": "object",
          "properties": {
            "fund_name": {
              "type": "string",
              "description": "Fund name"
            },
            "fund_code": {
              "type": "string",
              "description": "Fund  Code"
            }
          },
          "required": [
            "fund_name",
            "fund_code"
          ]
        }
      }
    ],
    "single_tool": [
      {
        "name": "Finance.Funds.purchaseFund",
        "description": "Subscription for designated funds",
        "parameters": {
          "type": "object",
          "properties": {
            "fund_name": {
              "type": "string",
              "description": "Fund name"
            },
            "fund_code": {
              "type": "string",
              "description": "Fund  Code"
            },
            "amount": {
              "type": "float",
              "description": "Amount"
            }
          },
          "required": [
            "fund_name",
            "fund_code",
            "amount"
          ]
        }
      }
    ],
    "id": 537
  },
  {
    "messages": [
      {
        "role": "user",
        "content": "Redeem some funds."
      },
      {
        "role": "function call",
        "content": {
          "name": "Finance.Funds.redeemFund",
          "arguments": {}
        }
      },
      {
        "role": "assistant",
        "content": "Please provide fund name"
      },
      {
        "role": "user",
        "content": "Yifangda consumer industry stocks are the funds I pay attention to."
      },
      {
        "role": "function call",
        "content": {
          "name": "Finance.Funds.redeemFund",
          "arguments": {
            "fund_name": "Efonda Consumer Industries Equity"
          }
        }
      },
      {
        "role": "assistant",
        "content": "Please provide the fund code and the amount you wish to redeem"
      },
      {
        "role": "user",
        "content": "It was wrong before. Fund name should be Huaxia SSE 50ETF"
      },
      {
        "role": "function call",
        "content": {
          "name": "Finance.Funds.redeemFund",
          "arguments": {
            "fund_name": "Huaxia SSE 50ETF"
          }
        }
      },
      {
        "role": "assistant",
        "content": "Please provide the fund code and the amount you wish to redeem"
      },
      {
        "role": "user",
        "content": "The fund code is 110022, and I intend to redeem 5000 yuan."
      },
      {
        "role": "function call",
        "content": {
          "name": "Finance.Funds.redeemFund",
          "arguments": {
            "fund_name": "Huaxia SSE 50ETF",
            "fund_code": "110022"
          }
        }
      }
    ],
    "multiple_tools": [
      {
        "name": "Travel.ScenicAreaServices.searchScenicSpotByLocation",
        "description": "Search nearby attractions based on user-provided location",
        "parameters": {
          "type": "object",
          "properties": {
            "location": {
              "type": "string",
              "description": "Location"
            }
          },
          "required": [
            "location"
          ]
        }
      },
      {
        "name": "Travel.ScenicAreaServices.getScenicSpotCheckInLocations",
        "description": "Get popular punch card (influencer) locations in scenic spots",
        "parameters": {
          "type": "object",
          "properties": {
            "name": {
              "type": "string",
              "description": "Name of the tourist area"
            }
          },
          "required": [
            "name"
          ]
        }
      },
      {
        "name": "Finance.Funds.redeemFund",
        "description": "Redeem the designated amount of the designated fund based on the name or code of the fund",
        "parameters": {
          "type": "object",
          "properties": {
            "fund_name": {
              "type": "string",
              "description": "Fund name"
            },
            "fund_code": {
              "type": "string",
              "description": "Fund  Code"
            },
            "amount": {
              "type": "float",
              "description": "Amount"
            }
          },
          "required": [
            "fund_name",
            "fund_code",
            "amount"
          ]
        }
      },
      {
        "name": "Travel.ScenicAreaServices.recommendSimilarScenicSpots",
        "description": "Recommend similar other scenic spots based on designated scenic spots",
        "parameters": {
          "type": "object",
          "properties": {
            "name": {
              "type": "string",
              "description": "Name of scenic spot for reference"
            }
          },
          "required": [
            "name"
          ]
        }
      },
      {
        "name": "Travel.ScenicAreaServices.getScenicSpotMap",
        "description": "Get a map of selected attractions",
        "parameters": {
          "type": "object",
          "properties": {
            "name": {
              "type": "string",
              "description": "Name of the tourist area"
            }
          },
          "required": [
            "name"
          ]
        }
      }
    ],
    "single_tool": [
      {
        "name": "Finance.Funds.redeemFund",
        "description": "Redeem the designated amount of the designated fund based on the name or code of the fund",
        "parameters": {
          "type": "object",
          "properties": {
            "fund_name": {
              "type": "string",
              "description": "Fund name"
            },
            "fund_code": {
              "type": "string",
              "description": "Fund  Code"
            },
            "amount": {
              "type": "float",
              "description": "Amount"
            }
          },
          "required": [
            "fund_name",
            "fund_code",
            "amount"
          ]
        }
      }
    ],
    "id": 538
  },
  {
    "messages": [
      {
        "role": "user",
        "content": "Redemption"
      },
      {
        "role": "function call",
        "content": {
          "name": "Finance.Funds.redeemFund",
          "arguments": {}
        }
      },
      {
        "role": "assistant",
        "content": "Please provide fund name"
      },
      {
        "role": "user",
        "content": "Huaxia SSE 50ETF"
      },
      {
        "role": "function call",
        "content": {
          "name": "Finance.Funds.redeemFund",
          "arguments": {
            "fund_name": "Huaxia SSE 50ETF"
          }
        }
      },
      {
        "role": "assistant",
        "content": "Please provide fund code and redemption amount"
      },
      {
        "role": "user",
        "content": "It was wrong before. Fund name should be Efonda Consumer Industries Equity"
      },
      {
        "role": "function call",
        "content": {
          "name": "Finance.Funds.redeemFund",
          "arguments": {
            "fund_name": "Efonda Consumer Industries Equity"
          }
        }
      },
      {
        "role": "assistant",
        "content": "Please provide fund code and redemption amount"
      },
      {
        "role": "user",
        "content": "The fund code is 510050, and the redemption amount is 10,000 yuan."
      },
      {
        "role": "function call",
        "content": {
          "name": "Finance.Funds.redeemFund",
          "arguments": {
            "fund_name": "Efonda Consumer Industries Equity",
            "fund_code": "510050"
          }
        }
      }
    ],
    "multiple_tools": [
      {
        "name": "Finance.Funds.redeemFund",
        "description": "Redeem the designated amount of the designated fund based on the name or code of the fund",
        "parameters": {
          "type": "object",
          "properties": {
            "fund_name": {
              "type": "string",
              "description": "Fund name"
            },
            "fund_code": {
              "type": "string",
              "description": "Fund  Code"
            },
            "amount": {
              "type": "float",
              "description": "Amount"
            }
          },
          "required": [
            "fund_name",
            "fund_code",
            "amount"
          ]
        }
      },
      {
        "name": "Finance.Banking.redempteFinancialProducts",
        "description": "Redeem purchased wealth management products",
        "parameters": {
          "type": "object",
          "properties": {
            "product": {
              "type": "string",
              "description": "Name of financial product"
            },
            "redempte_amount": {
              "type": "float",
              "description": "Redemption Amount"
            }
          },
          "required": [
            "product",
            "redempte_amount"
          ]
        }
      },
      {
        "name": "OfficeSoftware.Email.forwardMail",
        "description": "Forward the specified message",
        "parameters": {
          "type": "object",
          "properties": {
            "mail_title": {
              "type": "string",
              "description": "Title of the message to forward"
            },
            "receivers": {
              "type": "string",
              "description": "Recipient of the forwarded message"
            }
          },
          "required": [
            "mail_title",
            "receivers"
          ]
        }
      },
      {
        "name": "UtilityTools.Memo.toppingNotes",
        "description": "Stick a memo to the top based on the title",
        "parameters": {
          "type": "object",
          "properties": {
            "title": {
              "type": "string",
              "description": "Memo Title"
            },
            "category": {
              "type": "string",
              "description": "Classify"
            }
          },
          "required": [
            "title",
            "category"
          ]
        }
      },
      {
        "name": "Finance.Funds.getFundRedemptionFee",
        "description": "Query redemption fee information for designated funds",
        "parameters": {
          "type": "object",
          "properties": {
            "fund_name": {
              "type": "string",
              "description": "Fund name"
            },
            "fund_code": {
              "type": "string",
              "description": "Fund  Code"
            }
          },
          "required": [
            "fund_name",
            "fund_code"
          ]
        }
      }
    ],
    "single_tool": [
      {
        "name": "Finance.Funds.redeemFund",
        "description": "Redeem the designated amount of the designated fund based on the name or code of the fund",
        "parameters": {
          "type": "object",
          "properties": {
            "fund_name": {
              "type": "string",
              "description": "Fund name"
            },
            "fund_code": {
              "type": "string",
              "description": "Fund  Code"
            },
            "amount": {
              "type": "float",
              "description": "Amount"
            }
          },
          "required": [
            "fund_name",
            "fund_code",
            "amount"
          ]
        }
      }
    ],
    "id": 539
  },
  {
    "messages": [
      {
        "role": "user",
        "content": "Fund Automatic Subscription Settings"
      },
      {
        "role": "function call",
        "content": {
          "name": "Finance.Funds.setFundAutoPurchase",
          "arguments": {}
        }
      },
      {
        "role": "assistant",
        "content": "Please provide fund name"
      },
      {
        "role": "user",
        "content": "Tianhong Enhanced Revenue"
      },
      {
        "role": "function call",
        "content": {
          "name": "Finance.Funds.setFundAutoPurchase",
          "arguments": {
            "fund_name": "Tianhong Enhanced Revenue"
          }
        }
      },
      {
        "role": "assistant",
        "content": "Please provide fund code"
      },
      {
        "role": "user",
        "content": "It was wrong before. Fund name should be Yifangda Small and Medium Plate"
      },
      {
        "role": "function call",
        "content": {
          "name": "Finance.Funds.setFundAutoPurchase",
          "arguments": {
            "fund_name": "Yifangda Small and Medium Plate"
          }
        }
      },
      {
        "role": "assistant",
        "content": "Please provide fund code"
      },
      {
        "role": "user",
        "content": "320007 is the fund code I need to look up."
      },
      {
        "role": "function call",
        "content": {
          "name": "Finance.Funds.setFundAutoPurchase",
          "arguments": {
            "fund_name": "Yifangda Small and Medium Plate",
            "fund_code": "320007"
          }
        }
      },
      {
        "role": "assistant",
        "content": "What is the frequency per month per week or per day"
      },
      {
        "role": "user",
        "content": "Monthly"
      },
      {
        "role": "function call",
        "content": {
          "name": "Finance.Funds.setFundAutoPurchase",
          "arguments": {
            "fund_name": "Yifangda Small and Medium Plate",
            "fund_code": "320007",
            "frequency": "Monthly"
          }
        }
      }
    ],
    "multiple_tools": [
      {
        "name": "OfficeSoftware.CloudStorage.netdiskSetRecycleBinAutoEmpty",
        "description": "Set when the Drive Recycle Bin automatically empties",
        "parameters": {
          "type": "object",
          "properties": {
            "interval_days": {
              "type": "string",
              "description": "Time automatically emptied"
            }
          },
          "required": [
            "interval_days"
          ]
        }
      },
      {
        "name": "ConvenientLiving.UtilityPayments.setAutoPayment",
        "description": "Set up automatic payment for utilities, etc.",
        "parameters": {
          "type": "object",
          "properties": {
            "service_type": {
              "type": "string",
              "description": "Types of paid services, such as utilities, gas, etc."
            },
            "user_name": {
              "type": "string",
              "description": "User Name"
            }
          },
          "required": [
            "service_type",
            "user_name"
          ]
        }
      },
      {
        "name": "UtilityTools.AlarmClock.editTimer",
        "description": "Modify timer ring settings",
        "parameters": {
          "type": "object",
          "properties": {
            "timer_name": {
              "type": "string",
              "description": "Timer Name:      {0}"
            },
            "timer": {
              "type": "string",
              "description": "Timer time"
            }
          },
          "required": [
            "timer_name",
            "timer"
          ]
        }
      },
      {
        "name": "Finance.Funds.setFundAutoRedeem",
        "description": "Set auto-redemption for designated funds",
        "parameters": {
          "type": "object",
          "properties": {
            "fund_name": {
              "type": "string",
              "description": "Fund name"
            },
            "fund_code": {
              "type": "string",
              "description": "Fund  Code"
            },
            "amount": {
              "type": "float",
              "description": "Value (Unit: yuan)"
            },
            "triggering_conditions": {
              "type": "string",
              "description": "Trigger conditions, such as net worth reaching a certain value"
            }
          },
          "required": [
            "fund_name",
            "fund_code",
            "amount",
            "triggering_conditions"
          ]
        }
      },
      {
        "name": "Finance.Funds.setFundAutoPurchase",
        "description": "Set auto-requisition for specified funds",
        "parameters": {
          "type": "object",
          "properties": {
            "fund_name": {
              "type": "string",
              "description": "Fund name"
            },
            "fund_code": {
              "type": "string",
              "description": "Fund  Code"
            },
            "amount": {
              "type": "float",
              "description": "Value (Unit: yuan)"
            },
            "frequency": {
              "type": "string",
              "description": "Frequency, default is monthly, value is monthly, weekly or daily"
            }
          },
          "required": [
            "fund_name",
            "fund_code",
            "amount",
            "frequency"
          ]
        }
      }
    ],
    "single_tool": [
      {
        "name": "Finance.Funds.setFundAutoPurchase",
        "description": "Set auto-requisition for specified funds",
        "parameters": {
          "type": "object",
          "properties": {
            "fund_name": {
              "type": "string",
              "description": "Fund name"
            },
            "fund_code": {
              "type": "string",
              "description": "Fund  Code"
            },
            "amount": {
              "type": "float",
              "description": "Value (Unit: yuan)"
            },
            "frequency": {
              "type": "string",
              "description": "Frequency, default is monthly, value is monthly, weekly or daily"
            }
          },
          "required": [
            "fund_name",
            "fund_code",
            "amount",
            "frequency"
          ]
        }
      }
    ],
    "id": 552
  },
  {
    "messages": [
      {
        "role": "user",
        "content": "Set up an automatic redemption of funds."
      },
      {
        "role": "function call",
        "content": {
          "name": "Finance.Funds.setFundAutoRedeem",
          "arguments": {}
        }
      },
      {
        "role": "assistant",
        "content": "Please provide fund name"
      },
      {
        "role": "user",
        "content": "I focus on “solid yield” funds."
      },
      {
        "role": "function call",
        "content": {
          "name": "Finance.Funds.setFundAutoRedeem",
          "arguments": {
            "fund_name": "Robust Earnings"
          }
        }
      },
      {
        "role": "assistant",
        "content": "Please provide fund code"
      },
      {
        "role": "user",
        "content": "It was wrong before. Fund name should be Growth Star"
      },
      {
        "role": "function call",
        "content": {
          "name": "Finance.Funds.setFundAutoRedeem",
          "arguments": {
            "fund_name": "Growth Star"
          }
        }
      },
      {
        "role": "assistant",
        "content": "Please provide fund code"
      },
      {
        "role": "user",
        "content": "005678, this is the fund code I want to query."
      },
      {
        "role": "function call",
        "content": {
          "name": "Finance.Funds.setFundAutoRedeem",
          "arguments": {
            "fund_name": "Growth Star",
            "fund_code": "005678"
          }
        }
      },
      {
        "role": "assistant",
        "content": "How many units of auto-redemption amount need to be set is Yuan?"
      },
      {
        "role": "user",
        "content": "Yes, the set auto-redeem amount is 10000.0 yuan."
      },
      {
        "role": "function call",
        "content": {
          "name": "Finance.Funds.setFundAutoRedeem",
          "arguments": {
            "fund_name": "Growth Star",
            "fund_code": "005678",
            "amount": 10000.0
          }
        }
      }
    ],
    "multiple_tools": [
      {
        "name": "SystemTools.SystemSettings.setSystemDataUsage",
        "description": "Set maximum limits and early warning thresholds for your phone's data usage",
        "parameters": {
          "type": "object",
          "properties": {
            "data_limit": {
              "type": "integer",
              "description": "Maximum data usage limit in GB"
            },
            "warning_threshold": {
              "type": "integer",
              "description": "Traffic warning threshold in GB"
            }
          },
          "required": [
            "data_limit",
            "warning_threshold"
          ]
        }
      },
      {
        "name": "OfficeSoftware.CloudStorage.netdiskSetRecycleBinAutoEmpty",
        "description": "Set when the Drive Recycle Bin automatically empties",
        "parameters": {
          "type": "object",
          "properties": {
            "interval_days": {
              "type": "string",
              "description": "Time automatically emptied"
            }
          },
          "required": [
            "interval_days"
          ]
        }
      },
      {
        "name": "Finance.Funds.getFundRedemptionFee",
        "description": "Query redemption fee information for designated funds",
        "parameters": {
          "type": "object",
          "properties": {
            "fund_name": {
              "type": "string",
              "description": "Fund name"
            },
            "fund_code": {
              "type": "string",
              "description": "Fund  Code"
            }
          },
          "required": [
            "fund_name",
            "fund_code"
          ]
        }
      },
      {
        "name": "Finance.Funds.setFundAutoRedeem",
        "description": "Set auto-redemption for designated funds",
        "parameters": {
          "type": "object",
          "properties": {
            "fund_name": {
              "type": "string",
              "description": "Fund name"
            },
            "fund_code": {
              "type": "string",
              "description": "Fund  Code"
            },
            "amount": {
              "type": "float",
              "description": "Value (Unit: yuan)"
            },
            "triggering_conditions": {
              "type": "string",
              "description": "Trigger conditions, such as net worth reaching a certain value"
            }
          },
          "required": [
            "fund_name",
            "fund_code",
            "amount",
            "triggering_conditions"
          ]
        }
      },
      {
        "name": "Finance.Funds.setFundAutoPurchase",
        "description": "Set auto-requisition for specified funds",
        "parameters": {
          "type": "object",
          "properties": {
            "fund_name": {
              "type": "string",
              "description": "Fund name"
            },
            "fund_code": {
              "type": "string",
              "description": "Fund  Code"
            },
            "amount": {
              "type": "float",
              "description": "Value (Unit: yuan)"
            },
            "frequency": {
              "type": "string",
              "description": "Frequency, default is monthly, value is monthly, weekly or daily"
            }
          },
          "required": [
            "fund_name",
            "fund_code",
            "amount",
            "frequency"
          ]
        }
      }
    ],
    "single_tool": [
      {
        "name": "Finance.Funds.setFundAutoRedeem",
        "description": "Set auto-redemption for designated funds",
        "parameters": {
          "type": "object",
          "properties": {
            "fund_name": {
              "type": "string",
              "description": "Fund name"
            },
            "fund_code": {
              "type": "string",
              "description": "Fund  Code"
            },
            "amount": {
              "type": "float",
              "description": "Value (Unit: yuan)"
            },
            "triggering_conditions": {
              "type": "string",
              "description": "Trigger conditions, such as net worth reaching a certain value"
            }
          },
          "required": [
            "fund_name",
            "fund_code",
            "amount",
            "triggering_conditions"
          ]
        }
      }
    ],
    "id": 553
  },
  {
    "messages": [
      {
        "role": "user",
        "content": "Automatic redemption credit settings."
      },
      {
        "role": "function call",
        "content": {
          "name": "Finance.Funds.setFundAutoRedeem",
          "arguments": {}
        }
      },
      {
        "role": "assistant",
        "content": "Please provide fund name"
      },
      {
        "role": "user",
        "content": "Growth Star"
      },
      {
        "role": "function call",
        "content": {
          "name": "Finance.Funds.setFundAutoRedeem",
          "arguments": {
            "fund_name": "Growth Star"
          }
        }
      },
      {
        "role": "assistant",
        "content": "Please provide fund code"
      },
      {
        "role": "user",
        "content": "It was wrong before. Fund name should be Robust Earnings"
      },
      {
        "role": "function call",
        "content": {
          "name": "Finance.Funds.setFundAutoRedeem",
          "arguments": {
            "fund_name": "Robust Earnings"
          }
        }
      },
      {
        "role": "assistant",
        "content": "Please provide fund code"
      },
      {
        "role": "user",
        "content": "001234, this is the fund code I want to query."
      },
      {
        "role": "function call",
        "content": {
          "name": "Finance.Funds.setFundAutoRedeem",
          "arguments": {
            "fund_name": "Robust Earnings",
            "fund_code": "001234"
          }
        }
      },
      {
        "role": "assistant",
        "content": "How many units of auto-redemption amount need to be set is Yuan?"
      },
      {
        "role": "user",
        "content": "The automatic redemption amount is set to 5000.0 yuan."
      },
      {
        "role": "function call",
        "content": {
          "name": "Finance.Funds.setFundAutoRedeem",
          "arguments": {
            "fund_name": "Robust Earnings",
            "fund_code": "001234",
            "amount": 5000.0
          }
        }
      }
    ],
    "multiple_tools": [
      {
        "name": "ConvenientLiving.GovernmentServices.queryResidentialPermitInfo",
        "description": "Check the progress of the residence permit, the validity period, etc.",
        "parameters": {
          "type": "object",
          "properties": {
            "applicant_name": {
              "type": "string",
              "description": "Name of Applicant"
            }
          },
          "required": [
            "applicant_name"
          ]
        }
      },
      {
        "name": "Finance.Funds.getFundRedemptionFee",
        "description": "Query redemption fee information for designated funds",
        "parameters": {
          "type": "object",
          "properties": {
            "fund_name": {
              "type": "string",
              "description": "Fund name"
            },
            "fund_code": {
              "type": "string",
              "description": "Fund  Code"
            }
          },
          "required": [
            "fund_name",
            "fund_code"
          ]
        }
      },
      {
        "name": "OfficeSoftware.CloudStorage.netdiskSetRecycleBinAutoEmpty",
        "description": "Set when the Drive Recycle Bin automatically empties",
        "parameters": {
          "type": "object",
          "properties": {
            "interval_days": {
              "type": "string",
              "description": "Time automatically emptied"
            }
          },
          "required": [
            "interval_days"
          ]
        }
      },
      {
        "name": "Finance.Funds.setFundAutoRedeem",
        "description": "Set auto-redemption for designated funds",
        "parameters": {
          "type": "object",
          "properties": {
            "fund_name": {
              "type": "string",
              "description": "Fund name"
            },
            "fund_code": {
              "type": "string",
              "description": "Fund  Code"
            },
            "amount": {
              "type": "float",
              "description": "Value (Unit: yuan)"
            },
            "triggering_conditions": {
              "type": "string",
              "description": "Trigger conditions, such as net worth reaching a certain value"
            }
          },
          "required": [
            "fund_name",
            "fund_code",
            "amount",
            "triggering_conditions"
          ]
        }
      },
      {
        "name": "Finance.Funds.setFundAutoPurchase",
        "description": "Set auto-requisition for specified funds",
        "parameters": {
          "type": "object",
          "properties": {
            "fund_name": {
              "type": "string",
              "description": "Fund name"
            },
            "fund_code": {
              "type": "string",
              "description": "Fund  Code"
            },
            "amount": {
              "type": "float",
              "description": "Value (Unit: yuan)"
            },
            "frequency": {
              "type": "string",
              "description": "Frequency, default is monthly, value is monthly, weekly or daily"
            }
          },
          "required": [
            "fund_name",
            "fund_code",
            "amount",
            "frequency"
          ]
        }
      }
    ],
    "single_tool": [
      {
        "name": "Finance.Funds.setFundAutoRedeem",
        "description": "Set auto-redemption for designated funds",
        "parameters": {
          "type": "object",
          "properties": {
            "fund_name": {
              "type": "string",
              "description": "Fund name"
            },
            "fund_code": {
              "type": "string",
              "description": "Fund  Code"
            },
            "amount": {
              "type": "float",
              "description": "Value (Unit: yuan)"
            },
            "triggering_conditions": {
              "type": "string",
              "description": "Trigger conditions, such as net worth reaching a certain value"
            }
          },
          "required": [
            "fund_name",
            "fund_code",
            "amount",
            "triggering_conditions"
          ]
        }
      }
    ],
    "id": 554
  },
  {
    "messages": [
      {
        "role": "user",
        "content": "Update the amount subscribed for the fund."
      },
      {
        "role": "function call",
        "content": {
          "name": "Finance.Funds.updateFundPurchaseAmount",
          "arguments": {}
        }
      },
      {
        "role": "assistant",
        "content": "What is the name of the fund"
      },
      {
        "role": "user",
        "content": "Science and Technology Innovation Fund"
      },
      {
        "role": "function call",
        "content": {
          "name": "Finance.Funds.updateFundPurchaseAmount",
          "arguments": {
            "fund_name": "Science and Technology Innovation Fund"
          }
        }
      },
      {
        "role": "assistant",
        "content": "Please provide fund code"
      },
      {
        "role": "user",
        "content": "005678, this is the fund code I want to query."
      },
      {
        "role": "function call",
        "content": {
          "name": "Finance.Funds.updateFundPurchaseAmount",
          "arguments": {
            "fund_name": "Science and Technology Innovation Fund",
            "fund_code": "005678"
          }
        }
      },
      {
        "role": "assistant",
        "content": "How many unit yuan is the updated amount?"
      },
      {
        "role": "user",
        "content": "It was wrong before. Fund  Code should be 001234"
      },
      {
        "role": "function call",
        "content": {
          "name": "Finance.Funds.updateFundPurchaseAmount",
          "arguments": {
            "fund_name": "Science and Technology Innovation Fund",
            "fund_code": "001234"
          }
        }
      },
      {
        "role": "assistant",
        "content": "How many unit yuan is the updated amount?"
      },
      {
        "role": "user",
        "content": "The updated amount is 4500.0 yuan."
      },
      {
        "role": "function call",
        "content": {
          "name": "Finance.Funds.updateFundPurchaseAmount",
          "arguments": {
            "fund_name": "Science and Technology Innovation Fund",
            "fund_code": "001234",
            "new_amount": 4500.0
          }
        }
      }
    ],
    "multiple_tools": [
      {
        "name": "OnlineShopping.ExpressDelivery.updateAddress",
        "description": "Update old address to specified address",
        "parameters": {
          "type": "object",
          "properties": {
            "name": {
              "type": "string",
              "description": "Recipient's name"
            },
            "phone": {
              "type": "string",
              "description": "Recipient phone number"
            },
            "address": {
              "type": "string",
              "description": "To"
            },
            "new_address": {
              "type": "string",
              "description": "What's new after the update"
            }
          },
          "required": [
            "name",
            "phone",
            "address",
            "new_address"
          ]
        }
      },
      {
        "name": "Finance.Funds.updateFundPurchaseAmount",
        "description": "Update Subscription Amount for Designated Funds",
        "parameters": {
          "type": "object",
          "properties": {
            "fund_name": {
              "type": "string",
              "description": "Fund name"
            },
            "fund_code": {
              "type": "string",
              "description": "Fund  Code"
            },
            "new_amount": {
              "type": "float",
              "description": "Updated amount, unit (yuan)"
            },
            "delta_amount": {
              "type": "float",
              "description": "Amount of increase or decrease, unit (yuan)"
            }
          },
          "required": [
            "fund_name",
            "fund_code",
            "new_amount",
            "delta_amount"
          ]
        }
      },
      {
        "name": "Finance.Payment.updatePayUserInfo",
        "description": "Update account user information",
        "parameters": {
          "type": "object",
          "properties": {
            "user_name": {
              "type": "string",
              "description": "username"
            },
            "phone": {
              "type": "string",
              "description": "User's phone number"
            },
            "address": {
              "type": "string",
              "description": "User Address"
            }
          },
          "required": [
            "user_name",
            "phone",
            "address"
          ]
        }
      },
      {
        "name": "SystemTools.SystemSettings.modifyuserAccounts",
        "description": "Modify the current user's information",
        "parameters": {
          "type": "object",
          "properties": {
            "phone_number": {
              "type": "string",
              "description": "Phone No."
            },
            "nickname": {
              "type": "string",
              "description": "Nickname"
            }
          },
          "required": [
            "phone_number",
            "nickname"
          ]
        }
      },
      {
        "name": "Finance.Insurance.updateInsuranceCustomerInfo",
        "description": "Update user retention information",
        "parameters": {
          "type": "object",
          "properties": {
            "name": {
              "type": "string",
              "description": "Name"
            },
            "phone_number": {
              "type": "string",
              "description": "Phone No."
            },
            "email": {
              "type": "string",
              "description": "Email"
            }
          },
          "required": [
            "name",
            "phone_number",
            "email"
          ]
        }
      }
    ],
    "single_tool": [
      {
        "name": "Finance.Funds.updateFundPurchaseAmount",
        "description": "Update Subscription Amount for Designated Funds",
        "parameters": {
          "type": "object",
          "properties": {
            "fund_name": {
              "type": "string",
              "description": "Fund name"
            },
            "fund_code": {
              "type": "string",
              "description": "Fund  Code"
            },
            "new_amount": {
              "type": "float",
              "description": "Updated amount, unit (yuan)"
            },
            "delta_amount": {
              "type": "float",
              "description": "Amount of increase or decrease, unit (yuan)"
            }
          },
          "required": [
            "fund_name",
            "fund_code",
            "new_amount",
            "delta_amount"
          ]
        }
      }
    ],
    "id": 555
  },
  {
    "messages": [
      {
        "role": "user",
        "content": "Give me an update on the options for how much credit you'd like to purchase."
      },
      {
        "role": "function call",
        "content": {
          "name": "Finance.Funds.updateFundPurchaseAmount",
          "arguments": {}
        }
      },
      {
        "role": "assistant",
        "content": "What is the name of the fund"
      },
      {
        "role": "user",
        "content": "The name of the fund is Steady Growth Fund"
      },
      {
        "role": "function call",
        "content": {
          "name": "Finance.Funds.updateFundPurchaseAmount",
          "arguments": {
            "fund_name": "Steady Growth Fund"
          }
        }
      },
      {
        "role": "assistant",
        "content": "Please provide fund code"
      },
      {
        "role": "user",
        "content": "It was wrong before. Fund name should be Science and Technology Innovation Fund"
      },
      {
        "role": "function call",
        "content": {
          "name": "Finance.Funds.updateFundPurchaseAmount",
          "arguments": {
            "fund_name": "Science and Technology Innovation Fund"
          }
        }
      },
      {
        "role": "assistant",
        "content": "Please provide fund code"
      },
      {
        "role": "user",
        "content": "001234 is my fund code."
      },
      {
        "role": "function call",
        "content": {
          "name": "Finance.Funds.updateFundPurchaseAmount",
          "arguments": {
            "fund_name": "Science and Technology Innovation Fund",
            "fund_code": "001234"
          }
        }
      },
      {
        "role": "assistant",
        "content": "How many unit yuan is the updated amount?"
      },
      {
        "role": "user",
        "content": "The updated amount is 3000.0 yuan."
      },
      {
        "role": "function call",
        "content": {
          "name": "Finance.Funds.updateFundPurchaseAmount",
          "arguments": {
            "fund_name": "Science and Technology Innovation Fund",
            "fund_code": "001234",
            "new_amount": 3000.0
          }
        }
      }
    ],
    "multiple_tools": [
      {
        "name": "Finance.Funds.recommendFunds",
        "description": "Recommend user-friendly funds based on investment objectives and duration",
        "parameters": {
          "type": "object",
          "properties": {
            "objective": {
              "type": "string",
              "description": "Investment objectives such as robust, aggressive"
            },
            "investment_term": {
              "type": "string",
              "description": "Investment term, e.g. short term, long term"
            }
          },
          "required": [
            "objective",
            "investment_term"
          ]
        }
      },
      {
        "name": "Finance.Funds.updateFundPurchaseAmount",
        "description": "Update Subscription Amount for Designated Funds",
        "parameters": {
          "type": "object",
          "properties": {
            "fund_name": {
              "type": "string",
              "description": "Fund name"
            },
            "fund_code": {
              "type": "string",
              "description": "Fund  Code"
            },
            "new_amount": {
              "type": "float",
              "description": "Updated amount, unit (yuan)"
            },
            "delta_amount": {
              "type": "float",
              "description": "Amount of increase or decrease, unit (yuan)"
            }
          },
          "required": [
            "fund_name",
            "fund_code",
            "new_amount",
            "delta_amount"
          ]
        }
      },
      {
        "name": "OfficeSoftware.Email.collectMail",
        "description": "Favorite a specified message",
        "parameters": {
          "type": "object",
          "properties": {
            "mail_title": {
              "type": "string",
              "description": "Title of the message to favorite"
            }
          },
          "required": [
            "mail_title"
          ]
        }
      },
      {
        "name": "OnlineShopping.SecondhandTrading.viewSecondhandSaleMessage",
        "description": "View message list by default",
        "parameters": {
          "type": "object",
          "properties": {},
          "required": []
        }
      },
      {
        "name": "OfficeSoftware.Email.appendixManageMail",
        "description": "Get all attachments",
        "parameters": {
          "type": "object",
          "properties": {},
          "required": []
        }
      }
    ],
    "single_tool": [
      {
        "name": "Finance.Funds.updateFundPurchaseAmount",
        "description": "Update Subscription Amount for Designated Funds",
        "parameters": {
          "type": "object",
          "properties": {
            "fund_name": {
              "type": "string",
              "description": "Fund name"
            },
            "fund_code": {
              "type": "string",
              "description": "Fund  Code"
            },
            "new_amount": {
              "type": "float",
              "description": "Updated amount, unit (yuan)"
            },
            "delta_amount": {
              "type": "float",
              "description": "Amount of increase or decrease, unit (yuan)"
            }
          },
          "required": [
            "fund_name",
            "fund_code",
            "new_amount",
            "delta_amount"
          ]
        }
      }
    ],
    "id": 556
  },
  {
    "messages": [
      {
        "role": "user",
        "content": "To update the redemption amount of the fund"
      },
      {
        "role": "function call",
        "content": {
          "name": "Finance.Funds.updateFundRedeemAmount",
          "arguments": {}
        }
      },
      {
        "role": "assistant",
        "content": "Please provide fund name"
      },
      {
        "role": "user",
        "content": "Yifangda Blue Chip Selection Hybrid Fund"
      },
      {
        "role": "function call",
        "content": {
          "name": "Finance.Funds.updateFundRedeemAmount",
          "arguments": {
            "fund_name": "Yifangda Blue Chip Selection Hybrid Fund"
          }
        }
      },
      {
        "role": "assistant",
        "content": "Please provide fund code"
      },
      {
        "role": "user",
        "content": "It was wrong before. Fund name should be Huaxia Large-cap Selection Hybrid Fund"
      },
      {
        "role": "function call",
        "content": {
          "name": "Finance.Funds.updateFundRedeemAmount",
          "arguments": {
            "fund_name": "Huaxia Large-cap Selection Hybrid Fund"
          }
        }
      },
      {
        "role": "assistant",
        "content": "Please provide fund code"
      },
      {
        "role": "user",
        "content": "005827 is the fund code I need to look up."
      },
      {
        "role": "function call",
        "content": {
          "name": "Finance.Funds.updateFundRedeemAmount",
          "arguments": {
            "fund_name": "Huaxia Large-cap Selection Hybrid Fund",
            "fund_code": "005827"
          }
        }
      },
      {
        "role": "assistant",
        "content": "Please provide the updated redemption amount in Yuan"
      },
      {
        "role": "user",
        "content": "The updated redemption amount is 3000.0 yuan."
      },
      {
        "role": "function call",
        "content": {
          "name": "Finance.Funds.updateFundRedeemAmount",
          "arguments": {
            "fund_name": "Huaxia Large-cap Selection Hybrid Fund",
            "fund_code": "005827",
            "new_amount": 3000.0
          }
        }
      }
    ],
    "multiple_tools": [
      {
        "name": "ConvenientLiving.FoodDelivery.updateRestaurantOrder",
        "description": "Updating order information based on the order, such as delivery address, notes, etc.",
        "parameters": {
          "type": "object",
          "properties": {
            "order_name": {
              "type": "string",
              "description": "Contents of the order"
            },
            "delivery_address": {
              "type": "string",
              "description": "Delivery address"
            },
            "delivery_time": {
              "type": "string",
              "description": "Expected delivery time in HH: mm format"
            },
            "note": {
              "type": "string",
              "description": "Remarks"
            }
          },
          "required": [
            "order_name",
            "delivery_address",
            "delivery_time",
            "note"
          ]
        }
      },
      {
        "name": "Navigation.TrainTickets.updateTrainWaitlistOrder",
        "description": "Used to modify submitted train ticket waiting list information",
        "parameters": {
          "type": "object",
          "properties": {
            "train_number": {
              "type": "string",
              "description": "Booked trips"
            },
            "passenger_name": {
              "type": "string",
              "description": "Rider's name"
            },
            "after_number": {
              "type": "string",
              "description": "Booked trips"
            },
            "new_departure_date": {
              "type": "string",
              "description": "New departure date, format 'YYYY-MM-DD', optional if modified"
            },
            "new_seat_type": {
              "type": "string",
              "description": "Seat Type"
            }
          },
          "required": [
            "train_number",
            "passenger_name",
            "after_number",
            "new_departure_date",
            "new_seat_type"
          ]
        }
      },
      {
        "name": "OfficeSoftware.Documents.updateDocument",
        "description": "Updates the specified document content based on the document name",
        "parameters": {
          "type": "object",
          "properties": {
            "document_name": {
              "type": "string",
              "description": "Document name to update, required"
            },
            "new_content": {
              "type": "string",
              "description": "New document content, required"
            }
          },
          "required": [
            "document_name",
            "new_content"
          ]
        }
      },
      {
        "name": "Finance.Funds.updateFundRedeemAmount",
        "description": "Update Redemption Amount for Designated Funds",
        "parameters": {
          "type": "object",
          "properties": {
            "fund_name": {
              "type": "string",
              "description": "Fund name"
            },
            "fund_code": {
              "type": "string",
              "description": "Fund  Code"
            },
            "new_amount": {
              "type": "float",
              "description": "Updated redemption amount, unit (yuan)"
            },
            "delta_amount": {
              "type": "float",
              "description": "Increase or decrease in redemption amount, unit (yuan)"
            }
          },
          "required": [
            "fund_name",
            "fund_code",
            "new_amount",
            "delta_amount"
          ]
        }
      },
      {
        "name": "Navigation.TaxiCarRental.modifyCarRentalOrder",
        "description": "Modify the contents of a rental order, such as pick-up time, drop-off time, pick-up person, pick-up location, etc.",
        "parameters": {
          "type": "object",
          "properties": {
            "time": {
              "type": "string",
              "description": "Release Date"
            }
          },
          "required": [
            "time"
          ]
        }
      }
    ],
    "single_tool": [
      {
        "name": "Finance.Funds.updateFundRedeemAmount",
        "description": "Update Redemption Amount for Designated Funds",
        "parameters": {
          "type": "object",
          "properties": {
            "fund_name": {
              "type": "string",
              "description": "Fund name"
            },
            "fund_code": {
              "type": "string",
              "description": "Fund  Code"
            },
            "new_amount": {
              "type": "float",
              "description": "Updated redemption amount, unit (yuan)"
            },
            "delta_amount": {
              "type": "float",
              "description": "Increase or decrease in redemption amount, unit (yuan)"
            }
          },
          "required": [
            "fund_name",
            "fund_code",
            "new_amount",
            "delta_amount"
          ]
        }
      }
    ],
    "id": 557
  },
  {
    "messages": [
      {
        "role": "user",
        "content": "Fund redemption amount update."
      },
      {
        "role": "function call",
        "content": {
          "name": "Finance.Funds.updateFundRedeemAmount",
          "arguments": {}
        }
      },
      {
        "role": "assistant",
        "content": "What is the name of the fund"
      },
      {
        "role": "user",
        "content": "The fund name is Huaxia Large Cap Selected Hybrid Fund, I need to know more."
      },
      {
        "role": "function call",
        "content": {
          "name": "Finance.Funds.updateFundRedeemAmount",
          "arguments": {
            "fund_name": "Huaxia Large-cap Selection Hybrid Fund"
          }
        }
      },
      {
        "role": "assistant",
        "content": "Please provide fund code"
      },
      {
        "role": "user",
        "content": "It was wrong before. Fund name should be Yifangda Blue Chip Selection Hybrid Fund"
      },
      {
        "role": "function call",
        "content": {
          "name": "Finance.Funds.updateFundRedeemAmount",
          "arguments": {
            "fund_name": "Yifangda Blue Chip Selection Hybrid Fund"
          }
        }
      },
      {
        "role": "assistant",
        "content": "Please provide fund code"
      },
      {
        "role": "user",
        "content": "000011, this is the fund code I want to query."
      },
      {
        "role": "function call",
        "content": {
          "name": "Finance.Funds.updateFundRedeemAmount",
          "arguments": {
            "fund_name": "Yifangda Blue Chip Selection Hybrid Fund",
            "fund_code": "000011"
          }
        }
      },
      {
        "role": "assistant",
        "content": "Please provide the updated redemption amount in Yuan"
      },
      {
        "role": "user",
        "content": "The updated redemption amount is 5000.0 yuan."
      },
      {
        "role": "function call",
        "content": {
          "name": "Finance.Funds.updateFundRedeemAmount",
          "arguments": {
            "fund_name": "Yifangda Blue Chip Selection Hybrid Fund",
            "fund_code": "000011",
            "new_amount": 5000.0
          }
        }
      }
    ],
    "multiple_tools": [
      {
        "name": "SocialCommunication.Community.restoreHiddenCommunityPost",
        "description": "Restore hidden posts in selected communities",
        "parameters": {
          "type": "object",
          "properties": {
            "community_name": {
              "type": "string",
              "description": "The name of the community where the post is located"
            },
            "post_name": {
              "type": "string",
              "description": "Title of the hidden post to restore"
            }
          },
          "required": [
            "community_name",
            "post_name"
          ]
        }
      },
      {
        "name": "Finance.Funds.updateFundRedeemAmount",
        "description": "Update Redemption Amount for Designated Funds",
        "parameters": {
          "type": "object",
          "properties": {
            "fund_name": {
              "type": "string",
              "description": "Fund name"
            },
            "fund_code": {
              "type": "string",
              "description": "Fund  Code"
            },
            "new_amount": {
              "type": "float",
              "description": "Updated redemption amount, unit (yuan)"
            },
            "delta_amount": {
              "type": "float",
              "description": "Increase or decrease in redemption amount, unit (yuan)"
            }
          },
          "required": [
            "fund_name",
            "fund_code",
            "new_amount",
            "delta_amount"
          ]
        }
      },
      {
        "name": "Finance.Banking.redempteFinancialProducts",
        "description": "Redeem purchased wealth management products",
        "parameters": {
          "type": "object",
          "properties": {
            "product": {
              "type": "string",
              "description": "Name of financial product"
            },
            "redempte_amount": {
              "type": "float",
              "description": "Redemption Amount"
            }
          },
          "required": [
            "product",
            "redempte_amount"
          ]
        }
      },
      {
        "name": "Finance.Payment.refundPay",
        "description": "Initiate refund action for payment",
        "parameters": {
          "type": "object",
          "properties": {
            "pay_date": {
              "type": "string",
              "description": "Date pay"
            },
            "amount": {
              "type": "float",
              "description": "Amount Transferred"
            },
            "reason": {
              "type": "string",
              "description": "Refund reason:"
            }
          },
          "required": [
            "pay_date",
            "amount",
            "reason"
          ]
        }
      },
      {
        "name": "Finance.Funds.redeemFund",
        "description": "Redeem the designated amount of the designated fund based on the name or code of the fund",
        "parameters": {
          "type": "object",
          "properties": {
            "fund_name": {
              "type": "string",
              "description": "Fund name"
            },
            "fund_code": {
              "type": "string",
              "description": "Fund  Code"
            },
            "amount": {
              "type": "float",
              "description": "Amount"
            }
          },
          "required": [
            "fund_name",
            "fund_code",
            "amount"
          ]
        }
      }
    ],
    "single_tool": [
      {
        "name": "Finance.Funds.updateFundRedeemAmount",
        "description": "Update Redemption Amount for Designated Funds",
        "parameters": {
          "type": "object",
          "properties": {
            "fund_name": {
              "type": "string",
              "description": "Fund name"
            },
            "fund_code": {
              "type": "string",
              "description": "Fund  Code"
            },
            "new_amount": {
              "type": "float",
              "description": "Updated redemption amount, unit (yuan)"
            },
            "delta_amount": {
              "type": "float",
              "description": "Increase or decrease in redemption amount, unit (yuan)"
            }
          },
          "required": [
            "fund_name",
            "fund_code",
            "new_amount",
            "delta_amount"
          ]
        }
      }
    ],
    "id": 558
  },
  {
    "messages": [
      {
        "role": "user",
        "content": "I need to link my card to my account"
      },
      {
        "role": "function call",
        "content": {
          "name": "Finance.Payment.linkPayBankCard",
          "arguments": {}
        }
      },
      {
        "role": "assistant",
        "content": "Please provide your card number"
      },
      {
        "role": "user",
        "content": "My card number is 6222600912345678, but please make sure to use it safely."
      },
      {
        "role": "function call",
        "content": {
          "name": "Finance.Payment.linkPayBankCard",
          "arguments": {
            "card_number": "6222600912345678"
          }
        }
      },
      {
        "role": "assistant",
        "content": "What is the cardholder's name?"
      },
      {
        "role": "user",
        "content": "It was wrong before. Bank Card Number should be 6222109876543210"
      },
      {
        "role": "function call",
        "content": {
          "name": "Finance.Payment.linkPayBankCard",
          "arguments": {
            "card_number": "6222109876543210"
          }
        }
      },
      {
        "role": "assistant",
        "content": "What is the cardholder's name?"
      },
      {
        "role": "user",
        "content": "The cardholder's name is Zhang Wei, but please ensure the accuracy of the information as it relates to personal privacy."
      },
      {
        "role": "function call",
        "content": {
          "name": "Finance.Payment.linkPayBankCard",
          "arguments": {
            "card_number": "6222109876543210",
            "card_holder_name": "Zhang Wei"
          }
        }
      }
    ],
    "multiple_tools": [
      {
        "name": "NewsMagazines.NewspapersMagazines.subscribeMagazine",
        "description": "Subscribe to magazine by magazine name",
        "parameters": {
          "type": "object",
          "properties": {
            "name": {
              "type": "string",
              "description": "Magazine Name"
            }
          },
          "required": [
            "name"
          ]
        }
      },
      {
        "name": "SystemTools.SystemSettings.setSystemTurnOnConnect2Win",
        "description": "Open connection to windows",
        "parameters": {
          "type": "object",
          "properties": {},
          "required": []
        }
      },
      {
        "name": "MusicRadio.OnlineMusic.bindSocialPlatforms",
        "description": "Link your account to a social platform",
        "parameters": {
          "type": "object",
          "properties": {
            "platforms": {
              "type": "string",
              "description": "Social platforms to be linked"
            }
          },
          "required": [
            "platforms"
          ]
        }
      },
      {
        "name": "SocialCommunication.InstantMessaging.addContact",
        "description": "Add New Contact",
        "parameters": {
          "type": "object",
          "properties": {
            "name": {
              "type": "string",
              "description": "Contact person"
            },
            "phone": {
              "type": "string",
              "description": "Cellphone"
            }
          },
          "required": [
            "name",
            "phone"
          ]
        }
      },
      {
        "name": "Finance.Payment.linkPayBankCard",
        "description": "Link your card to your account",
        "parameters": {
          "type": "object",
          "properties": {
            "card_number": {
              "type": "string",
              "description": "Bank Card Number"
            },
            "card_holder_name": {
              "type": "string",
              "description": "Card holder name"
            },
            "bank_name": {
              "type": "string",
              "description": "Bank Name"
            }
          },
          "required": [
            "card_number",
            "card_holder_name",
            "bank_name"
          ]
        }
      }
    ],
    "single_tool": [
      {
        "name": "Finance.Payment.linkPayBankCard",
        "description": "Link your card to your account",
        "parameters": {
          "type": "object",
          "properties": {
            "card_number": {
              "type": "string",
              "description": "Bank Card Number"
            },
            "card_holder_name": {
              "type": "string",
              "description": "Card holder name"
            },
            "bank_name": {
              "type": "string",
              "description": "Bank Name"
            }
          },
          "required": [
            "card_number",
            "card_holder_name",
            "bank_name"
          ]
        }
      }
    ],
    "id": 564
  },
  {
    "messages": [
      {
        "role": "user",
        "content": "Connect this card to my bank account for me"
      },
      {
        "role": "function call",
        "content": {
          "name": "Finance.Payment.linkPayBankCard",
          "arguments": {}
        }
      },
      {
        "role": "assistant",
        "content": "Please provide your card number"
      },
      {
        "role": "user",
        "content": "My card number is 5567099123456789, but please make sure to use it safely."
      },
      {
        "role": "function call",
        "content": {
          "name": "Finance.Payment.linkPayBankCard",
          "arguments": {
            "card_number": "5567099123456789"
          }
        }
      },
      {
        "role": "assistant",
        "content": "What is the cardholder's name?"
      },
      {
        "role": "user",
        "content": "It was wrong before. Bank Card Number should be 6222109876543210"
      },
      {
        "role": "function call",
        "content": {
          "name": "Finance.Payment.linkPayBankCard",
          "arguments": {
            "card_number": "6222109876543210"
          }
        }
      },
      {
        "role": "assistant",
        "content": "What is the cardholder's name?"
      },
      {
        "role": "user",
        "content": "The cardholder's name is Li Hua, would you like me to provide more information?"
      },
      {
        "role": "function call",
        "content": {
          "name": "Finance.Payment.linkPayBankCard",
          "arguments": {
            "card_number": "6222109876543210",
            "card_holder_name": "Li Hua"
          }
        }
      }
    ],
    "multiple_tools": [
      {
        "name": "Finance.Payment.linkPayBankCard",
        "description": "Link your card to your account",
        "parameters": {
          "type": "object",
          "properties": {
            "card_number": {
              "type": "string",
              "description": "Bank Card Number"
            },
            "card_holder_name": {
              "type": "string",
              "description": "Card holder name"
            },
            "bank_name": {
              "type": "string",
              "description": "Bank Name"
            }
          },
          "required": [
            "card_number",
            "card_holder_name",
            "bank_name"
          ]
        }
      },
      {
        "name": "SystemTools.SystemSettings.setSystemTurnOnConnect2Win",
        "description": "Open connection to windows",
        "parameters": {
          "type": "object",
          "properties": {},
          "required": []
        }
      },
      {
        "name": "MusicRadio.OnlineMusic.bindSocialPlatforms",
        "description": "Link your account to a social platform",
        "parameters": {
          "type": "object",
          "properties": {
            "platforms": {
              "type": "string",
              "description": "Social platforms to be linked"
            }
          },
          "required": [
            "platforms"
          ]
        }
      },
      {
        "name": "NewsMagazines.NewspapersMagazines.subscribeMagazine",
        "description": "Subscribe to magazine by magazine name",
        "parameters": {
          "type": "object",
          "properties": {
            "name": {
              "type": "string",
              "description": "Magazine Name"
            }
          },
          "required": [
            "name"
          ]
        }
      },
      {
        "name": "NewsMagazines.News.followNewsSource",
        "description": "Follow designated news sources",
        "parameters": {
          "type": "object",
          "properties": {
            "source_name": {
              "type": "string",
              "description": "News Source Name"
            }
          },
          "required": [
            "source_name"
          ]
        }
      }
    ],
    "single_tool": [
      {
        "name": "Finance.Payment.linkPayBankCard",
        "description": "Link your card to your account",
        "parameters": {
          "type": "object",
          "properties": {
            "card_number": {
              "type": "string",
              "description": "Bank Card Number"
            },
            "card_holder_name": {
              "type": "string",
              "description": "Card holder name"
            },
            "bank_name": {
              "type": "string",
              "description": "Bank Name"
            }
          },
          "required": [
            "card_number",
            "card_holder_name",
            "bank_name"
          ]
        }
      }
    ],
    "id": 565
  },
  {
    "messages": [
      {
        "role": "user",
        "content": "Bank account transfer"
      },
      {
        "role": "function call",
        "content": {
          "name": "Finance.Banking.transfer",
          "arguments": {}
        }
      },
      {
        "role": "assistant",
        "content": "Please provide the transfer amount in Yuan"
      },
      {
        "role": "user",
        "content": "RMB 300"
      },
      {
        "role": "function call",
        "content": {
          "name": "Finance.Banking.transfer",
          "arguments": {
            "amount": 300
          }
        }
      },
      {
        "role": "assistant",
        "content": "Please provide the outgoing account number"
      },
      {
        "role": "user",
        "content": "It was wrong before. Transfer amount, unit (yuan) should be 1200.0"
      },
      {
        "role": "function call",
        "content": {
          "name": "Finance.Banking.transfer",
          "arguments": {
            "amount": 1200.0
          }
        }
      },
      {
        "role": "assistant",
        "content": "Please provide the outgoing account number"
      },
      {
        "role": "user",
        "content": "My withdrawal account number is 99887766, would you like me to provide additional information?"
      },
      {
        "role": "function call",
        "content": {
          "name": "Finance.Banking.transfer",
          "arguments": {
            "amount": 1200.0,
            "from_account": "99887766"
          }
        }
      }
    ],
    "multiple_tools": [
      {
        "name": "Finance.Payment.transferPayMoney",
        "description": "Transfer money to someone else",
        "parameters": {
          "type": "object",
          "properties": {
            "receiver": {
              "type": "string",
              "description": "Beneficiary name or account number"
            },
            "amount": {
              "type": "float",
              "description": "Transfer amount, unit (yuan)"
            },
            "message": {
              "type": "string",
              "description": "Transfer Note"
            }
          },
          "required": [
            "receiver",
            "amount",
            "message"
          ]
        }
      },
      {
        "name": "SocialCommunication.Calling.transferPhoneCall",
        "description": "Transfer the current call to another contact",
        "parameters": {
          "type": "object",
          "properties": {
            "transfer_contact_name": {
              "type": "string",
              "description": "Name of the contact to transfer to"
            }
          },
          "required": [
            "transfer_contact_name"
          ]
        }
      },
      {
        "name": "OfficeSoftware.CloudStorage.netdiskMoveFiles",
        "description": "Moving Files to Specified Folders in Cloud Drive",
        "parameters": {
          "type": "object",
          "properties": {
            "file_path": {
              "type": "string",
              "description": "File Path"
            },
            "target_path": {
              "type": "string",
              "description": "Destination folder path"
            }
          },
          "required": [
            "file_path",
            "target_path"
          ]
        }
      },
      {
        "name": "Finance.Banking.transfer",
        "description": "Funds transfer between bank accounts",
        "parameters": {
          "type": "object",
          "properties": {
            "from_account": {
              "type": "string",
              "description": "Transfer-out account number"
            },
            "to_account": {
              "type": "string",
              "description": "Transfer-in account number"
            },
            "amount": {
              "type": "float",
              "description": "Transfer amount, unit (yuan)"
            }
          },
          "required": [
            "from_account",
            "to_account",
            "amount"
          ]
        }
      },
      {
        "name": "Travel.ItineraryServices.getTravelTransportationOptions",
        "description": "Provide transportation and directions to your destination",
        "parameters": {
          "type": "object",
          "properties": {
            "origin": {
              "type": "string",
              "description": "Origination"
            },
            "destination": {
              "type": "string",
              "description": "destination"
            }
          },
          "required": [
            "origin",
            "destination"
          ]
        }
      }
    ],
    "single_tool": [
      {
        "name": "Finance.Banking.transfer",
        "description": "Funds transfer between bank accounts",
        "parameters": {
          "type": "object",
          "properties": {
            "from_account": {
              "type": "string",
              "description": "Transfer-out account number"
            },
            "to_account": {
              "type": "string",
              "description": "Transfer-in account number"
            },
            "amount": {
              "type": "float",
              "description": "Transfer amount, unit (yuan)"
            }
          },
          "required": [
            "from_account",
            "to_account",
            "amount"
          ]
        }
      }
    ],
    "id": 576
  },
  {
    "messages": [
      {
        "role": "user",
        "content": "Help me transfer money between bank accounts"
      },
      {
        "role": "function call",
        "content": {
          "name": "Finance.Banking.transfer",
          "arguments": {}
        }
      },
      {
        "role": "assistant",
        "content": "Please provide the transfer amount in Yuan"
      },
      {
        "role": "user",
        "content": "1,500.75 yuan"
      },
      {
        "role": "function call",
        "content": {
          "name": "Finance.Banking.transfer",
          "arguments": {
            "amount": 1500.75
          }
        }
      },
      {
        "role": "assistant",
        "content": "Please provide the outgoing account number"
      },
      {
        "role": "user",
        "content": "It was wrong before. Transfer amount, unit (yuan) should be 1200.0"
      },
      {
        "role": "function call",
        "content": {
          "name": "Finance.Banking.transfer",
          "arguments": {
            "amount": 1200.0
          }
        }
      },
      {
        "role": "assistant",
        "content": "Please provide the outgoing account number"
      },
      {
        "role": "user",
        "content": "My withdrawal account number is 123456789012."
      },
      {
        "role": "function call",
        "content": {
          "name": "Finance.Banking.transfer",
          "arguments": {
            "amount": 1200.0,
            "from_account": "12345678"
          }
        }
      }
    ],
    "multiple_tools": [
      {
        "name": "SocialCommunication.Calling.transferPhoneCall",
        "description": "Transfer the current call to another contact",
        "parameters": {
          "type": "object",
          "properties": {
            "transfer_contact_name": {
              "type": "string",
              "description": "Name of the contact to transfer to"
            }
          },
          "required": [
            "transfer_contact_name"
          ]
        }
      },
      {
        "name": "Finance.Payment.transferPayMoney",
        "description": "Transfer money to someone else",
        "parameters": {
          "type": "object",
          "properties": {
            "receiver": {
              "type": "string",
              "description": "Beneficiary name or account number"
            },
            "amount": {
              "type": "float",
              "description": "Transfer amount, unit (yuan)"
            },
            "message": {
              "type": "string",
              "description": "Transfer Note"
            }
          },
          "required": [
            "receiver",
            "amount",
            "message"
          ]
        }
      },
      {
        "name": "Finance.Banking.transfer",
        "description": "Funds transfer between bank accounts",
        "parameters": {
          "type": "object",
          "properties": {
            "from_account": {
              "type": "string",
              "description": "Transfer-out account number"
            },
            "to_account": {
              "type": "string",
              "description": "Transfer-in account number"
            },
            "amount": {
              "type": "float",
              "description": "Transfer amount, unit (yuan)"
            }
          },
          "required": [
            "from_account",
            "to_account",
            "amount"
          ]
        }
      },
      {
        "name": "VideoPlayback.OnlineVideos.shareOnlineVideo",
        "description": "Share a video to other media",
        "parameters": {
          "type": "object",
          "properties": {
            "name": {
              "type": "string",
              "description": "Video Name"
            },
            "media": {
              "type": "string",
              "description": "Share video to: WeChat, etc."
            }
          },
          "required": [
            "name",
            "media"
          ]
        }
      },
      {
        "name": "UtilityTools.Search.shareWebPage",
        "description": "Share the current page to other platforms/media",
        "parameters": {
          "type": "object",
          "properties": {
            "media": {
              "type": "string",
              "description": "Media or platform to share"
            },
            "person": {
              "type": "string",
              "description": "Specify who to share with"
            }
          },
          "required": [
            "media",
            "person"
          ]
        }
      }
    ],
    "single_tool": [
      {
        "name": "Finance.Banking.transfer",
        "description": "Funds transfer between bank accounts",
        "parameters": {
          "type": "object",
          "properties": {
            "from_account": {
              "type": "string",
              "description": "Transfer-out account number"
            },
            "to_account": {
              "type": "string",
              "description": "Transfer-in account number"
            },
            "amount": {
              "type": "float",
              "description": "Transfer amount, unit (yuan)"
            }
          },
          "required": [
            "from_account",
            "to_account",
            "amount"
          ]
        }
      }
    ],
    "id": 577
  },
  {
    "messages": [
      {
        "role": "user",
        "content": "Modify my order for bank financial products"
      },
      {
        "role": "function call",
        "content": {
          "name": "Finance.Banking.modifyFinancialProductOrder",
          "arguments": {}
        }
      },
      {
        "role": "assistant",
        "content": "Please provide the purchase order number"
      },
      {
        "role": "user",
        "content": "My order number is 123456."
      },
      {
        "role": "function call",
        "content": {
          "name": "Finance.Banking.modifyFinancialProductOrder",
          "arguments": {
            "order_id": "123456"
          }
        }
      },
      {
        "role": "assistant",
        "content": "Name of financial product Revision content of financial product"
      },
      {
        "role": "user",
        "content": "It was wrong before. Purchase Order Number should be QR54321"
      },
      {
        "role": "function call",
        "content": {
          "name": "Finance.Banking.modifyFinancialProductOrder",
          "arguments": {
            "order_id": "QR54321"
          }
        }
      },
      {
        "role": "assistant",
        "content": "Name of financial product Revision content of financial product"
      },
      {
        "role": "user",
        "content": "The name of the wealth management product is Robust Wealth Management, and I would like to know its latest revisions."
      },
      {
        "role": "function call",
        "content": {
          "name": "Finance.Banking.modifyFinancialProductOrder",
          "arguments": {
            "order_id": "QR54321",
            "product": "Robust Wealth Management Treasure"
          }
        }
      }
    ],
    "multiple_tools": [
      {
        "name": "Health.HealthManagement.updateDietRecord",
        "description": "Changing dietary records based on updated conditions",
        "parameters": {
          "type": "object",
          "properties": {
            "food_name": {
              "type": "string",
              "description": "Food Name"
            },
            "meal_type": {
              "type": "string",
              "description": "Types of meals, such as breakfast, lunch, dinner, or add-ons"
            },
            "time": {
              "type": "string",
              "description": "Meal Time"
            },
            "update_content": {
              "type": "string",
              "description": "Updates, such as changes to food names, meal types, meal times, etc."
            }
          },
          "required": [
            "food_name",
            "meal_type",
            "time",
            "update_content"
          ]
        }
      },
      {
        "name": "Navigation.TrainTickets.updateTrainWaitlistOrder",
        "description": "Used to modify submitted train ticket waiting list information",
        "parameters": {
          "type": "object",
          "properties": {
            "train_number": {
              "type": "string",
              "description": "Booked trips"
            },
            "passenger_name": {
              "type": "string",
              "description": "Rider's name"
            },
            "after_number": {
              "type": "string",
              "description": "Booked trips"
            },
            "new_departure_date": {
              "type": "string",
              "description": "New departure date, format 'YYYY-MM-DD', optional if modified"
            },
            "new_seat_type": {
              "type": "string",
              "description": "Seat Type"
            }
          },
          "required": [
            "train_number",
            "passenger_name",
            "after_number",
            "new_departure_date",
            "new_seat_type"
          ]
        }
      },
      {
        "name": "Finance.Banking.modifyFinancialProductOrder",
        "description": "Modify a subscribed order for a bank wealth management product",
        "parameters": {
          "type": "object",
          "properties": {
            "order_id": {
              "type": "string",
              "description": "Purchase Order Number"
            },
            "product": {
              "type": "string",
              "description": "Financing product"
            },
            "modify": {
              "type": "string",
              "description": "Modified content, such as additional amount, revision deadline, etc."
            }
          },
          "required": [
            "order_id",
            "product",
            "modify"
          ]
        }
      },
      {
        "name": "ConvenientLiving.FoodDelivery.updateRestaurantOrder",
        "description": "Updating order information based on the order, such as delivery address, notes, etc.",
        "parameters": {
          "type": "object",
          "properties": {
            "order_name": {
              "type": "string",
              "description": "Contents of the order"
            },
            "delivery_address": {
              "type": "string",
              "description": "Delivery address"
            },
            "delivery_time": {
              "type": "string",
              "description": "Expected delivery time in HH: mm format"
            },
            "note": {
              "type": "string",
              "description": "Remarks"
            }
          },
          "required": [
            "order_name",
            "delivery_address",
            "delivery_time",
            "note"
          ]
        }
      },
      {
        "name": "OnlineShopping.Mall.modifyCommodityOrders",
        "description": "Modify the contents of the order according to the product name and other conditions",
        "parameters": {
          "type": "object",
          "properties": {
            "goods": {
              "type": "string",
              "description": "Product Name"
            }
          },
          "required": [
            "goods"
          ]
        }
      }
    ],
    "single_tool": [
      {
        "name": "Finance.Banking.modifyFinancialProductOrder",
        "description": "Modify a subscribed order for a bank wealth management product",
        "parameters": {
          "type": "object",
          "properties": {
            "order_id": {
              "type": "string",
              "description": "Purchase Order Number"
            },
            "product": {
              "type": "string",
              "description": "Financing product"
            },
            "modify": {
              "type": "string",
              "description": "Modified content, such as additional amount, revision deadline, etc."
            }
          },
          "required": [
            "order_id",
            "product",
            "modify"
          ]
        }
      }
    ],
    "id": 580
  },
  {
    "messages": [
      {
        "role": "user",
        "content": "Adjust your subscribed bank wealth management products"
      },
      {
        "role": "function call",
        "content": {
          "name": "Finance.Banking.modifyFinancialProductOrder",
          "arguments": {}
        }
      },
      {
        "role": "assistant",
        "content": "What exactly do you want to change, such as the additional amount modification deadline, etc."
      },
      {
        "role": "user",
        "content": "I'd like to be billed monthly instead."
      },
      {
        "role": "function call",
        "content": {
          "name": "Finance.Banking.modifyFinancialProductOrder",
          "arguments": {
            "modify": "Change to monthly billing"
          }
        }
      },
      {
        "role": "assistant",
        "content": "Please provide the purchase order number"
      },
      {
        "role": "user",
        "content": "It was wrong before. Modified content, such as additional amount, revision deadline, etc. should be Reduced to 50,000"
      },
      {
        "role": "function call",
        "content": {
          "name": "Finance.Banking.modifyFinancialProductOrder",
          "arguments": {
            "modify": "Reduced to 50,000"
          }
        }
      },
      {
        "role": "assistant",
        "content": "Please provide the purchase order number"
      },
      {
        "role": "user",
        "content": "My order number is QR54321, but please check the status of this order for me."
      },
      {
        "role": "function call",
        "content": {
          "name": "Finance.Banking.modifyFinancialProductOrder",
          "arguments": {
            "modify": "Reduced to 50,000",
            "order_id": "QR54321"
          }
        }
      }
    ],
    "multiple_tools": [
      {
        "name": "Finance.Banking.modifyFinancialProductOrder",
        "description": "Modify a subscribed order for a bank wealth management product",
        "parameters": {
          "type": "object",
          "properties": {
            "order_id": {
              "type": "string",
              "description": "Purchase Order Number"
            },
            "product": {
              "type": "string",
              "description": "Financing product"
            },
            "modify": {
              "type": "string",
              "description": "Modified content, such as additional amount, revision deadline, etc."
            }
          },
          "required": [
            "order_id",
            "product",
            "modify"
          ]
        }
      },
      {
        "name": "MusicRadio.Karaoke.manageAccount",
        "description": "Manage your account by following the steps in Account Management",
        "parameters": {
          "type": "object",
          "properties": {
            "action": {
              "type": "string",
              "description": "Account management actions"
            }
          },
          "required": [
            "action"
          ]
        }
      },
      {
        "name": "MusicRadio.OnlineMusic.followUser",
        "description": "Follow user by username",
        "parameters": {
          "type": "object",
          "properties": {
            "name": {
              "type": "string",
              "description": "Username"
            }
          },
          "required": [
            "name"
          ]
        }
      },
      {
        "name": "NewsMagazines.NewspapersMagazines.subscribeMagazine",
        "description": "Subscribe to magazine by magazine name",
        "parameters": {
          "type": "object",
          "properties": {
            "name": {
              "type": "string",
              "description": "Magazine Name"
            }
          },
          "required": [
            "name"
          ]
        }
      },
      {
        "name": "MusicRadio.OnlineMusic.bindSocialPlatforms",
        "description": "Link your account to a social platform",
        "parameters": {
          "type": "object",
          "properties": {
            "platforms": {
              "type": "string",
              "description": "Social platforms to be linked"
            }
          },
          "required": [
            "platforms"
          ]
        }
      }
    ],
    "single_tool": [
      {
        "name": "Finance.Banking.modifyFinancialProductOrder",
        "description": "Modify a subscribed order for a bank wealth management product",
        "parameters": {
          "type": "object",
          "properties": {
            "order_id": {
              "type": "string",
              "description": "Purchase Order Number"
            },
            "product": {
              "type": "string",
              "description": "Financing product"
            },
            "modify": {
              "type": "string",
              "description": "Modified content, such as additional amount, revision deadline, etc."
            }
          },
          "required": [
            "order_id",
            "product",
            "modify"
          ]
        }
      }
    ],
    "id": 581
  },
  {
    "messages": [
      {
        "role": "user",
        "content": "Buy some stock"
      },
      {
        "role": "function call",
        "content": {
          "name": "Finance.Stocks.buyStock",
          "arguments": {}
        }
      },
      {
        "role": "assistant",
        "content": "Please provide the specific value of the purchase amount. Whole warehouse 13 warehouses 14 warehouses"
      },
      {
        "role": "user",
        "content": "1/4 Warehouse"
      },
      {
        "role": "function call",
        "content": {
          "name": "Finance.Stocks.buyStock",
          "arguments": {
            "amount": "1/4 Warehouse"
          }
        }
      },
      {
        "role": "assistant",
        "content": "Please enter the purchase amount unit"
      },
      {
        "role": "user",
        "content": "30,000.0 yuan"
      },
      {
        "role": "function call",
        "content": {
          "name": "Finance.Stocks.buyStock",
          "arguments": {
            "amount": "1/4 Warehouse",
            "price": 30000.0
          }
        }
      },
      {
        "role": "assistant",
        "content": "What is the stock code"
      },
      {
        "role": "user",
        "content": "It was wrong before. Purchase Amount, Unit: Yuan should be 20000.0"
      },
      {
        "role": "function call",
        "content": {
          "name": "Finance.Stocks.buyStock",
          "arguments": {
            "amount": "1/4 Warehouse",
            "price": 20000.0
          }
        }
      },
      {
        "role": "assistant",
        "content": "What is the stock code"
      },
      {
        "role": "user",
        "content": "The stock code is 600519, which is the code for Moutai in Guizhou."
      },
      {
        "role": "function call",
        "content": {
          "name": "Finance.Stocks.buyStock",
          "arguments": {
            "amount": "1/4 Warehouse",
            "price": 20000.0,
            "stock_code": "600519"
          }
        }
      }
    ],
    "multiple_tools": [
      {
        "name": "Travel.HotelServices.bookHotel",
        "description": "Book a room at a selected hotel",
        "parameters": {
          "type": "object",
          "properties": {
            "name": {
              "type": "string",
              "description": "Hotel Name"
            },
            "checkin_date": {
              "type": "string",
              "description": "Check-in Date"
            },
            "checkout_date": {
              "type": "string",
              "description": "DEPARTURE DATE"
            },
            "room_type": {
              "type": "string",
              "description": "Room types"
            },
            "tenant_name": {
              "type": "string",
              "description": "Name of the guest staying"
            },
            "tenant_number": {
              "type": "string",
              "description": "Telephone number of the guest staying at the hotel"
            }
          },
          "required": [
            "name",
            "checkin_date",
            "checkout_date",
            "room_type",
            "tenant_name",
            "tenant_number"
          ]
        }
      },
      {
        "name": "Finance.Stocks.buyStock",
        "description": "Purchase of Designated Shares",
        "parameters": {
          "type": "object",
          "properties": {
            "stock_code": {
              "type": "string",
              "description": "Ticker"
            },
            "stock_name": {
              "type": "string",
              "description": "Stock Key Name"
            },
            "price": {
              "type": "float",
              "description": "Purchase Amount, Unit: Yuan"
            },
            "amount": {
              "type": "string",
              "description": "Bid Volume; Specific Value; Whole Warehouse; Half Warehouse; 1/3 Warehouse; 1/4 Warehouse"
            }
          },
          "required": [
            "stock_code",
            "stock_name",
            "price",
            "amount"
          ]
        }
      },
      {
        "name": "Navigation.TrainTickets.bookTrainTicket",
        "description": "Book a train ticket for a specific time, origin, or destination for a specific rider",
        "parameters": {
          "type": "object",
          "properties": {
            "ride_date": {
              "type": "string",
              "description": "Date of trip"
            },
            "departure_station": {
              "type": "string",
              "description": "Departure Station"
            },
            "destination_station": {
              "type": "string",
              "description": "arrival station"
            },
            "train_type": {
              "type": "string",
              "description": "Train type, optional types are high-speed rail, motor vehicles, general express, express, etc."
            },
            "seat_type": {
              "type": "string",
              "description": "Seat Type"
            },
            "passenger_name": {
              "type": "string",
              "description": "Rider's name"
            },
            "passenger_id": {
              "type": "string",
              "description": "Rider ID number"
            }
          },
          "required": [
            "ride_date",
            "departure_station",
            "destination_station",
            "train_type",
            "seat_type",
            "passenger_name",
            "passenger_id"
          ]
        }
      },
      {
        "name": "ConvenientLiving.FoodDelivery.placeRestaurantOrder",
        "description": "Order select restaurants and dishes",
        "parameters": {
          "type": "object",
          "properties": {
            "restaurant_name": {
              "type": "string",
              "description": "Name of the restaurant"
            },
            "dishes": {
              "type": "string",
              "description": "Array containing item IDs"
            },
            "delivery_address": {
              "type": "string",
              "description": "Delivery address"
            },
            "delivery_time": {
              "type": "string",
              "description": "Expected delivery time in HH: mm format"
            },
            "note": {
              "type": "string",
              "description": "Remarks"
            }
          },
          "required": [
            "restaurant_name",
            "dishes",
            "delivery_address",
            "delivery_time",
            "note"
          ]
        }
      },
      {
        "name": "Education.OnlineClasses.enrollCourse",
        "description": "Enroll in a designated course",
        "parameters": {
          "type": "object",
          "properties": {
            "course_name": {
              "type": "string",
              "description": "Course Title"
            }
          },
          "required": [
            "course_name"
          ]
        }
      }
    ],
    "single_tool": [
      {
        "name": "Finance.Stocks.buyStock",
        "description": "Purchase of Designated Shares",
        "parameters": {
          "type": "object",
          "properties": {
            "stock_code": {
              "type": "string",
              "description": "Ticker"
            },
            "stock_name": {
              "type": "string",
              "description": "Stock Key Name"
            },
            "price": {
              "type": "float",
              "description": "Purchase Amount, Unit: Yuan"
            },
            "amount": {
              "type": "string",
              "description": "Bid Volume; Specific Value; Whole Warehouse; Half Warehouse; 1/3 Warehouse; 1/4 Warehouse"
            }
          },
          "required": [
            "stock_code",
            "stock_name",
            "price",
            "amount"
          ]
        }
      }
    ],
    "id": 587
  },
  {
    "messages": [
      {
        "role": "user",
        "content": "Take care of that for me. I'm going to sell some stock."
      },
      {
        "role": "function call",
        "content": {
          "name": "Finance.Stocks.sellStock",
          "arguments": {}
        }
      },
      {
        "role": "assistant",
        "content": "What is the stock code"
      },
      {
        "role": "user",
        "content": "The stock code is 601398, which is for ICBC."
      },
      {
        "role": "function call",
        "content": {
          "name": "Finance.Stocks.sellStock",
          "arguments": {
            "stock_code": "601398"
          }
        }
      },
      {
        "role": "assistant",
        "content": "What is the key name of the stock"
      },
      {
        "role": "user",
        "content": "It was wrong before. Ticker should be AAPL"
      },
      {
        "role": "function call",
        "content": {
          "name": "Finance.Stocks.sellStock",
          "arguments": {
            "stock_code": "AAPL"
          }
        }
      },
      {
        "role": "assistant",
        "content": "What is the key name of the stock"
      },
      {
        "role": "user",
        "content": "Industrial and Commercial Bank of China"
      },
      {
        "role": "function call",
        "content": {
          "name": "Finance.Stocks.sellStock",
          "arguments": {
            "stock_code": "AAPL",
            "stock_name": "Industrial and Commercial Bank of China"
          }
        }
      },
      {
        "role": "assistant",
        "content": "Please provide the selling amount in Yuan"
      },
      {
        "role": "user",
        "content": "5.6 yuan"
      },
      {
        "role": "function call",
        "content": {
          "name": "Finance.Stocks.sellStock",
          "arguments": {
            "stock_code": "AAPL",
            "stock_name": "Industrial and Commercial Bank of China",
            "price": 5.6
          }
        }
      }
    ],
    "multiple_tools": [
      {
        "name": "SocialCommunication.InstantMessaging.sendFile",
        "description": "Send a file to a specific contact or group",
        "parameters": {
          "type": "object",
          "properties": {
            "receiver_name": {
              "type": "string",
              "description": "Name of the contact or group receiving the file"
            },
            "file_path": {
              "type": "string",
              "description": "The path or document name of the file to send locally"
            }
          },
          "required": [
            "receiver_name",
            "file_path"
          ]
        }
      },
      {
        "name": "Health.HealthManagement.shareHealthPlan",
        "description": "Share a health plan",
        "parameters": {
          "type": "object",
          "properties": {
            "goal_title": {
              "type": "string",
              "description": "Target Headings"
            },
            "media": {
              "type": "string",
              "description": "Media"
            },
            "name": {
              "type": "string",
              "description": "Friend name"
            }
          },
          "required": [
            "goal_title",
            "media",
            "name"
          ]
        }
      },
      {
        "name": "Finance.Stocks.sellStock",
        "description": "Sale of Designated Shares",
        "parameters": {
          "type": "object",
          "properties": {
            "stock_code": {
              "type": "string",
              "description": "Ticker"
            },
            "stock_name": {
              "type": "string",
              "description": "Stock Key Name"
            },
            "price": {
              "type": "float",
              "description": "Amount sold, unit Yuan"
            },
            "amount": {
              "type": "string",
              "description": "Sell Volume; Specific Value; Whole Warehouse; Half Warehouse; 1/3 Warehouse; 1/4 Warehouse"
            }
          },
          "required": [
            "stock_code",
            "stock_name",
            "price",
            "amount"
          ]
        }
      },
      {
        "name": "OnlineShopping.SecondhandTrading.sellSecondhandSaleCommodity",
        "description": "Add merchandise",
        "parameters": {
          "type": "object",
          "properties": {
            "sell_content": {
              "type": "string",
              "description": "Description or details"
            },
            "pic_path": {
              "type": "string",
              "description": "Image or video path"
            },
            "sell_price": {
              "type": "string",
              "description": "Pricing"
            },
            "shipping_method": {
              "type": "string",
              "description": "Free shipping; billed by distance (buyer pays), upfront price (buyer pays), no mailing required, buyer picks up; free shipping by default"
            }
          },
          "required": [
            "sell_content",
            "pic_path",
            "sell_price",
            "shipping_method"
          ]
        }
      },
      {
        "name": "Health.Fitness.shareExerciseProgress",
        "description": "Share your fitness progress with the people you want to share it with",
        "parameters": {
          "type": "object",
          "properties": {
            "target": {
              "type": "string",
              "description": "Share with"
            },
            "exercise_progress": {
              "type": "string",
              "description": "Fitness Progress"
            }
          },
          "required": [
            "target",
            "exercise_progress"
          ]
        }
      }
    ],
    "single_tool": [
      {
        "name": "Finance.Stocks.sellStock",
        "description": "Sale of Designated Shares",
        "parameters": {
          "type": "object",
          "properties": {
            "stock_code": {
              "type": "string",
              "description": "Ticker"
            },
            "stock_name": {
              "type": "string",
              "description": "Stock Key Name"
            },
            "price": {
              "type": "float",
              "description": "Amount sold, unit Yuan"
            },
            "amount": {
              "type": "string",
              "description": "Sell Volume; Specific Value; Whole Warehouse; Half Warehouse; 1/3 Warehouse; 1/4 Warehouse"
            }
          },
          "required": [
            "stock_code",
            "stock_name",
            "price",
            "amount"
          ]
        }
      }
    ],
    "id": 588
  },
  {
    "messages": [
      {
        "role": "user",
        "content": "Withdraw my pending stock order"
      },
      {
        "role": "function call",
        "content": {
          "name": "Finance.Stocks.cancelorderStock",
          "arguments": {}
        }
      },
      {
        "role": "assistant",
        "content": "Please provide the stock code"
      },
      {
        "role": "user",
        "content": "000858 is the stock code I follow."
      },
      {
        "role": "function call",
        "content": {
          "name": "Finance.Stocks.cancelorderStock",
          "arguments": {
            "stock_code": "000858"
          }
        }
      },
      {
        "role": "assistant",
        "content": "What is the key name of the stock"
      },
      {
        "role": "user",
        "content": "It was wrong before. Ticker should be 601318"
      },
      {
        "role": "function call",
        "content": {
          "name": "Finance.Stocks.cancelorderStock",
          "arguments": {
            "stock_code": "601318"
          }
        }
      },
      {
        "role": "assistant",
        "content": "What is the key name of the stock"
      },
      {
        "role": "user",
        "content": "Wuliangye is the stock I want to know about."
      },
      {
        "role": "function call",
        "content": {
          "name": "Finance.Stocks.cancelorderStock",
          "arguments": {
            "stock_code": "601318",
            "stock_name": "Five Grain Liquor (Wuliangye)"
          }
        }
      },
      {
        "role": "assistant",
        "content": "How many unit yuan is the amount of the order to be cancelled"
      },
      {
        "role": "user",
        "content": "The amount that needs to be cancelled is 220.3 yuan."
      },
      {
        "role": "function call",
        "content": {
          "name": "Finance.Stocks.cancelorderStock",
          "arguments": {
            "stock_code": "601318",
            "stock_name": "Five Grain Liquor (Wuliangye)",
            "price": 220.3
          }
        }
      }
    ],
    "multiple_tools": [
      {
        "name": "ConvenientLiving.UtilityPayments.getDueDate",
        "description": "Deadline for payment of fees for the acquisition of utilities, etc.",
        "parameters": {
          "type": "object",
          "properties": {
            "service_type": {
              "type": "string",
              "description": "Types of paid services, such as utilities, gas, etc."
            },
            "user_name": {
              "type": "string",
              "description": "User Name"
            }
          },
          "required": [
            "service_type",
            "user_name"
          ]
        }
      },
      {
        "name": "Finance.Stocks.cancelorderStock",
        "description": "Withdrawal of Designated Shares",
        "parameters": {
          "type": "object",
          "properties": {
            "stock_code": {
              "type": "string",
              "description": "Ticker"
            },
            "stock_name": {
              "type": "string",
              "description": "Stock Key Name"
            },
            "price": {
              "type": "float",
              "description": "Amount in Yuan"
            },
            "amount": {
              "type": "string",
              "description": "Shipment quantity; specific value; full warehouse; half warehouse; 1/3 warehouse; 1/4 warehouse"
            }
          },
          "required": [
            "stock_code",
            "stock_name",
            "price",
            "amount"
          ]
        }
      },
      {
        "name": "Navigation.TrainTickets.addTrainWaitlistOrder",
        "description": "User submits train ticket standby order",
        "parameters": {
          "type": "object",
          "properties": {
            "train_number": {
              "type": "string",
              "description": "Number of trips to book; select all by default, up to 6"
            },
            "passenger_name": {
              "type": "string",
              "description": "Rider's name"
            },
            "passenger_id": {
              "type": "string",
              "description": "Rider ID number"
            },
            "ride_date": {
              "type": "string",
              "description": "Trip date in YYYY-MM-DD format"
            },
            "departure_station": {
              "type": "string",
              "description": "Departure Station"
            },
            "destination_station": {
              "type": "string",
              "description": "arrival station"
            },
            "seat_type": {
              "type": "string",
              "description": "Seat Type"
            }
          },
          "required": [
            "train_number",
            "passenger_name",
            "passenger_id",
            "ride_date",
            "departure_station",
            "destination_station",
            "seat_type"
          ]
        }
      },
      {
        "name": "OnlineShopping.ExpressDelivery.signForOrderExpress",
        "description": "Sign and receive courier orders according to the designated courier number",
        "parameters": {
          "type": "object",
          "properties": {
            "date": {
              "type": "string",
              "description": "Express date"
            },
            "express_id": {
              "type": "string",
              "description": "Tracking Number"
            }
          },
          "required": [
            "date",
            "express_id"
          ]
        }
      },
      {
        "name": "UtilityTools.Memo.finishUpcoming",
        "description": "Complete a to-do",
        "parameters": {
          "type": "object",
          "properties": {
            "upcoming_name": {
              "type": "string",
              "description": "To-do name"
            }
          },
          "required": [
            "upcoming_name"
          ]
        }
      }
    ],
    "single_tool": [
      {
        "name": "Finance.Stocks.cancelorderStock",
        "description": "Withdrawal of Designated Shares",
        "parameters": {
          "type": "object",
          "properties": {
            "stock_code": {
              "type": "string",
              "description": "Ticker"
            },
            "stock_name": {
              "type": "string",
              "description": "Stock Key Name"
            },
            "price": {
              "type": "float",
              "description": "Amount in Yuan"
            },
            "amount": {
              "type": "string",
              "description": "Shipment quantity; specific value; full warehouse; half warehouse; 1/3 warehouse; 1/4 warehouse"
            }
          },
          "required": [
            "stock_code",
            "stock_name",
            "price",
            "amount"
          ]
        }
      }
    ],
    "id": 589
  },
  {
    "messages": [
      {
        "role": "user",
        "content": "Stock Order Reversal"
      },
      {
        "role": "function call",
        "content": {
          "name": "Finance.Stocks.cancelorderStock",
          "arguments": {}
        }
      },
      {
        "role": "assistant",
        "content": "Please provide the stock code"
      },
      {
        "role": "user",
        "content": "The stock code is 600519, please help me check the relevant information."
      },
      {
        "role": "function call",
        "content": {
          "name": "Finance.Stocks.cancelorderStock",
          "arguments": {
            "stock_code": "600519"
          }
        }
      },
      {
        "role": "assistant",
        "content": "What is the key name of the stock"
      },
      {
        "role": "user",
        "content": "Guizhou Moutai is the stock I follow."
      },
      {
        "role": "function call",
        "content": {
          "name": "Finance.Stocks.cancelorderStock",
          "arguments": {
            "stock_code": "600519",
            "stock_name": "Maotai of Guizhou"
          }
        }
      },
      {
        "role": "assistant",
        "content": "How many unit yuan is the amount of the order to be cancelled"
      },
      {
        "role": "user",
        "content": "It was wrong before. Stock Key Name should be Tencent Holdings"
      },
      {
        "role": "function call",
        "content": {
          "name": "Finance.Stocks.cancelorderStock",
          "arguments": {
            "stock_code": "600519",
            "stock_name": "Tencent Holdings"
          }
        }
      },
      {
        "role": "assistant",
        "content": "How many unit yuan is the amount of the order to be cancelled"
      },
      {
        "role": "user",
        "content": "The amount that needs to be cancelled is 1800.5 yuan."
      },
      {
        "role": "function call",
        "content": {
          "name": "Finance.Stocks.cancelorderStock",
          "arguments": {
            "stock_code": "600519",
            "stock_name": "Tencent Holdings",
            "price": 1800.5
          }
        }
      }
    ],
    "multiple_tools": [
      {
        "name": "SystemTools.SystemSettings.setSystembackupAndRestore",
        "description": "Conduct phone data backup and recovery operations",
        "parameters": {
          "type": "object",
          "properties": {
            "backup_path": {
              "type": "string",
              "description": "Backup file save path"
            },
            "restore_source": {
              "type": "string",
              "description": "Sources of recovered data"
            }
          },
          "required": [
            "backup_path",
            "restore_source"
          ]
        }
      },
      {
        "name": "Finance.Stocks.cancelorderStock",
        "description": "Withdrawal of Designated Shares",
        "parameters": {
          "type": "object",
          "properties": {
            "stock_code": {
              "type": "string",
              "description": "Ticker"
            },
            "stock_name": {
              "type": "string",
              "description": "Stock Key Name"
            },
            "price": {
              "type": "float",
              "description": "Amount in Yuan"
            },
            "amount": {
              "type": "string",
              "description": "Shipment quantity; specific value; full warehouse; half warehouse; 1/3 warehouse; 1/4 warehouse"
            }
          },
          "required": [
            "stock_code",
            "stock_name",
            "price",
            "amount"
          ]
        }
      },
      {
        "name": "OnlineShopping.Mall.viewCommodityOrdersEvaluation",
        "description": "View the review content of the corresponding order according to the product name and other conditions",
        "parameters": {
          "type": "object",
          "properties": {
            "goods": {
              "type": "string",
              "description": "Product Name"
            }
          },
          "required": [
            "goods"
          ]
        }
      },
      {
        "name": "MusicRadio.OnlineMusic.participateInMusicTopicDiscussion",
        "description": "Participate in musical conversations by topic and comment content",
        "parameters": {
          "type": "object",
          "properties": {
            "topic": {
              "type": "string",
              "description": "Topic"
            },
            "comment": {
              "type": "string",
              "description": "Comments"
            }
          },
          "required": [
            "topic",
            "comment"
          ]
        }
      },
      {
        "name": "SocialCommunication.Community.replyToComment",
        "description": "Reply to the specified comment",
        "parameters": {
          "type": "object",
          "properties": {
            "community_name": {
              "type": "string",
              "description": "To get the community name of a hidden post"
            },
            "comment_name": {
              "type": "string",
              "description": "Post Title Title"
            },
            "reply_content": {
              "type": "string",
              "description": "Reply Content"
            },
            "comment_content": {
              "type": "string",
              "description": "Comment content to reply to"
            }
          },
          "required": [
            "community_name",
            "comment_name",
            "reply_content",
            "comment_content"
          ]
        }
      }
    ],
    "single_tool": [
      {
        "name": "Finance.Stocks.cancelorderStock",
        "description": "Withdrawal of Designated Shares",
        "parameters": {
          "type": "object",
          "properties": {
            "stock_code": {
              "type": "string",
              "description": "Ticker"
            },
            "stock_name": {
              "type": "string",
              "description": "Stock Key Name"
            },
            "price": {
              "type": "float",
              "description": "Amount in Yuan"
            },
            "amount": {
              "type": "string",
              "description": "Shipment quantity; specific value; full warehouse; half warehouse; 1/3 warehouse; 1/4 warehouse"
            }
          },
          "required": [
            "stock_code",
            "stock_name",
            "price",
            "amount"
          ]
        }
      }
    ],
    "id": 590
  },
  {
    "messages": [
      {
        "role": "user",
        "content": "World Clock Settings"
      },
      {
        "role": "function call",
        "content": {
          "name": "UtilityTools.AlarmClock.setWorldclock",
          "arguments": {}
        }
      },
      {
        "role": "assistant",
        "content": "Please provide a city address"
      },
      {
        "role": "user",
        "content": "New York City, USA"
      },
      {
        "role": "function call",
        "content": {
          "name": "UtilityTools.AlarmClock.setWorldclock",
          "arguments": {
            "city": "Neo-York"
          }
        }
      },
      {
        "role": "assistant",
        "content": "Button Off Up Slide Off"
      },
      {
        "role": "user",
        "content": "It was wrong before. City of Address should be Sydney"
      },
      {
        "role": "function call",
        "content": {
          "name": "UtilityTools.AlarmClock.setWorldclock",
          "arguments": {
            "city": "Sydney"
          }
        }
      },
      {
        "role": "assistant",
        "content": "Button Off Up Slide Off"
      },
      {
        "role": "user",
        "content": "The button closes and the upswipe can also be closed."
      },
      {
        "role": "function call",
        "content": {
          "name": "UtilityTools.AlarmClock.setWorldclock",
          "arguments": {
            "city": "Sydney",
            "set_closemethod": "Button off"
          }
        }
      },
      {
        "role": "assistant",
        "content": "Please provide options for ringing time 1 min 5 min 10 min 15 min 20 min 30 min"
      },
      {
        "role": "user",
        "content": "10minutes"
      },
      {
        "role": "function call",
        "content": {
          "name": "UtilityTools.AlarmClock.setWorldclock",
          "arguments": {
            "city": "Sydney",
            "set_closemethod": "Button off",
            "set_ringduration": "10minutes"
          }
        }
      }
    ],
    "multiple_tools": [
      {
        "name": "UtilityTools.AlarmClock.setWorldclock",
        "description": "Set World Clock Ring Duration, Turn Off, Upcoming Ring Notification",
        "parameters": {
          "type": "object",
          "properties": {
            "city": {
              "type": "string",
              "description": "City of Address"
            },
            "set_ringduration": {
              "type": "string",
              "description": "1 minute, 5 minutes, 10 minutes, 15 minutes, 20 minutes, 30 minutes"
            },
            "set_closemethod": {
              "type": "string",
              "description": "Button off, swipe up to close"
            }
          },
          "required": [
            "city",
            "set_ringduration",
            "set_closemethod"
          ]
        }
      },
      {
        "name": "UtilityTools.AlarmClock.addWorldclock",
        "description": "Add world clock for selected cities",
        "parameters": {
          "type": "object",
          "properties": {
            "city": {
              "type": "string",
              "description": "World address added"
            }
          },
          "required": [
            "city"
          ]
        }
      },
      {
        "name": "UtilityTools.AlarmClock.viewWorldclock",
        "description": "See times in select cities",
        "parameters": {
          "type": "object",
          "properties": {
            "city": {
              "type": "string",
              "description": "View the world clock of the specified city, the default is the current city"
            }
          },
          "required": [
            "city"
          ]
        }
      },
      {
        "name": "SystemTools.SystemSettings.setSystemLlanguageAndRegion",
        "description": "Set your phone's language and region options",
        "parameters": {
          "type": "object",
          "properties": {
            "language": {
              "type": "string",
              "description": "Select a language, such as Chinese, English"
            },
            "region": {
              "type": "string",
              "description": "Region, e.g. China, US"
            }
          },
          "required": [
            "language",
            "region"
          ]
        }
      },
      {
        "name": "SocialCommunication.SocialMedia.collectMediumTrends",
        "description": "Favorite specified activity in specified media",
        "parameters": {
          "type": "object",
          "properties": {
            "medium_name": {
              "type": "string",
              "description": "Media name"
            },
            "correlation": {
              "type": "string",
              "description": "Dynamic Related Content"
            },
            "publisher": {
              "type": "string",
              "description": "Posted by/publisher?"
            },
            "publish_time": {
              "type": "string",
              "description": "Release Date"
            }
          },
          "required": [
            "medium_name",
            "correlation",
            "publisher",
            "publish_time"
          ]
        }
      }
    ],
    "single_tool": [
      {
        "name": "UtilityTools.AlarmClock.setWorldclock",
        "description": "Set World Clock Ring Duration, Turn Off, Upcoming Ring Notification",
        "parameters": {
          "type": "object",
          "properties": {
            "city": {
              "type": "string",
              "description": "City of Address"
            },
            "set_ringduration": {
              "type": "string",
              "description": "1 minute, 5 minutes, 10 minutes, 15 minutes, 20 minutes, 30 minutes"
            },
            "set_closemethod": {
              "type": "string",
              "description": "Button off, swipe up to close"
            }
          },
          "required": [
            "city",
            "set_ringduration",
            "set_closemethod"
          ]
        }
      }
    ],
    "id": 594
  },
  {
    "messages": [
      {
        "role": "user",
        "content": "To add a timer, not the countdown type"
      },
      {
        "role": "function call",
        "content": {
          "name": "UtilityTools.AlarmClock.addTimer",
          "arguments": {}
        }
      },
      {
        "role": "assistant",
        "content": "What is the timer time setting"
      },
      {
        "role": "user",
        "content": "Set it to 25 minutes."
      },
      {
        "role": "function call",
        "content": {
          "name": "UtilityTools.AlarmClock.addTimer",
          "arguments": {
            "timer": "25 min"
          }
        }
      },
      {
        "role": "assistant",
        "content": "Timer name is empty by default"
      },
      {
        "role": "user",
        "content": "It was wrong before. Timer Time Settings should be 15 minutes"
      },
      {
        "role": "function call",
        "content": {
          "name": "UtilityTools.AlarmClock.addTimer",
          "arguments": {
            "timer": "15 minutes"
          }
        }
      },
      {
        "role": "assistant",
        "content": "Timer name is empty by default"
      },
      {
        "role": "user",
        "content": "Focus on learning the timer"
      },
      {
        "role": "function call",
        "content": {
          "name": "UtilityTools.AlarmClock.addTimer",
          "arguments": {
            "timer": "15 minutes",
            "timer_name": "Focused on learning"
          }
        }
      }
    ],
    "multiple_tools": [
      {
        "name": "OnlineShopping.Mall.addCommodityToCart",
        "description": "Add items to cart based on product name",
        "parameters": {
          "type": "object",
          "properties": {
            "goods": {
              "type": "string",
              "description": "Product Name"
            }
          },
          "required": [
            "goods"
          ]
        }
      },
      {
        "name": "UtilityTools.AlarmClock.addTimer",
        "description": "Add a timer, not a countdown",
        "parameters": {
          "type": "object",
          "properties": {
            "timer_name": {
              "type": "string",
              "description": "Timer name, empty by default"
            },
            "timer": {
              "type": "string",
              "description": "Timer Time Settings"
            }
          },
          "required": [
            "timer_name",
            "timer"
          ]
        }
      },
      {
        "name": "Navigation.MapNavigation.addRemakeToCommonAddress",
        "description": "Add a note to your favorite address",
        "parameters": {
          "type": "object",
          "properties": {
            "address": {
              "type": "string",
              "description": "Primary address for note"
            },
            "remake": {
              "type": "string",
              "description": "Comment Message Content"
            }
          },
          "required": [
            "address",
            "remake"
          ]
        }
      },
      {
        "name": "Photography.PhotoEditing.addWatermarkToPicture",
        "description": "Add a watermark to your photo",
        "parameters": {
          "type": "object",
          "properties": {
            "name_or_path": {
              "type": "string",
              "description": "Photo name or path"
            },
            "text": {
              "type": "string",
              "description": "Watermark text content"
            }
          },
          "required": [
            "name_or_path",
            "text"
          ]
        }
      },
      {
        "name": "Photography.VideoEditing.videoStickerAdd",
        "description": "Add a sticker to your video",
        "parameters": {
          "type": "object",
          "properties": {
            "name_or_path": {
              "type": "string",
              "description": "The name or path of the video"
            }
          },
          "required": [
            "name_or_path"
          ]
        }
      }
    ],
    "single_tool": [
      {
        "name": "UtilityTools.AlarmClock.addTimer",
        "description": "Add a timer, not a countdown",
        "parameters": {
          "type": "object",
          "properties": {
            "timer_name": {
              "type": "string",
              "description": "Timer name, empty by default"
            },
            "timer": {
              "type": "string",
              "description": "Timer Time Settings"
            }
          },
          "required": [
            "timer_name",
            "timer"
          ]
        }
      }
    ],
    "id": 598
  },
  {
    "messages": [
      {
        "role": "user",
        "content": "Add me a new timer. Remember, I'm not counting down."
      },
      {
        "role": "function call",
        "content": {
          "name": "UtilityTools.AlarmClock.addTimer",
          "arguments": {}
        }
      },
      {
        "role": "assistant",
        "content": "What is the timer time setting"
      },
      {
        "role": "user",
        "content": "Set it to 25 minutes."
      },
      {
        "role": "function call",
        "content": {
          "name": "UtilityTools.AlarmClock.addTimer",
          "arguments": {
            "timer": "25 min"
          }
        }
      },
      {
        "role": "assistant",
        "content": "Timer name is empty by default"
      },
      {
        "role": "user",
        "content": "It was wrong before. Timer Time Settings should be 15 minutes"
      },
      {
        "role": "function call",
        "content": {
          "name": "UtilityTools.AlarmClock.addTimer",
          "arguments": {
            "timer": "15 minutes"
          }
        }
      },
      {
        "role": "assistant",
        "content": "Timer name is empty by default"
      },
      {
        "role": "user",
        "content": "Focus on learning the timer"
      },
      {
        "role": "function call",
        "content": {
          "name": "UtilityTools.AlarmClock.addTimer",
          "arguments": {
            "timer": "15 minutes",
            "timer_name": "Focused on learning"
          }
        }
      }
    ],
    "multiple_tools": [
      {
        "name": "Navigation.MapNavigation.addRemakeToCommonAddress",
        "description": "Add a note to your favorite address",
        "parameters": {
          "type": "object",
          "properties": {
            "address": {
              "type": "string",
              "description": "Primary address for note"
            },
            "remake": {
              "type": "string",
              "description": "Comment Message Content"
            }
          },
          "required": [
            "address",
            "remake"
          ]
        }
      },
      {
        "name": "Photography.PhotoEditing.addWatermarkToPicture",
        "description": "Add a watermark to your photo",
        "parameters": {
          "type": "object",
          "properties": {
            "name_or_path": {
              "type": "string",
              "description": "Photo name or path"
            },
            "text": {
              "type": "string",
              "description": "Watermark text content"
            }
          },
          "required": [
            "name_or_path",
            "text"
          ]
        }
      },
      {
        "name": "UtilityTools.AlarmClock.addTimer",
        "description": "Add a timer, not a countdown",
        "parameters": {
          "type": "object",
          "properties": {
            "timer_name": {
              "type": "string",
              "description": "Timer name, empty by default"
            },
            "timer": {
              "type": "string",
              "description": "Timer Time Settings"
            }
          },
          "required": [
            "timer_name",
            "timer"
          ]
        }
      },
      {
        "name": "UtilityTools.Reading.addReadingNote",
        "description": "Add reading notes to the assigned text on the current reading page",
        "parameters": {
          "type": "object",
          "properties": {
            "book_location": {
              "type": "string",
              "description": "Add a location for your notes"
            },
            "book_note": {
              "type": "string",
              "description": "Note content"
            }
          },
          "required": [
            "book_location",
            "book_note"
          ]
        }
      },
      {
        "name": "UtilityTools.AlarmClock.addWorldclock",
        "description": "Add world clock for selected cities",
        "parameters": {
          "type": "object",
          "properties": {
            "city": {
              "type": "string",
              "description": "World address added"
            }
          },
          "required": [
            "city"
          ]
        }
      }
    ],
    "single_tool": [
      {
        "name": "UtilityTools.AlarmClock.addTimer",
        "description": "Add a timer, not a countdown",
        "parameters": {
          "type": "object",
          "properties": {
            "timer_name": {
              "type": "string",
              "description": "Timer name, empty by default"
            },
            "timer": {
              "type": "string",
              "description": "Timer Time Settings"
            }
          },
          "required": [
            "timer_name",
            "timer"
          ]
        }
      }
    ],
    "id": 599
  },
  {
    "messages": [
      {
        "role": "user",
        "content": "Start a timer"
      },
      {
        "role": "function call",
        "content": {
          "name": "UtilityTools.AlarmClock.openTimer",
          "arguments": {}
        }
      },
      {
        "role": "assistant",
        "content": "Timer name is empty by default"
      },
      {
        "role": "user",
        "content": "Boiled egg timing"
      },
      {
        "role": "function call",
        "content": {
          "name": "UtilityTools.AlarmClock.openTimer",
          "arguments": {
            "timer_name": "Boiled egg timing"
          }
        }
      },
      {
        "role": "assistant",
        "content": "What is the timer time setting"
      },
      {
        "role": "user",
        "content": "It was wrong before. Timer name, empty by default should be Lunch Break"
      },
      {
        "role": "function call",
        "content": {
          "name": "UtilityTools.AlarmClock.openTimer",
          "arguments": {
            "timer_name": "Lunch Break"
          }
        }
      },
      {
        "role": "assistant",
        "content": "What is the timer time setting"
      },
      {
        "role": "user",
        "content": "Set it to 10 minutes."
      },
      {
        "role": "function call",
        "content": {
          "name": "UtilityTools.AlarmClock.openTimer",
          "arguments": {
            "timer_name": "Lunch Break",
            "timer": "10minutes"
          }
        }
      }
    ],
    "multiple_tools": [
      {
        "name": "SystemTools.SystemSettings.setSystemTurnOnHotSpot",
        "description": "Open Personal Hotspot",
        "parameters": {
          "type": "object",
          "properties": {
            "wifi_name": {
              "type": "string",
              "description": "Personal Hotspot Name"
            },
            "password": {
              "type": "string",
              "description": "Password"
            }
          },
          "required": [
            "wifi_name",
            "password"
          ]
        }
      },
      {
        "name": "UtilityTools.Reading.openReadingBook",
        "description": "Open book with specified name",
        "parameters": {
          "type": "object",
          "properties": {
            "book_name": {
              "type": "string",
              "description": "Book Name"
            },
            "type": {
              "type": "string",
              "description": "Look, listen; default reading"
            }
          },
          "required": [
            "book_name",
            "type"
          ]
        }
      },
      {
        "name": "UtilityTools.AlarmClock.openTimer",
        "description": "Set and turn on the specified timer",
        "parameters": {
          "type": "object",
          "properties": {
            "timer_name": {
              "type": "string",
              "description": "Timer name, empty by default"
            },
            "timer": {
              "type": "string",
              "description": "Timer Time Settings"
            }
          },
          "required": [
            "timer_name",
            "timer"
          ]
        }
      },
      {
        "name": "UtilityTools.Search.openWebBookmark",
        "description": "Open bookmarks; open a bookmark in a collection to specify bookmarks (favorites/bookmarks/tags)",
        "parameters": {
          "type": "object",
          "properties": {
            "bookmark": {
              "type": "string",
              "description": "Bookmark Name"
            }
          },
          "required": [
            "bookmark"
          ]
        }
      },
      {
        "name": "Photography.VideoRecording.startVideoShooting",
        "description": "Start shooting a new video",
        "parameters": {
          "type": "object",
          "properties": {},
          "required": []
        }
      }
    ],
    "single_tool": [
      {
        "name": "UtilityTools.AlarmClock.openTimer",
        "description": "Set and turn on the specified timer",
        "parameters": {
          "type": "object",
          "properties": {
            "timer_name": {
              "type": "string",
              "description": "Timer name, empty by default"
            },
            "timer": {
              "type": "string",
              "description": "Timer Time Settings"
            }
          },
          "required": [
            "timer_name",
            "timer"
          ]
        }
      }
    ],
    "id": 600
  },
  {
    "messages": [
      {
        "role": "user",
        "content": "Now, I need to start a timing task"
      },
      {
        "role": "function call",
        "content": {
          "name": "UtilityTools.AlarmClock.openTimer",
          "arguments": {}
        }
      },
      {
        "role": "assistant",
        "content": "Please provide timer name Empty by default"
      },
      {
        "role": "user",
        "content": "Lunch Break Timer"
      },
      {
        "role": "function call",
        "content": {
          "name": "UtilityTools.AlarmClock.openTimer",
          "arguments": {
            "timer_name": "Lunch Break"
          }
        }
      },
      {
        "role": "assistant",
        "content": "What is the timer time setting"
      },
      {
        "role": "user",
        "content": "It was wrong before. Timer name, empty by default should be Boiled egg timing"
      },
      {
        "role": "function call",
        "content": {
          "name": "UtilityTools.AlarmClock.openTimer",
          "arguments": {
            "timer_name": "Boiled egg timing"
          }
        }
      },
      {
        "role": "assistant",
        "content": "What is the timer time setting"
      },
      {
        "role": "user",
        "content": "Set it to 30 minutes."
      },
      {
        "role": "function call",
        "content": {
          "name": "UtilityTools.AlarmClock.openTimer",
          "arguments": {
            "timer_name": "Boiled egg timing",
            "timer": "30minutes"
          }
        }
      }
    ],
    "multiple_tools": [
      {
        "name": "UtilityTools.Reading.openReadingBook",
        "description": "Open book with specified name",
        "parameters": {
          "type": "object",
          "properties": {
            "book_name": {
              "type": "string",
              "description": "Book Name"
            },
            "type": {
              "type": "string",
              "description": "Look, listen; default reading"
            }
          },
          "required": [
            "book_name",
            "type"
          ]
        }
      },
      {
        "name": "SystemTools.SystemSettings.setSystemTurnOnHotSpot",
        "description": "Open Personal Hotspot",
        "parameters": {
          "type": "object",
          "properties": {
            "wifi_name": {
              "type": "string",
              "description": "Personal Hotspot Name"
            },
            "password": {
              "type": "string",
              "description": "Password"
            }
          },
          "required": [
            "wifi_name",
            "password"
          ]
        }
      },
      {
        "name": "Photography.VideoRecording.startVideoShooting",
        "description": "Start shooting a new video",
        "parameters": {
          "type": "object",
          "properties": {},
          "required": []
        }
      },
      {
        "name": "Navigation.TaxiCarRental.callingTaxi",
        "description": "Send a ride request based on your starting location",
        "parameters": {
          "type": "object",
          "properties": {
            "departure": {
              "type": "string",
              "description": "Pickup location, default current location"
            },
            "destination": {
              "type": "string",
              "description": "Destination"
            },
            "time": {
              "type": "string",
              "description": "Taxi time, default current time"
            }
          },
          "required": [
            "departure",
            "destination",
            "time"
          ]
        }
      },
      {
        "name": "UtilityTools.AlarmClock.openTimer",
        "description": "Set and turn on the specified timer",
        "parameters": {
          "type": "object",
          "properties": {
            "timer_name": {
              "type": "string",
              "description": "Timer name, empty by default"
            },
            "timer": {
              "type": "string",
              "description": "Timer Time Settings"
            }
          },
          "required": [
            "timer_name",
            "timer"
          ]
        }
      }
    ],
    "single_tool": [
      {
        "name": "UtilityTools.AlarmClock.openTimer",
        "description": "Set and turn on the specified timer",
        "parameters": {
          "type": "object",
          "properties": {
            "timer_name": {
              "type": "string",
              "description": "Timer name, empty by default"
            },
            "timer": {
              "type": "string",
              "description": "Timer Time Settings"
            }
          },
          "required": [
            "timer_name",
            "timer"
          ]
        }
      }
    ],
    "id": 601
  },
  {
    "messages": [
      {
        "role": "user",
        "content": "Set timer below"
      },
      {
        "role": "function call",
        "content": {
          "name": "UtilityTools.AlarmClock.editTimer",
          "arguments": {}
        }
      },
      {
        "role": "assistant",
        "content": "What is the name of the timer"
      },
      {
        "role": "user",
        "content": "Yoga Meditation Timer"
      },
      {
        "role": "function call",
        "content": {
          "name": "UtilityTools.AlarmClock.editTimer",
          "arguments": {
            "timer_name": "Yoga Meditation Timer"
          }
        }
      },
      {
        "role": "assistant",
        "content": "What is the timer time"
      },
      {
        "role": "user",
        "content": "It was wrong before. Timer Name:      {0} should be Tea Cooker Timer"
      },
      {
        "role": "function call",
        "content": {
          "name": "UtilityTools.AlarmClock.editTimer",
          "arguments": {
            "timer_name": "Tea Cooker Timer"
          }
        }
      },
      {
        "role": "assistant",
        "content": "What is the timer time"
      },
      {
        "role": "user",
        "content": "The timer time is set to 30 minutes."
      },
      {
        "role": "function call",
        "content": {
          "name": "UtilityTools.AlarmClock.editTimer",
          "arguments": {
            "timer_name": "Tea Cooker Timer",
            "timer": "30minutes"
          }
        }
      }
    ],
    "multiple_tools": [
      {
        "name": "UtilityTools.AlarmClock.editTimer",
        "description": "Modify timer ring settings",
        "parameters": {
          "type": "object",
          "properties": {
            "timer_name": {
              "type": "string",
              "description": "Timer Name:      {0}"
            },
            "timer": {
              "type": "string",
              "description": "Timer time"
            }
          },
          "required": [
            "timer_name",
            "timer"
          ]
        }
      },
      {
        "name": "OfficeSoftware.CloudStorage.netdiskMoveFiles",
        "description": "Moving Files to Specified Folders in Cloud Drive",
        "parameters": {
          "type": "object",
          "properties": {
            "file_path": {
              "type": "string",
              "description": "File Path"
            },
            "target_path": {
              "type": "string",
              "description": "Destination folder path"
            }
          },
          "required": [
            "file_path",
            "target_path"
          ]
        }
      },
      {
        "name": "Photography.VideoRecording.videoSlowMotion",
        "description": "Turning slow-motion effects on or off",
        "parameters": {
          "type": "object",
          "properties": {
            "open": {
              "type": "boolean",
              "description": "Whether to turn on slow-motion effects"
            },
            "frame_rate": {
              "type": "integer",
              "description": "Frame rate, e.g. 120, 240"
            }
          },
          "required": [
            "open",
            "frame_rate"
          ]
        }
      },
      {
        "name": "UtilityTools.FileManagement.moveFolderOrFile",
        "description": "Move files or folders to the specified directory",
        "parameters": {
          "type": "object",
          "properties": {
            "path": {
              "type": "string",
              "description": "File or folder name or path to be moved"
            },
            "folder": {
              "type": "string",
              "description": "Directory of files to be moved to"
            }
          },
          "required": [
            "path",
            "folder"
          ]
        }
      },
      {
        "name": "OfficeSoftware.Documents.moveFolder",
        "description": "Move the specified folder to the specified location",
        "parameters": {
          "type": "object",
          "properties": {
            "folder_name": {
              "type": "string",
              "description": "Name of the folder to move, required"
            },
            "destination_folder_name": {
              "type": "string",
              "description": "Destination folder name, required"
            }
          },
          "required": [
            "folder_name",
            "destination_folder_name"
          ]
        }
      }
    ],
    "single_tool": [
      {
        "name": "UtilityTools.AlarmClock.editTimer",
        "description": "Modify timer ring settings",
        "parameters": {
          "type": "object",
          "properties": {
            "timer_name": {
              "type": "string",
              "description": "Timer Name:      {0}"
            },
            "timer": {
              "type": "string",
              "description": "Timer time"
            }
          },
          "required": [
            "timer_name",
            "timer"
          ]
        }
      }
    ],
    "id": 602
  },
  {
    "messages": [
      {
        "role": "user",
        "content": "Timer Settings Adjustment"
      },
      {
        "role": "function call",
        "content": {
          "name": "UtilityTools.AlarmClock.editTimer",
          "arguments": {}
        }
      },
      {
        "role": "assistant",
        "content": "What is the name of the timer"
      },
      {
        "role": "user",
        "content": "Tea Cooker Timer"
      },
      {
        "role": "function call",
        "content": {
          "name": "UtilityTools.AlarmClock.editTimer",
          "arguments": {
            "timer_name": "Tea Cooker Timer"
          }
        }
      },
      {
        "role": "assistant",
        "content": "What is the timer time"
      },
      {
        "role": "user",
        "content": "It was wrong before. Timer Name:      {0} should be Yoga Meditation Timer"
      },
      {
        "role": "function call",
        "content": {
          "name": "UtilityTools.AlarmClock.editTimer",
          "arguments": {
            "timer_name": "Yoga Meditation Timer"
          }
        }
      },
      {
        "role": "assistant",
        "content": "What is the timer time"
      },
      {
        "role": "user",
        "content": "The timer is set to 15 minutes."
      },
      {
        "role": "function call",
        "content": {
          "name": "UtilityTools.AlarmClock.editTimer",
          "arguments": {
            "timer_name": "Yoga Meditation Timer",
            "timer": "15 minutes"
          }
        }
      }
    ],
    "multiple_tools": [
      {
        "name": "ConvenientLiving.GovernmentServices.queryHousingSubsidyInfo",
        "description": "Find out about housing allowances",
        "parameters": {
          "type": "object",
          "properties": {
            "user_name": {
              "type": "string",
              "description": "User name, default user himself"
            }
          },
          "required": [
            "user_name"
          ]
        }
      },
      {
        "name": "SystemTools.SystemOptimization.manageAppPermissions",
        "description": "Modify your app's permission settings",
        "parameters": {
          "type": "object",
          "properties": {
            "app_name": {
              "type": "string",
              "description": "Αpp Name"
            }
          },
          "required": [
            "app_name"
          ]
        }
      },
      {
        "name": "Photography.VideoRecording.videoAdjustWideAngle",
        "description": "Set Wide Angle Shooting Range",
        "parameters": {
          "type": "object",
          "properties": {},
          "required": []
        }
      },
      {
        "name": "UtilityTools.AlarmClock.editTimer",
        "description": "Modify timer ring settings",
        "parameters": {
          "type": "object",
          "properties": {
            "timer_name": {
              "type": "string",
              "description": "Timer Name:      {0}"
            },
            "timer": {
              "type": "string",
              "description": "Timer time"
            }
          },
          "required": [
            "timer_name",
            "timer"
          ]
        }
      },
      {
        "name": "ConvenientLiving.FoodDelivery.searchRestaurantDiscounts",
        "description": "Enter keywords to search for deals",
        "parameters": {
          "type": "object",
          "properties": {
            "keyword": {
              "type": "string",
              "description": "Keywords related to offers"
            }
          },
          "required": [
            "keyword"
          ]
        }
      }
    ],
    "single_tool": [
      {
        "name": "UtilityTools.AlarmClock.editTimer",
        "description": "Modify timer ring settings",
        "parameters": {
          "type": "object",
          "properties": {
            "timer_name": {
              "type": "string",
              "description": "Timer Name:      {0}"
            },
            "timer": {
              "type": "string",
              "description": "Timer time"
            }
          },
          "required": [
            "timer_name",
            "timer"
          ]
        }
      }
    ],
    "id": 603
  },
  {
    "messages": [
      {
        "role": "user",
        "content": "To set the duration and off mode of the stopwatch, but have not yet decided how to set it, let's first see what options are available."
      },
      {
        "role": "function call",
        "content": {
          "name": "UtilityTools.AlarmClock.setStopwatchring",
          "arguments": {}
        }
      },
      {
        "role": "assistant",
        "content": "Button Off Up Slide Off"
      },
      {
        "role": "user",
        "content": "Upswipe off is already set."
      },
      {
        "role": "function call",
        "content": {
          "name": "UtilityTools.AlarmClock.setStopwatchring",
          "arguments": {
            "set_closemethod": "Upswipe Off"
          }
        }
      },
      {
        "role": "assistant",
        "content": "Please provide options for stopwatch ringing time 1 min 5 min 10 min 15 min 20 min 30 min"
      },
      {
        "role": "user",
        "content": "It was wrong before. Button off, swipe up to close should be Button off"
      },
      {
        "role": "function call",
        "content": {
          "name": "UtilityTools.AlarmClock.setStopwatchring",
          "arguments": {
            "set_closemethod": "Button off"
          }
        }
      },
      {
        "role": "assistant",
        "content": "Please provide options for stopwatch ringing time 1 min 5 min 10 min 15 min 20 min 30 min"
      },
      {
        "role": "user",
        "content": "I choose 15 minutes."
      },
      {
        "role": "function call",
        "content": {
          "name": "UtilityTools.AlarmClock.setStopwatchring",
          "arguments": {
            "set_closemethod": "Button off",
            "set_ringduration": "15 minutes"
          }
        }
      }
    ],
    "multiple_tools": [
      {
        "name": "Navigation.MapNavigation.closeNavigationSound",
        "description": "Turn off navigation sounds",
        "parameters": {
          "type": "object",
          "properties": {},
          "required": []
        }
      },
      {
        "name": "SystemTools.SystemSettings.setSystemTurnOffSilentMode",
        "description": "Turn off Mute Mode",
        "parameters": {
          "type": "object",
          "properties": {},
          "required": []
        }
      },
      {
        "name": "UtilityTools.AlarmClock.setStopwatchring",
        "description": "Set the stopwatch ringing time and closing method, etc.",
        "parameters": {
          "type": "object",
          "properties": {
            "set_ringduration": {
              "type": "string",
              "description": "1 minute, 5 minutes, 10 minutes, 15 minutes, 20 minutes, 30 minutes"
            },
            "set_closemethod": {
              "type": "string",
              "description": "Button off, swipe up to close"
            }
          },
          "required": [
            "set_ringduration",
            "set_closemethod"
          ]
        }
      },
      {
        "name": "OnlineShopping.Mall.searchMyFootprint",
        "description": "View my browsing history by time or product filter",
        "parameters": {
          "type": "object",
          "properties": {
            "time": {
              "type": "string",
              "description": "Release Date"
            }
          },
          "required": [
            "time"
          ]
        }
      },
      {
        "name": "Photography.VideoRecording.videoTimeLapse",
        "description": "Turn time-lapse effects on or off",
        "parameters": {
          "type": "object",
          "properties": {
            "open": {
              "type": "boolean",
              "description": "Whether to turn on time-lapse shooting"
            },
            "times": {
              "type": "integer",
              "description": "Delay duration, in seconds"
            }
          },
          "required": [
            "open",
            "times"
          ]
        }
      }
    ],
    "single_tool": [
      {
        "name": "UtilityTools.AlarmClock.setStopwatchring",
        "description": "Set the stopwatch ringing time and closing method, etc.",
        "parameters": {
          "type": "object",
          "properties": {
            "set_ringduration": {
              "type": "string",
              "description": "1 minute, 5 minutes, 10 minutes, 15 minutes, 20 minutes, 30 minutes"
            },
            "set_closemethod": {
              "type": "string",
              "description": "Button off, swipe up to close"
            }
          },
          "required": [
            "set_ringduration",
            "set_closemethod"
          ]
        }
      }
    ],
    "id": 604
  },
  {
    "messages": [
      {
        "role": "user",
        "content": "Share a song"
      },
      {
        "role": "function call",
        "content": {
          "name": "MusicRadio.Karaoke.shareKsongWorks",
          "arguments": {}
        }
      },
      {
        "role": "assistant",
        "content": "Please provide a song name"
      },
      {
        "role": "user",
        "content": "The song \"ShapeofYou\""
      },
      {
        "role": "function call",
        "content": {
          "name": "MusicRadio.Karaoke.shareKsongWorks",
          "arguments": {
            "song_name": "《ShapeofYou》"
          }
        }
      },
      {
        "role": "assistant",
        "content": "Please provide Media Type and Media ID"
      },
      {
        "role": "user",
        "content": "It was wrong before. Song Name should be 《Shape of You》"
      },
      {
        "role": "function call",
        "content": {
          "name": "MusicRadio.Karaoke.shareKsongWorks",
          "arguments": {
            "song_name": "《Shape of You》"
          }
        }
      },
      {
        "role": "assistant",
        "content": "Please provide Media Type and Media ID"
      },
      {
        "role": "user",
        "content": "Weibo type, ID is 123456"
      },
      {
        "role": "function call",
        "content": {
          "name": "MusicRadio.Karaoke.shareKsongWorks",
          "arguments": {
            "song_name": "《Shape of You》",
            "media": "Twitter"
          }
        }
      }
    ],
    "multiple_tools": [
      {
        "name": "Navigation.MapNavigation.shareTravelRoute",
        "description": "Share travel plans or directions",
        "parameters": {
          "type": "object",
          "properties": {
            "departure": {
              "type": "string",
              "description": "The name or address of the departure location, the default current location"
            },
            "destination": {
              "type": "string",
              "description": "Name or address of the destination"
            },
            "to": {
              "type": "string",
              "description": "Ways to share, like social media, texting, etc."
            }
          },
          "required": [
            "departure",
            "destination",
            "to"
          ]
        }
      },
      {
        "name": "Health.Fitness.shareExerciseProgress",
        "description": "Share your fitness progress with the people you want to share it with",
        "parameters": {
          "type": "object",
          "properties": {
            "target": {
              "type": "string",
              "description": "Share with"
            },
            "exercise_progress": {
              "type": "string",
              "description": "Fitness Progress"
            }
          },
          "required": [
            "target",
            "exercise_progress"
          ]
        }
      },
      {
        "name": "MusicRadio.Karaoke.shareKsongWorks",
        "description": "Share work based on song name",
        "parameters": {
          "type": "object",
          "properties": {
            "song_name": {
              "type": "string",
              "description": "Song Name"
            },
            "media": {
              "type": "string",
              "description": "Media"
            },
            "name": {
              "type": "string",
              "description": "Friend name"
            }
          },
          "required": [
            "song_name",
            "media",
            "name"
          ]
        }
      },
      {
        "name": "VideoPlayback.OnlineVideos.shareOnlineVideo",
        "description": "Share a video to other media",
        "parameters": {
          "type": "object",
          "properties": {
            "name": {
              "type": "string",
              "description": "Video Name"
            },
            "media": {
              "type": "string",
              "description": "Share video to: WeChat, etc."
            }
          },
          "required": [
            "name",
            "media"
          ]
        }
      },
      {
        "name": "NewsMagazines.NewspapersMagazines.shareArticle",
        "description": "Share posts to social media",
        "parameters": {
          "type": "object",
          "properties": {
            "to": {
              "type": "string",
              "description": "Choose Socials To Share Single Post"
            },
            "article": {
              "type": "string",
              "description": "Articles"
            }
          },
          "required": [
            "to",
            "article"
          ]
        }
      }
    ],
    "single_tool": [
      {
        "name": "MusicRadio.Karaoke.shareKsongWorks",
        "description": "Share work based on song name",
        "parameters": {
          "type": "object",
          "properties": {
            "song_name": {
              "type": "string",
              "description": "Song Name"
            },
            "media": {
              "type": "string",
              "description": "Media"
            },
            "name": {
              "type": "string",
              "description": "Friend name"
            }
          },
          "required": [
            "song_name",
            "media",
            "name"
          ]
        }
      }
    ],
    "id": 616
  },
  {
    "messages": [
      {
        "role": "user",
        "content": "I'm looking for a song"
      },
      {
        "role": "function call",
        "content": {
          "name": "MusicRadio.OnlineMusic.searchSong",
          "arguments": {}
        }
      },
      {
        "role": "assistant",
        "content": "Please provide a song name"
      },
      {
        "role": "user",
        "content": "Tao Heung"
      },
      {
        "role": "function call",
        "content": {
          "name": "MusicRadio.OnlineMusic.searchSong",
          "arguments": {
            "keywords": "Tao Heung"
          }
        }
      },
      {
        "role": "assistant",
        "content": "Please provide singer name and popularity requirements"
      },
      {
        "role": "user",
        "content": "It was wrong before. Song Name should be Qilixiang"
      },
      {
        "role": "function call",
        "content": {
          "name": "MusicRadio.OnlineMusic.searchSong",
          "arguments": {
            "keywords": "Qilixiang"
          }
        }
      },
      {
        "role": "assistant",
        "content": "Please provide singer name and popularity requirements"
      },
      {
        "role": "user",
        "content": "The singer is Jay Chou, and the heat is very demanding."
      },
      {
        "role": "function call",
        "content": {
          "name": "MusicRadio.OnlineMusic.searchSong",
          "arguments": {
            "keywords": "Qilixiang",
            "singer_name": "Jay Chou."
          }
        }
      }
    ],
    "multiple_tools": [
      {
        "name": "MusicRadio.Karaoke.getAccompaniments",
        "description": "Get a list of song accompaniments for a given song title",
        "parameters": {
          "type": "object",
          "properties": {
            "song_name": {
              "type": "string",
              "description": "Song Name"
            },
            "singer_name": {
              "type": "string",
              "description": "Singer name"
            }
          },
          "required": [
            "song_name",
            "singer_name"
          ]
        }
      },
      {
        "name": "MusicRadio.OnlineMusic.searchSong",
        "description": "Search songs by song, artist, popularity, etc.",
        "parameters": {
          "type": "object",
          "properties": {
            "keywords": {
              "type": "string",
              "description": "Song Name"
            },
            "singer_name": {
              "type": "string",
              "description": "Singer name"
            }
          },
          "required": [
            "keywords",
            "singer_name"
          ]
        }
      },
      {
        "name": "Health.Fitness.searchNearbyGyms",
        "description": "Find a gym near you",
        "parameters": {
          "type": "object",
          "properties": {},
          "required": []
        }
      },
      {
        "name": "Education.ChildrenEducation.getChildLearningProgress",
        "description": "Get your child's progress",
        "parameters": {
          "type": "object",
          "properties": {},
          "required": []
        }
      },
      {
        "name": "VideoPlayback.OnlineVideos.favouriteOnlineVideo",
        "description": "Favorite a video",
        "parameters": {
          "type": "object",
          "properties": {
            "name": {
              "type": "string",
              "description": "Video Name"
            },
            "favourite": {
              "type": "boolean",
              "description": "Favorite/Cancel"
            }
          },
          "required": [
            "name",
            "favourite"
          ]
        }
      }
    ],
    "single_tool": [
      {
        "name": "MusicRadio.OnlineMusic.searchSong",
        "description": "Search songs by song, artist, popularity, etc.",
        "parameters": {
          "type": "object",
          "properties": {
            "keywords": {
              "type": "string",
              "description": "Song Name"
            },
            "singer_name": {
              "type": "string",
              "description": "Singer name"
            }
          },
          "required": [
            "keywords",
            "singer_name"
          ]
        }
      }
    ],
    "id": 623
  },
  {
    "messages": [
      {
        "role": "user",
        "content": "Search Tracks"
      },
      {
        "role": "function call",
        "content": {
          "name": "MusicRadio.OnlineMusic.searchSong",
          "arguments": {}
        }
      },
      {
        "role": "assistant",
        "content": "Please provide Song Name Artist Name Popularity Range"
      },
      {
        "role": "user",
        "content": "The song is \"Actor\", the singer is Xue Zhiqian, and the popularity range is expected to be in the popular range."
      },
      {
        "role": "function call",
        "content": {
          "name": "MusicRadio.OnlineMusic.searchSong",
          "arguments": {
            "keywords": "Actors"
          }
        }
      },
      {
        "role": "assistant",
        "content": "Please provide singer name and popularity requirements"
      },
      {
        "role": "user",
        "content": "It was wrong before. Song Name should be Tao Heung"
      },
      {
        "role": "function call",
        "content": {
          "name": "MusicRadio.OnlineMusic.searchSong",
          "arguments": {
            "keywords": "Tao Heung"
          }
        }
      },
      {
        "role": "assistant",
        "content": "Please provide singer name and popularity requirements"
      },
      {
        "role": "user",
        "content": "The singer is Xue Zhiqian, and the popularity requirement is the hottest song at present."
      },
      {
        "role": "function call",
        "content": {
          "name": "MusicRadio.OnlineMusic.searchSong",
          "arguments": {
            "keywords": "Tao Heung",
            "singer_name": "Joker Xue"
          }
        }
      }
    ],
    "multiple_tools": [
      {
        "name": "MusicRadio.RadioStations.radioSearchPlaylist",
        "description": "Search Playlists",
        "parameters": {
          "type": "object",
          "properties": {
            "keyword": {
              "type": "string",
              "description": "category"
            }
          },
          "required": [
            "keyword"
          ]
        }
      },
      {
        "name": "UtilityTools.Search.searchWeb",
        "description": "Web search (text, voice, photo search default text)",
        "parameters": {
          "type": "object",
          "properties": {
            "keyword": {
              "type": "string",
              "description": "Search Content"
            },
            "type": {
              "type": "string",
              "description": "Text; Voice; Picture; Default Text"
            }
          },
          "required": [
            "keyword",
            "type"
          ]
        }
      },
      {
        "name": "ConvenientLiving.GovernmentServices.searchEnterpriseByName",
        "description": "Search related businesses based on keywords entered",
        "parameters": {
          "type": "object",
          "properties": {
            "keyword": {
              "type": "string",
              "description": "Search keywords"
            }
          },
          "required": [
            "keyword"
          ]
        }
      },
      {
        "name": "VideoPlayback.OnlineVideos.searchOnlineVideo",
        "description": "Search online videos, which can be searched based on keywords (director/publisher/video keywords); can be searched based on categories; can be searched based on AI smart search",
        "parameters": {
          "type": "object",
          "properties": {
            "keyword": {
              "type": "array",
              "description": "Director/Publisher/Video Keyword Search"
            },
            "video_type": {
              "type": "string",
              "description": "Video Type Categories, Recommended, Popular, Chase, Film and Television New Journey"
            },
            "ai_search": {
              "type": "string",
              "description": "Based on search history, viewing history can only be turned off by default"
            }
          },
          "required": [
            "keyword",
            "video_type",
            "ai_search"
          ]
        }
      },
      {
        "name": "MusicRadio.OnlineMusic.searchSong",
        "description": "Search songs by song, artist, popularity, etc.",
        "parameters": {
          "type": "object",
          "properties": {
            "keywords": {
              "type": "string",
              "description": "Song Name"
            },
            "singer_name": {
              "type": "string",
              "description": "Singer name"
            }
          },
          "required": [
            "keywords",
            "singer_name"
          ]
        }
      }
    ],
    "single_tool": [
      {
        "name": "MusicRadio.OnlineMusic.searchSong",
        "description": "Search songs by song, artist, popularity, etc.",
        "parameters": {
          "type": "object",
          "properties": {
            "keywords": {
              "type": "string",
              "description": "Song Name"
            },
            "singer_name": {
              "type": "string",
              "description": "Singer name"
            }
          },
          "required": [
            "keywords",
            "singer_name"
          ]
        }
      }
    ],
    "id": 624
  },
  {
    "messages": [
      {
        "role": "user",
        "content": "What exactly is that concert?"
      },
      {
        "role": "function call",
        "content": {
          "name": "MusicRadio.OnlineMusic.getConcertInfo",
          "arguments": {}
        }
      },
      {
        "role": "assistant",
        "content": "What is the name of the concert?"
      },
      {
        "role": "user",
        "content": "Mayday Concert"
      },
      {
        "role": "function call",
        "content": {
          "name": "MusicRadio.OnlineMusic.getConcertInfo",
          "arguments": {
            "name": "Mayday Concert"
          }
        }
      },
      {
        "role": "assistant",
        "content": "What are the location and dates of the concert?"
      },
      {
        "role": "user",
        "content": "It was wrong before. Concert Name should be Cai Xukun 2023 Concert Tour"
      },
      {
        "role": "function call",
        "content": {
          "name": "MusicRadio.OnlineMusic.getConcertInfo",
          "arguments": {
            "name": "Cai Xukun 2023 Concert Tour"
          }
        }
      },
      {
        "role": "assistant",
        "content": "What are the location and dates of the concert?"
      },
      {
        "role": "user",
        "content": "The concert will be held in Shanghai on the 15th of next month."
      },
      {
        "role": "function call",
        "content": {
          "name": "MusicRadio.OnlineMusic.getConcertInfo",
          "arguments": {
            "name": "Cai Xukun 2023 Concert Tour",
            "location": "Shanghai"
          }
        }
      },
      {
        "role": "assistant",
        "content": "What are the dates of the concert?"
      },
      {
        "role": "user",
        "content": "The date of the concert is December 25, 2023, Christmas Day."
      },
      {
        "role": "function call",
        "content": {
          "name": "MusicRadio.OnlineMusic.getConcertInfo",
          "arguments": {
            "name": "Cai Xukun 2023 Concert Tour",
            "location": "Shanghai",
            "date": "December 25, 2023"
          }
        }
      }
    ],
    "multiple_tools": [
      {
        "name": "Travel.ScenicAreaServices.getScenicSpotInfo",
        "description": "Get detailed descriptions of designated attractions",
        "parameters": {
          "type": "object",
          "properties": {
            "name": {
              "type": "string",
              "description": "Name of the tourist area"
            }
          },
          "required": [
            "name"
          ]
        }
      },
      {
        "name": "Finance.Stocks.viewStockoperate",
        "description": "Query the stock market on the day of trading; the day of consignment; historical trading; historical consignment; T operation",
        "parameters": {
          "type": "object",
          "properties": {
            "transaction_today": {
              "type": "boolean",
              "description": "Deal of the day Default: 0 No"
            },
            "entrust_today": {
              "type": "boolean",
              "description": "Delegation of the day default: 0 No"
            },
            "transaction_his": {
              "type": "boolean",
              "description": "History Closing Default: 0 No"
            },
            "entrust_his": {
              "type": "boolean",
              "description": "Historical delegation default: 0 No"
            },
            "T_operate": {
              "type": "boolean",
              "description": "T Operation default: 0 No"
            }
          },
          "required": [
            "transaction_today",
            "entrust_today",
            "transaction_his",
            "entrust_his",
            "T_operate"
          ]
        }
      },
      {
        "name": "NewsMagazines.News.getHotNews",
        "description": "Get hot news content based on user-specified criteria",
        "parameters": {
          "type": "object",
          "properties": {
            "category": {
              "type": "string",
              "description": "New News Category"
            }
          },
          "required": [
            "category"
          ]
        }
      },
      {
        "name": "Travel.ScenicAreaServices.getScenicSpotEntertainment",
        "description": "Get information about entertainment in designated scenic spots",
        "parameters": {
          "type": "object",
          "properties": {
            "name": {
              "type": "string",
              "description": "Name of the tourist area"
            }
          },
          "required": [
            "name"
          ]
        }
      },
      {
        "name": "MusicRadio.OnlineMusic.getConcertInfo",
        "description": "Get information about a concert by keyword, concert location, concert date",
        "parameters": {
          "type": "object",
          "properties": {
            "name": {
              "type": "string",
              "description": "Concert Name"
            },
            "location": {
              "type": "string",
              "description": "Location of the concert"
            },
            "date": {
              "type": "string",
              "description": "Concert dates"
            }
          },
          "required": [
            "name",
            "location",
            "date"
          ]
        }
      }
    ],
    "single_tool": [
      {
        "name": "MusicRadio.OnlineMusic.getConcertInfo",
        "description": "Get information about a concert by keyword, concert location, concert date",
        "parameters": {
          "type": "object",
          "properties": {
            "name": {
              "type": "string",
              "description": "Concert Name"
            },
            "location": {
              "type": "string",
              "description": "Location of the concert"
            },
            "date": {
              "type": "string",
              "description": "Concert dates"
            }
          },
          "required": [
            "name",
            "location",
            "date"
          ]
        }
      }
    ],
    "id": 628
  },
  {
    "messages": [
      {
        "role": "user",
        "content": "Get concert details"
      },
      {
        "role": "function call",
        "content": {
          "name": "MusicRadio.OnlineMusic.getConcertInfo",
          "arguments": {}
        }
      },
      {
        "role": "assistant",
        "content": "What is the name of the concert?"
      },
      {
        "role": "user",
        "content": "It was Jay Chou's concert."
      },
      {
        "role": "function call",
        "content": {
          "name": "MusicRadio.OnlineMusic.getConcertInfo",
          "arguments": {
            "name": "Jay Chou Concert"
          }
        }
      },
      {
        "role": "assistant",
        "content": "What are the concert locations and dates?"
      },
      {
        "role": "user",
        "content": "The concert was held in Beijing on July 15."
      },
      {
        "role": "function call",
        "content": {
          "name": "MusicRadio.OnlineMusic.getConcertInfo",
          "arguments": {
            "name": "Jay Chou Concert",
            "location": "Beijing"
          }
        }
      },
      {
        "role": "assistant",
        "content": "What are the dates of the concert?"
      },
      {
        "role": "user",
        "content": "It was wrong before. Location of the concert should be Shanghai"
      },
      {
        "role": "function call",
        "content": {
          "name": "MusicRadio.OnlineMusic.getConcertInfo",
          "arguments": {
            "name": "Jay Chou Concert",
            "location": "Shanghai"
          }
        }
      },
      {
        "role": "assistant",
        "content": "What are the dates of the concert?"
      },
      {
        "role": "user",
        "content": "The date of the concert is September 10, 2023, and I have arranged it."
      },
      {
        "role": "function call",
        "content": {
          "name": "MusicRadio.OnlineMusic.getConcertInfo",
          "arguments": {
            "name": "Jay Chou Concert",
            "location": "Shanghai",
            "date": "September 10, 2023"
          }
        }
      }
    ],
    "multiple_tools": [
      {
        "name": "MusicRadio.OnlineMusic.getConcertInfo",
        "description": "Get information about a concert by keyword, concert location, concert date",
        "parameters": {
          "type": "object",
          "properties": {
            "name": {
              "type": "string",
              "description": "Concert Name"
            },
            "location": {
              "type": "string",
              "description": "Location of the concert"
            },
            "date": {
              "type": "string",
              "description": "Concert dates"
            }
          },
          "required": [
            "name",
            "location",
            "date"
          ]
        }
      },
      {
        "name": "Travel.HotelServices.viewHotelDetails",
        "description": "Get specific hotel details",
        "parameters": {
          "type": "object",
          "properties": {
            "name": {
              "type": "string",
              "description": "Hotel Name"
            },
            "location": {
              "type": "string",
              "description": "Address"
            }
          },
          "required": [
            "name",
            "location"
          ]
        }
      },
      {
        "name": "ConvenientLiving.FoodDelivery.getRestaurantDetails",
        "description": "Get restaurant details based on restaurant",
        "parameters": {
          "type": "object",
          "properties": {
            "restaurant_name": {
              "type": "string",
              "description": "Name of the restaurant"
            }
          },
          "required": [
            "restaurant_name"
          ]
        }
      },
      {
        "name": "Health.MedicalServices.viewDoctorDetails",
        "description": "View details for assigned physician",
        "parameters": {
          "type": "object",
          "properties": {
            "hospital_name": {
              "type": "string",
              "description": "Hospital Name"
            },
            "department": {
              "type": "string",
              "description": "Department"
            },
            "location": {
              "type": "string",
              "description": "Area"
            },
            "doctor_name": {
              "type": "string",
              "description": "Doctor Name"
            }
          },
          "required": [
            "hospital_name",
            "department",
            "location",
            "doctor_name"
          ]
        }
      },
      {
        "name": "MusicRadio.RadioStations.viewMusicRadioDetail",
        "description": "View a station's details",
        "parameters": {
          "type": "object",
          "properties": {
            "name": {
              "type": "string",
              "description": "Radio Name"
            }
          },
          "required": [
            "name"
          ]
        }
      }
    ],
    "single_tool": [
      {
        "name": "MusicRadio.OnlineMusic.getConcertInfo",
        "description": "Get information about a concert by keyword, concert location, concert date",
        "parameters": {
          "type": "object",
          "properties": {
            "name": {
              "type": "string",
              "description": "Concert Name"
            },
            "location": {
              "type": "string",
              "description": "Location of the concert"
            },
            "date": {
              "type": "string",
              "description": "Concert dates"
            }
          },
          "required": [
            "name",
            "location",
            "date"
          ]
        }
      }
    ],
    "id": 629
  },
  {
    "messages": [
      {
        "role": "user",
        "content": "What concerts can I see?"
      },
      {
        "role": "function call",
        "content": {
          "name": "MusicRadio.OnlineMusic.getConcertList",
          "arguments": {}
        }
      },
      {
        "role": "assistant",
        "content": "Please provide singer name"
      },
      {
        "role": "user",
        "content": "Joker Xue"
      },
      {
        "role": "function call",
        "content": {
          "name": "MusicRadio.OnlineMusic.getConcertList",
          "arguments": {
            "singer_name": "Joker Xue"
          }
        }
      },
      {
        "role": "assistant",
        "content": "What are the location and dates of the concert?"
      },
      {
        "role": "user",
        "content": "It was wrong before. Singer name should be Jay Chou."
      },
      {
        "role": "function call",
        "content": {
          "name": "MusicRadio.OnlineMusic.getConcertList",
          "arguments": {
            "singer_name": "Jay Chou."
          }
        }
      },
      {
        "role": "assistant",
        "content": "What are the location and dates of the concert?"
      },
      {
        "role": "user",
        "content": "The concert was held in Nanjing on the 15th of next month."
      },
      {
        "role": "function call",
        "content": {
          "name": "MusicRadio.OnlineMusic.getConcertList",
          "arguments": {
            "singer_name": "Jay Chou.",
            "location": "Nanjing"
          }
        }
      }
    ],
    "multiple_tools": [
      {
        "name": "MusicRadio.OnlineMusic.getConcertList",
        "description": "Get a list of all eligible concerts by concert location, concert dates",
        "parameters": {
          "type": "object",
          "properties": {
            "singer_name": {
              "type": "string",
              "description": "Singer name"
            },
            "location": {
              "type": "string",
              "description": "Location of the concert"
            },
            "date": {
              "type": "string",
              "description": "Concert dates"
            }
          },
          "required": [
            "singer_name",
            "location",
            "date"
          ]
        }
      },
      {
        "name": "OfficeSoftware.Conferencing.viewParticipants",
        "description": "Get a list of participants for the current meeting",
        "parameters": {
          "type": "object",
          "properties": {
            "meeting_id": {
              "type": "string",
              "description": "Conference No."
            },
            "title": {
              "type": "string",
              "description": "Meeting Title:"
            },
            "time": {
              "type": "string",
              "description": "Meeting Date"
            }
          },
          "required": [
            "meeting_id",
            "title",
            "time"
          ]
        }
      },
      {
        "name": "NewsMagazines.NewspapersMagazines.getSubscribedMagazines",
        "description": "Get all subscription magazines for a user",
        "parameters": {
          "type": "object",
          "properties": {},
          "required": []
        }
      },
      {
        "name": "OfficeSoftware.Conferencing.listMeetings",
        "description": "List all meetings",
        "parameters": {
          "type": "object",
          "properties": {
            "max_results": {
              "type": "integer",
              "description": "Maximum number of results, default is 10"
            },
            "time": {
              "type": "string",
              "description": "Default Same Day/Specific Date Range"
            }
          },
          "required": [
            "max_results",
            "time"
          ]
        }
      },
      {
        "name": "Navigation.PublicTransit.viewFavoriteBusRoutes",
        "description": "View the user's favorite bus routes",
        "parameters": {
          "type": "object",
          "properties": {},
          "required": []
        }
      }
    ],
    "single_tool": [
      {
        "name": "MusicRadio.OnlineMusic.getConcertList",
        "description": "Get a list of all eligible concerts by concert location, concert dates",
        "parameters": {
          "type": "object",
          "properties": {
            "singer_name": {
              "type": "string",
              "description": "Singer name"
            },
            "location": {
              "type": "string",
              "description": "Location of the concert"
            },
            "date": {
              "type": "string",
              "description": "Concert dates"
            }
          },
          "required": [
            "singer_name",
            "location",
            "date"
          ]
        }
      }
    ],
    "id": 630
  },
  {
    "messages": [
      {
        "role": "user",
        "content": "Share the violation record of Beijing B67890"
      },
      {
        "role": "function call",
        "content": {
          "name": "Navigation.TrafficViolations.shareViolationDetail",
          "arguments": {
            "plate_number": "Beijing B67890"
          }
        }
      },
      {
        "role": "assistant",
        "content": "What city is the violation located in?"
      },
      {
        "role": "user",
        "content": "The violation occurred in Guangzhou."
      },
      {
        "role": "function call",
        "content": {
          "name": "Navigation.TrafficViolations.shareViolationDetail",
          "arguments": {
            "plate_number": "Beijing B67890",
            "city": "Guangzhou"
          }
        }
      },
      {
        "role": "assistant",
        "content": "Please provide a way to share"
      },
      {
        "role": "user",
        "content": "Share the link via email."
      },
      {
        "role": "function call",
        "content": {
          "name": "Navigation.TrafficViolations.shareViolationDetail",
          "arguments": {
            "plate_number": "Beijing B67890",
            "city": "Guangzhou",
            "media": "Email"
          }
        }
      },
      {
        "role": "assistant",
        "content": "Please provide information about the recipients of the shared content"
      },
      {
        "role": "user",
        "content": "The recipient of the shared content is Manager Zhang, who is responsible for the overall coordination of this project."
      },
      {
        "role": "function call",
        "content": {
          "name": "Navigation.TrafficViolations.shareViolationDetail",
          "arguments": {
            "plate_number": "Beijing B67890",
            "city": "Guangzhou",
            "media": "Email",
            "name": "Manager Zhang"
          }
        }
      },
      {
        "role": "assistant",
        "content": "Please provide the order time"
      },
      {
        "role": "user",
        "content": "It was wrong before. License plate number should be Guangdong B6789X"
      },
      {
        "role": "function call",
        "content": {
          "name": "Navigation.TrafficViolations.shareViolationDetail",
          "arguments": {
            "plate_number": "Guangdong B6789X",
            "city": "Guangzhou",
            "media": "Email",
            "name": "Manager Zhang"
          }
        }
      },
      {
        "role": "assistant",
        "content": "Please provide the order time"
      },
      {
        "role": "user",
        "content": "It is April 1, 2024."
      },
      {
        "role": "function call",
        "content": {
          "name": "Navigation.TrafficViolations.shareViolationDetail",
          "arguments": {
            "plate_number": "Guangdong B6789X",
            "city": "Guangzhou",
            "media": "Email",
            "name": "Manager Zhang",
            "time": "April 1, 2024"
          }
        }
      }
    ],
    "multiple_tools": [
      {
        "name": "SocialCommunication.Community.shareCommunityPost",
        "description": "Share a specific post to a specific medium or to someone",
        "parameters": {
          "type": "object",
          "properties": {
            "community_name": {
              "type": "string",
              "description": "The name of the community where the post is located"
            },
            "title": {
              "type": "string",
              "description": "Prev Post Caption"
            },
            "medium": {
              "type": "string",
              "description": "Share media"
            },
            "user_name": {
              "type": "string",
              "description": "Shared by"
            }
          },
          "required": [
            "community_name",
            "title",
            "medium",
            "user_name"
          ]
        }
      },
      {
        "name": "Navigation.TrafficViolations.shareViolationDetail",
        "description": "Share Designated Violation Information",
        "parameters": {
          "type": "object",
          "properties": {
            "plate_number": {
              "type": "string",
              "description": "License plate number"
            },
            "city": {
              "type": "string",
              "description": "Violating city"
            },
            "time": {
              "type": "string",
              "description": "Billing Time"
            },
            "media": {
              "type": "string",
              "description": "Ways to share"
            },
            "name": {
              "type": "string",
              "description": "Shared content recipients"
            }
          },
          "required": [
            "plate_number",
            "city",
            "time",
            "media",
            "name"
          ]
        }
      },
      {
        "name": "NewsMagazines.News.shareNews",
        "description": "Share news",
        "parameters": {
          "type": "object",
          "properties": {
            "news_name": {
              "type": "string",
              "description": "News Name"
            },
            "to": {
              "type": "string",
              "description": "WeChat/qq/TikTok"
            }
          },
          "required": [
            "news_name",
            "to"
          ]
        }
      },
      {
        "name": "Photography.PhotoEditing.sharePicture",
        "description": "Share photos to select locations",
        "parameters": {
          "type": "object",
          "properties": {
            "name_or_path": {
              "type": "string",
              "description": "Photo name or path"
            },
            "to": {
              "type": "string",
              "description": "Destination app name"
            }
          },
          "required": [
            "name_or_path",
            "to"
          ]
        }
      },
      {
        "name": "Photography.VideoEditing.shareVideo",
        "description": "Share videos to designated locations",
        "parameters": {
          "type": "object",
          "properties": {
            "name_or_path": {
              "type": "string",
              "description": "The name or path of the video"
            },
            "to": {
              "type": "string",
              "description": "Destination app name"
            }
          },
          "required": [
            "name_or_path",
            "to"
          ]
        }
      }
    ],
    "single_tool": [
      {
        "name": "Navigation.TrafficViolations.shareViolationDetail",
        "description": "Share Designated Violation Information",
        "parameters": {
          "type": "object",
          "properties": {
            "plate_number": {
              "type": "string",
              "description": "License plate number"
            },
            "city": {
              "type": "string",
              "description": "Violating city"
            },
            "time": {
              "type": "string",
              "description": "Billing Time"
            },
            "media": {
              "type": "string",
              "description": "Ways to share"
            },
            "name": {
              "type": "string",
              "description": "Shared content recipients"
            }
          },
          "required": [
            "plate_number",
            "city",
            "time",
            "media",
            "name"
          ]
        }
      }
    ],
    "id": 642
  },
  {
    "messages": [
      {
        "role": "user",
        "content": "Give me directions to the Beijing Palace Museum"
      },
      {
        "role": "function call",
        "content": {
          "name": "Navigation.MapNavigation.planNavigationRoute",
          "arguments": {
            "destination": "Beijing Palace Museum"
          }
        }
      },
      {
        "role": "assistant",
        "content": "Please provide your departure location name or address If not provided will use your current location"
      },
      {
        "role": "user",
        "content": "Tiananmen"
      },
      {
        "role": "function call",
        "content": {
          "name": "Navigation.MapNavigation.planNavigationRoute",
          "arguments": {
            "destination": "Beijing Palace Museum",
            "departure": "Tiananmen"
          }
        }
      },
      {
        "role": "assistant",
        "content": "What is your departure time? The default is the current time."
      },
      {
        "role": "user",
        "content": "It was wrong before. Name or address of the destination should be Shanghai Disneyland"
      },
      {
        "role": "function call",
        "content": {
          "name": "Navigation.MapNavigation.planNavigationRoute",
          "arguments": {
            "destination": "Shanghai Disneyland",
            "departure": "Tiananmen"
          }
        }
      },
      {
        "role": "assistant",
        "content": "What is your departure time? The default is the current time."
      },
      {
        "role": "user",
        "content": "My departure time is 3pm, but please confirm the specific arrangement."
      },
      {
        "role": "function call",
        "content": {
          "name": "Navigation.MapNavigation.planNavigationRoute",
          "arguments": {
            "destination": "Shanghai Disneyland",
            "departure": "Tiananmen",
            "time": "15:00"
          }
        }
      },
      {
        "role": "assistant",
        "content": "How you get around by car, public transport, bike, or on foot"
      },
      {
        "role": "user",
        "content": "I usually choose public transportation for convenience and eco-friendliness."
      },
      {
        "role": "function call",
        "content": {
          "name": "Navigation.MapNavigation.planNavigationRoute",
          "arguments": {
            "destination": "Shanghai Disneyland",
            "departure": "Tiananmen",
            "time": "15:00",
            "mode": "Public traffic"
          }
        }
      }
    ],
    "multiple_tools": [
      {
        "name": "Navigation.MapNavigation.planNavigationRoute",
        "description": "Search navigation routes by origin and destination",
        "parameters": {
          "type": "object",
          "properties": {
            "departure": {
              "type": "string",
              "description": "The name or address of the departure location, the default current location"
            },
            "destination": {
              "type": "string",
              "description": "Name or address of the destination"
            },
            "time": {
              "type": "string",
              "description": "Departure time, default current time"
            },
            "mode": {
              "type": "string",
              "description": "Getting around, by car, public transport, bike, or on foot, by default"
            },
            "preferred_route": {
              "type": "string",
              "description": "Preferred route type, such as direct, few transfers, etc., optional"
            }
          },
          "required": [
            "departure",
            "destination",
            "time",
            "mode",
            "preferred_route"
          ]
        }
      },
      {
        "name": "SystemTools.SystemSettings.setSystemTurnOnScreen2TV",
        "description": "Turn on phone projection to TV",
        "parameters": {
          "type": "object",
          "properties": {},
          "required": []
        }
      },
      {
        "name": "Navigation.MapNavigation.vehicleNavigationRoute",
        "description": "Specify a vehicle as a way to get around and search for a route",
        "parameters": {
          "type": "object",
          "properties": {
            "departure": {
              "type": "string",
              "description": "The name or address of the departure location, the default current location"
            },
            "destination": {
              "type": "string",
              "description": "Name or address of the destination"
            },
            "vehicle": {
              "type": "string",
              "description": "Specify how you want to travel"
            }
          },
          "required": [
            "departure",
            "destination",
            "vehicle"
          ]
        }
      },
      {
        "name": "SocialCommunication.Calling.transferPhoneCall",
        "description": "Transfer the current call to another contact",
        "parameters": {
          "type": "object",
          "properties": {
            "transfer_contact_name": {
              "type": "string",
              "description": "Name of the contact to transfer to"
            }
          },
          "required": [
            "transfer_contact_name"
          ]
        }
      },
      {
        "name": "Travel.ItineraryServices.getTravelTransportationOptions",
        "description": "Provide transportation and directions to your destination",
        "parameters": {
          "type": "object",
          "properties": {
            "origin": {
              "type": "string",
              "description": "Origination"
            },
            "destination": {
              "type": "string",
              "description": "destination"
            }
          },
          "required": [
            "origin",
            "destination"
          ]
        }
      }
    ],
    "single_tool": [
      {
        "name": "Navigation.MapNavigation.planNavigationRoute",
        "description": "Search navigation routes by origin and destination",
        "parameters": {
          "type": "object",
          "properties": {
            "departure": {
              "type": "string",
              "description": "The name or address of the departure location, the default current location"
            },
            "destination": {
              "type": "string",
              "description": "Name or address of the destination"
            },
            "time": {
              "type": "string",
              "description": "Departure time, default current time"
            },
            "mode": {
              "type": "string",
              "description": "Getting around, by car, public transport, bike, or on foot, by default"
            },
            "preferred_route": {
              "type": "string",
              "description": "Preferred route type, such as direct, few transfers, etc., optional"
            }
          },
          "required": [
            "departure",
            "destination",
            "time",
            "mode",
            "preferred_route"
          ]
        }
      }
    ],
    "id": 647
  },
  {
    "messages": [
      {
        "role": "user",
        "content": "I'm going to Beijing, help me share this trip with my friends"
      },
      {
        "role": "function call",
        "content": {
          "name": "Navigation.TaxiCarRental.shareTaxiOrder",
          "arguments": {
            "destination": "Beijing"
          }
        }
      },
      {
        "role": "assistant",
        "content": "What is the order time"
      },
      {
        "role": "user",
        "content": "The order was placed last Friday at 8pm."
      },
      {
        "role": "function call",
        "content": {
          "name": "Navigation.TaxiCarRental.shareTaxiOrder",
          "arguments": {
            "destination": "Beijing",
            "time": "Last Friday at 8pm"
          }
        }
      },
      {
        "role": "assistant",
        "content": "What media content needs to be shared? To whom?"
      },
      {
        "role": "user",
        "content": "It was wrong before. destination should be Central Library"
      },
      {
        "role": "function call",
        "content": {
          "name": "Navigation.TaxiCarRental.shareTaxiOrder",
          "arguments": {
            "destination": "Central Library",
            "time": "Last Friday at 8pm"
          }
        }
      },
      {
        "role": "assistant",
        "content": "What media content needs to be shared? To whom?"
      },
      {
        "role": "user",
        "content": "I would like to share some photos of the trip with my QQ friends."
      },
      {
        "role": "function call",
        "content": {
          "name": "Navigation.TaxiCarRental.shareTaxiOrder",
          "arguments": {
            "destination": "Central Library",
            "time": "Last Friday at 8pm",
            "media": "QQ"
          }
        }
      }
    ],
    "multiple_tools": [
      {
        "name": "MusicRadio.Karaoke.shareKsongWorks",
        "description": "Share work based on song name",
        "parameters": {
          "type": "object",
          "properties": {
            "song_name": {
              "type": "string",
              "description": "Song Name"
            },
            "media": {
              "type": "string",
              "description": "Media"
            },
            "name": {
              "type": "string",
              "description": "Friend name"
            }
          },
          "required": [
            "song_name",
            "media",
            "name"
          ]
        }
      },
      {
        "name": "Navigation.MapNavigation.shareTravelRoute",
        "description": "Share travel plans or directions",
        "parameters": {
          "type": "object",
          "properties": {
            "departure": {
              "type": "string",
              "description": "The name or address of the departure location, the default current location"
            },
            "destination": {
              "type": "string",
              "description": "Name or address of the destination"
            },
            "to": {
              "type": "string",
              "description": "Ways to share, like social media, texting, etc."
            }
          },
          "required": [
            "departure",
            "destination",
            "to"
          ]
        }
      },
      {
        "name": "Health.Fitness.shareExerciseProgress",
        "description": "Share your fitness progress with the people you want to share it with",
        "parameters": {
          "type": "object",
          "properties": {
            "target": {
              "type": "string",
              "description": "Share with"
            },
            "exercise_progress": {
              "type": "string",
              "description": "Fitness Progress"
            }
          },
          "required": [
            "target",
            "exercise_progress"
          ]
        }
      },
      {
        "name": "Navigation.TaxiCarRental.shareTaxiOrder",
        "description": "Share route",
        "parameters": {
          "type": "object",
          "properties": {
            "time": {
              "type": "string",
              "description": "Order time"
            },
            "destination": {
              "type": "string",
              "description": "destination"
            },
            "media": {
              "type": "string",
              "description": "Choose Socials To Share Single Post"
            }
          },
          "required": [
            "time",
            "destination",
            "media"
          ]
        }
      },
      {
        "name": "NewsMagazines.NewspapersMagazines.shareArticle",
        "description": "Share posts to social media",
        "parameters": {
          "type": "object",
          "properties": {
            "to": {
              "type": "string",
              "description": "Choose Socials To Share Single Post"
            },
            "article": {
              "type": "string",
              "description": "Articles"
            }
          },
          "required": [
            "to",
            "article"
          ]
        }
      }
    ],
    "single_tool": [
      {
        "name": "Navigation.TaxiCarRental.shareTaxiOrder",
        "description": "Share route",
        "parameters": {
          "type": "object",
          "properties": {
            "time": {
              "type": "string",
              "description": "Order time"
            },
            "destination": {
              "type": "string",
              "description": "destination"
            },
            "media": {
              "type": "string",
              "description": "Choose Socials To Share Single Post"
            }
          },
          "required": [
            "time",
            "destination",
            "media"
          ]
        }
      }
    ],
    "id": 651
  },
  {
    "messages": [
      {
        "role": "user",
        "content": "Help me see what kind of car can be rented over there at Beijing Capital Airport"
      },
      {
        "role": "function call",
        "content": {
          "name": "Navigation.TaxiCarRental.searchCarRental",
          "arguments": {
            "location": "Beijing Capital Airport"
          }
        }
      },
      {
        "role": "assistant",
        "content": "What time does it start?"
      },
      {
        "role": "user",
        "content": "Starting at 8am on April 5, 2023, the meeting will start on time."
      },
      {
        "role": "function call",
        "content": {
          "name": "Navigation.TaxiCarRental.searchCarRental",
          "arguments": {
            "location": "Beijing Capital Airport",
            "start_time": "04/05/2023 08:00"
          }
        }
      },
      {
        "role": "assistant",
        "content": "What is the return time?"
      },
      {
        "role": "user",
        "content": "It was wrong before. Start Time  should be Tomorrow at 9am"
      },
      {
        "role": "function call",
        "content": {
          "name": "Navigation.TaxiCarRental.searchCarRental",
          "arguments": {
            "location": "Beijing Capital Airport",
            "start_time": "Tomorrow at 9am"
          }
        }
      },
      {
        "role": "assistant",
        "content": "What is the return time?"
      },
      {
        "role": "user",
        "content": "The return time is 6pm on April 10, 2023, remember to arrive a little early to avoid late rush."
      },
      {
        "role": "function call",
        "content": {
          "name": "Navigation.TaxiCarRental.searchCarRental",
          "arguments": {
            "location": "Beijing Capital Airport",
            "start_time": "Tomorrow at 9am",
            "end_time": "April 10, 2023 at 6pm"
          }
        }
      }
    ],
    "multiple_tools": [
      {
        "name": "Navigation.TaxiCarRental.searchCarRental",
        "description": "See cars available in your location",
        "parameters": {
          "type": "object",
          "properties": {
            "location": {
              "type": "string",
              "description": "Pick-up from"
            },
            "start_time": {
              "type": "string",
              "description": "Start Time "
            },
            "end_time": {
              "type": "string",
              "description": "drop-off date"
            }
          },
          "required": [
            "location",
            "start_time",
            "end_time"
          ]
        }
      },
      {
        "name": "Navigation.Bicycles.findBikes",
        "description": "Find a bike/moped in your location",
        "parameters": {
          "type": "object",
          "properties": {
            "location": {
              "type": "string",
              "description": "Location, default current location"
            }
          },
          "required": [
            "location"
          ]
        }
      },
      {
        "name": "Navigation.MapNavigation.searchLocation",
        "description": "Search for a location by keyword, which can be a location, a point of interest such as a gas station, a charging pile, etc., and return a list of address information",
        "parameters": {
          "type": "object",
          "properties": {
            "keyword": {
              "type": "string",
              "description": "Keywords for search"
            }
          },
          "required": [
            "keyword"
          ]
        }
      },
      {
        "name": "ConvenientLiving.AutoLife.searchUsedCars",
        "description": "Enter specific criteria to search for eligible vehicles",
        "parameters": {
          "type": "object",
          "properties": {
            "keywords": {
              "type": "string",
              "description": "Search criteria, type, etc."
            },
            "brand": {
              "type": "string",
              "description": "Car Brand"
            },
            "price": {
              "type": "string",
              "description": "Bid vehicle price"
            },
            "mileage": {
              "type": "string",
              "description": "Mileage"
            }
          },
          "required": [
            "keywords",
            "brand",
            "price",
            "mileage"
          ]
        }
      },
      {
        "name": "ConvenientLiving.FoodDelivery.searchRestaurants",
        "description": "Search for restaurants on Meituan based on user input",
        "parameters": {
          "type": "object",
          "properties": {
            "location": {
              "type": "string",
              "description": "Location"
            },
            "name": {
              "type": "string",
              "description": "regional cuisine"
            },
            "order": {
              "type": "string",
              "description": "Sort by e.g. rating, distance, average spend"
            }
          },
          "required": [
            "location",
            "name",
            "order"
          ]
        }
      }
    ],
    "single_tool": [
      {
        "name": "Navigation.TaxiCarRental.searchCarRental",
        "description": "See cars available in your location",
        "parameters": {
          "type": "object",
          "properties": {
            "location": {
              "type": "string",
              "description": "Pick-up from"
            },
            "start_time": {
              "type": "string",
              "description": "Start Time "
            },
            "end_time": {
              "type": "string",
              "description": "drop-off date"
            }
          },
          "required": [
            "location",
            "start_time",
            "end_time"
          ]
        }
      }
    ],
    "id": 653
  },
  {
    "messages": [
      {
        "role": "user",
        "content": "I plan to depart from Beijing, help me find cheap flights"
      },
      {
        "role": "function call",
        "content": {
          "name": "Navigation.FlightTickets.searchCheapFlights",
          "arguments": {
            "departure": "Beijing"
          }
        }
      },
      {
        "role": "assistant",
        "content": "What's the destination"
      },
      {
        "role": "user",
        "content": "London is my destination."
      },
      {
        "role": "function call",
        "content": {
          "name": "Navigation.FlightTickets.searchCheapFlights",
          "arguments": {
            "departure": "Beijing",
            "destination": "Londorn"
          }
        }
      },
      {
        "role": "assistant",
        "content": "When are you traveling?"
      },
      {
        "role": "user",
        "content": "It was wrong before. Origination should be Neo-York"
      },
      {
        "role": "function call",
        "content": {
          "name": "Navigation.FlightTickets.searchCheapFlights",
          "arguments": {
            "departure": "Neo-York",
            "destination": "Londorn"
          }
        }
      },
      {
        "role": "assistant",
        "content": "When are you traveling?"
      },
      {
        "role": "user",
        "content": "I plan to travel in July this year."
      },
      {
        "role": "function call",
        "content": {
          "name": "Navigation.FlightTickets.searchCheapFlights",
          "arguments": {
            "departure": "Neo-York",
            "destination": "Londorn",
            "travel_date": "July of this year"
          }
        }
      }
    ],
    "multiple_tools": [
      {
        "name": "ConvenientLiving.FoodDelivery.searchRestaurants",
        "description": "Search for restaurants on Meituan based on user input",
        "parameters": {
          "type": "object",
          "properties": {
            "location": {
              "type": "string",
              "description": "Location"
            },
            "name": {
              "type": "string",
              "description": "regional cuisine"
            },
            "order": {
              "type": "string",
              "description": "Sort by e.g. rating, distance, average spend"
            }
          },
          "required": [
            "location",
            "name",
            "order"
          ]
        }
      },
      {
        "name": "Navigation.MapNavigation.searchLocation",
        "description": "Search for a location by keyword, which can be a location, a point of interest such as a gas station, a charging pile, etc., and return a list of address information",
        "parameters": {
          "type": "object",
          "properties": {
            "keyword": {
              "type": "string",
              "description": "Keywords for search"
            }
          },
          "required": [
            "keyword"
          ]
        }
      },
      {
        "name": "Navigation.FlightTickets.searchCheapFlights",
        "description": "Search cheap flights by specified criteria",
        "parameters": {
          "type": "object",
          "properties": {
            "type": {
              "type": "string",
              "description": "One way, round trip"
            },
            "departure": {
              "type": "string",
              "description": "Origination"
            },
            "destination": {
              "type": "string",
              "description": "Reach ground"
            },
            "travel_date": {
              "type": "string",
              "description": "Specify date, next month, next three months, etc."
            }
          },
          "required": [
            "type",
            "departure",
            "destination",
            "travel_date"
          ]
        }
      },
      {
        "name": "Navigation.Bicycles.findBikes",
        "description": "Find a bike/moped in your location",
        "parameters": {
          "type": "object",
          "properties": {
            "location": {
              "type": "string",
              "description": "Location, default current location"
            }
          },
          "required": [
            "location"
          ]
        }
      },
      {
        "name": "Navigation.MapNavigation.planNavigationRoute",
        "description": "Search navigation routes by origin and destination",
        "parameters": {
          "type": "object",
          "properties": {
            "departure": {
              "type": "string",
              "description": "The name or address of the departure location, the default current location"
            },
            "destination": {
              "type": "string",
              "description": "Name or address of the destination"
            },
            "time": {
              "type": "string",
              "description": "Departure time, default current time"
            },
            "mode": {
              "type": "string",
              "description": "Getting around, by car, public transport, bike, or on foot, by default"
            },
            "preferred_route": {
              "type": "string",
              "description": "Preferred route type, such as direct, few transfers, etc., optional"
            }
          },
          "required": [
            "departure",
            "destination",
            "time",
            "mode",
            "preferred_route"
          ]
        }
      }
    ],
    "single_tool": [
      {
        "name": "Navigation.FlightTickets.searchCheapFlights",
        "description": "Search cheap flights by specified criteria",
        "parameters": {
          "type": "object",
          "properties": {
            "type": {
              "type": "string",
              "description": "One way, round trip"
            },
            "departure": {
              "type": "string",
              "description": "Origination"
            },
            "destination": {
              "type": "string",
              "description": "Reach ground"
            },
            "travel_date": {
              "type": "string",
              "description": "Specify date, next month, next three months, etc."
            }
          },
          "required": [
            "type",
            "departure",
            "destination",
            "travel_date"
          ]
        }
      }
    ],
    "id": 656
  },
  {
    "messages": [
      {
        "role": "user",
        "content": "I need to cancel my flight booking with ID number 123456789012345678"
      },
      {
        "role": "function call",
        "content": {
          "name": "Navigation.FlightTickets.cancelFlightBooking",
          "arguments": {
            "passenger_id": "123456789012345678"
          }
        }
      },
      {
        "role": "assistant",
        "content": "Please provide a departure location"
      },
      {
        "role": "user",
        "content": "I leave from Guangzhou."
      },
      {
        "role": "function call",
        "content": {
          "name": "Navigation.FlightTickets.cancelFlightBooking",
          "arguments": {
            "passenger_id": "123456789012345678",
            "departure": "Guangzhou"
          }
        }
      },
      {
        "role": "assistant",
        "content": "Where to"
      },
      {
        "role": "user",
        "content": "It was wrong before. Origination should be Beijing"
      },
      {
        "role": "function call",
        "content": {
          "name": "Navigation.FlightTickets.cancelFlightBooking",
          "arguments": {
            "passenger_id": "123456789012345678",
            "departure": "Beijing"
          }
        }
      },
      {
        "role": "assistant",
        "content": "Where to"
      },
      {
        "role": "user",
        "content": "Chengdu"
      },
      {
        "role": "function call",
        "content": {
          "name": "Navigation.FlightTickets.cancelFlightBooking",
          "arguments": {
            "passenger_id": "123456789012345678",
            "departure": "Beijing",
            "destination": "Chengdu"
          }
        }
      },
      {
        "role": "assistant",
        "content": "What's the name of the person who booked the reservation"
      },
      {
        "role": "user",
        "content": "The name of the booker is Li Si, who will be attending the event."
      },
      {
        "role": "function call",
        "content": {
          "name": "Navigation.FlightTickets.cancelFlightBooking",
          "arguments": {
            "passenger_id": "123456789012345678",
            "departure": "Beijing",
            "destination": "Chengdu",
            "name": "Li Si"
          }
        }
      }
    ],
    "multiple_tools": [
      {
        "name": "Health.MedicalServices.cancelDoctorAppointment",
        "description": "Cancelling an appointment with a doctor",
        "parameters": {
          "type": "object",
          "properties": {
            "doctor_name": {
              "type": "string",
              "description": "Doctor Name"
            },
            "appointment_time": {
              "type": "string",
              "description": "Specific time of appointment '"
            }
          },
          "required": [
            "doctor_name",
            "appointment_time"
          ]
        }
      },
      {
        "name": "Navigation.FlightTickets.cancelFlightBooking",
        "description": "Cancelling a flight for a specific reservation",
        "parameters": {
          "type": "object",
          "properties": {
            "departure": {
              "type": "string",
              "description": "Origination"
            },
            "destination": {
              "type": "string",
              "description": "Reach ground"
            },
            "name": {
              "type": "string",
              "description": "Name of person who booked"
            },
            "time": {
              "type": "string",
              "description": "Flight departure time"
            },
            "passenger_id": {
              "type": "string",
              "description": "Rider ID number"
            }
          },
          "required": [
            "departure",
            "destination",
            "name",
            "time",
            "passenger_id"
          ]
        }
      },
      {
        "name": "ConvenientLiving.GovernmentServices.deleteServiceRequest",
        "description": "Remove city service requests that are no longer needed",
        "parameters": {
          "type": "object",
          "properties": {
            "request_name": {
              "type": "string",
              "description": "Name of the service request"
            }
          },
          "required": [
            "request_name"
          ]
        }
      },
      {
        "name": "ConvenientLiving.FoodDelivery.cancelRestaurantOrder",
        "description": "Canceling an order based on an order",
        "parameters": {
          "type": "object",
          "properties": {
            "order_name": {
              "type": "string",
              "description": "Contents of the order"
            }
          },
          "required": [
            "order_name"
          ]
        }
      },
      {
        "name": "Finance.Funds.cancelFundAutoPurchase",
        "description": "Unsubscribe from auto-subscription for designated funds",
        "parameters": {
          "type": "object",
          "properties": {
            "fund_name": {
              "type": "string",
              "description": "Fund name"
            },
            "fund_code": {
              "type": "string",
              "description": "Fund  Code"
            }
          },
          "required": [
            "fund_name",
            "fund_code"
          ]
        }
      }
    ],
    "single_tool": [
      {
        "name": "Navigation.FlightTickets.cancelFlightBooking",
        "description": "Cancelling a flight for a specific reservation",
        "parameters": {
          "type": "object",
          "properties": {
            "departure": {
              "type": "string",
              "description": "Origination"
            },
            "destination": {
              "type": "string",
              "description": "Reach ground"
            },
            "name": {
              "type": "string",
              "description": "Name of person who booked"
            },
            "time": {
              "type": "string",
              "description": "Flight departure time"
            },
            "passenger_id": {
              "type": "string",
              "description": "Rider ID number"
            }
          },
          "required": [
            "departure",
            "destination",
            "name",
            "time",
            "passenger_id"
          ]
        }
      }
    ],
    "id": 657
  },
  {
    "messages": [
      {
        "role": "user",
        "content": "I want to see my past flight bookings for ID number 123456789012345678"
      },
      {
        "role": "function call",
        "content": {
          "name": "Navigation.FlightTickets.viewBookingFlightHistory",
          "arguments": {
            "passenger_id": "123456789012345678"
          }
        }
      },
      {
        "role": "assistant",
        "content": "What's your rider's name"
      },
      {
        "role": "user",
        "content": "The rider's name is Li Si, but please confirm the specific trip information."
      },
      {
        "role": "function call",
        "content": {
          "name": "Navigation.FlightTickets.viewBookingFlightHistory",
          "arguments": {
            "passenger_id": "123456789012345678",
            "name": "Li Si"
          }
        }
      },
      {
        "role": "assistant",
        "content": "Please provide a start time."
      },
      {
        "role": "user",
        "content": "It was wrong before. Rider ID number should be 876543210987654321"
      },
      {
        "role": "function call",
        "content": {
          "name": "Navigation.FlightTickets.viewBookingFlightHistory",
          "arguments": {
            "passenger_id": "876543210987654321",
            "name": "Li Si"
          }
        }
      },
      {
        "role": "assistant",
        "content": "Please provide a start time."
      },
      {
        "role": "user",
        "content": "Started in January of this year."
      },
      {
        "role": "function call",
        "content": {
          "name": "Navigation.FlightTickets.viewBookingFlightHistory",
          "arguments": {
            "passenger_id": "876543210987654321",
            "name": "Li Si",
            "start_time": "January of this year"
          }
        }
      }
    ],
    "multiple_tools": [
      {
        "name": "Photography.PhotoEditing.viewPicture",
        "description": "View photo",
        "parameters": {
          "type": "object",
          "properties": {
            "name_or_path": {
              "type": "string",
              "description": "Photo name or path"
            }
          },
          "required": [
            "name_or_path"
          ]
        }
      },
      {
        "name": "OfficeSoftware.Documents.readDocument",
        "description": "Read the specified document based on the document name",
        "parameters": {
          "type": "object",
          "properties": {
            "document_name": {
              "type": "string",
              "description": "Document name, required"
            }
          },
          "required": [
            "document_name"
          ]
        }
      },
      {
        "name": "Navigation.TrainTickets.queryPassengerTrainOrder",
        "description": "Check the passenger's train ticket reservation information",
        "parameters": {
          "type": "object",
          "properties": {
            "passenger_id": {
              "type": "string",
              "description": "Rider ID number"
            },
            "name": {
              "type": "string",
              "description": "Name of person to query"
            },
            "time": {
              "type": "string",
              "description": "Release Date"
            }
          },
          "required": [
            "passenger_id",
            "name",
            "time"
          ]
        }
      },
      {
        "name": "Navigation.FlightTickets.viewBookingFlightHistory",
        "description": "View user's past flight bookings",
        "parameters": {
          "type": "object",
          "properties": {
            "passenger_id": {
              "type": "string",
              "description": "Rider ID number"
            },
            "name": {
              "type": "string",
              "description": "Passenger's Name"
            },
            "start_time": {
              "type": "string",
              "description": "Start Time "
            },
            "end_time": {
              "type": "string",
              "description": "End Time"
            }
          },
          "required": [
            "passenger_id",
            "name",
            "start_time",
            "end_time"
          ]
        }
      },
      {
        "name": "ConvenientLiving.GovernmentServices.queryVehicleRegistrationInfo",
        "description": "Check the registration details of the designated vehicle",
        "parameters": {
          "type": "object",
          "properties": {
            "vehicle_vin": {
              "type": "string",
              "description": "Vehicle Unique Sequence"
            }
          },
          "required": [
            "vehicle_vin"
          ]
        }
      }
    ],
    "single_tool": [
      {
        "name": "Navigation.FlightTickets.viewBookingFlightHistory",
        "description": "View user's past flight bookings",
        "parameters": {
          "type": "object",
          "properties": {
            "passenger_id": {
              "type": "string",
              "description": "Rider ID number"
            },
            "name": {
              "type": "string",
              "description": "Passenger's Name"
            },
            "start_time": {
              "type": "string",
              "description": "Start Time "
            },
            "end_time": {
              "type": "string",
              "description": "End Time"
            }
          },
          "required": [
            "passenger_id",
            "name",
            "start_time",
            "end_time"
          ]
        }
      }
    ],
    "id": 662
  },
  {
    "messages": [
      {
        "role": "user",
        "content": "Check the flight records I've booked with this ID 876543210987654321"
      },
      {
        "role": "function call",
        "content": {
          "name": "Navigation.FlightTickets.viewBookingFlightHistory",
          "arguments": {
            "passenger_id": "876543210987654321"
          }
        }
      },
      {
        "role": "assistant",
        "content": "Please provide the rider's name"
      },
      {
        "role": "user",
        "content": "The passenger's name is Zhang San."
      },
      {
        "role": "function call",
        "content": {
          "name": "Navigation.FlightTickets.viewBookingFlightHistory",
          "arguments": {
            "passenger_id": "876543210987654321",
            "name": "Zhang San"
          }
        }
      },
      {
        "role": "assistant",
        "content": "Please provide a start time."
      },
      {
        "role": "user",
        "content": "It was wrong before. Rider ID number should be 123456789012345678"
      },
      {
        "role": "function call",
        "content": {
          "name": "Navigation.FlightTickets.viewBookingFlightHistory",
          "arguments": {
            "passenger_id": "123456789012345678",
            "name": "Zhang San"
          }
        }
      },
      {
        "role": "assistant",
        "content": "Please provide a start time."
      },
      {
        "role": "user",
        "content": "Since December of last year"
      },
      {
        "role": "function call",
        "content": {
          "name": "Navigation.FlightTickets.viewBookingFlightHistory",
          "arguments": {
            "passenger_id": "123456789012345678",
            "name": "Zhang San",
            "start_time": "December of last year"
          }
        }
      }
    ],
    "multiple_tools": [
      {
        "name": "Navigation.FlightTickets.viewBookingFlightHistory",
        "description": "View user's past flight bookings",
        "parameters": {
          "type": "object",
          "properties": {
            "passenger_id": {
              "type": "string",
              "description": "Rider ID number"
            },
            "name": {
              "type": "string",
              "description": "Passenger's Name"
            },
            "start_time": {
              "type": "string",
              "description": "Start Time "
            },
            "end_time": {
              "type": "string",
              "description": "End Time"
            }
          },
          "required": [
            "passenger_id",
            "name",
            "start_time",
            "end_time"
          ]
        }
      },
      {
        "name": "Health.MedicalServices.getPatientMedicalRecord",
        "description": "Obtain the patient's medical record information based on the patient's name, etc.",
        "parameters": {
          "type": "object",
          "properties": {
            "patient_name": {
              "type": "string",
              "description": "Patient Name"
            }
          },
          "required": [
            "patient_name"
          ]
        }
      },
      {
        "name": "OfficeSoftware.CloudStorage.netdiskGetUploadFilesRecords",
        "description": "Get a list of uploaded files/folders records in Cloud Drive",
        "parameters": {
          "type": "object",
          "properties": {},
          "required": []
        }
      },
      {
        "name": "Travel.HotelServices.getHotelReservationHistory",
        "description": "Get a user's hotel booking history",
        "parameters": {
          "type": "object",
          "properties": {
            "start_date": {
              "type": "string",
              "description": "Start Time "
            },
            "end_date": {
              "type": "string",
              "description": "End Time"
            }
          },
          "required": [
            "start_date",
            "end_date"
          ]
        }
      },
      {
        "name": "Navigation.TrainTickets.viewBookingTrainHistory",
        "description": "View user's past booking history",
        "parameters": {
          "type": "object",
          "properties": {},
          "required": []
        }
      }
    ],
    "single_tool": [
      {
        "name": "Navigation.FlightTickets.viewBookingFlightHistory",
        "description": "View user's past flight bookings",
        "parameters": {
          "type": "object",
          "properties": {
            "passenger_id": {
              "type": "string",
              "description": "Rider ID number"
            },
            "name": {
              "type": "string",
              "description": "Passenger's Name"
            },
            "start_time": {
              "type": "string",
              "description": "Start Time "
            },
            "end_time": {
              "type": "string",
              "description": "End Time"
            }
          },
          "required": [
            "passenger_id",
            "name",
            "start_time",
            "end_time"
          ]
        }
      }
    ],
    "id": 663
  },
  {
    "messages": [
      {
        "role": "user",
        "content": "Book me a train ticket for next Friday"
      },
      {
        "role": "function call",
        "content": {
          "name": "Navigation.TrainTickets.bookTrainTicket",
          "arguments": {
            "ride_date": "Next Friday"
          }
        }
      },
      {
        "role": "assistant",
        "content": "Where is your departure station?"
      },
      {
        "role": "user",
        "content": "My departure station is Beijing West Station."
      },
      {
        "role": "function call",
        "content": {
          "name": "Navigation.TrainTickets.bookTrainTicket",
          "arguments": {
            "ride_date": "Next Friday",
            "departure_station": "Beijing West Railway Station"
          }
        }
      },
      {
        "role": "assistant",
        "content": "Where is your arrival station?"
      },
      {
        "role": "user",
        "content": "It was wrong before. Date of trip should be Next Monday"
      },
      {
        "role": "function call",
        "content": {
          "name": "Navigation.TrainTickets.bookTrainTicket",
          "arguments": {
            "ride_date": "Next Monday",
            "departure_station": "Beijing West Railway Station"
          }
        }
      },
      {
        "role": "assistant",
        "content": "Where is your arrival station?"
      },
      {
        "role": "user",
        "content": "My arrival station is Hangzhou East Station."
      },
      {
        "role": "function call",
        "content": {
          "name": "Navigation.TrainTickets.bookTrainTicket",
          "arguments": {
            "ride_date": "Next Monday",
            "departure_station": "Beijing West Railway Station",
            "destination_station": "Hangzhou East"
          }
        }
      },
      {
        "role": "assistant",
        "content": "Provide the rider's ID number"
      },
      {
        "role": "user",
        "content": "234567890123456789"
      },
      {
        "role": "function call",
        "content": {
          "name": "Navigation.TrainTickets.bookTrainTicket",
          "arguments": {
            "ride_date": "Next Monday",
            "departure_station": "Beijing West Railway Station",
            "destination_station": "Hangzhou East",
            "passenger_id": "234567890123456789"
          }
        }
      },
      {
        "role": "assistant",
        "content": "What's the rider's name"
      },
      {
        "role": "user",
        "content": "The passenger's name was Li Si."
      },
      {
        "role": "function call",
        "content": {
          "name": "Navigation.TrainTickets.bookTrainTicket",
          "arguments": {
            "ride_date": "Next Monday",
            "departure_station": "Beijing West Railway Station",
            "destination_station": "Hangzhou East",
            "passenger_id": "234567890123456789",
            "passenger_name": "Li Si"
          }
        }
      },
      {
        "role": "assistant",
        "content": "What type of seat would you like to book"
      },
      {
        "role": "user",
        "content": "I would like to book a second class seat."
      },
      {
        "role": "function call",
        "content": {
          "name": "Navigation.TrainTickets.bookTrainTicket",
          "arguments": {
            "ride_date": "Next Monday",
            "departure_station": "Beijing West Railway Station",
            "destination_station": "Hangzhou East",
            "passenger_id": "234567890123456789",
            "passenger_name": "Li Si",
            "seat_type": "Second class"
          }
        }
      }
    ],
    "multiple_tools": [
      {
        "name": "ConvenientLiving.GovernmentServices.applyForEducationGrant",
        "description": "Submit an application for an education grant",
        "parameters": {
          "type": "object",
          "properties": {
            "name": {
              "type": "string",
              "description": "Applicant, default user self"
            },
            "school": {
              "type": "string",
              "description": "Schools"
            }
          },
          "required": [
            "name",
            "school"
          ]
        }
      },
      {
        "name": "Navigation.TrainTickets.addTrainWaitlistOrder",
        "description": "User submits train ticket standby order",
        "parameters": {
          "type": "object",
          "properties": {
            "train_number": {
              "type": "string",
              "description": "Number of trips to book; select all by default, up to 6"
            },
            "passenger_name": {
              "type": "string",
              "description": "Rider's name"
            },
            "passenger_id": {
              "type": "string",
              "description": "Rider ID number"
            },
            "ride_date": {
              "type": "string",
              "description": "Trip date in YYYY-MM-DD format"
            },
            "departure_station": {
              "type": "string",
              "description": "Departure Station"
            },
            "destination_station": {
              "type": "string",
              "description": "arrival station"
            },
            "seat_type": {
              "type": "string",
              "description": "Seat Type"
            }
          },
          "required": [
            "train_number",
            "passenger_name",
            "passenger_id",
            "ride_date",
            "departure_station",
            "destination_station",
            "seat_type"
          ]
        }
      },
      {
        "name": "VideoPlayback.OnlineVideos.coinOnlinevideo",
        "description": "Coin a video",
        "parameters": {
          "type": "object",
          "properties": {
            "name": {
              "type": "string",
              "description": "Video Name"
            },
            "count": {
              "type": "integer",
              "description": "Number of coins, default 1 coin"
            }
          },
          "required": [
            "name",
            "count"
          ]
        }
      },
      {
        "name": "OnlineShopping.ExpressDelivery.signForOrderExpress",
        "description": "Sign and receive courier orders according to the designated courier number",
        "parameters": {
          "type": "object",
          "properties": {
            "date": {
              "type": "string",
              "description": "Express date"
            },
            "express_id": {
              "type": "string",
              "description": "Tracking Number"
            }
          },
          "required": [
            "date",
            "express_id"
          ]
        }
      },
      {
        "name": "Navigation.TrainTickets.bookTrainTicket",
        "description": "Book a train ticket for a specific time, origin, or destination for a specific rider",
        "parameters": {
          "type": "object",
          "properties": {
            "ride_date": {
              "type": "string",
              "description": "Date of trip"
            },
            "departure_station": {
              "type": "string",
              "description": "Departure Station"
            },
            "destination_station": {
              "type": "string",
              "description": "arrival station"
            },
            "train_type": {
              "type": "string",
              "description": "Train type, optional types are high-speed rail, motor vehicles, general express, express, etc."
            },
            "seat_type": {
              "type": "string",
              "description": "Seat Type"
            },
            "passenger_name": {
              "type": "string",
              "description": "Rider's name"
            },
            "passenger_id": {
              "type": "string",
              "description": "Rider ID number"
            }
          },
          "required": [
            "ride_date",
            "departure_station",
            "destination_station",
            "train_type",
            "seat_type",
            "passenger_name",
            "passenger_id"
          ]
        }
      }
    ],
    "single_tool": [
      {
        "name": "Navigation.TrainTickets.bookTrainTicket",
        "description": "Book a train ticket for a specific time, origin, or destination for a specific rider",
        "parameters": {
          "type": "object",
          "properties": {
            "ride_date": {
              "type": "string",
              "description": "Date of trip"
            },
            "departure_station": {
              "type": "string",
              "description": "Departure Station"
            },
            "destination_station": {
              "type": "string",
              "description": "arrival station"
            },
            "train_type": {
              "type": "string",
              "description": "Train type, optional types are high-speed rail, motor vehicles, general express, express, etc."
            },
            "seat_type": {
              "type": "string",
              "description": "Seat Type"
            },
            "passenger_name": {
              "type": "string",
              "description": "Rider's name"
            },
            "passenger_id": {
              "type": "string",
              "description": "Rider ID number"
            }
          },
          "required": [
            "ride_date",
            "departure_station",
            "destination_station",
            "train_type",
            "seat_type",
            "passenger_name",
            "passenger_id"
          ]
        }
      }
    ],
    "id": 664
  },
  {
    "messages": [
      {
        "role": "user",
        "content": "I need to cancel my reservation on train G1234"
      },
      {
        "role": "function call",
        "content": {
          "name": "Navigation.TrainTickets.cancelTrainTicket",
          "arguments": {
            "train_number": "G1234"
          }
        }
      },
      {
        "role": "assistant",
        "content": "Please provide departure station information"
      },
      {
        "role": "user",
        "content": "Beijing West Railway Station"
      },
      {
        "role": "function call",
        "content": {
          "name": "Navigation.TrainTickets.cancelTrainTicket",
          "arguments": {
            "train_number": "G1234",
            "departure_station": "Beijing West Railway Station"
          }
        }
      },
      {
        "role": "assistant",
        "content": "Please provide arrival station information"
      },
      {
        "role": "user",
        "content": "The arrival station is Shanghai Hongqiao."
      },
      {
        "role": "function call",
        "content": {
          "name": "Navigation.TrainTickets.cancelTrainTicket",
          "arguments": {
            "train_number": "G1234",
            "departure_station": "Beijing West Railway Station",
            "destination_station": "Shanghai Hongqiao Railway Station"
          }
        }
      },
      {
        "role": "assistant",
        "content": "What's the rider's name"
      },
      {
        "role": "user",
        "content": "It was wrong before. Wagon Number should be D5678"
      },
      {
        "role": "function call",
        "content": {
          "name": "Navigation.TrainTickets.cancelTrainTicket",
          "arguments": {
            "train_number": "D5678",
            "departure_station": "Beijing West Railway Station",
            "destination_station": "Shanghai Hongqiao Railway Station"
          }
        }
      },
      {
        "role": "assistant",
        "content": "What's the rider's name"
      },
      {
        "role": "user",
        "content": "The passenger's name is Li Si."
      },
      {
        "role": "function call",
        "content": {
          "name": "Navigation.TrainTickets.cancelTrainTicket",
          "arguments": {
            "train_number": "D5678",
            "departure_station": "Beijing West Railway Station",
            "destination_station": "Shanghai Hongqiao Railway Station",
            "name": "Li Si"
          }
        }
      }
    ],
    "multiple_tools": [
      {
        "name": "Navigation.FlightTickets.cancelFlightBooking",
        "description": "Cancelling a flight for a specific reservation",
        "parameters": {
          "type": "object",
          "properties": {
            "departure": {
              "type": "string",
              "description": "Origination"
            },
            "destination": {
              "type": "string",
              "description": "Reach ground"
            },
            "name": {
              "type": "string",
              "description": "Name of person who booked"
            },
            "time": {
              "type": "string",
              "description": "Flight departure time"
            },
            "passenger_id": {
              "type": "string",
              "description": "Rider ID number"
            }
          },
          "required": [
            "departure",
            "destination",
            "name",
            "time",
            "passenger_id"
          ]
        }
      },
      {
        "name": "Travel.ScenicAreaServices.cancelScenicSpotBooking",
        "description": "Canceling a reservation at a designated attraction",
        "parameters": {
          "type": "object",
          "properties": {
            "name": {
              "type": "string",
              "description": "Name of the tourist area"
            },
            "booking_date": {
              "type": "string",
              "description": "Ordered Date"
            }
          },
          "required": [
            "name",
            "booking_date"
          ]
        }
      },
      {
        "name": "Navigation.TaxiCarRental.cancelCarRentalOrder",
        "description": "Cancel the rental (all pending reservations are canceled by default)",
        "parameters": {
          "type": "object",
          "properties": {
            "time": {
              "type": "string",
              "description": "Release Date"
            }
          },
          "required": [
            "time"
          ]
        }
      },
      {
        "name": "Navigation.TrainTickets.cancelTrainTicket",
        "description": "Cancelling a booked train ticket",
        "parameters": {
          "type": "object",
          "properties": {
            "train_number": {
              "type": "string",
              "description": "Wagon Number"
            },
            "name": {
              "type": "string",
              "description": "Rider's name"
            },
            "time": {
              "type": "string",
              "description": "To cancel a reservation for a certain time"
            },
            "departure_station": {
              "type": "string",
              "description": "Departure Station"
            },
            "destination_station": {
              "type": "string",
              "description": "arrival station"
            }
          },
          "required": [
            "train_number",
            "name",
            "time",
            "departure_station",
            "destination_station"
          ]
        }
      },
      {
        "name": "Travel.HotelServices.cancelHotelBooking",
        "description": "Cancel the specified hotel reservation",
        "parameters": {
          "type": "object",
          "properties": {
            "name": {
              "type": "string",
              "description": "Hotel Name"
            },
            "booking_date": {
              "type": "string",
              "description": "Ordered Date"
            },
            "room_type": {
              "type": "string",
              "description": "Room types"
            },
            "tenant_name": {
              "type": "string",
              "description": "Name of the guest staying"
            },
            "tenant_number": {
              "type": "string",
              "description": "Telephone number of the guest staying at the hotel"
            }
          },
          "required": [
            "name",
            "booking_date",
            "room_type",
            "tenant_name",
            "tenant_number"
          ]
        }
      }
    ],
    "single_tool": [
      {
        "name": "Navigation.TrainTickets.cancelTrainTicket",
        "description": "Cancelling a booked train ticket",
        "parameters": {
          "type": "object",
          "properties": {
            "train_number": {
              "type": "string",
              "description": "Wagon Number"
            },
            "name": {
              "type": "string",
              "description": "Rider's name"
            },
            "time": {
              "type": "string",
              "description": "To cancel a reservation for a certain time"
            },
            "departure_station": {
              "type": "string",
              "description": "Departure Station"
            },
            "destination_station": {
              "type": "string",
              "description": "arrival station"
            }
          },
          "required": [
            "train_number",
            "name",
            "time",
            "departure_station",
            "destination_station"
          ]
        }
      }
    ],
    "id": 665
  },
  {
    "messages": [
      {
        "role": "user",
        "content": "I want to help Zhang Wei submit a train ticket waiting list"
      },
      {
        "role": "function call",
        "content": {
          "name": "Navigation.TrainTickets.addTrainWaitlistOrder",
          "arguments": {
            "passenger_name": "Zhang Wei"
          }
        }
      },
      {
        "role": "assistant",
        "content": "Select up to 6 by default for the number of trips to be booked"
      },
      {
        "role": "user",
        "content": "I would like to book the D456 train, which is my first choice."
      },
      {
        "role": "function call",
        "content": {
          "name": "Navigation.TrainTickets.addTrainWaitlistOrder",
          "arguments": {
            "passenger_name": "Zhang Wei",
            "train_number": "D456"
          }
        }
      },
      {
        "role": "assistant",
        "content": "What is the rider's ID number"
      },
      {
        "role": "user",
        "content": "The rider's ID number is 987654321098765432."
      },
      {
        "role": "function call",
        "content": {
          "name": "Navigation.TrainTickets.addTrainWaitlistOrder",
          "arguments": {
            "passenger_name": "Zhang Wei",
            "train_number": "D456",
            "passenger_id": "987654321098765432"
          }
        }
      },
      {
        "role": "assistant",
        "content": "What's the date of the trip"
      },
      {
        "role": "user",
        "content": "2023-09-20, I plan to travel that day."
      },
      {
        "role": "function call",
        "content": {
          "name": "Navigation.TrainTickets.addTrainWaitlistOrder",
          "arguments": {
            "passenger_name": "Zhang Wei",
            "train_number": "D456",
            "passenger_id": "987654321098765432",
            "ride_date": "2023-09-20"
          }
        }
      },
      {
        "role": "assistant",
        "content": "What is the departure station"
      },
      {
        "role": "user",
        "content": "The departure station is Guangzhou Station."
      },
      {
        "role": "function call",
        "content": {
          "name": "Navigation.TrainTickets.addTrainWaitlistOrder",
          "arguments": {
            "passenger_name": "Zhang Wei",
            "train_number": "D456",
            "passenger_id": "987654321098765432",
            "ride_date": "2023-09-20",
            "departure_station": "Guangzhou"
          }
        }
      },
      {
        "role": "assistant",
        "content": "Please provide arrival station"
      },
      {
        "role": "user",
        "content": "It was wrong before. Number of trips to book; select all by default, up to 6 should be G123"
      },
      {
        "role": "function call",
        "content": {
          "name": "Navigation.TrainTickets.addTrainWaitlistOrder",
          "arguments": {
            "passenger_name": "Zhang Wei",
            "train_number": "G123",
            "passenger_id": "987654321098765432",
            "ride_date": "2023-09-20",
            "departure_station": "Guangzhou"
          }
        }
      },
      {
        "role": "assistant",
        "content": "Please provide arrival station"
      },
      {
        "role": "user",
        "content": "Shenzhen"
      },
      {
        "role": "function call",
        "content": {
          "name": "Navigation.TrainTickets.addTrainWaitlistOrder",
          "arguments": {
            "passenger_name": "Zhang Wei",
            "train_number": "G123",
            "passenger_id": "987654321098765432",
            "ride_date": "2023-09-20",
            "departure_station": "Guangzhou",
            "destination_station": "Shenzhen"
          }
        }
      }
    ],
    "multiple_tools": [
      {
        "name": "ConvenientLiving.GovernmentServices.applyForVisa",
        "description": "Submit Visa Application",
        "parameters": {
          "type": "object",
          "properties": {
            "passport_number": {
              "type": "string",
              "description": "Pasaport No."
            }
          },
          "required": [
            "passport_number"
          ]
        }
      },
      {
        "name": "Navigation.TrainTickets.addTrainWaitlistOrder",
        "description": "User submits train ticket standby order",
        "parameters": {
          "type": "object",
          "properties": {
            "train_number": {
              "type": "string",
              "description": "Number of trips to book; select all by default, up to 6"
            },
            "passenger_name": {
              "type": "string",
              "description": "Rider's name"
            },
            "passenger_id": {
              "type": "string",
              "description": "Rider ID number"
            },
            "ride_date": {
              "type": "string",
              "description": "Trip date in YYYY-MM-DD format"
            },
            "departure_station": {
              "type": "string",
              "description": "Departure Station"
            },
            "destination_station": {
              "type": "string",
              "description": "arrival station"
            },
            "seat_type": {
              "type": "string",
              "description": "Seat Type"
            }
          },
          "required": [
            "train_number",
            "passenger_name",
            "passenger_id",
            "ride_date",
            "departure_station",
            "destination_station",
            "seat_type"
          ]
        }
      },
      {
        "name": "ConvenientLiving.UtilityPayments.getDueDate",
        "description": "Deadline for payment of fees for the acquisition of utilities, etc.",
        "parameters": {
          "type": "object",
          "properties": {
            "service_type": {
              "type": "string",
              "description": "Types of paid services, such as utilities, gas, etc."
            },
            "user_name": {
              "type": "string",
              "description": "User Name"
            }
          },
          "required": [
            "service_type",
            "user_name"
          ]
        }
      },
      {
        "name": "ConvenientLiving.GovernmentServices.applyForEducationGrant",
        "description": "Submit an application for an education grant",
        "parameters": {
          "type": "object",
          "properties": {
            "name": {
              "type": "string",
              "description": "Applicant, default user self"
            },
            "school": {
              "type": "string",
              "description": "Schools"
            }
          },
          "required": [
            "name",
            "school"
          ]
        }
      },
      {
        "name": "OnlineShopping.ExpressDelivery.signForOrderExpress",
        "description": "Sign and receive courier orders according to the designated courier number",
        "parameters": {
          "type": "object",
          "properties": {
            "date": {
              "type": "string",
              "description": "Express date"
            },
            "express_id": {
              "type": "string",
              "description": "Tracking Number"
            }
          },
          "required": [
            "date",
            "express_id"
          ]
        }
      }
    ],
    "single_tool": [
      {
        "name": "Navigation.TrainTickets.addTrainWaitlistOrder",
        "description": "User submits train ticket standby order",
        "parameters": {
          "type": "object",
          "properties": {
            "train_number": {
              "type": "string",
              "description": "Number of trips to book; select all by default, up to 6"
            },
            "passenger_name": {
              "type": "string",
              "description": "Rider's name"
            },
            "passenger_id": {
              "type": "string",
              "description": "Rider ID number"
            },
            "ride_date": {
              "type": "string",
              "description": "Trip date in YYYY-MM-DD format"
            },
            "departure_station": {
              "type": "string",
              "description": "Departure Station"
            },
            "destination_station": {
              "type": "string",
              "description": "arrival station"
            },
            "seat_type": {
              "type": "string",
              "description": "Seat Type"
            }
          },
          "required": [
            "train_number",
            "passenger_name",
            "passenger_id",
            "ride_date",
            "departure_station",
            "destination_station",
            "seat_type"
          ]
        }
      }
    ],
    "id": 666
  },
  {
    "messages": [
      {
        "role": "user",
        "content": "Submit the train ticket waiting order for Li Min now"
      },
      {
        "role": "function call",
        "content": {
          "name": "Navigation.TrainTickets.addTrainWaitlistOrder",
          "arguments": {
            "passenger_name": "Li Min"
          }
        }
      },
      {
        "role": "assistant",
        "content": "The number of times you want to book, by default select all up to 6 Which number of times you want to book"
      },
      {
        "role": "user",
        "content": "I would like to book G123, there are a few other trips, depending on the time."
      },
      {
        "role": "function call",
        "content": {
          "name": "Navigation.TrainTickets.addTrainWaitlistOrder",
          "arguments": {
            "passenger_name": "Li Min",
            "train_number": "G123"
          }
        }
      },
      {
        "role": "assistant",
        "content": "What is the rider's ID number"
      },
      {
        "role": "user",
        "content": "My rider's ID number is 123456789012345678, can I help you with something else?"
      },
      {
        "role": "function call",
        "content": {
          "name": "Navigation.TrainTickets.addTrainWaitlistOrder",
          "arguments": {
            "passenger_name": "Li Min",
            "train_number": "G123",
            "passenger_id": "123456789012345678"
          }
        }
      },
      {
        "role": "assistant",
        "content": "What is the date of the trip in YYYY-MM-DD format?"
      },
      {
        "role": "user",
        "content": "It was wrong before. Rider's name should be Zhang Wei"
      },
      {
        "role": "function call",
        "content": {
          "name": "Navigation.TrainTickets.addTrainWaitlistOrder",
          "arguments": {
            "passenger_name": "Zhang Wei",
            "train_number": "G123",
            "passenger_id": "123456789012345678"
          }
        }
      },
      {
        "role": "assistant",
        "content": "What is the date of the trip in YYYY-MM-DD format?"
      },
      {
        "role": "user",
        "content": "2023-08-15, I plan to travel that day."
      },
      {
        "role": "function call",
        "content": {
          "name": "Navigation.TrainTickets.addTrainWaitlistOrder",
          "arguments": {
            "passenger_name": "Zhang Wei",
            "train_number": "G123",
            "passenger_id": "123456789012345678",
            "ride_date": "2023-08-15"
          }
        }
      },
      {
        "role": "assistant",
        "content": "What is the departure station"
      },
      {
        "role": "user",
        "content": "The departure station is Beijing Station"
      },
      {
        "role": "function call",
        "content": {
          "name": "Navigation.TrainTickets.addTrainWaitlistOrder",
          "arguments": {
            "passenger_name": "Zhang Wei",
            "train_number": "G123",
            "passenger_id": "123456789012345678",
            "ride_date": "2023-08-15",
            "departure_station": "Beijing"
          }
        }
      },
      {
        "role": "assistant",
        "content": "Where is your arrival station?"
      },
      {
        "role": "user",
        "content": "My arrival station is Shanghai."
      },
      {
        "role": "function call",
        "content": {
          "name": "Navigation.TrainTickets.addTrainWaitlistOrder",
          "arguments": {
            "passenger_name": "Zhang Wei",
            "train_number": "G123",
            "passenger_id": "123456789012345678",
            "ride_date": "2023-08-15",
            "departure_station": "Beijing",
            "destination_station": "Shanghai"
          }
        }
      }
    ],
    "multiple_tools": [
      {
        "name": "Navigation.TrainTickets.addTrainWaitlistOrder",
        "description": "User submits train ticket standby order",
        "parameters": {
          "type": "object",
          "properties": {
            "train_number": {
              "type": "string",
              "description": "Number of trips to book; select all by default, up to 6"
            },
            "passenger_name": {
              "type": "string",
              "description": "Rider's name"
            },
            "passenger_id": {
              "type": "string",
              "description": "Rider ID number"
            },
            "ride_date": {
              "type": "string",
              "description": "Trip date in YYYY-MM-DD format"
            },
            "departure_station": {
              "type": "string",
              "description": "Departure Station"
            },
            "destination_station": {
              "type": "string",
              "description": "arrival station"
            },
            "seat_type": {
              "type": "string",
              "description": "Seat Type"
            }
          },
          "required": [
            "train_number",
            "passenger_name",
            "passenger_id",
            "ride_date",
            "departure_station",
            "destination_station",
            "seat_type"
          ]
        }
      },
      {
        "name": "OnlineShopping.ExpressDelivery.signForOrderExpress",
        "description": "Sign and receive courier orders according to the designated courier number",
        "parameters": {
          "type": "object",
          "properties": {
            "date": {
              "type": "string",
              "description": "Express date"
            },
            "express_id": {
              "type": "string",
              "description": "Tracking Number"
            }
          },
          "required": [
            "date",
            "express_id"
          ]
        }
      },
      {
        "name": "NewsMagazines.NewspapersMagazines.collectMagazine",
        "description": "Collect magazines or articles by name or journal",
        "parameters": {
          "type": "object",
          "properties": {
            "name": {
              "type": "string",
              "description": "Magazine Name"
            },
            "issue": {
              "type": "string",
              "description": "Number of periods"
            }
          },
          "required": [
            "name",
            "issue"
          ]
        }
      },
      {
        "name": "SocialCommunication.SocialMedia.collectMediumTrends",
        "description": "Favorite specified activity in specified media",
        "parameters": {
          "type": "object",
          "properties": {
            "medium_name": {
              "type": "string",
              "description": "Media name"
            },
            "correlation": {
              "type": "string",
              "description": "Dynamic Related Content"
            },
            "publisher": {
              "type": "string",
              "description": "Posted by/publisher?"
            },
            "publish_time": {
              "type": "string",
              "description": "Release Date"
            }
          },
          "required": [
            "medium_name",
            "correlation",
            "publisher",
            "publish_time"
          ]
        }
      },
      {
        "name": "ConvenientLiving.JobRecruitment.collectJob",
        "description": "Favorite posts of interest",
        "parameters": {
          "type": "object",
          "properties": {
            "job_name": {
              "type": "string",
              "description": "Position name"
            },
            "company_name": {
              "type": "string",
              "description": "Company name"
            }
          },
          "required": [
            "job_name",
            "company_name"
          ]
        }
      }
    ],
    "single_tool": [
      {
        "name": "Navigation.TrainTickets.addTrainWaitlistOrder",
        "description": "User submits train ticket standby order",
        "parameters": {
          "type": "object",
          "properties": {
            "train_number": {
              "type": "string",
              "description": "Number of trips to book; select all by default, up to 6"
            },
            "passenger_name": {
              "type": "string",
              "description": "Rider's name"
            },
            "passenger_id": {
              "type": "string",
              "description": "Rider ID number"
            },
            "ride_date": {
              "type": "string",
              "description": "Trip date in YYYY-MM-DD format"
            },
            "departure_station": {
              "type": "string",
              "description": "Departure Station"
            },
            "destination_station": {
              "type": "string",
              "description": "arrival station"
            },
            "seat_type": {
              "type": "string",
              "description": "Seat Type"
            }
          },
          "required": [
            "train_number",
            "passenger_name",
            "passenger_id",
            "ride_date",
            "departure_station",
            "destination_station",
            "seat_type"
          ]
        }
      }
    ],
    "id": 667
  },
  {
    "messages": [
      {
        "role": "user",
        "content": "I intend to change my train ticket waitlist with a new departure date of September 1, 2023"
      },
      {
        "role": "function call",
        "content": {
          "name": "Navigation.TrainTickets.updateTrainWaitlistOrder",
          "arguments": {
            "new_departure_date": "2023-09-01"
          }
        }
      },
      {
        "role": "assistant",
        "content": "What number of trips are booked?"
      },
      {
        "role": "user",
        "content": "My train number is D789, from Beijing to Shanghai."
      },
      {
        "role": "function call",
        "content": {
          "name": "Navigation.TrainTickets.updateTrainWaitlistOrder",
          "arguments": {
            "new_departure_date": "2023-09-01",
            "train_number": "D789"
          }
        }
      },
      {
        "role": "assistant",
        "content": "What's the rider's name"
      },
      {
        "role": "user",
        "content": "It was wrong before. New departure date, format 'YYYY-MM-DD', optional if modified should be October 11"
      },
      {
        "role": "function call",
        "content": {
          "name": "Navigation.TrainTickets.updateTrainWaitlistOrder",
          "arguments": {
            "new_departure_date": "October 11",
            "train_number": "D789"
          }
        }
      },
      {
        "role": "assistant",
        "content": "What's the rider's name"
      },
      {
        "role": "user",
        "content": "The passenger's name is Li Si."
      },
      {
        "role": "function call",
        "content": {
          "name": "Navigation.TrainTickets.updateTrainWaitlistOrder",
          "arguments": {
            "new_departure_date": "October 11",
            "train_number": "D789",
            "passenger_name": "Li Si"
          }
        }
      },
      {
        "role": "assistant",
        "content": "What's the number of trips on the modified reservation"
      },
      {
        "role": "user",
        "content": "My modified booking is D987 at 10am tomorrow."
      },
      {
        "role": "function call",
        "content": {
          "name": "Navigation.TrainTickets.updateTrainWaitlistOrder",
          "arguments": {
            "new_departure_date": "October 11",
            "train_number": "D789",
            "passenger_name": "Li Si",
            "after_number": "D987"
          }
        }
      }
    ],
    "multiple_tools": [
      {
        "name": "Finance.Banking.modifyFinancialProductOrder",
        "description": "Modify a subscribed order for a bank wealth management product",
        "parameters": {
          "type": "object",
          "properties": {
            "order_id": {
              "type": "string",
              "description": "Purchase Order Number"
            },
            "product": {
              "type": "string",
              "description": "Financing product"
            },
            "modify": {
              "type": "string",
              "description": "Modified content, such as additional amount, revision deadline, etc."
            }
          },
          "required": [
            "order_id",
            "product",
            "modify"
          ]
        }
      },
      {
        "name": "Health.HealthManagement.updateDietRecord",
        "description": "Changing dietary records based on updated conditions",
        "parameters": {
          "type": "object",
          "properties": {
            "food_name": {
              "type": "string",
              "description": "Food Name"
            },
            "meal_type": {
              "type": "string",
              "description": "Types of meals, such as breakfast, lunch, dinner, or add-ons"
            },
            "time": {
              "type": "string",
              "description": "Meal Time"
            },
            "update_content": {
              "type": "string",
              "description": "Updates, such as changes to food names, meal types, meal times, etc."
            }
          },
          "required": [
            "food_name",
            "meal_type",
            "time",
            "update_content"
          ]
        }
      },
      {
        "name": "Health.Fitness.updateExerciseRecord",
        "description": "Change sports records based on update criteria",
        "parameters": {
          "type": "object",
          "properties": {
            "exercise_record": {
              "type": "string",
              "description": "Original Motion Record"
            },
            "time": {
              "type": "string",
              "description": "Release Date"
            }
          },
          "required": [
            "exercise_record",
            "time"
          ]
        }
      },
      {
        "name": "Navigation.FlightTickets.modifyFlightBooking",
        "description": "Changing the departure time of a booked flight is not supported for departure and destination changes",
        "parameters": {
          "type": "object",
          "properties": {
            "departure": {
              "type": "string",
              "description": "Origination"
            },
            "destination": {
              "type": "string",
              "description": "Reach ground"
            },
            "name": {
              "type": "string",
              "description": "Name of person who booked"
            },
            "time": {
              "type": "string",
              "description": "Flight duration before modification"
            },
            "alter_time": {
              "type": "string",
              "description": "Revised flight time"
            },
            "alter_seat": {
              "type": "string",
              "description": "Class Selection"
            }
          },
          "required": [
            "departure",
            "destination",
            "name",
            "time",
            "alter_time",
            "alter_seat"
          ]
        }
      },
      {
        "name": "Navigation.TrainTickets.updateTrainWaitlistOrder",
        "description": "Used to modify submitted train ticket waiting list information",
        "parameters": {
          "type": "object",
          "properties": {
            "train_number": {
              "type": "string",
              "description": "Booked trips"
            },
            "passenger_name": {
              "type": "string",
              "description": "Rider's name"
            },
            "after_number": {
              "type": "string",
              "description": "Booked trips"
            },
            "new_departure_date": {
              "type": "string",
              "description": "New departure date, format 'YYYY-MM-DD', optional if modified"
            },
            "new_seat_type": {
              "type": "string",
              "description": "Seat Type"
            }
          },
          "required": [
            "train_number",
            "passenger_name",
            "after_number",
            "new_departure_date",
            "new_seat_type"
          ]
        }
      }
    ],
    "single_tool": [
      {
        "name": "Navigation.TrainTickets.updateTrainWaitlistOrder",
        "description": "Used to modify submitted train ticket waiting list information",
        "parameters": {
          "type": "object",
          "properties": {
            "train_number": {
              "type": "string",
              "description": "Booked trips"
            },
            "passenger_name": {
              "type": "string",
              "description": "Rider's name"
            },
            "after_number": {
              "type": "string",
              "description": "Booked trips"
            },
            "new_departure_date": {
              "type": "string",
              "description": "New departure date, format 'YYYY-MM-DD', optional if modified"
            },
            "new_seat_type": {
              "type": "string",
              "description": "Seat Type"
            }
          },
          "required": [
            "train_number",
            "passenger_name",
            "after_number",
            "new_departure_date",
            "new_seat_type"
          ]
        }
      }
    ],
    "id": 668
  },
  {
    "messages": [
      {
        "role": "user",
        "content": "Please help me modify the train ticket waiting list, the new departure date is set for October 15, 2023"
      },
      {
        "role": "function call",
        "content": {
          "name": "Navigation.TrainTickets.updateTrainWaitlistOrder",
          "arguments": {
            "new_departure_date": "2023-10-15"
          }
        }
      },
      {
        "role": "assistant",
        "content": "What number of trips are booked?"
      },
      {
        "role": "user",
        "content": "My number is G123, but there seems to be more information you need to know?"
      },
      {
        "role": "function call",
        "content": {
          "name": "Navigation.TrainTickets.updateTrainWaitlistOrder",
          "arguments": {
            "new_departure_date": "2023-10-15",
            "train_number": "G123"
          }
        }
      },
      {
        "role": "assistant",
        "content": "What's the rider's name"
      },
      {
        "role": "user",
        "content": "It was wrong before. Booked trips should be D789"
      },
      {
        "role": "function call",
        "content": {
          "name": "Navigation.TrainTickets.updateTrainWaitlistOrder",
          "arguments": {
            "new_departure_date": "2023-10-15",
            "train_number": "D789"
          }
        }
      },
      {
        "role": "assistant",
        "content": "What's the rider's name"
      },
      {
        "role": "user",
        "content": "The passenger's name is Zhang San."
      },
      {
        "role": "function call",
        "content": {
          "name": "Navigation.TrainTickets.updateTrainWaitlistOrder",
          "arguments": {
            "new_departure_date": "2023-10-15",
            "train_number": "D789",
            "passenger_name": "Zhang San"
          }
        }
      },
      {
        "role": "assistant",
        "content": "What's the number of trips on the modified reservation"
      },
      {
        "role": "user",
        "content": "The modified reservation is G456 and the time is 3pm."
      },
      {
        "role": "function call",
        "content": {
          "name": "Navigation.TrainTickets.updateTrainWaitlistOrder",
          "arguments": {
            "new_departure_date": "2023-10-15",
            "train_number": "D789",
            "passenger_name": "Zhang San",
            "after_number": "G456"
          }
        }
      }
    ],
    "multiple_tools": [
      {
        "name": "Navigation.TrainTickets.updateTrainWaitlistOrder",
        "description": "Used to modify submitted train ticket waiting list information",
        "parameters": {
          "type": "object",
          "properties": {
            "train_number": {
              "type": "string",
              "description": "Booked trips"
            },
            "passenger_name": {
              "type": "string",
              "description": "Rider's name"
            },
            "after_number": {
              "type": "string",
              "description": "Booked trips"
            },
            "new_departure_date": {
              "type": "string",
              "description": "New departure date, format 'YYYY-MM-DD', optional if modified"
            },
            "new_seat_type": {
              "type": "string",
              "description": "Seat Type"
            }
          },
          "required": [
            "train_number",
            "passenger_name",
            "after_number",
            "new_departure_date",
            "new_seat_type"
          ]
        }
      },
      {
        "name": "Health.HealthManagement.updateDietRecord",
        "description": "Changing dietary records based on updated conditions",
        "parameters": {
          "type": "object",
          "properties": {
            "food_name": {
              "type": "string",
              "description": "Food Name"
            },
            "meal_type": {
              "type": "string",
              "description": "Types of meals, such as breakfast, lunch, dinner, or add-ons"
            },
            "time": {
              "type": "string",
              "description": "Meal Time"
            },
            "update_content": {
              "type": "string",
              "description": "Updates, such as changes to food names, meal types, meal times, etc."
            }
          },
          "required": [
            "food_name",
            "meal_type",
            "time",
            "update_content"
          ]
        }
      },
      {
        "name": "OnlineShopping.Mall.modifyCommodityOrders",
        "description": "Modify the contents of the order according to the product name and other conditions",
        "parameters": {
          "type": "object",
          "properties": {
            "goods": {
              "type": "string",
              "description": "Product Name"
            }
          },
          "required": [
            "goods"
          ]
        }
      },
      {
        "name": "Navigation.TaxiCarRental.modifyCarRentalOrder",
        "description": "Modify the contents of a rental order, such as pick-up time, drop-off time, pick-up person, pick-up location, etc.",
        "parameters": {
          "type": "object",
          "properties": {
            "time": {
              "type": "string",
              "description": "Release Date"
            }
          },
          "required": [
            "time"
          ]
        }
      },
      {
        "name": "Finance.Banking.modifyFinancialProductOrder",
        "description": "Modify a subscribed order for a bank wealth management product",
        "parameters": {
          "type": "object",
          "properties": {
            "order_id": {
              "type": "string",
              "description": "Purchase Order Number"
            },
            "product": {
              "type": "string",
              "description": "Financing product"
            },
            "modify": {
              "type": "string",
              "description": "Modified content, such as additional amount, revision deadline, etc."
            }
          },
          "required": [
            "order_id",
            "product",
            "modify"
          ]
        }
      }
    ],
    "single_tool": [
      {
        "name": "Navigation.TrainTickets.updateTrainWaitlistOrder",
        "description": "Used to modify submitted train ticket waiting list information",
        "parameters": {
          "type": "object",
          "properties": {
            "train_number": {
              "type": "string",
              "description": "Booked trips"
            },
            "passenger_name": {
              "type": "string",
              "description": "Rider's name"
            },
            "after_number": {
              "type": "string",
              "description": "Booked trips"
            },
            "new_departure_date": {
              "type": "string",
              "description": "New departure date, format 'YYYY-MM-DD', optional if modified"
            },
            "new_seat_type": {
              "type": "string",
              "description": "Seat Type"
            }
          },
          "required": [
            "train_number",
            "passenger_name",
            "after_number",
            "new_departure_date",
            "new_seat_type"
          ]
        }
      }
    ],
    "id": 669
  },
  {
    "messages": [
      {
        "role": "user",
        "content": "Help me find a house with a minimum rent of 3000 yuan"
      },
      {
        "role": "function call",
        "content": {
          "name": "ConvenientLiving.BuyingRentingHomes.searchSalingHouses",
          "arguments": {
            "min_price": "3,000 yuan"
          }
        }
      },
      {
        "role": "assistant",
        "content": "What's the highest price you'd like"
      },
      {
        "role": "user",
        "content": "I would like the maximum price to be 2.5 million."
      },
      {
        "role": "function call",
        "content": {
          "name": "ConvenientLiving.BuyingRentingHomes.searchSalingHouses",
          "arguments": {
            "min_price": "3,000 yuan",
            "max_price": "2.5 million"
          }
        }
      },
      {
        "role": "assistant",
        "content": "How many square meters do you want the house to be?"
      },
      {
        "role": "user",
        "content": "I want a house about 80 square meters."
      },
      {
        "role": "function call",
        "content": {
          "name": "ConvenientLiving.BuyingRentingHomes.searchSalingHouses",
          "arguments": {
            "min_price": "3,000 yuan",
            "max_price": "2.5 million",
            "house_area": "80 sqm"
          }
        }
      },
      {
        "role": "assistant",
        "content": "What floor would you like the house to be located on?"
      },
      {
        "role": "user",
        "content": "I would like to live on a high floor."
      },
      {
        "role": "function call",
        "content": {
          "name": "ConvenientLiving.BuyingRentingHomes.searchSalingHouses",
          "arguments": {
            "min_price": "3,000 yuan",
            "max_price": "2.5 million",
            "house_area": "80 sqm",
            "level": "Higher-up"
          }
        }
      },
      {
        "role": "assistant",
        "content": "Are there any requirements for the construction life of the house?"
      },
      {
        "role": "user",
        "content": "There are no specific requirements for the construction life of the house, but if it is a new house within 5 years, there may be better facilities and lower maintenance costs."
      },
      {
        "role": "function call",
        "content": {
          "name": "ConvenientLiving.BuyingRentingHomes.searchSalingHouses",
          "arguments": {
            "min_price": "3,000 yuan",
            "max_price": "2.5 million",
            "house_area": "80 sqm",
            "level": "Higher-up",
            "age": 5
          }
        }
      },
      {
        "role": "assistant",
        "content": "What do you want your home to look like?"
      },
      {
        "role": "user",
        "content": "It was wrong before. Area should be 120 sqm"
      },
      {
        "role": "function call",
        "content": {
          "name": "ConvenientLiving.BuyingRentingHomes.searchSalingHouses",
          "arguments": {
            "min_price": "3,000 yuan",
            "max_price": "2.5 million",
            "house_area": "120 sqm",
            "level": "Higher-up",
            "age": 5
          }
        }
      },
      {
        "role": "assistant",
        "content": "What do you want your home to look like?"
      },
      {
        "role": "user",
        "content": "What I want is a two-bedroom apartment with a small balcony."
      },
      {
        "role": "function call",
        "content": {
          "name": "ConvenientLiving.BuyingRentingHomes.searchSalingHouses",
          "arguments": {
            "min_price": "3,000 yuan",
            "max_price": "2.5 million",
            "house_area": "120 sqm",
            "level": "Higher-up",
            "age": 5,
            "house_type": "2 bedrooms & 1 living room"
          }
        }
      },
      {
        "role": "assistant",
        "content": "Which neighborhoods do you care about?"
      },
      {
        "role": "user",
        "content": "The neighborhood I am interested in is the Cuihu neighborhood, I want to know the house price and surrounding facilities there."
      },
      {
        "role": "function call",
        "content": {
          "name": "ConvenientLiving.BuyingRentingHomes.searchSalingHouses",
          "arguments": {
            "min_price": "3,000 yuan",
            "max_price": "2.5 million",
            "house_area": "120 sqm",
            "level": "Higher-up",
            "age": 5,
            "house_type": "2 bedrooms & 1 living room",
            "housing_estate": "Cuihu District"
          }
        }
      },
      {
        "role": "assistant",
        "content": "Where is it located?"
      },
      {
        "role": "user",
        "content": "I'm in a cafe in the east of the city."
      },
      {
        "role": "function call",
        "content": {
          "name": "ConvenientLiving.BuyingRentingHomes.searchSalingHouses",
          "arguments": {
            "min_price": "3,000 yuan",
            "max_price": "2.5 million",
            "house_area": "120 sqm",
            "level": "Higher-up",
            "age": 5,
            "house_type": "2 bedrooms & 1 living room",
            "housing_estate": "Cuihu District",
            "location": "East District"
          }
        }
      }
    ],
    "multiple_tools": [
      {
        "name": "ConvenientLiving.BuyingRentingHomes.searchSalingHouses",
        "description": "Search for properties based on user needs",
        "parameters": {
          "type": "object",
          "properties": {
            "min_price": {
              "type": "string",
              "description": "rock-bottom prices"
            },
            "max_price": {
              "type": "string",
              "description": "Max Price"
            },
            "house_area": {
              "type": "string",
              "description": "Area"
            },
            "level": {
              "type": "string",
              "description": "Floor"
            },
            "age": {
              "type": "integer",
              "description": "fixed number of years"
            },
            "house_type": {
              "type": "string",
              "description": "Layout"
            },
            "housing_estate": {
              "type": "string",
              "description": "Community"
            },
            "location": {
              "type": "string",
              "description": "Position"
            }
          },
          "required": [
            "min_price",
            "max_price",
            "house_area",
            "level",
            "age",
            "house_type",
            "housing_estate",
            "location"
          ]
        }
      },
      {
        "name": "UtilityTools.AppSearchInstallation.searchApp",
        "description": "Search mobile apps by name or keyword",
        "parameters": {
          "type": "object",
          "properties": {
            "keyword": {
              "type": "string",
              "description": "Search for a keyword or app name"
            }
          },
          "required": [
            "keyword"
          ]
        }
      },
      {
        "name": "Education.ChildrenEducation.searchChildCraft",
        "description": "Search Kids Craft Tutorials",
        "parameters": {
          "type": "object",
          "properties": {
            "craft_type": {
              "type": "string",
              "description": "Manual types such as origami, paper-cut"
            }
          },
          "required": [
            "craft_type"
          ]
        }
      },
      {
        "name": "Travel.HotelServices.searchHotel",
        "description": "Search for hotels that match the criteria entered by the user",
        "parameters": {
          "type": "object",
          "properties": {
            "destination": {
              "type": "string",
              "description": "destination"
            },
            "checkin_date": {
              "type": "string",
              "description": "Check-in date (default today)"
            },
            "checkout_date": {
              "type": "string",
              "description": "DEPARTURE DATE"
            },
            "price_range": {
              "type": "string",
              "description": "Price range: 0 ~ 300; 300 ~ 600; 600 ~ 1000; 1000 to Shenyang"
            }
          },
          "required": [
            "destination",
            "checkin_date",
            "checkout_date",
            "price_range"
          ]
        }
      },
      {
        "name": "Education.OnlineClasses.searchCourses",
        "description": "Query Courses by Course Subject",
        "parameters": {
          "type": "object",
          "properties": {
            "subject": {
              "type": "string",
              "description": "Subject Management"
            }
          },
          "required": [
            "subject"
          ]
        }
      }
    ],
    "single_tool": [
      {
        "name": "ConvenientLiving.BuyingRentingHomes.searchSalingHouses",
        "description": "Search for properties based on user needs",
        "parameters": {
          "type": "object",
          "properties": {
            "min_price": {
              "type": "string",
              "description": "rock-bottom prices"
            },
            "max_price": {
              "type": "string",
              "description": "Max Price"
            },
            "house_area": {
              "type": "string",
              "description": "Area"
            },
            "level": {
              "type": "string",
              "description": "Floor"
            },
            "age": {
              "type": "integer",
              "description": "fixed number of years"
            },
            "house_type": {
              "type": "string",
              "description": "Layout"
            },
            "housing_estate": {
              "type": "string",
              "description": "Community"
            },
            "location": {
              "type": "string",
              "description": "Position"
            }
          },
          "required": [
            "min_price",
            "max_price",
            "house_area",
            "level",
            "age",
            "house_type",
            "housing_estate",
            "location"
          ]
        }
      }
    ],
    "id": 674
  },
  {
    "messages": [
      {
        "role": "user",
        "content": "I want to know what my mortgage would be if I bought a $5 million house"
      },
      {
        "role": "function call",
        "content": {
          "name": "ConvenientLiving.BuyingRentingHomes.calculateHousingMortgage",
          "arguments": {
            "house_price": 5000000
          }
        }
      },
      {
        "role": "assistant",
        "content": "What's the down payment"
      },
      {
        "role": "user",
        "content": "The down payment is 360000 yuan."
      },
      {
        "role": "function call",
        "content": {
          "name": "ConvenientLiving.BuyingRentingHomes.calculateHousingMortgage",
          "arguments": {
            "house_price": 5000000,
            "down_payment": 360000
          }
        }
      },
      {
        "role": "assistant",
        "content": "What is the loan interest rate"
      },
      {
        "role": "user",
        "content": "It was wrong before. house prices  should be 800000"
      },
      {
        "role": "function call",
        "content": {
          "name": "ConvenientLiving.BuyingRentingHomes.calculateHousingMortgage",
          "arguments": {
            "house_price": 800000,
            "down_payment": 360000
          }
        }
      },
      {
        "role": "assistant",
        "content": "What is the loan interest rate"
      },
      {
        "role": "user",
        "content": "The lending rate is 0.029, or 2.9%."
      },
      {
        "role": "function call",
        "content": {
          "name": "ConvenientLiving.BuyingRentingHomes.calculateHousingMortgage",
          "arguments": {
            "house_price": 800000,
            "down_payment": 360000,
            "interest_rate": 0.029
          }
        }
      }
    ],
    "multiple_tools": [
      {
        "name": "ConvenientLiving.BuyingRentingHomes.calculateHousingMortgage",
        "description": "Calculate Home Purchase Loan Amount",
        "parameters": {
          "type": "object",
          "properties": {
            "house_price": {
              "type": "integer",
              "description": "house prices "
            },
            "down_payment": {
              "type": "integer",
              "description": "First installment payment"
            },
            "interest_rate": {
              "type": "integer",
              "description": "Interest Rate"
            },
            "loan_term": {
              "type": "integer",
              "description": "Mortgage term"
            }
          },
          "required": [
            "house_price",
            "down_payment",
            "interest_rate",
            "loan_term"
          ]
        }
      },
      {
        "name": "ConvenientLiving.BuyingRentingHomes.searchRentingHouses",
        "description": "Search for rentals by criteria",
        "parameters": {
          "type": "object",
          "properties": {
            "price": {
              "type": "string",
              "description": "Rents"
            },
            "house_area": {
              "type": "string",
              "description": "Area"
            },
            "level": {
              "type": "string",
              "description": "Floor"
            },
            "age": {
              "type": "integer",
              "description": "fixed number of years"
            },
            "house_type": {
              "type": "string",
              "description": "Layout"
            },
            "housing_estate": {
              "type": "string",
              "description": "Community"
            },
            "location": {
              "type": "string",
              "description": "Position"
            },
            "indoor_decoration": {
              "type": "string",
              "description": "decorate"
            },
            "furniture": {
              "type": "string",
              "description": "Furniture"
            }
          },
          "required": [
            "price",
            "house_area",
            "level",
            "age",
            "house_type",
            "housing_estate",
            "location",
            "indoor_decoration",
            "furniture"
          ]
        }
      },
      {
        "name": "VideoPlayback.OnlineVideos.searchOnlineVideo",
        "description": "Search online videos, which can be searched based on keywords (director/publisher/video keywords); can be searched based on categories; can be searched based on AI smart search",
        "parameters": {
          "type": "object",
          "properties": {
            "keyword": {
              "type": "array",
              "description": "Director/Publisher/Video Keyword Search"
            },
            "video_type": {
              "type": "string",
              "description": "Video Type Categories, Recommended, Popular, Chase, Film and Television New Journey"
            },
            "ai_search": {
              "type": "string",
              "description": "Based on search history, viewing history can only be turned off by default"
            }
          },
          "required": [
            "keyword",
            "video_type",
            "ai_search"
          ]
        }
      },
      {
        "name": "UtilityTools.Memo.searchNotes",
        "description": "Search memos by keyword (see all by default)",
        "parameters": {
          "type": "object",
          "properties": {
            "key_words": {
              "type": "string",
              "description": "KEYWORDS"
            }
          },
          "required": [
            "key_words"
          ]
        }
      },
      {
        "name": "VideoPlayback.ShortVideos.searchShortVideo",
        "description": "Search for short videos based on keywords (vlog blogger/video keywords/taxonomy keywords)",
        "parameters": {
          "type": "object",
          "properties": {
            "keyword": {
              "type": "string",
              "description": "Short video blogger name/video keyword search"
            },
            "type": {
              "type": "string",
              "description": "Recommended, Popular, Chase, Film and TV New Journey/Reference bilibili, etc."
            },
            "datetime": {
              "type": "string",
              "description": "Release time: unlimited, within a day, within a week, within half a year"
            },
            "duration": {
              "type": "string",
              "description": "Video time: unlimited, 1 minute, 1--5 minutes, more than 5 minutes"
            },
            "ai_search": {
              "type": "string",
              "description": "Based on search history, viewing history can only be searched"
            }
          },
          "required": [
            "keyword",
            "type",
            "datetime",
            "duration",
            "ai_search"
          ]
        }
      }
    ],
    "single_tool": [
      {
        "name": "ConvenientLiving.BuyingRentingHomes.calculateHousingMortgage",
        "description": "Calculate Home Purchase Loan Amount",
        "parameters": {
          "type": "object",
          "properties": {
            "house_price": {
              "type": "integer",
              "description": "house prices "
            },
            "down_payment": {
              "type": "integer",
              "description": "First installment payment"
            },
            "interest_rate": {
              "type": "integer",
              "description": "Interest Rate"
            },
            "loan_term": {
              "type": "integer",
              "description": "Mortgage term"
            }
          },
          "required": [
            "house_price",
            "down_payment",
            "interest_rate",
            "loan_term"
          ]
        }
      }
    ],
    "id": 675
  },
  {
    "messages": [
      {
        "role": "user",
        "content": "What would my mortgage be if I were buying a $3 million home?"
      },
      {
        "role": "function call",
        "content": {
          "name": "ConvenientLiving.BuyingRentingHomes.calculateHousingMortgage",
          "arguments": {
            "house_price": 3000000
          }
        }
      },
      {
        "role": "assistant",
        "content": "What's the down payment"
      },
      {
        "role": "user",
        "content": "The down payment is 200000 yuan."
      },
      {
        "role": "function call",
        "content": {
          "name": "ConvenientLiving.BuyingRentingHomes.calculateHousingMortgage",
          "arguments": {
            "house_price": 3000000,
            "down_payment": 200000
          }
        }
      },
      {
        "role": "assistant",
        "content": "What is the loan interest rate"
      },
      {
        "role": "user",
        "content": "It was wrong before. house prices  should be 800000"
      },
      {
        "role": "function call",
        "content": {
          "name": "ConvenientLiving.BuyingRentingHomes.calculateHousingMortgage",
          "arguments": {
            "house_price": 800000,
            "down_payment": 200000
          }
        }
      },
      {
        "role": "assistant",
        "content": "What is the loan interest rate"
      },
      {
        "role": "user",
        "content": "The lending rate is 0.035, or 3.5%."
      },
      {
        "role": "function call",
        "content": {
          "name": "ConvenientLiving.BuyingRentingHomes.calculateHousingMortgage",
          "arguments": {
            "house_price": 800000,
            "down_payment": 200000,
            "interest_rate": 0.035
          }
        }
      }
    ],
    "multiple_tools": [
      {
        "name": "ConvenientLiving.BuyingRentingHomes.calculateHousingMortgage",
        "description": "Calculate Home Purchase Loan Amount",
        "parameters": {
          "type": "object",
          "properties": {
            "house_price": {
              "type": "integer",
              "description": "house prices "
            },
            "down_payment": {
              "type": "integer",
              "description": "First installment payment"
            },
            "interest_rate": {
              "type": "integer",
              "description": "Interest Rate"
            },
            "loan_term": {
              "type": "integer",
              "description": "Mortgage term"
            }
          },
          "required": [
            "house_price",
            "down_payment",
            "interest_rate",
            "loan_term"
          ]
        }
      },
      {
        "name": "Education.ChildrenEducation.searchChildCraft",
        "description": "Search Kids Craft Tutorials",
        "parameters": {
          "type": "object",
          "properties": {
            "craft_type": {
              "type": "string",
              "description": "Manual types such as origami, paper-cut"
            }
          },
          "required": [
            "craft_type"
          ]
        }
      },
      {
        "name": "ConvenientLiving.BuyingRentingHomes.searchSalingHouses",
        "description": "Search for properties based on user needs",
        "parameters": {
          "type": "object",
          "properties": {
            "min_price": {
              "type": "string",
              "description": "rock-bottom prices"
            },
            "max_price": {
              "type": "string",
              "description": "Max Price"
            },
            "house_area": {
              "type": "string",
              "description": "Area"
            },
            "level": {
              "type": "string",
              "description": "Floor"
            },
            "age": {
              "type": "integer",
              "description": "fixed number of years"
            },
            "house_type": {
              "type": "string",
              "description": "Layout"
            },
            "housing_estate": {
              "type": "string",
              "description": "Community"
            },
            "location": {
              "type": "string",
              "description": "Position"
            }
          },
          "required": [
            "min_price",
            "max_price",
            "house_area",
            "level",
            "age",
            "house_type",
            "housing_estate",
            "location"
          ]
        }
      },
      {
        "name": "Education.ChildrenEducation.getLearningPath",
        "description": "Get child-friendly learning path planning",
        "parameters": {
          "type": "object",
          "properties": {
            "child_age": {
              "type": "integer",
              "description": "Age of children"
            }
          },
          "required": [
            "child_age"
          ]
        }
      },
      {
        "name": "Finance.Banking.buyFinancialProducts",
        "description": "Used to purchase designated wealth management products",
        "parameters": {
          "type": "object",
          "properties": {
            "product": {
              "type": "string",
              "description": "Name of financial product"
            },
            "purchase_amount": {
              "type": "float",
              "description": "Buying Amount"
            }
          },
          "required": [
            "product",
            "purchase_amount"
          ]
        }
      }
    ],
    "single_tool": [
      {
        "name": "ConvenientLiving.BuyingRentingHomes.calculateHousingMortgage",
        "description": "Calculate Home Purchase Loan Amount",
        "parameters": {
          "type": "object",
          "properties": {
            "house_price": {
              "type": "integer",
              "description": "house prices "
            },
            "down_payment": {
              "type": "integer",
              "description": "First installment payment"
            },
            "interest_rate": {
              "type": "integer",
              "description": "Interest Rate"
            },
            "loan_term": {
              "type": "integer",
              "description": "Mortgage term"
            }
          },
          "required": [
            "house_price",
            "down_payment",
            "interest_rate",
            "loan_term"
          ]
        }
      }
    ],
    "id": 676
  },
  {
    "messages": [
      {
        "role": "user",
        "content": "I want to know how much a house in Shanghai's Pudong New Area is worth"
      },
      {
        "role": "function call",
        "content": {
          "name": "ConvenientLiving.BuyingRentingHomes.predictHousePrice",
          "arguments": {
            "location": "Pudong New Area of Shanghai City"
          }
        }
      },
      {
        "role": "assistant",
        "content": "Please provide a property name"
      },
      {
        "role": "user",
        "content": "Building B 202, Luyin neighborhood is my home."
      },
      {
        "role": "function call",
        "content": {
          "name": "ConvenientLiving.BuyingRentingHomes.predictHousePrice",
          "arguments": {
            "location": "Pudong New Area of Shanghai City",
            "house_name": "202, Building B, Lvyin Community"
          }
        }
      },
      {
        "role": "assistant",
        "content": "Please provide the size of the house"
      },
      {
        "role": "user",
        "content": "It was wrong before. Position should be View room next to Oriental Pearl Tower"
      },
      {
        "role": "function call",
        "content": {
          "name": "ConvenientLiving.BuyingRentingHomes.predictHousePrice",
          "arguments": {
            "location": "View room next to Oriental Pearl Tower",
            "house_name": "202, Building B, Lvyin Community"
          }
        }
      },
      {
        "role": "assistant",
        "content": "Please provide the size of the house"
      },
      {
        "role": "user",
        "content": "My house is 80 square meters."
      },
      {
        "role": "function call",
        "content": {
          "name": "ConvenientLiving.BuyingRentingHomes.predictHousePrice",
          "arguments": {
            "location": "View room next to Oriental Pearl Tower",
            "house_name": "202, Building B, Lvyin Community",
            "house_area": "80 sqm"
          }
        }
      },
      {
        "role": "assistant",
        "content": "Please provide the floor information of the house"
      },
      {
        "role": "user",
        "content": "The house is on the middle floor, probably in the middle of the main floor."
      },
      {
        "role": "function call",
        "content": {
          "name": "ConvenientLiving.BuyingRentingHomes.predictHousePrice",
          "arguments": {
            "location": "View room next to Oriental Pearl Tower",
            "house_name": "202, Building B, Lvyin Community",
            "house_area": "80 sqm",
            "level": "Mid level"
          }
        }
      },
      {
        "role": "assistant",
        "content": "How old is the room?"
      },
      {
        "role": "user",
        "content": "The house was built 10 years ago."
      },
      {
        "role": "function call",
        "content": {
          "name": "ConvenientLiving.BuyingRentingHomes.predictHousePrice",
          "arguments": {
            "location": "View room next to Oriental Pearl Tower",
            "house_name": "202, Building B, Lvyin Community",
            "house_area": "80 sqm",
            "level": "Mid level",
            "age": 10
          }
        }
      },
      {
        "role": "assistant",
        "content": "Please provide the unit type of the house"
      },
      {
        "role": "user",
        "content": "This house is a layout of two bedrooms and one living room."
      },
      {
        "role": "function call",
        "content": {
          "name": "ConvenientLiving.BuyingRentingHomes.predictHousePrice",
          "arguments": {
            "location": "View room next to Oriental Pearl Tower",
            "house_name": "202, Building B, Lvyin Community",
            "house_area": "80 sqm",
            "level": "Mid level",
            "age": 10,
            "house_type": "2 bedrooms & 1 living room"
          }
        }
      },
      {
        "role": "assistant",
        "content": "What is the cell name"
      },
      {
        "role": "user",
        "content": "The neighborhood I live in is called Luyin neighborhood, and the environment is very nice."
      },
      {
        "role": "function call",
        "content": {
          "name": "ConvenientLiving.BuyingRentingHomes.predictHousePrice",
          "arguments": {
            "location": "View room next to Oriental Pearl Tower",
            "house_name": "202, Building B, Lvyin Community",
            "house_area": "80 sqm",
            "level": "Mid level",
            "age": 10,
            "house_type": "2 bedrooms & 1 living room",
            "housing_estate": "Lvyin Neighborhood"
          }
        }
      },
      {
        "role": "assistant",
        "content": "What is the predicted time period?"
      },
      {
        "role": "user",
        "content": "5 years"
      },
      {
        "role": "function call",
        "content": {
          "name": "ConvenientLiving.BuyingRentingHomes.predictHousePrice",
          "arguments": {
            "location": "View room next to Oriental Pearl Tower",
            "house_name": "202, Building B, Lvyin Community",
            "house_area": "80 sqm",
            "level": "Mid level",
            "age": 10,
            "house_type": "2 bedrooms & 1 living room",
            "housing_estate": "Lvyin Neighborhood",
            "time_period": 5
          }
        }
      }
    ],
    "multiple_tools": [
      {
        "name": "SystemTools.SystemSettings.setSystemVolume",
        "description": "Set your phone's individual volume levels",
        "parameters": {
          "type": "object",
          "properties": {
            "set_volume": {
              "type": "integer",
              "description": "Volume, 0 to 100"
            },
            "type_volume": {
              "type": "string",
              "description": "Adjustment type, such as ringtone, notification, media, defaults to media"
            }
          },
          "required": [
            "set_volume",
            "type_volume"
          ]
        }
      },
      {
        "name": "Navigation.MapNavigation.realTimeTraffic",
        "description": "Get real-time traffic information for a specified area",
        "parameters": {
          "type": "object",
          "properties": {
            "area": {
              "type": "string",
              "description": "The name or address of the area where you want to get traffic"
            }
          },
          "required": [
            "area"
          ]
        }
      },
      {
        "name": "Travel.ScenicAreaServices.getScenicSpotPopularity",
        "description": "Get the popularity of selected scenic spots",
        "parameters": {
          "type": "object",
          "properties": {
            "name": {
              "type": "string",
              "description": "Name of the tourist area"
            }
          },
          "required": [
            "name"
          ]
        }
      },
      {
        "name": "ConvenientLiving.BuyingRentingHomes.predictHousePrice",
        "description": "Evaluate the value of the home",
        "parameters": {
          "type": "object",
          "properties": {
            "house_name": {
              "type": "string",
              "description": "Property name"
            },
            "house_area": {
              "type": "string",
              "description": "Area"
            },
            "level": {
              "type": "string",
              "description": "Floor"
            },
            "age": {
              "type": "integer",
              "description": "Room Age"
            },
            "house_type": {
              "type": "string",
              "description": "Layout"
            },
            "housing_estate": {
              "type": "string",
              "description": "Community"
            },
            "location": {
              "type": "string",
              "description": "Position"
            },
            "time_period": {
              "type": "integer",
              "description": "Forecasted time period in years"
            }
          },
          "required": [
            "house_name",
            "house_area",
            "level",
            "age",
            "house_type",
            "housing_estate",
            "location",
            "time_period"
          ]
        }
      },
      {
        "name": "Travel.ScenicAreaServices.checkScenicSpotAvailability",
        "description": "View the current availability of selected scenic spots by scenic spot name",
        "parameters": {
          "type": "object",
          "properties": {
            "name": {
              "type": "string",
              "description": "Name of the tourist area"
            }
          },
          "required": [
            "name"
          ]
        }
      }
    ],
    "single_tool": [
      {
        "name": "ConvenientLiving.BuyingRentingHomes.predictHousePrice",
        "description": "Evaluate the value of the home",
        "parameters": {
          "type": "object",
          "properties": {
            "house_name": {
              "type": "string",
              "description": "Property name"
            },
            "house_area": {
              "type": "string",
              "description": "Area"
            },
            "level": {
              "type": "string",
              "description": "Floor"
            },
            "age": {
              "type": "integer",
              "description": "Room Age"
            },
            "house_type": {
              "type": "string",
              "description": "Layout"
            },
            "housing_estate": {
              "type": "string",
              "description": "Community"
            },
            "location": {
              "type": "string",
              "description": "Position"
            },
            "time_period": {
              "type": "integer",
              "description": "Forecasted time period in years"
            }
          },
          "required": [
            "house_name",
            "house_area",
            "level",
            "age",
            "house_type",
            "housing_estate",
            "location",
            "time_period"
          ]
        }
      }
    ],
    "id": 677
  },
  {
    "messages": [
      {
        "role": "user",
        "content": "Give me an appraisal of the value of the house in Chaoyang District, Beijing"
      },
      {
        "role": "function call",
        "content": {
          "name": "ConvenientLiving.BuyingRentingHomes.predictHousePrice",
          "arguments": {
            "location": "Room 301, Future Business Center 17"
          }
        }
      },
      {
        "role": "assistant",
        "content": "Please provide a property name"
      },
      {
        "role": "user",
        "content": "My house is Sunshine Gardens Block A 301 and the environment is good."
      },
      {
        "role": "function call",
        "content": {
          "name": "ConvenientLiving.BuyingRentingHomes.predictHousePrice",
          "arguments": {
            "location": "Room 301, Future Business Center 17",
            "house_name": "Sunshine Gardens Tower A 301"
          }
        }
      },
      {
        "role": "assistant",
        "content": "What is the size of the house?"
      },
      {
        "role": "user",
        "content": "My house is 120 sqm, perfect for my family."
      },
      {
        "role": "function call",
        "content": {
          "name": "ConvenientLiving.BuyingRentingHomes.predictHousePrice",
          "arguments": {
            "location": "Room 301, Future Business Center 17",
            "house_name": "Sunshine Gardens Tower A 301",
            "house_area": "120 sqm"
          }
        }
      },
      {
        "role": "assistant",
        "content": "Please provide the floor information of the house"
      },
      {
        "role": "user",
        "content": "The building has 20 floors, and my house is on the 15th floor, which is a high floor."
      },
      {
        "role": "function call",
        "content": {
          "name": "ConvenientLiving.BuyingRentingHomes.predictHousePrice",
          "arguments": {
            "location": "Room 301, Future Business Center 17",
            "house_name": "Sunshine Gardens Tower A 301",
            "house_area": "120 sqm",
            "level": "Higher-up"
          }
        }
      },
      {
        "role": "assistant",
        "content": "How old is the room?"
      },
      {
        "role": "user",
        "content": "The age of the room is 5 years."
      },
      {
        "role": "function call",
        "content": {
          "name": "ConvenientLiving.BuyingRentingHomes.predictHousePrice",
          "arguments": {
            "location": "Room 301, Future Business Center 17",
            "house_name": "Sunshine Gardens Tower A 301",
            "house_area": "120 sqm",
            "level": "Higher-up",
            "age": 5
          }
        }
      },
      {
        "role": "assistant",
        "content": "What is the household type?"
      },
      {
        "role": "user",
        "content": "It was wrong before. Area should be 80 sqm"
      },
      {
        "role": "function call",
        "content": {
          "name": "ConvenientLiving.BuyingRentingHomes.predictHousePrice",
          "arguments": {
            "location": "Room 301, Future Business Center 17",
            "house_name": "Sunshine Gardens Tower A 301",
            "house_area": "80 sqm",
            "level": "Higher-up",
            "age": 5
          }
        }
      },
      {
        "role": "assistant",
        "content": "What is the household type?"
      },
      {
        "role": "user",
        "content": "My house is a 3 bedroom 2 living room."
      },
      {
        "role": "function call",
        "content": {
          "name": "ConvenientLiving.BuyingRentingHomes.predictHousePrice",
          "arguments": {
            "location": "Room 301, Future Business Center 17",
            "house_name": "Sunshine Gardens Tower A 301",
            "house_area": "80 sqm",
            "level": "Higher-up",
            "age": 5,
            "house_type": "Three bedrooms and two living rooms"
          }
        }
      },
      {
        "role": "assistant",
        "content": "What's a neighborhood?"
      },
      {
        "role": "user",
        "content": "The neighborhood I live in is called Sunshine Garden."
      },
      {
        "role": "function call",
        "content": {
          "name": "ConvenientLiving.BuyingRentingHomes.predictHousePrice",
          "arguments": {
            "location": "Room 301, Future Business Center 17",
            "house_name": "Sunshine Gardens Tower A 301",
            "house_area": "80 sqm",
            "level": "Higher-up",
            "age": 5,
            "house_type": "Three bedrooms and two living rooms",
            "housing_estate": "Sunny Gardens"
          }
        }
      },
      {
        "role": "assistant",
        "content": "What is the predicted time period?"
      },
      {
        "role": "user",
        "content": "10 Years"
      },
      {
        "role": "function call",
        "content": {
          "name": "ConvenientLiving.BuyingRentingHomes.predictHousePrice",
          "arguments": {
            "location": "Room 301, Future Business Center 17",
            "house_name": "Sunshine Gardens Tower A 301",
            "house_area": "80 sqm",
            "level": "Higher-up",
            "age": 5,
            "house_type": "Three bedrooms and two living rooms",
            "housing_estate": "Sunny Gardens",
            "time_period": 10
          }
        }
      }
    ],
    "multiple_tools": [
      {
        "name": "ConvenientLiving.GovernmentServices.applyForEducationGrant",
        "description": "Submit an application for an education grant",
        "parameters": {
          "type": "object",
          "properties": {
            "name": {
              "type": "string",
              "description": "Applicant, default user self"
            },
            "school": {
              "type": "string",
              "description": "Schools"
            }
          },
          "required": [
            "name",
            "school"
          ]
        }
      },
      {
        "name": "OfficeSoftware.Documents.importDocument",
        "description": "Import an external document into a document",
        "parameters": {
          "type": "object",
          "properties": {
            "import_path": {
              "type": "string",
              "description": "Document path to import, required"
            }
          },
          "required": [
            "import_path"
          ]
        }
      },
      {
        "name": "Photography.PhotoTaking.takePhoto",
        "description": "Press the shutter to take a picture",
        "parameters": {
          "type": "object",
          "properties": {},
          "required": []
        }
      },
      {
        "name": "Navigation.TaxiCarRental.callingTaxi",
        "description": "Send a ride request based on your starting location",
        "parameters": {
          "type": "object",
          "properties": {
            "departure": {
              "type": "string",
              "description": "Pickup location, default current location"
            },
            "destination": {
              "type": "string",
              "description": "Destination"
            },
            "time": {
              "type": "string",
              "description": "Taxi time, default current time"
            }
          },
          "required": [
            "departure",
            "destination",
            "time"
          ]
        }
      },
      {
        "name": "ConvenientLiving.BuyingRentingHomes.predictHousePrice",
        "description": "Evaluate the value of the home",
        "parameters": {
          "type": "object",
          "properties": {
            "house_name": {
              "type": "string",
              "description": "Property name"
            },
            "house_area": {
              "type": "string",
              "description": "Area"
            },
            "level": {
              "type": "string",
              "description": "Floor"
            },
            "age": {
              "type": "integer",
              "description": "Room Age"
            },
            "house_type": {
              "type": "string",
              "description": "Layout"
            },
            "housing_estate": {
              "type": "string",
              "description": "Community"
            },
            "location": {
              "type": "string",
              "description": "Position"
            },
            "time_period": {
              "type": "integer",
              "description": "Forecasted time period in years"
            }
          },
          "required": [
            "house_name",
            "house_area",
            "level",
            "age",
            "house_type",
            "housing_estate",
            "location",
            "time_period"
          ]
        }
      }
    ],
    "single_tool": [
      {
        "name": "ConvenientLiving.BuyingRentingHomes.predictHousePrice",
        "description": "Evaluate the value of the home",
        "parameters": {
          "type": "object",
          "properties": {
            "house_name": {
              "type": "string",
              "description": "Property name"
            },
            "house_area": {
              "type": "string",
              "description": "Area"
            },
            "level": {
              "type": "string",
              "description": "Floor"
            },
            "age": {
              "type": "integer",
              "description": "Room Age"
            },
            "house_type": {
              "type": "string",
              "description": "Layout"
            },
            "housing_estate": {
              "type": "string",
              "description": "Community"
            },
            "location": {
              "type": "string",
              "description": "Position"
            },
            "time_period": {
              "type": "integer",
              "description": "Forecasted time period in years"
            }
          },
          "required": [
            "house_name",
            "house_area",
            "level",
            "age",
            "house_type",
            "housing_estate",
            "location",
            "time_period"
          ]
        }
      }
    ],
    "id": 678
  },
  {
    "messages": [
      {
        "role": "user",
        "content": "I'd like to schedule a test drive on April 20th at 2:30 pm for the latest model"
      },
      {
        "role": "function call",
        "content": {
          "name": "ConvenientLiving.AutoLife.bookCarTestDrive",
          "arguments": {
            "test_drive_time": "April 20th at 2:30 pm"
          }
        }
      },
      {
        "role": "assistant",
        "content": "What is your name?"
      },
      {
        "role": "user",
        "content": "I'm Mr. Zhou, how can I help you?"
      },
      {
        "role": "function call",
        "content": {
          "name": "ConvenientLiving.AutoLife.bookCarTestDrive",
          "arguments": {
            "test_drive_time": "April 20th at 2:30 pm",
            "name": "Mr. Zhou..."
          }
        }
      },
      {
        "role": "assistant",
        "content": "Please provide your phone number so we can contact you to confirm your test drive details"
      },
      {
        "role": "user",
        "content": "It was wrong before. Name should be Lady Zhao"
      },
      {
        "role": "function call",
        "content": {
          "name": "ConvenientLiving.AutoLife.bookCarTestDrive",
          "arguments": {
            "test_drive_time": "April 20th at 2:30 pm",
            "name": "Lady Zhao"
          }
        }
      },
      {
        "role": "assistant",
        "content": "Please provide your phone number so we can contact you to confirm your test drive details"
      },
      {
        "role": "user",
        "content": "My phone number is 131xxxx3344, you can contact me to confirm the test drive details."
      },
      {
        "role": "function call",
        "content": {
          "name": "ConvenientLiving.AutoLife.bookCarTestDrive",
          "arguments": {
            "test_drive_time": "April 20th at 2:30 pm",
            "name": "Lady Zhao",
            "phone": "131xxxx3344"
          }
        }
      }
    ],
    "multiple_tools": [
      {
        "name": "VideoPlayback.OnlineVideos.likeOnlineVideo",
        "description": "Like/Click to step on a video",
        "parameters": {
          "type": "object",
          "properties": {
            "name": {
              "type": "string",
              "description": "Video Name"
            },
            "like": {
              "type": "boolean",
              "description": "Like"
            }
          },
          "required": [
            "name",
            "like"
          ]
        }
      },
      {
        "name": "SocialCommunication.Community.likeCommunityPost",
        "description": "Like a post from a specific community",
        "parameters": {
          "type": "object",
          "properties": {
            "community_name": {
              "type": "string",
              "description": "The name of the community where you want to like the post"
            },
            "post_name": {
              "type": "string",
              "description": "Title of the post to like"
            }
          },
          "required": [
            "community_name",
            "post_name"
          ]
        }
      },
      {
        "name": "ConvenientLiving.AutoLife.bookCarTestDrive",
        "description": "Book a test drive for a specific car model.",
        "parameters": {
          "type": "object",
          "properties": {
            "test_drive_time": {
              "type": "string",
              "description": "Test drive time, format is YYYY-MM-DD HH: mm, required"
            },
            "name": {
              "type": "string",
              "description": "Name"
            },
            "phone": {
              "type": "string",
              "description": "Telephone, etc."
            }
          },
          "required": [
            "test_drive_time",
            "name",
            "phone"
          ]
        }
      },
      {
        "name": "UtilityTools.Calendar.addCalendarschedule",
        "description": "Create a new schedule",
        "parameters": {
          "type": "object",
          "properties": {
            "date_name": {
              "type": "string",
              "description": "Visiting program name"
            },
            "start_date": {
              "type": "string",
              "description": "Schedule start time"
            },
            "end_date": {
              "type": "string",
              "description": "Schedule end time; do not write the default start time 24 o'clock on the same day"
            },
            "schedule": {
              "type": "string",
              "description": "Schedule Related Descriptions"
            }
          },
          "required": [
            "date_name",
            "start_date",
            "end_date",
            "schedule"
          ]
        }
      },
      {
        "name": "SocialCommunication.SocialMedia.mediumLikes",
        "description": "Like a given activity",
        "parameters": {
          "type": "object",
          "properties": {
            "medium_name": {
              "type": "string",
              "description": "Media name"
            },
            "correlation": {
              "type": "string",
              "description": "Dynamic Related Content"
            },
            "publisher": {
              "type": "string",
              "description": "Posted by/publisher?"
            },
            "publish_time": {
              "type": "string",
              "description": "Release Date"
            }
          },
          "required": [
            "medium_name",
            "correlation",
            "publisher",
            "publish_time"
          ]
        }
      }
    ],
    "single_tool": [
      {
        "name": "ConvenientLiving.AutoLife.bookCarTestDrive",
        "description": "Book a test drive for a specific car model.",
        "parameters": {
          "type": "object",
          "properties": {
            "test_drive_time": {
              "type": "string",
              "description": "Test drive time, format is YYYY-MM-DD HH: mm, required"
            },
            "name": {
              "type": "string",
              "description": "Name"
            },
            "phone": {
              "type": "string",
              "description": "Telephone, etc."
            }
          },
          "required": [
            "test_drive_time",
            "name",
            "phone"
          ]
        }
      }
    ],
    "id": 680
  },
  {
    "messages": [
      {
        "role": "user",
        "content": "Reserve me a car for a test drive on April 25 at 10am"
      },
      {
        "role": "function call",
        "content": {
          "name": "ConvenientLiving.AutoLife.bookCarTestDrive",
          "arguments": {
            "test_drive_time": "April 25th at 10am"
          }
        }
      },
      {
        "role": "assistant",
        "content": "What is your name?"
      },
      {
        "role": "user",
        "content": "I'm Ms. Zhao"
      },
      {
        "role": "function call",
        "content": {
          "name": "ConvenientLiving.AutoLife.bookCarTestDrive",
          "arguments": {
            "test_drive_time": "April 25th at 10am",
            "name": "Lady Zhao"
          }
        }
      },
      {
        "role": "assistant",
        "content": "Please provide your phone number so we can contact you to confirm your test drive details"
      },
      {
        "role": "user",
        "content": "It was wrong before. Test drive time, format is YYYY-MM-DD HH: mm, required should be Next Tuesday at 9am"
      },
      {
        "role": "function call",
        "content": {
          "name": "ConvenientLiving.AutoLife.bookCarTestDrive",
          "arguments": {
            "test_drive_time": "Next Tuesday at 9am",
            "name": "Lady Zhao"
          }
        }
      },
      {
        "role": "assistant",
        "content": "Please provide your phone number so we can contact you to confirm your test drive details"
      },
      {
        "role": "user",
        "content": "My phone number is 137xxxx7890, you can contact me to confirm the test drive details."
      },
      {
        "role": "function call",
        "content": {
          "name": "ConvenientLiving.AutoLife.bookCarTestDrive",
          "arguments": {
            "test_drive_time": "Next Tuesday at 9am",
            "name": "Lady Zhao",
            "phone": "137xxxx7890"
          }
        }
      }
    ],
    "multiple_tools": [
      {
        "name": "ConvenientLiving.GovernmentServices.applyForEducationGrant",
        "description": "Submit an application for an education grant",
        "parameters": {
          "type": "object",
          "properties": {
            "name": {
              "type": "string",
              "description": "Applicant, default user self"
            },
            "school": {
              "type": "string",
              "description": "Schools"
            }
          },
          "required": [
            "name",
            "school"
          ]
        }
      },
      {
        "name": "MusicRadio.Karaoke.playRecord",
        "description": "Play recordings with specified song names",
        "parameters": {
          "type": "object",
          "properties": {
            "name": {
              "type": "string",
              "description": "Song Name"
            }
          },
          "required": [
            "name"
          ]
        }
      },
      {
        "name": "ConvenientLiving.AutoLife.bookCarTestDrive",
        "description": "Book a test drive for a specific car model.",
        "parameters": {
          "type": "object",
          "properties": {
            "test_drive_time": {
              "type": "string",
              "description": "Test drive time, format is YYYY-MM-DD HH: mm, required"
            },
            "name": {
              "type": "string",
              "description": "Name"
            },
            "phone": {
              "type": "string",
              "description": "Telephone, etc."
            }
          },
          "required": [
            "test_drive_time",
            "name",
            "phone"
          ]
        }
      },
      {
        "name": "ConvenientLiving.GovernmentServices.applyForVisa",
        "description": "Submit Visa Application",
        "parameters": {
          "type": "object",
          "properties": {
            "passport_number": {
              "type": "string",
              "description": "Pasaport No."
            }
          },
          "required": [
            "passport_number"
          ]
        }
      },
      {
        "name": "Navigation.TrainTickets.addTrainWaitlistOrder",
        "description": "User submits train ticket standby order",
        "parameters": {
          "type": "object",
          "properties": {
            "train_number": {
              "type": "string",
              "description": "Number of trips to book; select all by default, up to 6"
            },
            "passenger_name": {
              "type": "string",
              "description": "Rider's name"
            },
            "passenger_id": {
              "type": "string",
              "description": "Rider ID number"
            },
            "ride_date": {
              "type": "string",
              "description": "Trip date in YYYY-MM-DD format"
            },
            "departure_station": {
              "type": "string",
              "description": "Departure Station"
            },
            "destination_station": {
              "type": "string",
              "description": "arrival station"
            },
            "seat_type": {
              "type": "string",
              "description": "Seat Type"
            }
          },
          "required": [
            "train_number",
            "passenger_name",
            "passenger_id",
            "ride_date",
            "departure_station",
            "destination_station",
            "seat_type"
          ]
        }
      }
    ],
    "single_tool": [
      {
        "name": "ConvenientLiving.AutoLife.bookCarTestDrive",
        "description": "Book a test drive for a specific car model.",
        "parameters": {
          "type": "object",
          "properties": {
            "test_drive_time": {
              "type": "string",
              "description": "Test drive time, format is YYYY-MM-DD HH: mm, required"
            },
            "name": {
              "type": "string",
              "description": "Name"
            },
            "phone": {
              "type": "string",
              "description": "Telephone, etc."
            }
          },
          "required": [
            "test_drive_time",
            "name",
            "phone"
          ]
        }
      }
    ],
    "id": 681
  },
  {
    "messages": [
      {
        "role": "user",
        "content": "I'm looking for Tesla vehicle information"
      },
      {
        "role": "function call",
        "content": {
          "name": "ConvenientLiving.AutoLife.searchUsedCars",
          "arguments": {
            "brand": "Teslla"
          }
        }
      },
      {
        "role": "assistant",
        "content": "Please provide search criteria type Budget mileage range and vehicle condition requirements"
      },
      {
        "role": "user",
        "content": "I plan to buy an SUV with a budget of about 250,000 and a mileage of no more than 50,000 kilometers, hopefully in good condition."
      },
      {
        "role": "function call",
        "content": {
          "name": "ConvenientLiving.AutoLife.searchUsedCars",
          "arguments": {
            "brand": "Teslla",
            "keywords": "SUV"
          }
        }
      },
      {
        "role": "assistant",
        "content": "What is the price range of the car"
      },
      {
        "role": "user",
        "content": "It was wrong before. Car Brand should be Audi"
      },
      {
        "role": "function call",
        "content": {
          "name": "ConvenientLiving.AutoLife.searchUsedCars",
          "arguments": {
            "brand": "Audi",
            "keywords": "SUV"
          }
        }
      },
      {
        "role": "assistant",
        "content": "What is the price range of the car"
      },
      {
        "role": "user",
        "content": "The price range of the car I intend to buy is between 300,000 and 400,000."
      },
      {
        "role": "function call",
        "content": {
          "name": "ConvenientLiving.AutoLife.searchUsedCars",
          "arguments": {
            "brand": "Audi",
            "keywords": "SUV",
            "price": "300,000 to 400,000"
          }
        }
      }
    ],
    "multiple_tools": [
      {
        "name": "Navigation.TaxiCarRental.searchCarRental",
        "description": "See cars available in your location",
        "parameters": {
          "type": "object",
          "properties": {
            "location": {
              "type": "string",
              "description": "Pick-up from"
            },
            "start_time": {
              "type": "string",
              "description": "Start Time "
            },
            "end_time": {
              "type": "string",
              "description": "drop-off date"
            }
          },
          "required": [
            "location",
            "start_time",
            "end_time"
          ]
        }
      },
      {
        "name": "ConvenientLiving.AutoLife.searchUsedCars",
        "description": "Enter specific criteria to search for eligible vehicles",
        "parameters": {
          "type": "object",
          "properties": {
            "keywords": {
              "type": "string",
              "description": "Search criteria, type, etc."
            },
            "brand": {
              "type": "string",
              "description": "Car Brand"
            },
            "price": {
              "type": "string",
              "description": "Bid vehicle price"
            },
            "mileage": {
              "type": "string",
              "description": "Mileage"
            }
          },
          "required": [
            "keywords",
            "brand",
            "price",
            "mileage"
          ]
        }
      },
      {
        "name": "SocialCommunication.InstantMessaging.searchMessage",
        "description": "Search historical messages for a specific contact or group based on keywords",
        "parameters": {
          "type": "object",
          "properties": {
            "receiver_name": {
              "type": "string",
              "description": "Name of the contact or group to search for the message"
            },
            "keyword": {
              "type": "string",
              "description": "Keywords for search"
            }
          },
          "required": [
            "receiver_name",
            "keyword"
          ]
        }
      },
      {
        "name": "Navigation.FlightTickets.searchCheapFlights",
        "description": "Search cheap flights by specified criteria",
        "parameters": {
          "type": "object",
          "properties": {
            "type": {
              "type": "string",
              "description": "One way, round trip"
            },
            "departure": {
              "type": "string",
              "description": "Origination"
            },
            "destination": {
              "type": "string",
              "description": "Reach ground"
            },
            "travel_date": {
              "type": "string",
              "description": "Specify date, next month, next three months, etc."
            }
          },
          "required": [
            "type",
            "departure",
            "destination",
            "travel_date"
          ]
        }
      },
      {
        "name": "ConvenientLiving.GovernmentServices.queryEnterpriseInfo",
        "description": "Enter the business name to get basic information about the business",
        "parameters": {
          "type": "object",
          "properties": {
            "enterprise_name": {
              "type": "string",
              "description": "Name of the business to query"
            }
          },
          "required": [
            "enterprise_name"
          ]
        }
      }
    ],
    "single_tool": [
      {
        "name": "ConvenientLiving.AutoLife.searchUsedCars",
        "description": "Enter specific criteria to search for eligible vehicles",
        "parameters": {
          "type": "object",
          "properties": {
            "keywords": {
              "type": "string",
              "description": "Search criteria, type, etc."
            },
            "brand": {
              "type": "string",
              "description": "Car Brand"
            },
            "price": {
              "type": "string",
              "description": "Bid vehicle price"
            },
            "mileage": {
              "type": "string",
              "description": "Mileage"
            }
          },
          "required": [
            "keywords",
            "brand",
            "price",
            "mileage"
          ]
        }
      }
    ],
    "id": 682
  },
  {
    "messages": [
      {
        "role": "user",
        "content": "Search me for BMW vehicles"
      },
      {
        "role": "function call",
        "content": {
          "name": "ConvenientLiving.AutoLife.searchUsedCars",
          "arguments": {
            "brand": "BMW"
          }
        }
      },
      {
        "role": "assistant",
        "content": "Please provide information such as search criteria type budget mileage range and vehicle condition"
      },
      {
        "role": "user",
        "content": "I plan to rent a limousine with a budget of less than 5,000 yuan and a mileage of no more than 10,000 kilometers, preferably new or close to new."
      },
      {
        "role": "function call",
        "content": {
          "name": "ConvenientLiving.AutoLife.searchUsedCars",
          "arguments": {
            "brand": "BMW",
            "keywords": "Limousine"
          }
        }
      },
      {
        "role": "assistant",
        "content": "What is the price of the car"
      },
      {
        "role": "user",
        "content": "It was wrong before. Search criteria, type, etc. should be SUV"
      },
      {
        "role": "function call",
        "content": {
          "name": "ConvenientLiving.AutoLife.searchUsedCars",
          "arguments": {
            "brand": "BMW",
            "keywords": "SUV"
          }
        }
      },
      {
        "role": "assistant",
        "content": "What is the price of the car"
      },
      {
        "role": "user",
        "content": "The model I am considering is over half a million."
      },
      {
        "role": "function call",
        "content": {
          "name": "ConvenientLiving.AutoLife.searchUsedCars",
          "arguments": {
            "brand": "BMW",
            "keywords": "SUV",
            "price": "500k +"
          }
        }
      }
    ],
    "multiple_tools": [
      {
        "name": "VideoPlayback.OnlineVideos.searchOnlineVideo",
        "description": "Search online videos, which can be searched based on keywords (director/publisher/video keywords); can be searched based on categories; can be searched based on AI smart search",
        "parameters": {
          "type": "object",
          "properties": {
            "keyword": {
              "type": "array",
              "description": "Director/Publisher/Video Keyword Search"
            },
            "video_type": {
              "type": "string",
              "description": "Video Type Categories, Recommended, Popular, Chase, Film and Television New Journey"
            },
            "ai_search": {
              "type": "string",
              "description": "Based on search history, viewing history can only be turned off by default"
            }
          },
          "required": [
            "keyword",
            "video_type",
            "ai_search"
          ]
        }
      },
      {
        "name": "UtilityTools.AppSearchInstallation.searchApp",
        "description": "Search mobile apps by name or keyword",
        "parameters": {
          "type": "object",
          "properties": {
            "keyword": {
              "type": "string",
              "description": "Search for a keyword or app name"
            }
          },
          "required": [
            "keyword"
          ]
        }
      },
      {
        "name": "ConvenientLiving.GovernmentServices.searchEnterpriseByName",
        "description": "Search related businesses based on keywords entered",
        "parameters": {
          "type": "object",
          "properties": {
            "keyword": {
              "type": "string",
              "description": "Search keywords"
            }
          },
          "required": [
            "keyword"
          ]
        }
      },
      {
        "name": "ConvenientLiving.AutoLife.searchUsedCars",
        "description": "Enter specific criteria to search for eligible vehicles",
        "parameters": {
          "type": "object",
          "properties": {
            "keywords": {
              "type": "string",
              "description": "Search criteria, type, etc."
            },
            "brand": {
              "type": "string",
              "description": "Car Brand"
            },
            "price": {
              "type": "string",
              "description": "Bid vehicle price"
            },
            "mileage": {
              "type": "string",
              "description": "Mileage"
            }
          },
          "required": [
            "keywords",
            "brand",
            "price",
            "mileage"
          ]
        }
      },
      {
        "name": "UtilityTools.FileManagement.searchFiles",
        "description": "Search for relevant documents based on keywords",
        "parameters": {
          "type": "object",
          "properties": {
            "keyword": {
              "type": "string",
              "description": "Keywords Search"
            },
            "type": {
              "type": "string",
              "description": "files, tags, recently deleted, tencent documents, device storage, pictures, videos, audio, documents, installation package, compressed package, cloud disk, private safe, download, search in bluetooth; default file search"
            },
            "time": {
              "type": "string",
              "description": "Search by time"
            },
            "size": {
              "type": "string",
              "description": "File size"
            }
          },
          "required": [
            "keyword",
            "type",
            "time",
            "size"
          ]
        }
      }
    ],
    "single_tool": [
      {
        "name": "ConvenientLiving.AutoLife.searchUsedCars",
        "description": "Enter specific criteria to search for eligible vehicles",
        "parameters": {
          "type": "object",
          "properties": {
            "keywords": {
              "type": "string",
              "description": "Search criteria, type, etc."
            },
            "brand": {
              "type": "string",
              "description": "Car Brand"
            },
            "price": {
              "type": "string",
              "description": "Bid vehicle price"
            },
            "mileage": {
              "type": "string",
              "description": "Mileage"
            }
          },
          "required": [
            "keywords",
            "brand",
            "price",
            "mileage"
          ]
        }
      }
    ],
    "id": 683
  },
  {
    "messages": [
      {
        "role": "user",
        "content": "Share BMW"
      },
      {
        "role": "function call",
        "content": {
          "name": "ConvenientLiving.AutoLife.shareCarModels",
          "arguments": {
            "brand": "BMW"
          }
        }
      },
      {
        "role": "assistant",
        "content": "Please provide the media you share, such as WeChat, Xiaohongshu, Weibo, etc."
      },
      {
        "role": "user",
        "content": "I chose to share using WeChat."
      },
      {
        "role": "function call",
        "content": {
          "name": "ConvenientLiving.AutoLife.shareCarModels",
          "arguments": {
            "brand": "BMW",
            "to": "WeChat"
          }
        }
      },
      {
        "role": "assistant",
        "content": "Who to share with"
      },
      {
        "role": "user",
        "content": "It was wrong before. Car Brand should be Mercedez-Benz"
      },
      {
        "role": "function call",
        "content": {
          "name": "ConvenientLiving.AutoLife.shareCarModels",
          "arguments": {
            "brand": "Mercedez-Benz",
            "to": "WeChat"
          }
        }
      },
      {
        "role": "assistant",
        "content": "Who to share with"
      },
      {
        "role": "user",
        "content": "The target of the sharing is Li Gong, who is the main person in charge of the project."
      },
      {
        "role": "function call",
        "content": {
          "name": "ConvenientLiving.AutoLife.shareCarModels",
          "arguments": {
            "brand": "Mercedez-Benz",
            "to": "WeChat",
            "name": "Li Gong"
          }
        }
      }
    ],
    "multiple_tools": [
      {
        "name": "Navigation.MapNavigation.shareTravelRoute",
        "description": "Share travel plans or directions",
        "parameters": {
          "type": "object",
          "properties": {
            "departure": {
              "type": "string",
              "description": "The name or address of the departure location, the default current location"
            },
            "destination": {
              "type": "string",
              "description": "Name or address of the destination"
            },
            "to": {
              "type": "string",
              "description": "Ways to share, like social media, texting, etc."
            }
          },
          "required": [
            "departure",
            "destination",
            "to"
          ]
        }
      },
      {
        "name": "VideoPlayback.OnlineVideos.shareOnlineVideo",
        "description": "Share a video to other media",
        "parameters": {
          "type": "object",
          "properties": {
            "name": {
              "type": "string",
              "description": "Video Name"
            },
            "media": {
              "type": "string",
              "description": "Share video to: WeChat, etc."
            }
          },
          "required": [
            "name",
            "media"
          ]
        }
      },
      {
        "name": "ConvenientLiving.AutoLife.shareCarModels",
        "description": "Share Selected Cars",
        "parameters": {
          "type": "object",
          "properties": {
            "brand": {
              "type": "string",
              "description": "Car Brand"
            },
            "to": {
              "type": "string",
              "description": "Media, such as WeChat, Xiaohongshu, Weibo, etc."
            },
            "name": {
              "type": "string",
              "description": "Shared goals"
            }
          },
          "required": [
            "brand",
            "to",
            "name"
          ]
        }
      },
      {
        "name": "UtilityTools.Search.shareWebPage",
        "description": "Share the current page to other platforms/media",
        "parameters": {
          "type": "object",
          "properties": {
            "media": {
              "type": "string",
              "description": "Media or platform to share"
            },
            "person": {
              "type": "string",
              "description": "Specify who to share with"
            }
          },
          "required": [
            "media",
            "person"
          ]
        }
      },
      {
        "name": "Navigation.TaxiCarRental.shareTaxiOrder",
        "description": "Share route",
        "parameters": {
          "type": "object",
          "properties": {
            "time": {
              "type": "string",
              "description": "Order time"
            },
            "destination": {
              "type": "string",
              "description": "destination"
            },
            "media": {
              "type": "string",
              "description": "Choose Socials To Share Single Post"
            }
          },
          "required": [
            "time",
            "destination",
            "media"
          ]
        }
      }
    ],
    "single_tool": [
      {
        "name": "ConvenientLiving.AutoLife.shareCarModels",
        "description": "Share Selected Cars",
        "parameters": {
          "type": "object",
          "properties": {
            "brand": {
              "type": "string",
              "description": "Car Brand"
            },
            "to": {
              "type": "string",
              "description": "Media, such as WeChat, Xiaohongshu, Weibo, etc."
            },
            "name": {
              "type": "string",
              "description": "Shared goals"
            }
          },
          "required": [
            "brand",
            "to",
            "name"
          ]
        }
      }
    ],
    "id": 684
  },
  {
    "messages": [
      {
        "role": "user",
        "content": "I have utility bills"
      },
      {
        "role": "function call",
        "content": {
          "name": "ConvenientLiving.UtilityPayments.payBill",
          "arguments": {
            "service_type": "Hydropower"
          }
        }
      },
      {
        "role": "assistant",
        "content": "What is the default address of the user address"
      },
      {
        "role": "user",
        "content": "My default address is Unit 101, Unit 1, Building 1, Pearl Garden, Dongcheng District. Is there anything I need to confirm?"
      },
      {
        "role": "function call",
        "content": {
          "name": "ConvenientLiving.UtilityPayments.payBill",
          "arguments": {
            "service_type": "Hydropower",
            "address": "Unit 101, Unit 1, Building 1, Pearl Garden, Dongcheng District"
          }
        }
      },
      {
        "role": "assistant",
        "content": "Please provide the contribution amount and default bill amount"
      },
      {
        "role": "user",
        "content": "It was wrong before. Types of paid services, such as utilities, gas, etc. should be Gas"
      },
      {
        "role": "function call",
        "content": {
          "name": "ConvenientLiving.UtilityPayments.payBill",
          "arguments": {
            "service_type": "Gas",
            "address": "Unit 101, Unit 1, Building 1, Pearl Garden, Dongcheng District"
          }
        }
      },
      {
        "role": "assistant",
        "content": "Please provide the contribution amount and default bill amount"
      },
      {
        "role": "user",
        "content": "The payment amount is 500 yuan, but my default bill amount is 1000 yuan."
      },
      {
        "role": "function call",
        "content": {
          "name": "ConvenientLiving.UtilityPayments.payBill",
          "arguments": {
            "service_type": "Gas",
            "address": "Unit 101, Unit 1, Building 1, Pearl Garden, Dongcheng District",
            "pay": 500
          }
        }
      }
    ],
    "multiple_tools": [
      {
        "name": "ConvenientLiving.FoodDelivery.searchRestaurantDiscounts",
        "description": "Enter keywords to search for deals",
        "parameters": {
          "type": "object",
          "properties": {
            "keyword": {
              "type": "string",
              "description": "Keywords related to offers"
            }
          },
          "required": [
            "keyword"
          ]
        }
      },
      {
        "name": "Finance.Funds.getFundSubscriptionFee",
        "description": "Query subscription fee information for designated funds",
        "parameters": {
          "type": "object",
          "properties": {
            "fund_name": {
              "type": "string",
              "description": "Fund name"
            },
            "fund_code": {
              "type": "string",
              "description": "Fund  Code"
            }
          },
          "required": [
            "fund_name",
            "fund_code"
          ]
        }
      },
      {
        "name": "Health.Fitness.cancelBookFitnessClass",
        "description": "Cancel scheduled fitness class",
        "parameters": {
          "type": "object",
          "properties": {
            "name": {
              "type": "string",
              "description": "Course Title"
            }
          },
          "required": [
            "name"
          ]
        }
      },
      {
        "name": "OfficeSoftware.Email.readUnreadMails",
        "description": "View unread messages from users",
        "parameters": {
          "type": "object",
          "properties": {},
          "required": []
        }
      },
      {
        "name": "ConvenientLiving.UtilityPayments.payBill",
        "description": "Payment of utilities, etc.",
        "parameters": {
          "type": "object",
          "properties": {
            "service_type": {
              "type": "string",
              "description": "Types of paid services, such as utilities, gas, etc."
            },
            "user_name": {
              "type": "string",
              "description": "User Name"
            },
            "pay": {
              "type": "float",
              "description": "Contribution Amount, Default Billing Amount"
            },
            "address": {
              "type": "string",
              "description": "user address, default address"
            }
          },
          "required": [
            "service_type",
            "user_name",
            "pay",
            "address"
          ]
        }
      }
    ],
    "single_tool": [
      {
        "name": "ConvenientLiving.UtilityPayments.payBill",
        "description": "Payment of utilities, etc.",
        "parameters": {
          "type": "object",
          "properties": {
            "service_type": {
              "type": "string",
              "description": "Types of paid services, such as utilities, gas, etc."
            },
            "user_name": {
              "type": "string",
              "description": "User Name"
            },
            "pay": {
              "type": "float",
              "description": "Contribution Amount, Default Billing Amount"
            },
            "address": {
              "type": "string",
              "description": "user address, default address"
            }
          },
          "required": [
            "service_type",
            "user_name",
            "pay",
            "address"
          ]
        }
      }
    ],
    "id": 685
  },
  {
    "messages": [
      {
        "role": "user",
        "content": "Unmute Xiaoming, Xiaohong, and Xiaoli"
      },
      {
        "role": "function call",
        "content": {
          "name": "OfficeSoftware.Conferencing.unmuteParticipants",
          "arguments": {
            "participant_list": "Xiaoming, Xiaohong, Xiaoli"
          }
        }
      },
      {
        "role": "assistant",
        "content": "Please provide the conference number"
      },
      {
        "role": "user",
        "content": "The meeting number is 87654321 and is ready."
      },
      {
        "role": "function call",
        "content": {
          "name": "OfficeSoftware.Conferencing.unmuteParticipants",
          "arguments": {
            "participant_list": "Xiaoming, Xiaohong, Xiaoli",
            "meeting_id": "87654321"
          }
        }
      },
      {
        "role": "assistant",
        "content": "What's the title of the meeting"
      },
      {
        "role": "user",
        "content": "It was wrong before. To unmute a list of people, the default is All People should be Tom,Jerry"
      },
      {
        "role": "function call",
        "content": {
          "name": "OfficeSoftware.Conferencing.unmuteParticipants",
          "arguments": {
            "participant_list": "Tom,Jerry",
            "meeting_id": "87654321"
          }
        }
      },
      {
        "role": "assistant",
        "content": "What's the title of the meeting"
      },
      {
        "role": "user",
        "content": "Product Innovation Workshop"
      },
      {
        "role": "function call",
        "content": {
          "name": "OfficeSoftware.Conferencing.unmuteParticipants",
          "arguments": {
            "participant_list": "Tom,Jerry",
            "meeting_id": "87654321",
            "title": "Product Innovation Workshop"
          }
        }
      }
    ],
    "multiple_tools": [
      {
        "name": "Navigation.TaxiCarRental.createCarRentalOrder",
        "description": "Book a rental car",
        "parameters": {
          "type": "object",
          "properties": {
            "location": {
              "type": "string",
              "description": "Pick-up from"
            },
            "start_time": {
              "type": "string",
              "description": "Start Time "
            },
            "end_time": {
              "type": "string",
              "description": "drop-off date"
            }
          },
          "required": [
            "location",
            "start_time",
            "end_time"
          ]
        }
      },
      {
        "name": "VideoPlayback.ShortVideos.favouriteShortVideo",
        "description": "Favorite or unfavorite a short video",
        "parameters": {
          "type": "object",
          "properties": {
            "name": {
              "type": "string",
              "description": "Short video name"
            },
            "favourite": {
              "type": "boolean",
              "description": "Favorite/Cancel"
            }
          },
          "required": [
            "name",
            "favourite"
          ]
        }
      },
      {
        "name": "UtilityTools.AIGC.aigcTextSummary",
        "description": "Compress longer text content, retaining only the main information and key points of the original text",
        "parameters": {
          "type": "object",
          "properties": {
            "text": {
              "type": "string",
              "description": "Long text content"
            }
          },
          "required": [
            "text"
          ]
        }
      },
      {
        "name": "OfficeSoftware.Conferencing.unmuteParticipants",
        "description": "Unmute participants",
        "parameters": {
          "type": "object",
          "properties": {
            "meeting_id": {
              "type": "string",
              "description": "Conference No."
            },
            "title": {
              "type": "string",
              "description": "Meeting Title:"
            },
            "time": {
              "type": "string",
              "description": "Meeting Date"
            },
            "participant_list": {
              "type": "string",
              "description": "To unmute a list of people, the default is All People"
            }
          },
          "required": [
            "meeting_id",
            "title",
            "time",
            "participant_list"
          ]
        }
      },
      {
        "name": "OfficeSoftware.Email.collectMail",
        "description": "Favorite a specified message",
        "parameters": {
          "type": "object",
          "properties": {
            "mail_title": {
              "type": "string",
              "description": "Title of the message to favorite"
            }
          },
          "required": [
            "mail_title"
          ]
        }
      }
    ],
    "single_tool": [
      {
        "name": "OfficeSoftware.Conferencing.unmuteParticipants",
        "description": "Unmute participants",
        "parameters": {
          "type": "object",
          "properties": {
            "meeting_id": {
              "type": "string",
              "description": "Conference No."
            },
            "title": {
              "type": "string",
              "description": "Meeting Title:"
            },
            "time": {
              "type": "string",
              "description": "Meeting Date"
            },
            "participant_list": {
              "type": "string",
              "description": "To unmute a list of people, the default is All People"
            }
          },
          "required": [
            "meeting_id",
            "title",
            "time",
            "participant_list"
          ]
        }
      }
    ],
    "id": 690
  },
  {
    "messages": [
      {
        "role": "user",
        "content": "Unmute everyone"
      },
      {
        "role": "function call",
        "content": {
          "name": "OfficeSoftware.Conferencing.unmuteParticipants",
          "arguments": {
            "participant_list": "entire personnel"
          }
        }
      },
      {
        "role": "assistant",
        "content": "Please provide the conference number"
      },
      {
        "role": "user",
        "content": "The meeting number is 12345678 and is ready."
      },
      {
        "role": "function call",
        "content": {
          "name": "OfficeSoftware.Conferencing.unmuteParticipants",
          "arguments": {
            "participant_list": "entire personnel",
            "meeting_id": "12345678"
          }
        }
      },
      {
        "role": "assistant",
        "content": "What's the title of the meeting"
      },
      {
        "role": "user",
        "content": "It was wrong before. To unmute a list of people, the default is All People should be Tom,Jerry"
      },
      {
        "role": "function call",
        "content": {
          "name": "OfficeSoftware.Conferencing.unmuteParticipants",
          "arguments": {
            "participant_list": "Tom,Jerry",
            "meeting_id": "12345678"
          }
        }
      },
      {
        "role": "assistant",
        "content": "What's the title of the meeting"
      },
      {
        "role": "user",
        "content": "Quarterly Sales Wrap-up Session"
      },
      {
        "role": "function call",
        "content": {
          "name": "OfficeSoftware.Conferencing.unmuteParticipants",
          "arguments": {
            "participant_list": "Tom,Jerry",
            "meeting_id": "12345678",
            "title": "Quarterly Sales Summary"
          }
        }
      }
    ],
    "multiple_tools": [
      {
        "name": "MusicRadio.RadioStations.radioUncollectRadio",
        "description": "Unfavorite station by station name",
        "parameters": {
          "type": "object",
          "properties": {
            "name": {
              "type": "string",
              "description": "Radio Name"
            }
          },
          "required": [
            "name"
          ]
        }
      },
      {
        "name": "OfficeSoftware.Conferencing.unmuteParticipants",
        "description": "Unmute participants",
        "parameters": {
          "type": "object",
          "properties": {
            "meeting_id": {
              "type": "string",
              "description": "Conference No."
            },
            "title": {
              "type": "string",
              "description": "Meeting Title:"
            },
            "time": {
              "type": "string",
              "description": "Meeting Date"
            },
            "participant_list": {
              "type": "string",
              "description": "To unmute a list of people, the default is All People"
            }
          },
          "required": [
            "meeting_id",
            "title",
            "time",
            "participant_list"
          ]
        }
      },
      {
        "name": "Navigation.MapNavigation.cancelCollectLocation",
        "description": "Unfavorite a place",
        "parameters": {
          "type": "object",
          "properties": {
            "location": {
              "type": "string",
              "description": "Favorite places to cancel"
            }
          },
          "required": [
            "location"
          ]
        }
      },
      {
        "name": "NewsMagazines.NewspapersMagazines.unsubscribeMagazine",
        "description": "Unsubscribe from magazines based on their name",
        "parameters": {
          "type": "object",
          "properties": {
            "name": {
              "type": "string",
              "description": "Magazine Name"
            }
          },
          "required": [
            "name"
          ]
        }
      },
      {
        "name": "Education.OnlineClasses.cancelCourse",
        "description": "Cancel Enrolled Courses",
        "parameters": {
          "type": "object",
          "properties": {
            "course_name": {
              "type": "string",
              "description": "Course Title"
            }
          },
          "required": [
            "course_name"
          ]
        }
      }
    ],
    "single_tool": [
      {
        "name": "OfficeSoftware.Conferencing.unmuteParticipants",
        "description": "Unmute participants",
        "parameters": {
          "type": "object",
          "properties": {
            "meeting_id": {
              "type": "string",
              "description": "Conference No."
            },
            "title": {
              "type": "string",
              "description": "Meeting Title:"
            },
            "time": {
              "type": "string",
              "description": "Meeting Date"
            },
            "participant_list": {
              "type": "string",
              "description": "To unmute a list of people, the default is All People"
            }
          },
          "required": [
            "meeting_id",
            "title",
            "time",
            "participant_list"
          ]
        }
      }
    ],
    "id": 691
  },
  {
    "messages": [
      {
        "role": "user",
        "content": "I need to change the moderator of the meeting to Li Ming"
      },
      {
        "role": "function call",
        "content": {
          "name": "OfficeSoftware.Conferencing.changeHost",
          "arguments": {
            "host": "Li Ming"
          }
        }
      },
      {
        "role": "assistant",
        "content": "What is the conference number"
      },
      {
        "role": "user",
        "content": "The meeting number is 87654321, but please make sure this is the correct number."
      },
      {
        "role": "function call",
        "content": {
          "name": "OfficeSoftware.Conferencing.changeHost",
          "arguments": {
            "host": "Li Ming",
            "meeting_id": "87654321"
          }
        }
      },
      {
        "role": "assistant",
        "content": "What's the title of the meeting"
      },
      {
        "role": "user",
        "content": "It was wrong before. Conference No. should be 456789"
      },
      {
        "role": "function call",
        "content": {
          "name": "OfficeSoftware.Conferencing.changeHost",
          "arguments": {
            "host": "Li Ming",
            "meeting_id": "456789"
          }
        }
      },
      {
        "role": "assistant",
        "content": "What's the title of the meeting"
      },
      {
        "role": "user",
        "content": "Product Innovation Discussion"
      },
      {
        "role": "function call",
        "content": {
          "name": "OfficeSoftware.Conferencing.changeHost",
          "arguments": {
            "host": "Li Ming",
            "meeting_id": "456789",
            "title": "Product Innovation Discussion"
          }
        }
      }
    ],
    "multiple_tools": [
      {
        "name": "Finance.Banking.transfer",
        "description": "Funds transfer between bank accounts",
        "parameters": {
          "type": "object",
          "properties": {
            "from_account": {
              "type": "string",
              "description": "Transfer-out account number"
            },
            "to_account": {
              "type": "string",
              "description": "Transfer-in account number"
            },
            "amount": {
              "type": "float",
              "description": "Transfer amount, unit (yuan)"
            }
          },
          "required": [
            "from_account",
            "to_account",
            "amount"
          ]
        }
      },
      {
        "name": "Navigation.TrainTickets.modifyTrainPassengerOrder",
        "description": "Modify rider information or seat type for a specific order, etc.",
        "parameters": {
          "type": "object",
          "properties": {
            "before_number": {
              "type": "string",
              "description": "Booked trips"
            },
            "before_name": {
              "type": "string",
              "description": "Original rider name"
            },
            "after_number": {
              "type": "string",
              "description": "Booked trips"
            },
            "after_name": {
              "type": "string",
              "description": "Rider's name"
            },
            "after_ride_date": {
              "type": "string",
              "description": "Date of trip"
            },
            "after_seat_type": {
              "type": "string",
              "description": "Seat Type"
            }
          },
          "required": [
            "before_number",
            "before_name",
            "after_number",
            "after_name",
            "after_ride_date",
            "after_seat_type"
          ]
        }
      },
      {
        "name": "SocialCommunication.Calling.modifyContact",
        "description": "Modify the information for the specified contact",
        "parameters": {
          "type": "object",
          "properties": {
            "contact_name": {
              "type": "string",
              "description": "Contact name to modify"
            },
            "new_contact_name": {
              "type": "string",
              "description": "New contact name (optional)"
            },
            "new_phone_number": {
              "type": "string",
              "description": "New contact phone number (optional)"
            },
            "phone_number": {
              "type": "string",
              "description": "Contact phone number to modify"
            }
          },
          "required": [
            "contact_name",
            "new_contact_name",
            "new_phone_number",
            "phone_number"
          ]
        }
      },
      {
        "name": "OfficeSoftware.Conferencing.changeHost",
        "description": "Change meeting moderator",
        "parameters": {
          "type": "object",
          "properties": {
            "meeting_id": {
              "type": "string",
              "description": "Conference No."
            },
            "title": {
              "type": "string",
              "description": "Meeting Title:"
            },
            "time": {
              "type": "string",
              "description": "Meeting Date"
            },
            "host": {
              "type": "string",
              "description": "Moderator Name"
            }
          },
          "required": [
            "meeting_id",
            "title",
            "time",
            "host"
          ]
        }
      },
      {
        "name": "Health.Fitness.modifyExercisePlan",
        "description": "Modify your fitness plan based on your fitness goals",
        "parameters": {
          "type": "object",
          "properties": {
            "old_goal": {
              "type": "string",
              "description": "Original fitness goal"
            },
            "new_goal": {
              "type": "string",
              "description": "New fitness goals"
            }
          },
          "required": [
            "old_goal",
            "new_goal"
          ]
        }
      }
    ],
    "single_tool": [
      {
        "name": "OfficeSoftware.Conferencing.changeHost",
        "description": "Change meeting moderator",
        "parameters": {
          "type": "object",
          "properties": {
            "meeting_id": {
              "type": "string",
              "description": "Conference No."
            },
            "title": {
              "type": "string",
              "description": "Meeting Title:"
            },
            "time": {
              "type": "string",
              "description": "Meeting Date"
            },
            "host": {
              "type": "string",
              "description": "Moderator Name"
            }
          },
          "required": [
            "meeting_id",
            "title",
            "time",
            "host"
          ]
        }
      }
    ],
    "id": 692
  },
  {
    "messages": [
      {
        "role": "user",
        "content": "Please update me, the meeting host should now be Zhang Wei"
      },
      {
        "role": "function call",
        "content": {
          "name": "OfficeSoftware.Conferencing.changeHost",
          "arguments": {
            "host": "Zhang Wei"
          }
        }
      },
      {
        "role": "assistant",
        "content": "What is the conference number"
      },
      {
        "role": "user",
        "content": "The meeting number is 12345678, but please make sure it is secure and not shared in an unsecured network environment."
      },
      {
        "role": "function call",
        "content": {
          "name": "OfficeSoftware.Conferencing.changeHost",
          "arguments": {
            "host": "Zhang Wei",
            "meeting_id": "12345678"
          }
        }
      },
      {
        "role": "assistant",
        "content": "What's the title of the meeting"
      },
      {
        "role": "user",
        "content": "It was wrong before. Conference No. should be 87654321"
      },
      {
        "role": "function call",
        "content": {
          "name": "OfficeSoftware.Conferencing.changeHost",
          "arguments": {
            "host": "Zhang Wei",
            "meeting_id": "87654321"
          }
        }
      },
      {
        "role": "assistant",
        "content": "What's the title of the meeting"
      },
      {
        "role": "user",
        "content": "Quarterly Sales Wrap-up Session"
      },
      {
        "role": "function call",
        "content": {
          "name": "OfficeSoftware.Conferencing.changeHost",
          "arguments": {
            "host": "Zhang Wei",
            "meeting_id": "87654321",
            "title": "Quarterly Sales Summary"
          }
        }
      }
    ],
    "multiple_tools": [
      {
        "name": "Navigation.FlightTickets.modifyFlightBooking",
        "description": "Changing the departure time of a booked flight is not supported for departure and destination changes",
        "parameters": {
          "type": "object",
          "properties": {
            "departure": {
              "type": "string",
              "description": "Origination"
            },
            "destination": {
              "type": "string",
              "description": "Reach ground"
            },
            "name": {
              "type": "string",
              "description": "Name of person who booked"
            },
            "time": {
              "type": "string",
              "description": "Flight duration before modification"
            },
            "alter_time": {
              "type": "string",
              "description": "Revised flight time"
            },
            "alter_seat": {
              "type": "string",
              "description": "Class Selection"
            }
          },
          "required": [
            "departure",
            "destination",
            "name",
            "time",
            "alter_time",
            "alter_seat"
          ]
        }
      },
      {
        "name": "SocialCommunication.Calling.modifyContact",
        "description": "Modify the information for the specified contact",
        "parameters": {
          "type": "object",
          "properties": {
            "contact_name": {
              "type": "string",
              "description": "Contact name to modify"
            },
            "new_contact_name": {
              "type": "string",
              "description": "New contact name (optional)"
            },
            "new_phone_number": {
              "type": "string",
              "description": "New contact phone number (optional)"
            },
            "phone_number": {
              "type": "string",
              "description": "Contact phone number to modify"
            }
          },
          "required": [
            "contact_name",
            "new_contact_name",
            "new_phone_number",
            "phone_number"
          ]
        }
      },
      {
        "name": "OnlineShopping.Mall.modifyDeliveryAddress",
        "description": "Change address based on consignee",
        "parameters": {
          "type": "object",
          "properties": {
            "receiver": {
              "type": "string",
              "description": "Receiver"
            }
          },
          "required": [
            "receiver"
          ]
        }
      },
      {
        "name": "Finance.Insurance.updateInsuranceCustomerInfo",
        "description": "Update user retention information",
        "parameters": {
          "type": "object",
          "properties": {
            "name": {
              "type": "string",
              "description": "Name"
            },
            "phone_number": {
              "type": "string",
              "description": "Phone No."
            },
            "email": {
              "type": "string",
              "description": "Email"
            }
          },
          "required": [
            "name",
            "phone_number",
            "email"
          ]
        }
      },
      {
        "name": "OfficeSoftware.Conferencing.changeHost",
        "description": "Change meeting moderator",
        "parameters": {
          "type": "object",
          "properties": {
            "meeting_id": {
              "type": "string",
              "description": "Conference No."
            },
            "title": {
              "type": "string",
              "description": "Meeting Title:"
            },
            "time": {
              "type": "string",
              "description": "Meeting Date"
            },
            "host": {
              "type": "string",
              "description": "Moderator Name"
            }
          },
          "required": [
            "meeting_id",
            "title",
            "time",
            "host"
          ]
        }
      }
    ],
    "single_tool": [
      {
        "name": "OfficeSoftware.Conferencing.changeHost",
        "description": "Change meeting moderator",
        "parameters": {
          "type": "object",
          "properties": {
            "meeting_id": {
              "type": "string",
              "description": "Conference No."
            },
            "title": {
              "type": "string",
              "description": "Meeting Title:"
            },
            "time": {
              "type": "string",
              "description": "Meeting Date"
            },
            "host": {
              "type": "string",
              "description": "Moderator Name"
            }
          },
          "required": [
            "meeting_id",
            "title",
            "time",
            "host"
          ]
        }
      }
    ],
    "id": 693
  },
  {
    "messages": [
      {
        "role": "user",
        "content": "Add Zhang San, Li Si and Wang Wu as participants in the meeting"
      },
      {
        "role": "function call",
        "content": {
          "name": "OfficeSoftware.Conferencing.addParticipants",
          "arguments": {
            "participant_list": "Zhang San, Li Si, Wang Wu"
          }
        }
      },
      {
        "role": "assistant",
        "content": "What is the conference number"
      },
      {
        "role": "user",
        "content": "The conference number is 789012."
      },
      {
        "role": "function call",
        "content": {
          "name": "OfficeSoftware.Conferencing.addParticipants",
          "arguments": {
            "participant_list": "Zhang San, Li Si, Wang Wu",
            "meeting_id": "789012"
          }
        }
      },
      {
        "role": "assistant",
        "content": "What's the title of the meeting"
      },
      {
        "role": "user",
        "content": "It was wrong before. Add People List should be Manager Chen, Director Lin"
      },
      {
        "role": "function call",
        "content": {
          "name": "OfficeSoftware.Conferencing.addParticipants",
          "arguments": {
            "participant_list": "Manager Chen, Director Lin",
            "meeting_id": "789012"
          }
        }
      },
      {
        "role": "assistant",
        "content": "What's the title of the meeting"
      },
      {
        "role": "user",
        "content": "Market Strategy Meeting"
      },
      {
        "role": "function call",
        "content": {
          "name": "OfficeSoftware.Conferencing.addParticipants",
          "arguments": {
            "participant_list": "Manager Chen, Director Lin",
            "meeting_id": "789012",
            "title": "Market Strategy Meeting"
          }
        }
      }
    ],
    "multiple_tools": [
      {
        "name": "OnlineShopping.ExpressDelivery.addAddress",
        "description": "Add the specified address to the address book",
        "parameters": {
          "type": "object",
          "properties": {
            "name": {
              "type": "string",
              "description": "Name"
            },
            "phone": {
              "type": "string",
              "description": "Phone No."
            },
            "address": {
              "type": "string",
              "description": "Address"
            }
          },
          "required": [
            "name",
            "phone",
            "address"
          ]
        }
      },
      {
        "name": "Navigation.MapNavigation.addCommonAddress",
        "description": "Add usual address",
        "parameters": {
          "type": "object",
          "properties": {
            "address": {
              "type": "string",
              "description": "Primary address string to add"
            }
          },
          "required": [
            "address"
          ]
        }
      },
      {
        "name": "UtilityTools.AlarmClock.addWorldclock",
        "description": "Add world clock for selected cities",
        "parameters": {
          "type": "object",
          "properties": {
            "city": {
              "type": "string",
              "description": "World address added"
            }
          },
          "required": [
            "city"
          ]
        }
      },
      {
        "name": "Navigation.MapNavigation.addRemakeToCommonAddress",
        "description": "Add a note to your favorite address",
        "parameters": {
          "type": "object",
          "properties": {
            "address": {
              "type": "string",
              "description": "Primary address for note"
            },
            "remake": {
              "type": "string",
              "description": "Comment Message Content"
            }
          },
          "required": [
            "address",
            "remake"
          ]
        }
      },
      {
        "name": "OfficeSoftware.Conferencing.addParticipants",
        "description": "Add participants to the meeting",
        "parameters": {
          "type": "object",
          "properties": {
            "meeting_id": {
              "type": "string",
              "description": "Conference No."
            },
            "title": {
              "type": "string",
              "description": "Meeting Title:"
            },
            "time": {
              "type": "string",
              "description": "Meeting Date"
            },
            "participant_list": {
              "type": "string",
              "description": "Add People List"
            }
          },
          "required": [
            "meeting_id",
            "title",
            "time",
            "participant_list"
          ]
        }
      }
    ],
    "single_tool": [
      {
        "name": "OfficeSoftware.Conferencing.addParticipants",
        "description": "Add participants to the meeting",
        "parameters": {
          "type": "object",
          "properties": {
            "meeting_id": {
              "type": "string",
              "description": "Conference No."
            },
            "title": {
              "type": "string",
              "description": "Meeting Title:"
            },
            "time": {
              "type": "string",
              "description": "Meeting Date"
            },
            "participant_list": {
              "type": "string",
              "description": "Add People List"
            }
          },
          "required": [
            "meeting_id",
            "title",
            "time",
            "participant_list"
          ]
        }
      }
    ],
    "id": 694
  },
  {
    "messages": [
      {
        "role": "user",
        "content": "Please remove Zhang San and Li Si from the meeting list"
      },
      {
        "role": "function call",
        "content": {
          "name": "OfficeSoftware.Conferencing.removeParticipants",
          "arguments": {
            "participant_list": "Zhang San, Li Si"
          }
        }
      },
      {
        "role": "assistant",
        "content": "What is the conference number"
      },
      {
        "role": "user",
        "content": "The conference number is 789012."
      },
      {
        "role": "function call",
        "content": {
          "name": "OfficeSoftware.Conferencing.removeParticipants",
          "arguments": {
            "participant_list": "Zhang San, Li Si",
            "meeting_id": "789012"
          }
        }
      },
      {
        "role": "assistant",
        "content": "What's the title of the meeting"
      },
      {
        "role": "user",
        "content": "It was wrong before. Conference No. should be 789"
      },
      {
        "role": "function call",
        "content": {
          "name": "OfficeSoftware.Conferencing.removeParticipants",
          "arguments": {
            "participant_list": "Zhang San, Li Si",
            "meeting_id": "789"
          }
        }
      },
      {
        "role": "assistant",
        "content": "What's the title of the meeting"
      },
      {
        "role": "user",
        "content": "Financial wrap-up session"
      },
      {
        "role": "function call",
        "content": {
          "name": "OfficeSoftware.Conferencing.removeParticipants",
          "arguments": {
            "participant_list": "Zhang San, Li Si",
            "meeting_id": "789",
            "title": "Financial wrap-up session"
          }
        }
      }
    ],
    "multiple_tools": [
      {
        "name": "OfficeSoftware.CloudStorage.netdiskDeleteAddresbookFriend",
        "description": "Delete Friend in Cloud Drive",
        "parameters": {
          "type": "object",
          "properties": {
            "name": {
              "type": "string",
              "description": "Your Friends Name"
            }
          },
          "required": [
            "name"
          ]
        }
      },
      {
        "name": "SocialCommunication.InstantMessaging.removeContact",
        "description": "Remove the specified contact",
        "parameters": {
          "type": "object",
          "properties": {
            "contact_name": {
              "type": "string",
              "description": "Contact name to remove, required"
            }
          },
          "required": [
            "contact_name"
          ]
        }
      },
      {
        "name": "OfficeSoftware.Conferencing.removeParticipants",
        "description": "Remove participants from the meeting",
        "parameters": {
          "type": "object",
          "properties": {
            "meeting_id": {
              "type": "string",
              "description": "Conference No."
            },
            "title": {
              "type": "string",
              "description": "Meeting Title:"
            },
            "time": {
              "type": "string",
              "description": "Meeting Date"
            },
            "participant_list": {
              "type": "string",
              "description": "Remove people list"
            }
          },
          "required": [
            "meeting_id",
            "title",
            "time",
            "participant_list"
          ]
        }
      },
      {
        "name": "UtilityTools.Reading.deleteReadingBookFromShelf",
        "description": "Remove books from shelves",
        "parameters": {
          "type": "object",
          "properties": {
            "book_name": {
              "type": "string",
              "description": "Book Name"
            },
            "book_author": {
              "type": "string",
              "description": "Author name"
            }
          },
          "required": [
            "book_name",
            "book_author"
          ]
        }
      },
      {
        "name": "SocialCommunication.Calling.deleteContact",
        "description": "Delete the specified contact",
        "parameters": {
          "type": "object",
          "properties": {
            "contact_name": {
              "type": "string",
              "description": "Name of the contact to be deleted"
            }
          },
          "required": [
            "contact_name"
          ]
        }
      }
    ],
    "single_tool": [
      {
        "name": "OfficeSoftware.Conferencing.removeParticipants",
        "description": "Remove participants from the meeting",
        "parameters": {
          "type": "object",
          "properties": {
            "meeting_id": {
              "type": "string",
              "description": "Conference No."
            },
            "title": {
              "type": "string",
              "description": "Meeting Title:"
            },
            "time": {
              "type": "string",
              "description": "Meeting Date"
            },
            "participant_list": {
              "type": "string",
              "description": "Remove people list"
            }
          },
          "required": [
            "meeting_id",
            "title",
            "time",
            "participant_list"
          ]
        }
      }
    ],
    "id": 695
  },
  {
    "messages": [
      {
        "role": "user",
        "content": "Show me the details of Dr. Zhang Wei"
      },
      {
        "role": "function call",
        "content": {
          "name": "Health.MedicalServices.viewDoctorDetails",
          "arguments": {
            "doctor_name": "Zhang Wei"
          }
        }
      },
      {
        "role": "assistant",
        "content": "Please provide the name of the hospital"
      },
      {
        "role": "user",
        "content": "I am visiting Changhai Hospital and need some help."
      },
      {
        "role": "function call",
        "content": {
          "name": "Health.MedicalServices.viewDoctorDetails",
          "arguments": {
            "doctor_name": "Zhang Wei",
            "hospital_name": "Changhai Hospital"
          }
        }
      },
      {
        "role": "assistant",
        "content": "Please provide the name of the department where the doctor is located"
      },
      {
        "role": "user",
        "content": "It was wrong before. Doctor Name should be Physician Wang"
      },
      {
        "role": "function call",
        "content": {
          "name": "Health.MedicalServices.viewDoctorDetails",
          "arguments": {
            "doctor_name": "Physician Wang",
            "hospital_name": "Changhai Hospital"
          }
        }
      },
      {
        "role": "assistant",
        "content": "Please provide the name of the department where the doctor is located"
      },
      {
        "role": "user",
        "content": "Doctors are in gastroenterology."
      },
      {
        "role": "function call",
        "content": {
          "name": "Health.MedicalServices.viewDoctorDetails",
          "arguments": {
            "doctor_name": "Physician Wang",
            "hospital_name": "Changhai Hospital",
            "department": "Department of Gastroenterology"
          }
        }
      }
    ],
    "multiple_tools": [
      {
        "name": "Finance.Funds.getFundManager",
        "description": "Specify fund manager information based on manager name and fund code query",
        "parameters": {
          "type": "object",
          "properties": {
            "manager_name": {
              "type": "string",
              "description": "Name of Fund Manager"
            },
            "fund_code": {
              "type": "string",
              "description": "Fund  Code"
            }
          },
          "required": [
            "manager_name",
            "fund_code"
          ]
        }
      },
      {
        "name": "Health.MedicalServices.viewDoctorDetails",
        "description": "View details for assigned physician",
        "parameters": {
          "type": "object",
          "properties": {
            "hospital_name": {
              "type": "string",
              "description": "Hospital Name"
            },
            "department": {
              "type": "string",
              "description": "Department"
            },
            "location": {
              "type": "string",
              "description": "Area"
            },
            "doctor_name": {
              "type": "string",
              "description": "Doctor Name"
            }
          },
          "required": [
            "hospital_name",
            "department",
            "location",
            "doctor_name"
          ]
        }
      },
      {
        "name": "MusicRadio.OnlineMusic.getMusicianInfo",
        "description": "Get musician information by musician name",
        "parameters": {
          "type": "object",
          "properties": {
            "name": {
              "type": "string",
              "description": "Artist Name"
            }
          },
          "required": [
            "name"
          ]
        }
      },
      {
        "name": "Education.OnlineClasses.viewTeacherDetail",
        "description": "View teacher's profile",
        "parameters": {
          "type": "object",
          "properties": {
            "teacher_name": {
              "type": "string",
              "description": "Educator name:"
            }
          },
          "required": [
            "teacher_name"
          ]
        }
      },
      {
        "name": "ConvenientLiving.JobRecruitment.getJobEmployerInfo",
        "description": "Get employer details based on company name",
        "parameters": {
          "type": "object",
          "properties": {
            "company_name": {
              "type": "string",
              "description": "Company name"
            }
          },
          "required": [
            "company_name"
          ]
        }
      }
    ],
    "single_tool": [
      {
        "name": "Health.MedicalServices.viewDoctorDetails",
        "description": "View details for assigned physician",
        "parameters": {
          "type": "object",
          "properties": {
            "hospital_name": {
              "type": "string",
              "description": "Hospital Name"
            },
            "department": {
              "type": "string",
              "description": "Department"
            },
            "location": {
              "type": "string",
              "description": "Area"
            },
            "doctor_name": {
              "type": "string",
              "description": "Doctor Name"
            }
          },
          "required": [
            "hospital_name",
            "department",
            "location",
            "doctor_name"
          ]
        }
      }
    ],
    "id": 702
  },
  {
    "messages": [
      {
        "role": "user",
        "content": "I'd like to know more about Dr. Li Hua"
      },
      {
        "role": "function call",
        "content": {
          "name": "Health.MedicalServices.viewDoctorDetails",
          "arguments": {
            "doctor_name": "Li Hua"
          }
        }
      },
      {
        "role": "assistant",
        "content": "Please provide the name of the hospital"
      },
      {
        "role": "user",
        "content": "Peking Union Medical College Hospital"
      },
      {
        "role": "function call",
        "content": {
          "name": "Health.MedicalServices.viewDoctorDetails",
          "arguments": {
            "doctor_name": "Li Hua",
            "hospital_name": "Peking Union Medical College Hospital"
          }
        }
      },
      {
        "role": "assistant",
        "content": "Please provide the name of the department where the doctor is located"
      },
      {
        "role": "user",
        "content": "It was wrong before. Doctor Name should be Physician Wang"
      },
      {
        "role": "function call",
        "content": {
          "name": "Health.MedicalServices.viewDoctorDetails",
          "arguments": {
            "doctor_name": "Physician Wang",
            "hospital_name": "Peking Union Medical College Hospital"
          }
        }
      },
      {
        "role": "assistant",
        "content": "Please provide the name of the department where the doctor is located"
      },
      {
        "role": "user",
        "content": "CARDIAC SURGERY"
      },
      {
        "role": "function call",
        "content": {
          "name": "Health.MedicalServices.viewDoctorDetails",
          "arguments": {
            "doctor_name": "Physician Wang",
            "hospital_name": "Peking Union Medical College Hospital",
            "department": "CARDIAC SURGERY"
          }
        }
      }
    ],
    "multiple_tools": [
      {
        "name": "Finance.Funds.getFundManager",
        "description": "Specify fund manager information based on manager name and fund code query",
        "parameters": {
          "type": "object",
          "properties": {
            "manager_name": {
              "type": "string",
              "description": "Name of Fund Manager"
            },
            "fund_code": {
              "type": "string",
              "description": "Fund  Code"
            }
          },
          "required": [
            "manager_name",
            "fund_code"
          ]
        }
      },
      {
        "name": "ConvenientLiving.JobRecruitment.getJobEmployerInfo",
        "description": "Get employer details based on company name",
        "parameters": {
          "type": "object",
          "properties": {
            "company_name": {
              "type": "string",
              "description": "Company name"
            }
          },
          "required": [
            "company_name"
          ]
        }
      },
      {
        "name": "MusicRadio.OnlineMusic.getMusicianInfo",
        "description": "Get musician information by musician name",
        "parameters": {
          "type": "object",
          "properties": {
            "name": {
              "type": "string",
              "description": "Artist Name"
            }
          },
          "required": [
            "name"
          ]
        }
      },
      {
        "name": "Health.MedicalServices.viewDoctorDetails",
        "description": "View details for assigned physician",
        "parameters": {
          "type": "object",
          "properties": {
            "hospital_name": {
              "type": "string",
              "description": "Hospital Name"
            },
            "department": {
              "type": "string",
              "description": "Department"
            },
            "location": {
              "type": "string",
              "description": "Area"
            },
            "doctor_name": {
              "type": "string",
              "description": "Doctor Name"
            }
          },
          "required": [
            "hospital_name",
            "department",
            "location",
            "doctor_name"
          ]
        }
      },
      {
        "name": "Education.OnlineClasses.viewTeacherDetail",
        "description": "View teacher's profile",
        "parameters": {
          "type": "object",
          "properties": {
            "teacher_name": {
              "type": "string",
              "description": "Educator name:"
            }
          },
          "required": [
            "teacher_name"
          ]
        }
      }
    ],
    "single_tool": [
      {
        "name": "Health.MedicalServices.viewDoctorDetails",
        "description": "View details for assigned physician",
        "parameters": {
          "type": "object",
          "properties": {
            "hospital_name": {
              "type": "string",
              "description": "Hospital Name"
            },
            "department": {
              "type": "string",
              "description": "Department"
            },
            "location": {
              "type": "string",
              "description": "Area"
            },
            "doctor_name": {
              "type": "string",
              "description": "Doctor Name"
            }
          },
          "required": [
            "hospital_name",
            "department",
            "location",
            "doctor_name"
          ]
        }
      }
    ],
    "id": 703
  },
  {
    "messages": [
      {
        "role": "user",
        "content": "I would like to comment. The doctor is very professional and has a good attitude. I am very satisfied with the experience of this visit."
      },
      {
        "role": "function call",
        "content": {
          "name": "Health.MedicalServices.rateDoctor",
          "arguments": {
            "content": "The doctor is very professional and has a good attitude. I am very satisfied with the experience of this visit."
          }
        }
      },
      {
        "role": "assistant",
        "content": "Please provide the name of the hospital you are visiting"
      },
      {
        "role": "user",
        "content": "I visited Peking Union Medical College Hospital."
      },
      {
        "role": "function call",
        "content": {
          "name": "Health.MedicalServices.rateDoctor",
          "arguments": {
            "content": "The doctor is very professional and has a good attitude. I am very satisfied with the experience of this visit.",
            "hospital_name": "Peking Union Medical College Hospital"
          }
        }
      },
      {
        "role": "assistant",
        "content": "Please provide the name of the department you are visiting"
      },
      {
        "role": "user",
        "content": "It was wrong before. Review Content should be The treatment worked well, but the waiting time was a bit long and hopefully could be improved."
      },
      {
        "role": "function call",
        "content": {
          "name": "Health.MedicalServices.rateDoctor",
          "arguments": {
            "content": "The treatment worked well, but the waiting time was a bit long and hopefully could be improved.",
            "hospital_name": "Peking Union Medical College Hospital"
          }
        }
      },
      {
        "role": "assistant",
        "content": "Please provide the name of the department you are visiting"
      },
      {
        "role": "user",
        "content": "I need to make an appointment with a cardiologist."
      },
      {
        "role": "function call",
        "content": {
          "name": "Health.MedicalServices.rateDoctor",
          "arguments": {
            "content": "The treatment worked well, but the waiting time was a bit long and hopefully could be improved.",
            "hospital_name": "Peking Union Medical College Hospital",
            "department": "Department of Cardiology"
          }
        }
      }
    ],
    "multiple_tools": [
      {
        "name": "OfficeSoftware.Documents.addDocumentComment",
        "description": "Add a comment for the specified document",
        "parameters": {
          "type": "object",
          "properties": {
            "document_name": {
              "type": "string",
              "description": "Document name to add comment, required"
            },
            "comment_content": {
              "type": "string",
              "description": "Comment (required)"
            }
          },
          "required": [
            "document_name",
            "comment_content"
          ]
        }
      },
      {
        "name": "Health.MedicalServices.rateDoctor",
        "description": "Evaluate visiting physicians",
        "parameters": {
          "type": "object",
          "properties": {
            "hospital_name": {
              "type": "string",
              "description": "Hospital Name"
            },
            "department": {
              "type": "string",
              "description": "Department"
            },
            "content": {
              "type": "string",
              "description": "Review Content"
            },
            "doctor_name": {
              "type": "string",
              "description": "Doctor Name"
            }
          },
          "required": [
            "hospital_name",
            "department",
            "content",
            "doctor_name"
          ]
        }
      },
      {
        "name": "ConvenientLiving.GovernmentServices.createPolicyFeedback",
        "description": "Submit feedback on State Council policy",
        "parameters": {
          "type": "object",
          "properties": {
            "policy_name": {
              "type": "string",
              "description": "Name of the policy being fed back"
            }
          },
          "required": [
            "policy_name"
          ]
        }
      },
      {
        "name": "NewsMagazines.News.postNewsComment",
        "description": "Post user comments under specified news",
        "parameters": {
          "type": "object",
          "properties": {
            "news_name": {
              "type": "string",
              "description": "News Name"
            },
            "comment_content": {
              "type": "string",
              "description": "Comments"
            }
          },
          "required": [
            "news_name",
            "comment_content"
          ]
        }
      },
      {
        "name": "SocialCommunication.SocialMedia.mediumComment",
        "description": "Comment on a given activity",
        "parameters": {
          "type": "object",
          "properties": {
            "medium_name": {
              "type": "string",
              "description": "Media name"
            },
            "correlation": {
              "type": "string",
              "description": "Dynamic Related Content"
            },
            "publisher": {
              "type": "string",
              "description": "Posted by/publisher?"
            },
            "publish_time": {
              "type": "string",
              "description": "Release Date"
            }
          },
          "required": [
            "medium_name",
            "correlation",
            "publisher",
            "publish_time"
          ]
        }
      }
    ],
    "single_tool": [
      {
        "name": "Health.MedicalServices.rateDoctor",
        "description": "Evaluate visiting physicians",
        "parameters": {
          "type": "object",
          "properties": {
            "hospital_name": {
              "type": "string",
              "description": "Hospital Name"
            },
            "department": {
              "type": "string",
              "description": "Department"
            },
            "content": {
              "type": "string",
              "description": "Review Content"
            },
            "doctor_name": {
              "type": "string",
              "description": "Doctor Name"
            }
          },
          "required": [
            "hospital_name",
            "department",
            "content",
            "doctor_name"
          ]
        }
      }
    ],
    "id": 704
  },
  {
    "messages": [
      {
        "role": "user",
        "content": "I want to increase the video playback speed to 1.5x so I can watch it faster"
      },
      {
        "role": "function call",
        "content": {
          "name": "Photography.VideoEditing.videoEditAdjust",
          "arguments": {
            "speed": 1.5
          }
        }
      },
      {
        "role": "assistant",
        "content": "Please provide a name or path for the video"
      },
      {
        "role": "user",
        "content": "The name of the video is holiday_video.mp4"
      },
      {
        "role": "function call",
        "content": {
          "name": "Photography.VideoEditing.videoEditAdjust",
          "arguments": {
            "speed": 1.5,
            "name_or_path": "holiday_video.mp4"
          }
        }
      },
      {
        "role": "assistant",
        "content": "Please provide video brightness value range is -100 to 100 saturation value contrast value"
      },
      {
        "role": "user",
        "content": "It was wrong before. Video Playback Zoom Value should be 0.75"
      },
      {
        "role": "function call",
        "content": {
          "name": "Photography.VideoEditing.videoEditAdjust",
          "arguments": {
            "speed": 0.75,
            "name_or_path": "holiday_video.mp4"
          }
        }
      },
      {
        "role": "assistant",
        "content": "Please provide video brightness value range is -100 to 100 saturation value contrast value"
      },
      {
        "role": "user",
        "content": "The video has a brightness value of -15"
      },
      {
        "role": "function call",
        "content": {
          "name": "Photography.VideoEditing.videoEditAdjust",
          "arguments": {
            "speed": 0.75,
            "name_or_path": "holiday_video.mp4",
            "brightness": -15
          }
        }
      },
      {
        "role": "assistant",
        "content": "Please provide video saturation value and contrast value Saturation value range is -100 to 100 Contrast value range is -100 to 100"
      },
      {
        "role": "user",
        "content": "The video has a saturation value of 5 and a contrast value of 10."
      },
      {
        "role": "function call",
        "content": {
          "name": "Photography.VideoEditing.videoEditAdjust",
          "arguments": {
            "speed": 0.75,
            "name_or_path": "holiday_video.mp4",
            "brightness": -15,
            "saturation": 5
          }
        }
      },
      {
        "role": "assistant",
        "content": "What is the contrast value - 100 to 100"
      },
      {
        "role": "user",
        "content": "The contrast value is 10."
      },
      {
        "role": "function call",
        "content": {
          "name": "Photography.VideoEditing.videoEditAdjust",
          "arguments": {
            "speed": 0.75,
            "name_or_path": "holiday_video.mp4",
            "brightness": -15,
            "saturation": 5,
            "contrast": 10
          }
        }
      }
    ],
    "multiple_tools": [
      {
        "name": "Photography.VideoEditing.videoEditAdjust",
        "description": "Adjust the video, including brightness, saturation, contrast, playback speed, etc.",
        "parameters": {
          "type": "object",
          "properties": {
            "name_or_path": {
              "type": "string",
              "description": "The name or path of the video"
            },
            "brightness": {
              "type": "float",
              "description": "Brightness value, -100 to 100"
            },
            "saturation": {
              "type": "float",
              "description": "Saturation value, -100 to 100"
            },
            "contrast": {
              "type": "float",
              "description": "Contrast value, -100 to 100"
            },
            "exposure": {
              "type": "float",
              "description": "Exposure value, -100 to 100"
            },
            "speed": {
              "type": "float",
              "description": "Video Playback Zoom Value"
            }
          },
          "required": [
            "name_or_path",
            "brightness",
            "saturation",
            "contrast",
            "exposure",
            "speed"
          ]
        }
      },
      {
        "name": "SocialCommunication.Calling.quickPhoneCallReply",
        "description": "Set up some common response statements ahead of time, or set them up individually for a contact to send quickly during a call",
        "parameters": {
          "type": "object",
          "properties": {
            "reply_content": {
              "type": "string",
              "description": "Quick replies"
            },
            "contact_name": {
              "type": "string",
              "description": "Contact person"
            }
          },
          "required": [
            "reply_content",
            "contact_name"
          ]
        }
      },
      {
        "name": "Finance.Payment.viewPayRefundHistory",
        "description": "View refund history on your account",
        "parameters": {
          "type": "object",
          "properties": {
            "start_date": {
              "type": "string",
              "description": "Start date"
            },
            "end_date": {
              "type": "string",
              "description": "结束日期"
            }
          },
          "required": [
            "start_date",
            "end_date"
          ]
        }
      },
      {
        "name": "SystemTools.SystemOptimization.speedUpPhonePerformance",
        "description": "Optimize your phone's system settings to run faster",
        "parameters": {
          "type": "object",
          "properties": {},
          "required": []
        }
      },
      {
        "name": "SystemTools.SystemSettings.setSystemBrightness",
        "description": "Set the brightness of your phone's screen",
        "parameters": {
          "type": "object",
          "properties": {
            "brightness_level": {
              "type": "integer",
              "description": "Brightness level, 0 to 100"
            }
          },
          "required": [
            "brightness_level"
          ]
        }
      }
    ],
    "single_tool": [
      {
        "name": "Photography.VideoEditing.videoEditAdjust",
        "description": "Adjust the video, including brightness, saturation, contrast, playback speed, etc.",
        "parameters": {
          "type": "object",
          "properties": {
            "name_or_path": {
              "type": "string",
              "description": "The name or path of the video"
            },
            "brightness": {
              "type": "float",
              "description": "Brightness value, -100 to 100"
            },
            "saturation": {
              "type": "float",
              "description": "Saturation value, -100 to 100"
            },
            "contrast": {
              "type": "float",
              "description": "Contrast value, -100 to 100"
            },
            "exposure": {
              "type": "float",
              "description": "Exposure value, -100 to 100"
            },
            "speed": {
              "type": "float",
              "description": "Video Playback Zoom Value"
            }
          },
          "required": [
            "name_or_path",
            "brightness",
            "saturation",
            "contrast",
            "exposure",
            "speed"
          ]
        }
      }
    ],
    "id": 720
  },
  {
    "messages": [
      {
        "role": "user",
        "content": "I want to find travel packages to Bali and see what I can recommend"
      },
      {
        "role": "function call",
        "content": {
          "name": "Travel.ItineraryServices.searchTravelPackage",
          "arguments": {
            "destination": "Bali"
          }
        }
      },
      {
        "role": "assistant",
        "content": "What is your departure time and desired price range"
      },
      {
        "role": "user",
        "content": "My departure place is Wuhan, I plan to leave tomorrow, and the price is expected to be controlled within 500 yuan."
      },
      {
        "role": "function call",
        "content": {
          "name": "Travel.ItineraryServices.searchTravelPackage",
          "arguments": {
            "destination": "Bali",
            "origin": "Wuhan"
          }
        }
      },
      {
        "role": "assistant",
        "content": "What is the start date of your travel plans and what is the price budget"
      },
      {
        "role": "user",
        "content": "It was wrong before. destination should be Sanya Railway Station"
      },
      {
        "role": "function call",
        "content": {
          "name": "Travel.ItineraryServices.searchTravelPackage",
          "arguments": {
            "destination": "Sanya Railway Station",
            "origin": "Wuhan"
          }
        }
      },
      {
        "role": "assistant",
        "content": "What is the start date of your travel plans and what is the price budget"
      },
      {
        "role": "user",
        "content": "My travel plans start on November 5th, and the budget is about 5,000 yuan."
      },
      {
        "role": "function call",
        "content": {
          "name": "Travel.ItineraryServices.searchTravelPackage",
          "arguments": {
            "destination": "Sanya Railway Station",
            "origin": "Wuhan",
            "start_time": "November 5th"
          }
        }
      },
      {
        "role": "assistant",
        "content": "When is your trip end date and what is the price budget"
      },
      {
        "role": "user",
        "content": "My travel end date is November 12th and the budget is about 5000 yuan."
      },
      {
        "role": "function call",
        "content": {
          "name": "Travel.ItineraryServices.searchTravelPackage",
          "arguments": {
            "destination": "Sanya Railway Station",
            "origin": "Wuhan",
            "start_time": "November 5th",
            "end_time": "November 12th"
          }
        }
      },
      {
        "role": "assistant",
        "content": "What is the unit price of your budget?"
      },
      {
        "role": "user",
        "content": "My budget price is 6500.0 yuan."
      },
      {
        "role": "function call",
        "content": {
          "name": "Travel.ItineraryServices.searchTravelPackage",
          "arguments": {
            "destination": "Sanya Railway Station",
            "origin": "Wuhan",
            "start_time": "November 5th",
            "end_time": "November 12th",
            "price": 6500.0
          }
        }
      }
    ],
    "multiple_tools": [
      {
        "name": "Education.ChildrenEducation.searchChildGame",
        "description": "Search for kid-friendly games",
        "parameters": {
          "type": "object",
          "properties": {
            "game_type": {
              "type": "string",
              "description": "Types of games, such as puzzle games, adventure games"
            }
          },
          "required": [
            "game_type"
          ]
        }
      },
      {
        "name": "MusicRadio.RadioStations.radioSearchPlaylist",
        "description": "Search Playlists",
        "parameters": {
          "type": "object",
          "properties": {
            "keyword": {
              "type": "string",
              "description": "category"
            }
          },
          "required": [
            "keyword"
          ]
        }
      },
      {
        "name": "Education.ChildrenEducation.searchChildCraft",
        "description": "Search Kids Craft Tutorials",
        "parameters": {
          "type": "object",
          "properties": {
            "craft_type": {
              "type": "string",
              "description": "Manual types such as origami, paper-cut"
            }
          },
          "required": [
            "craft_type"
          ]
        }
      },
      {
        "name": "Finance.Funds.searchFund",
        "description": "Search credits",
        "parameters": {
          "type": "object",
          "properties": {
            "keyword": {
              "type": "string",
              "description": "Fund name, keywords"
            },
            "sector": {
              "type": "string",
              "description": "The name of the fund sector, the default is the main board"
            }
          },
          "required": [
            "keyword",
            "sector"
          ]
        }
      },
      {
        "name": "Travel.ItineraryServices.searchTravelPackage",
        "description": "Search travel packages by destination, time, price, and more",
        "parameters": {
          "type": "object",
          "properties": {
            "origin": {
              "type": "string",
              "description": "Origination"
            },
            "destination": {
              "type": "string",
              "description": "destination"
            },
            "start_time": {
              "type": "string",
              "description": "Start date"
            },
            "end_time": {
              "type": "string",
              "description": "End Date"
            },
            "price": {
              "type": "float",
              "description": "Price, unit (yuan)"
            }
          },
          "required": [
            "origin",
            "destination",
            "start_time",
            "end_time",
            "price"
          ]
        }
      }
    ],
    "single_tool": [
      {
        "name": "Travel.ItineraryServices.searchTravelPackage",
        "description": "Search travel packages by destination, time, price, and more",
        "parameters": {
          "type": "object",
          "properties": {
            "origin": {
              "type": "string",
              "description": "Origination"
            },
            "destination": {
              "type": "string",
              "description": "destination"
            },
            "start_time": {
              "type": "string",
              "description": "Start date"
            },
            "end_time": {
              "type": "string",
              "description": "End Date"
            },
            "price": {
              "type": "float",
              "description": "Price, unit (yuan)"
            }
          },
          "required": [
            "origin",
            "destination",
            "start_time",
            "end_time",
            "price"
          ]
        }
      }
    ],
    "id": 730
  },
  {
    "messages": [
      {
        "role": "user",
        "content": "Find out what travel packages are available in Kyoto"
      },
      {
        "role": "function call",
        "content": {
          "name": "Travel.ItineraryServices.searchTravelPackage",
          "arguments": {
            "destination": "Kiyoto"
          }
        }
      },
      {
        "role": "assistant",
        "content": "What is your departure time and budget price?"
      },
      {
        "role": "user",
        "content": "I plan to depart from Chengdu, the departure time is next Friday, and the budget price is about 500 yuan."
      },
      {
        "role": "function call",
        "content": {
          "name": "Travel.ItineraryServices.searchTravelPackage",
          "arguments": {
            "destination": "Kiyoto",
            "origin": "Chengdu"
          }
        }
      },
      {
        "role": "assistant",
        "content": "What is the start date of your trip and what is the price budget?"
      },
      {
        "role": "user",
        "content": "It was wrong before. destination should be Sanya Railway Station"
      },
      {
        "role": "function call",
        "content": {
          "name": "Travel.ItineraryServices.searchTravelPackage",
          "arguments": {
            "destination": "Sanya Railway Station",
            "origin": "Chengdu"
          }
        }
      },
      {
        "role": "assistant",
        "content": "What is the start date of your trip and what is the price budget?"
      },
      {
        "role": "user",
        "content": "My travel start date is June 1st and the budget is about 5000 yuan."
      },
      {
        "role": "function call",
        "content": {
          "name": "Travel.ItineraryServices.searchTravelPackage",
          "arguments": {
            "destination": "Sanya Railway Station",
            "origin": "Chengdu",
            "start_time": "June 1"
          }
        }
      },
      {
        "role": "assistant",
        "content": "When is your trip end date and what is the price budget"
      },
      {
        "role": "user",
        "content": "My travel end date is June 7th and the budget is about 5000 yuan."
      },
      {
        "role": "function call",
        "content": {
          "name": "Travel.ItineraryServices.searchTravelPackage",
          "arguments": {
            "destination": "Sanya Railway Station",
            "origin": "Chengdu",
            "start_time": "June 1",
            "end_time": "June 7"
          }
        }
      },
      {
        "role": "assistant",
        "content": "What is the unit price of your budget?"
      },
      {
        "role": "user",
        "content": "My budget is 8000.0 yuan."
      },
      {
        "role": "function call",
        "content": {
          "name": "Travel.ItineraryServices.searchTravelPackage",
          "arguments": {
            "destination": "Sanya Railway Station",
            "origin": "Chengdu",
            "start_time": "June 1",
            "end_time": "June 7",
            "price": 8000.0
          }
        }
      }
    ],
    "multiple_tools": [
      {
        "name": "Travel.ItineraryServices.searchTravelRoute",
        "description": "Search for relevant travel itineraries based on keywords",
        "parameters": {
          "type": "object",
          "properties": {
            "keyword": {
              "type": "string",
              "description": "Search keywords"
            }
          },
          "required": [
            "keyword"
          ]
        }
      },
      {
        "name": "VideoPlayback.OnlineVideos.searchOnlineVideo",
        "description": "Search online videos, which can be searched based on keywords (director/publisher/video keywords); can be searched based on categories; can be searched based on AI smart search",
        "parameters": {
          "type": "object",
          "properties": {
            "keyword": {
              "type": "array",
              "description": "Director/Publisher/Video Keyword Search"
            },
            "video_type": {
              "type": "string",
              "description": "Video Type Categories, Recommended, Popular, Chase, Film and Television New Journey"
            },
            "ai_search": {
              "type": "string",
              "description": "Based on search history, viewing history can only be turned off by default"
            }
          },
          "required": [
            "keyword",
            "video_type",
            "ai_search"
          ]
        }
      },
      {
        "name": "MusicRadio.RadioStations.radioSearchPlaylist",
        "description": "Search Playlists",
        "parameters": {
          "type": "object",
          "properties": {
            "keyword": {
              "type": "string",
              "description": "category"
            }
          },
          "required": [
            "keyword"
          ]
        }
      },
      {
        "name": "Travel.ItineraryServices.searchTravelPackage",
        "description": "Search travel packages by destination, time, price, and more",
        "parameters": {
          "type": "object",
          "properties": {
            "origin": {
              "type": "string",
              "description": "Origination"
            },
            "destination": {
              "type": "string",
              "description": "destination"
            },
            "start_time": {
              "type": "string",
              "description": "Start date"
            },
            "end_time": {
              "type": "string",
              "description": "End Date"
            },
            "price": {
              "type": "float",
              "description": "Price, unit (yuan)"
            }
          },
          "required": [
            "origin",
            "destination",
            "start_time",
            "end_time",
            "price"
          ]
        }
      },
      {
        "name": "Finance.Funds.searchFund",
        "description": "Search credits",
        "parameters": {
          "type": "object",
          "properties": {
            "keyword": {
              "type": "string",
              "description": "Fund name, keywords"
            },
            "sector": {
              "type": "string",
              "description": "The name of the fund sector, the default is the main board"
            }
          },
          "required": [
            "keyword",
            "sector"
          ]
        }
      }
    ],
    "single_tool": [
      {
        "name": "Travel.ItineraryServices.searchTravelPackage",
        "description": "Search travel packages by destination, time, price, and more",
        "parameters": {
          "type": "object",
          "properties": {
            "origin": {
              "type": "string",
              "description": "Origination"
            },
            "destination": {
              "type": "string",
              "description": "destination"
            },
            "start_time": {
              "type": "string",
              "description": "Start date"
            },
            "end_time": {
              "type": "string",
              "description": "End Date"
            },
            "price": {
              "type": "float",
              "description": "Price, unit (yuan)"
            }
          },
          "required": [
            "origin",
            "destination",
            "start_time",
            "end_time",
            "price"
          ]
        }
      }
    ],
    "id": 731
  },
  {
    "messages": [
      {
        "role": "user",
        "content": "I want to book a hotel and the check-in date is May 15th"
      },
      {
        "role": "function call",
        "content": {
          "name": "Travel.HotelServices.bookHotel",
          "arguments": {
            "checkin_date": "May 15"
          }
        }
      },
      {
        "role": "assistant",
        "content": "What is the name of the hotel?"
      },
      {
        "role": "user",
        "content": "I'm going to book the Marriott International Hotel and it sounds good."
      },
      {
        "role": "function call",
        "content": {
          "name": "Travel.HotelServices.bookHotel",
          "arguments": {
            "checkin_date": "May 15",
            "name": "Marriott International Hotel"
          }
        }
      },
      {
        "role": "assistant",
        "content": "What type of room would you like to book"
      },
      {
        "role": "user",
        "content": "I would like to book an executive single room."
      },
      {
        "role": "function call",
        "content": {
          "name": "Travel.HotelServices.bookHotel",
          "arguments": {
            "checkin_date": "May 15",
            "name": "Marriott International Hotel",
            "room_type": "Executive Single Room"
          }
        }
      },
      {
        "role": "assistant",
        "content": "Please provide the name information of the guest checking in"
      },
      {
        "role": "user",
        "content": "It was wrong before. Check-in Date should be April 15"
      },
      {
        "role": "function call",
        "content": {
          "name": "Travel.HotelServices.bookHotel",
          "arguments": {
            "checkin_date": "April 15",
            "name": "Marriott International Hotel",
            "room_type": "Executive Single Room"
          }
        }
      },
      {
        "role": "assistant",
        "content": "Please provide the name information of the guest checking in"
      },
      {
        "role": "user",
        "content": "The guest who checked in was Miss Wang."
      },
      {
        "role": "function call",
        "content": {
          "name": "Travel.HotelServices.bookHotel",
          "arguments": {
            "checkin_date": "April 15",
            "name": "Marriott International Hotel",
            "room_type": "Executive Single Room",
            "tenant_name": "Miss Wang"
          }
        }
      }
    ],
    "multiple_tools": [
      {
        "name": "Navigation.TrainTickets.bookTrainTicket",
        "description": "Book a train ticket for a specific time, origin, or destination for a specific rider",
        "parameters": {
          "type": "object",
          "properties": {
            "ride_date": {
              "type": "string",
              "description": "Date of trip"
            },
            "departure_station": {
              "type": "string",
              "description": "Departure Station"
            },
            "destination_station": {
              "type": "string",
              "description": "arrival station"
            },
            "train_type": {
              "type": "string",
              "description": "Train type, optional types are high-speed rail, motor vehicles, general express, express, etc."
            },
            "seat_type": {
              "type": "string",
              "description": "Seat Type"
            },
            "passenger_name": {
              "type": "string",
              "description": "Rider's name"
            },
            "passenger_id": {
              "type": "string",
              "description": "Rider ID number"
            }
          },
          "required": [
            "ride_date",
            "departure_station",
            "destination_station",
            "train_type",
            "seat_type",
            "passenger_name",
            "passenger_id"
          ]
        }
      },
      {
        "name": "OfficeSoftware.Conferencing.createMeeting",
        "description": "Create a new meeting",
        "parameters": {
          "type": "object",
          "properties": {
            "title": {
              "type": "string",
              "description": "Meeting Title:"
            },
            "start_time": {
              "type": "string",
              "description": "Conference Start Time"
            },
            "end_time": {
              "type": "string",
              "description": "Meeting end time"
            },
            "location": {
              "type": "string",
              "description": "Meeting Address"
            },
            "participant_list": {
              "type": "string",
              "description": "List of participants in the meeting"
            }
          },
          "required": [
            "title",
            "start_time",
            "end_time",
            "location",
            "participant_list"
          ]
        }
      },
      {
        "name": "UtilityTools.Calendar.addCalendarschedule",
        "description": "Create a new schedule",
        "parameters": {
          "type": "object",
          "properties": {
            "date_name": {
              "type": "string",
              "description": "Visiting program name"
            },
            "start_date": {
              "type": "string",
              "description": "Schedule start time"
            },
            "end_date": {
              "type": "string",
              "description": "Schedule end time; do not write the default start time 24 o'clock on the same day"
            },
            "schedule": {
              "type": "string",
              "description": "Schedule Related Descriptions"
            }
          },
          "required": [
            "date_name",
            "start_date",
            "end_date",
            "schedule"
          ]
        }
      },
      {
        "name": "ConvenientLiving.FoodDelivery.placeRestaurantOrder",
        "description": "Order select restaurants and dishes",
        "parameters": {
          "type": "object",
          "properties": {
            "restaurant_name": {
              "type": "string",
              "description": "Name of the restaurant"
            },
            "dishes": {
              "type": "string",
              "description": "Array containing item IDs"
            },
            "delivery_address": {
              "type": "string",
              "description": "Delivery address"
            },
            "delivery_time": {
              "type": "string",
              "description": "Expected delivery time in HH: mm format"
            },
            "note": {
              "type": "string",
              "description": "Remarks"
            }
          },
          "required": [
            "restaurant_name",
            "dishes",
            "delivery_address",
            "delivery_time",
            "note"
          ]
        }
      },
      {
        "name": "Travel.HotelServices.bookHotel",
        "description": "Book a room at a selected hotel",
        "parameters": {
          "type": "object",
          "properties": {
            "name": {
              "type": "string",
              "description": "Hotel Name"
            },
            "checkin_date": {
              "type": "string",
              "description": "Check-in Date"
            },
            "checkout_date": {
              "type": "string",
              "description": "DEPARTURE DATE"
            },
            "room_type": {
              "type": "string",
              "description": "Room types"
            },
            "tenant_name": {
              "type": "string",
              "description": "Name of the guest staying"
            },
            "tenant_number": {
              "type": "string",
              "description": "Telephone number of the guest staying at the hotel"
            }
          },
          "required": [
            "name",
            "checkin_date",
            "checkout_date",
            "room_type",
            "tenant_name",
            "tenant_number"
          ]
        }
      }
    ],
    "single_tool": [
      {
        "name": "Travel.HotelServices.bookHotel",
        "description": "Book a room at a selected hotel",
        "parameters": {
          "type": "object",
          "properties": {
            "name": {
              "type": "string",
              "description": "Hotel Name"
            },
            "checkin_date": {
              "type": "string",
              "description": "Check-in Date"
            },
            "checkout_date": {
              "type": "string",
              "description": "DEPARTURE DATE"
            },
            "room_type": {
              "type": "string",
              "description": "Room types"
            },
            "tenant_name": {
              "type": "string",
              "description": "Name of the guest staying"
            },
            "tenant_number": {
              "type": "string",
              "description": "Telephone number of the guest staying at the hotel"
            }
          },
          "required": [
            "name",
            "checkin_date",
            "checkout_date",
            "room_type",
            "tenant_name",
            "tenant_number"
          ]
        }
      }
    ],
    "id": 736
  },
  {
    "messages": [
      {
        "role": "user",
        "content": "Please help me book the room, check-in time is scheduled for June 30"
      },
      {
        "role": "function call",
        "content": {
          "name": "Travel.HotelServices.bookHotel",
          "arguments": {
            "checkin_date": "June 30"
          }
        }
      },
      {
        "role": "assistant",
        "content": "What type of room would you like to book"
      },
      {
        "role": "user",
        "content": "I want to book a luxury suite."
      },
      {
        "role": "function call",
        "content": {
          "name": "Travel.HotelServices.bookHotel",
          "arguments": {
            "checkin_date": "June 30",
            "room_type": "Executive Suite"
          }
        }
      },
      {
        "role": "assistant",
        "content": "Please provide the name information of the guest checking in"
      },
      {
        "role": "user",
        "content": "It was wrong before. Room types should be Executive Single Room"
      },
      {
        "role": "function call",
        "content": {
          "name": "Travel.HotelServices.bookHotel",
          "arguments": {
            "checkin_date": "June 30",
            "room_type": "Executive Single Room"
          }
        }
      },
      {
        "role": "assistant",
        "content": "Please provide the name information of the guest checking in"
      },
      {
        "role": "user",
        "content": "The check-in guest is Li Si."
      },
      {
        "role": "function call",
        "content": {
          "name": "Travel.HotelServices.bookHotel",
          "arguments": {
            "checkin_date": "June 30",
            "room_type": "Executive Single Room",
            "tenant_name": "Li Si"
          }
        }
      },
      {
        "role": "assistant",
        "content": "What is the name of the hotel?"
      },
      {
        "role": "user",
        "content": "I intend to book the Hilton Hotel, which is conveniently located in the heart of the city."
      },
      {
        "role": "function call",
        "content": {
          "name": "Travel.HotelServices.bookHotel",
          "arguments": {
            "checkin_date": "June 30",
            "room_type": "Executive Single Room",
            "tenant_name": "Li Si",
            "name": "Hilton Hotel"
          }
        }
      }
    ],
    "multiple_tools": [
      {
        "name": "Education.OnlineClasses.enrollCourse",
        "description": "Enroll in a designated course",
        "parameters": {
          "type": "object",
          "properties": {
            "course_name": {
              "type": "string",
              "description": "Course Title"
            }
          },
          "required": [
            "course_name"
          ]
        }
      },
      {
        "name": "Travel.HotelServices.bookHotel",
        "description": "Book a room at a selected hotel",
        "parameters": {
          "type": "object",
          "properties": {
            "name": {
              "type": "string",
              "description": "Hotel Name"
            },
            "checkin_date": {
              "type": "string",
              "description": "Check-in Date"
            },
            "checkout_date": {
              "type": "string",
              "description": "DEPARTURE DATE"
            },
            "room_type": {
              "type": "string",
              "description": "Room types"
            },
            "tenant_name": {
              "type": "string",
              "description": "Name of the guest staying"
            },
            "tenant_number": {
              "type": "string",
              "description": "Telephone number of the guest staying at the hotel"
            }
          },
          "required": [
            "name",
            "checkin_date",
            "checkout_date",
            "room_type",
            "tenant_name",
            "tenant_number"
          ]
        }
      },
      {
        "name": "Finance.Banking.fixDeposit",
        "description": "Convert a specified amount of demand deposits to time deposits of a specific time deposit duration",
        "parameters": {
          "type": "object",
          "properties": {
            "amount": {
              "type": "float",
              "description": "Amount of time deposit, unit (yuan)"
            },
            "duration": {
              "type": "string",
              "description": "Fixed Deposit Time"
            }
          },
          "required": [
            "amount",
            "duration"
          ]
        }
      },
      {
        "name": "ConvenientLiving.AutoLife.followCarModels",
        "description": "Keep an eye on the car models you're interested in so you can stay up to date.",
        "parameters": {
          "type": "object",
          "properties": {
            "brands": {
              "type": "string",
              "description": "Car Brand"
            }
          },
          "required": [
            "brands"
          ]
        }
      },
      {
        "name": "MusicRadio.Karaoke.enterSingingRoom",
        "description": "Enter the singing room according to the name of the singing room and other conditions",
        "parameters": {
          "type": "object",
          "properties": {
            "name": {
              "type": "string",
              "description": "Karaoke Room Name"
            }
          },
          "required": [
            "name"
          ]
        }
      }
    ],
    "single_tool": [
      {
        "name": "Travel.HotelServices.bookHotel",
        "description": "Book a room at a selected hotel",
        "parameters": {
          "type": "object",
          "properties": {
            "name": {
              "type": "string",
              "description": "Hotel Name"
            },
            "checkin_date": {
              "type": "string",
              "description": "Check-in Date"
            },
            "checkout_date": {
              "type": "string",
              "description": "DEPARTURE DATE"
            },
            "room_type": {
              "type": "string",
              "description": "Room types"
            },
            "tenant_name": {
              "type": "string",
              "description": "Name of the guest staying"
            },
            "tenant_number": {
              "type": "string",
              "description": "Telephone number of the guest staying at the hotel"
            }
          },
          "required": [
            "name",
            "checkin_date",
            "checkout_date",
            "room_type",
            "tenant_name",
            "tenant_number"
          ]
        }
      }
    ],
    "id": 737
  },
  {
    "messages": [
      {
        "role": "user",
        "content": "Please cancel my previous reservation at Hanting Express Hotel"
      },
      {
        "role": "function call",
        "content": {
          "name": "Travel.HotelServices.cancelHotelBooking",
          "arguments": {
            "name": "Hanting Hotel"
          }
        }
      },
      {
        "role": "assistant",
        "content": "What is the room type?"
      },
      {
        "role": "user",
        "content": "I want a room with sea view."
      },
      {
        "role": "function call",
        "content": {
          "name": "Travel.HotelServices.cancelHotelBooking",
          "arguments": {
            "name": "Hanting Hotel",
            "room_type": "Ocean View Room"
          }
        }
      },
      {
        "role": "assistant",
        "content": "What is the name information of the check-in guest?"
      },
      {
        "role": "user",
        "content": "It was wrong before. Room types should be Executive Suite"
      },
      {
        "role": "function call",
        "content": {
          "name": "Travel.HotelServices.cancelHotelBooking",
          "arguments": {
            "name": "Hanting Hotel",
            "room_type": "Executive Suite"
          }
        }
      },
      {
        "role": "assistant",
        "content": "What is the name information of the check-in guest?"
      },
      {
        "role": "user",
        "content": "The name of the check-in guest is Wang Wu."
      },
      {
        "role": "function call",
        "content": {
          "name": "Travel.HotelServices.cancelHotelBooking",
          "arguments": {
            "name": "Hanting Hotel",
            "room_type": "Executive Suite",
            "tenant_name": "Wangwu"
          }
        }
      }
    ],
    "multiple_tools": [
      {
        "name": "Navigation.FlightTickets.cancelFlightBooking",
        "description": "Cancelling a flight for a specific reservation",
        "parameters": {
          "type": "object",
          "properties": {
            "departure": {
              "type": "string",
              "description": "Origination"
            },
            "destination": {
              "type": "string",
              "description": "Reach ground"
            },
            "name": {
              "type": "string",
              "description": "Name of person who booked"
            },
            "time": {
              "type": "string",
              "description": "Flight departure time"
            },
            "passenger_id": {
              "type": "string",
              "description": "Rider ID number"
            }
          },
          "required": [
            "departure",
            "destination",
            "name",
            "time",
            "passenger_id"
          ]
        }
      },
      {
        "name": "Navigation.TaxiCarRental.cancelCarRentalOrder",
        "description": "Cancel the rental (all pending reservations are canceled by default)",
        "parameters": {
          "type": "object",
          "properties": {
            "time": {
              "type": "string",
              "description": "Release Date"
            }
          },
          "required": [
            "time"
          ]
        }
      },
      {
        "name": "Travel.HotelServices.cancelHotelBooking",
        "description": "Cancel the specified hotel reservation",
        "parameters": {
          "type": "object",
          "properties": {
            "name": {
              "type": "string",
              "description": "Hotel Name"
            },
            "booking_date": {
              "type": "string",
              "description": "Ordered Date"
            },
            "room_type": {
              "type": "string",
              "description": "Room types"
            },
            "tenant_name": {
              "type": "string",
              "description": "Name of the guest staying"
            },
            "tenant_number": {
              "type": "string",
              "description": "Telephone number of the guest staying at the hotel"
            }
          },
          "required": [
            "name",
            "booking_date",
            "room_type",
            "tenant_name",
            "tenant_number"
          ]
        }
      },
      {
        "name": "Travel.ScenicAreaServices.cancelScenicSpotBooking",
        "description": "Canceling a reservation at a designated attraction",
        "parameters": {
          "type": "object",
          "properties": {
            "name": {
              "type": "string",
              "description": "Name of the tourist area"
            },
            "booking_date": {
              "type": "string",
              "description": "Ordered Date"
            }
          },
          "required": [
            "name",
            "booking_date"
          ]
        }
      },
      {
        "name": "Navigation.TrainTickets.cancelTrainTicket",
        "description": "Cancelling a booked train ticket",
        "parameters": {
          "type": "object",
          "properties": {
            "train_number": {
              "type": "string",
              "description": "Wagon Number"
            },
            "name": {
              "type": "string",
              "description": "Rider's name"
            },
            "time": {
              "type": "string",
              "description": "To cancel a reservation for a certain time"
            },
            "departure_station": {
              "type": "string",
              "description": "Departure Station"
            },
            "destination_station": {
              "type": "string",
              "description": "arrival station"
            }
          },
          "required": [
            "train_number",
            "name",
            "time",
            "departure_station",
            "destination_station"
          ]
        }
      }
    ],
    "single_tool": [
      {
        "name": "Travel.HotelServices.cancelHotelBooking",
        "description": "Cancel the specified hotel reservation",
        "parameters": {
          "type": "object",
          "properties": {
            "name": {
              "type": "string",
              "description": "Hotel Name"
            },
            "booking_date": {
              "type": "string",
              "description": "Ordered Date"
            },
            "room_type": {
              "type": "string",
              "description": "Room types"
            },
            "tenant_name": {
              "type": "string",
              "description": "Name of the guest staying"
            },
            "tenant_number": {
              "type": "string",
              "description": "Telephone number of the guest staying at the hotel"
            }
          },
          "required": [
            "name",
            "booking_date",
            "room_type",
            "tenant_name",
            "tenant_number"
          ]
        }
      }
    ],
    "id": 738
  },
  {
    "messages": [
      {
        "role": "user",
        "content": "I want to share this post to my WeChat circle of friends"
      },
      {
        "role": "function call",
        "content": {
          "name": "SocialCommunication.Community.shareCommunityPost",
          "arguments": {
            "medium": "WeChat Moments"
          }
        }
      },
      {
        "role": "assistant",
        "content": "What the community name of the post is"
      },
      {
        "role": "user",
        "content": "Zhihu"
      },
      {
        "role": "function call",
        "content": {
          "name": "SocialCommunication.Community.shareCommunityPost",
          "arguments": {
            "medium": "WeChat Moments",
            "community_name": "Zhihu"
          }
        }
      },
      {
        "role": "assistant",
        "content": "What's the title of your post"
      },
      {
        "role": "user",
        "content": "It was wrong before. Share media should be Twitter"
      },
      {
        "role": "function call",
        "content": {
          "name": "SocialCommunication.Community.shareCommunityPost",
          "arguments": {
            "medium": "Twitter",
            "community_name": "Zhihu"
          }
        }
      },
      {
        "role": "assistant",
        "content": "What's the title of your post"
      },
      {
        "role": "user",
        "content": "How to learn to program effectively"
      },
      {
        "role": "function call",
        "content": {
          "name": "SocialCommunication.Community.shareCommunityPost",
          "arguments": {
            "medium": "Twitter",
            "community_name": "Zhihu",
            "title": "How to learn to program effectively"
          }
        }
      }
    ],
    "multiple_tools": [
      {
        "name": "Navigation.MapNavigation.shareTravelRoute",
        "description": "Share travel plans or directions",
        "parameters": {
          "type": "object",
          "properties": {
            "departure": {
              "type": "string",
              "description": "The name or address of the departure location, the default current location"
            },
            "destination": {
              "type": "string",
              "description": "Name or address of the destination"
            },
            "to": {
              "type": "string",
              "description": "Ways to share, like social media, texting, etc."
            }
          },
          "required": [
            "departure",
            "destination",
            "to"
          ]
        }
      },
      {
        "name": "MusicRadio.Karaoke.shareKsongWorks",
        "description": "Share work based on song name",
        "parameters": {
          "type": "object",
          "properties": {
            "song_name": {
              "type": "string",
              "description": "Song Name"
            },
            "media": {
              "type": "string",
              "description": "Media"
            },
            "name": {
              "type": "string",
              "description": "Friend name"
            }
          },
          "required": [
            "song_name",
            "media",
            "name"
          ]
        }
      },
      {
        "name": "NewsMagazines.NewspapersMagazines.shareArticle",
        "description": "Share posts to social media",
        "parameters": {
          "type": "object",
          "properties": {
            "to": {
              "type": "string",
              "description": "Choose Socials To Share Single Post"
            },
            "article": {
              "type": "string",
              "description": "Articles"
            }
          },
          "required": [
            "to",
            "article"
          ]
        }
      },
      {
        "name": "UtilityTools.Memo.shareNotes",
        "description": "Share a memo",
        "parameters": {
          "type": "object",
          "properties": {
            "title": {
              "type": "string",
              "description": "Title"
            },
            "to": {
              "type": "string",
              "description": "Shared with"
            },
            "category": {
              "type": "string",
              "description": "Classify"
            }
          },
          "required": [
            "title",
            "to",
            "category"
          ]
        }
      },
      {
        "name": "SocialCommunication.Community.shareCommunityPost",
        "description": "Share a specific post to a specific medium or to someone",
        "parameters": {
          "type": "object",
          "properties": {
            "community_name": {
              "type": "string",
              "description": "The name of the community where the post is located"
            },
            "title": {
              "type": "string",
              "description": "Prev Post Caption"
            },
            "medium": {
              "type": "string",
              "description": "Share media"
            },
            "user_name": {
              "type": "string",
              "description": "Shared by"
            }
          },
          "required": [
            "community_name",
            "title",
            "medium",
            "user_name"
          ]
        }
      }
    ],
    "single_tool": [
      {
        "name": "SocialCommunication.Community.shareCommunityPost",
        "description": "Share a specific post to a specific medium or to someone",
        "parameters": {
          "type": "object",
          "properties": {
            "community_name": {
              "type": "string",
              "description": "The name of the community where the post is located"
            },
            "title": {
              "type": "string",
              "description": "Prev Post Caption"
            },
            "medium": {
              "type": "string",
              "description": "Share media"
            },
            "user_name": {
              "type": "string",
              "description": "Shared by"
            }
          },
          "required": [
            "community_name",
            "title",
            "medium",
            "user_name"
          ]
        }
      }
    ],
    "id": 743
  },
  {
    "messages": [
      {
        "role": "user",
        "content": "Please send this post via Weibo"
      },
      {
        "role": "function call",
        "content": {
          "name": "SocialCommunication.Community.shareCommunityPost",
          "arguments": {
            "medium": "Twitter"
          }
        }
      },
      {
        "role": "assistant",
        "content": "What the community name of the post is"
      },
      {
        "role": "user",
        "content": "The post was published in the Douban community."
      },
      {
        "role": "function call",
        "content": {
          "name": "SocialCommunication.Community.shareCommunityPost",
          "arguments": {
            "medium": "Twitter",
            "community_name": "Douban"
          }
        }
      },
      {
        "role": "assistant",
        "content": "What's the title of your post"
      },
      {
        "role": "user",
        "content": "It was wrong before. Share media should be WeChat Moments"
      },
      {
        "role": "function call",
        "content": {
          "name": "SocialCommunication.Community.shareCommunityPost",
          "arguments": {
            "medium": "WeChat Moments",
            "community_name": "Douban"
          }
        }
      },
      {
        "role": "assistant",
        "content": "What's the title of your post"
      },
      {
        "role": "user",
        "content": "Latest Movie Rating Rankings"
      },
      {
        "role": "function call",
        "content": {
          "name": "SocialCommunication.Community.shareCommunityPost",
          "arguments": {
            "medium": "WeChat Moments",
            "community_name": "Douban",
            "title": "Latest Movie Rating Rankings"
          }
        }
      }
    ],
    "multiple_tools": [
      {
        "name": "NewsMagazines.NewspapersMagazines.shareArticle",
        "description": "Share posts to social media",
        "parameters": {
          "type": "object",
          "properties": {
            "to": {
              "type": "string",
              "description": "Choose Socials To Share Single Post"
            },
            "article": {
              "type": "string",
              "description": "Articles"
            }
          },
          "required": [
            "to",
            "article"
          ]
        }
      },
      {
        "name": "VideoPlayback.OnlineVideos.shareOnlineVideo",
        "description": "Share a video to other media",
        "parameters": {
          "type": "object",
          "properties": {
            "name": {
              "type": "string",
              "description": "Video Name"
            },
            "media": {
              "type": "string",
              "description": "Share video to: WeChat, etc."
            }
          },
          "required": [
            "name",
            "media"
          ]
        }
      },
      {
        "name": "SocialCommunication.Community.shareCommunityPost",
        "description": "Share a specific post to a specific medium or to someone",
        "parameters": {
          "type": "object",
          "properties": {
            "community_name": {
              "type": "string",
              "description": "The name of the community where the post is located"
            },
            "title": {
              "type": "string",
              "description": "Prev Post Caption"
            },
            "medium": {
              "type": "string",
              "description": "Share media"
            },
            "user_name": {
              "type": "string",
              "description": "Shared by"
            }
          },
          "required": [
            "community_name",
            "title",
            "medium",
            "user_name"
          ]
        }
      },
      {
        "name": "MusicRadio.Karaoke.shareKsongWorks",
        "description": "Share work based on song name",
        "parameters": {
          "type": "object",
          "properties": {
            "song_name": {
              "type": "string",
              "description": "Song Name"
            },
            "media": {
              "type": "string",
              "description": "Media"
            },
            "name": {
              "type": "string",
              "description": "Friend name"
            }
          },
          "required": [
            "song_name",
            "media",
            "name"
          ]
        }
      },
      {
        "name": "Health.HealthManagement.shareHealthPlan",
        "description": "Share a health plan",
        "parameters": {
          "type": "object",
          "properties": {
            "goal_title": {
              "type": "string",
              "description": "Target Headings"
            },
            "media": {
              "type": "string",
              "description": "Media"
            },
            "name": {
              "type": "string",
              "description": "Friend name"
            }
          },
          "required": [
            "goal_title",
            "media",
            "name"
          ]
        }
      }
    ],
    "single_tool": [
      {
        "name": "SocialCommunication.Community.shareCommunityPost",
        "description": "Share a specific post to a specific medium or to someone",
        "parameters": {
          "type": "object",
          "properties": {
            "community_name": {
              "type": "string",
              "description": "The name of the community where the post is located"
            },
            "title": {
              "type": "string",
              "description": "Prev Post Caption"
            },
            "medium": {
              "type": "string",
              "description": "Share media"
            },
            "user_name": {
              "type": "string",
              "description": "Shared by"
            }
          },
          "required": [
            "community_name",
            "title",
            "medium",
            "user_name"
          ]
        }
      }
    ],
    "id": 744
  },
  {
    "messages": [
      {
        "role": "user",
        "content": "Send a text message to President Zhang for me"
      },
      {
        "role": "function call",
        "content": {
          "name": "SocialCommunication.InstantMessaging.sendSystemMessage",
          "arguments": {
            "receiver_name": "Mr. Zhang"
          }
        }
      },
      {
        "role": "assistant",
        "content": "Please provide a mobile phone number to receive SMS messages"
      },
      {
        "role": "user",
        "content": "My phone number is 13812345678 and I can text to this number."
      },
      {
        "role": "function call",
        "content": {
          "name": "SocialCommunication.InstantMessaging.sendSystemMessage",
          "arguments": {
            "receiver_name": "Mr. Zhang",
            "receiver_number": "13812345678"
          }
        }
      },
      {
        "role": "assistant",
        "content": "What is the text content of the text message to be sent"
      },
      {
        "role": "user",
        "content": "It was wrong before. Phone number to receive SMS messages should be 13823457869"
      },
      {
        "role": "function call",
        "content": {
          "name": "SocialCommunication.InstantMessaging.sendSystemMessage",
          "arguments": {
            "receiver_name": "Mr. Zhang",
            "receiver_number": "13823457869"
          }
        }
      },
      {
        "role": "assistant",
        "content": "What is the text content of the text message to be sent"
      },
      {
        "role": "user",
        "content": "Would you like to join us for dinner tonight? How about it, do you have a moment?"
      },
      {
        "role": "function call",
        "content": {
          "name": "SocialCommunication.InstantMessaging.sendSystemMessage",
          "arguments": {
            "receiver_name": "Mr. Zhang",
            "receiver_number": "13823457869",
            "message_content": "Would you like to join us for dinner tonight?"
          }
        }
      }
    ],
    "multiple_tools": [
      {
        "name": "SocialCommunication.InstantMessaging.sendSystemMessage",
        "description": "Send a system text message to a specific number or contact",
        "parameters": {
          "type": "object",
          "properties": {
            "receiver_number": {
              "type": "string",
              "description": "Phone number to receive SMS messages"
            },
            "receiver_name": {
              "type": "string",
              "description": "Username to receive SMS"
            },
            "message_content": {
              "type": "string",
              "description": "Text content of the text message to be sent"
            },
            "attachment_path": {
              "type": "string",
              "description": "Image or file URL"
            }
          },
          "required": [
            "receiver_number",
            "receiver_name",
            "message_content",
            "attachment_path"
          ]
        }
      },
      {
        "name": "OfficeSoftware.Email.createDraftMail",
        "description": "Create draft message",
        "parameters": {
          "type": "object",
          "properties": {
            "mail_title": {
              "type": "string",
              "description": "To create a draft box title"
            },
            "content": {
              "type": "string",
              "description": "Email Content"
            },
            "receivers": {
              "type": "string",
              "description": "Recipient of the email"
            }
          },
          "required": [
            "mail_title",
            "content",
            "receivers"
          ]
        }
      },
      {
        "name": "OfficeSoftware.Email.sendMail",
        "description": "Send a new message",
        "parameters": {
          "type": "object",
          "properties": {
            "title": {
              "type": "string",
              "description": "Email Title"
            },
            "content": {
              "type": "string",
              "description": "Email Content"
            },
            "receivers": {
              "type": "string",
              "description": "Recipient of the email"
            }
          },
          "required": [
            "title",
            "content",
            "receivers"
          ]
        }
      },
      {
        "name": "SocialCommunication.SocialMedia.sendMediumMessage",
        "description": "Send a message to a specific friend in a specific medium",
        "parameters": {
          "type": "object",
          "properties": {
            "medium_name": {
              "type": "string",
              "description": "Media name"
            },
            "name": {
              "type": "string",
              "description": "Friend's nickname"
            },
            "content": {
              "type": "string",
              "description": "Content "
            },
            "account_number": {
              "type": "string",
              "description": "Friend's account"
            }
          },
          "required": [
            "medium_name",
            "name",
            "content",
            "account_number"
          ]
        }
      },
      {
        "name": "SocialCommunication.InstantMessaging.sendMessage",
        "description": "Send a text message to a specific contact or group",
        "parameters": {
          "type": "object",
          "properties": {
            "receiver_name": {
              "type": "string",
              "description": "Name of the contact or group receiving the message"
            },
            "message_content": {
              "type": "string",
              "description": "Text content to send"
            }
          },
          "required": [
            "receiver_name",
            "message_content"
          ]
        }
      }
    ],
    "single_tool": [
      {
        "name": "SocialCommunication.InstantMessaging.sendSystemMessage",
        "description": "Send a system text message to a specific number or contact",
        "parameters": {
          "type": "object",
          "properties": {
            "receiver_number": {
              "type": "string",
              "description": "Phone number to receive SMS messages"
            },
            "receiver_name": {
              "type": "string",
              "description": "Username to receive SMS"
            },
            "message_content": {
              "type": "string",
              "description": "Text content of the text message to be sent"
            },
            "attachment_path": {
              "type": "string",
              "description": "Image or file URL"
            }
          },
          "required": [
            "receiver_number",
            "receiver_name",
            "message_content",
            "attachment_path"
          ]
        }
      }
    ],
    "id": 749
  },
  {
    "messages": [
      {
        "role": "user",
        "content": "Show me the details of the activity on Weibo"
      },
      {
        "role": "function call",
        "content": {
          "name": "SocialCommunication.SocialMedia.getMediumTrendsDetails",
          "arguments": {
            "medium_name": "Twitter"
          }
        }
      },
      {
        "role": "assistant",
        "content": "Please provide the dynamic ID and the type of details you would like to get"
      },
      {
        "role": "user",
        "content": "My dynamic ID is 12345 and I want to learn about the latest trends in AI."
      },
      {
        "role": "function call",
        "content": {
          "name": "SocialCommunication.SocialMedia.getMediumTrendsDetails",
          "arguments": {
            "medium_name": "Twitter",
            "correlation": "Latest Trends in Artificial Intellig"
          }
        }
      },
      {
        "role": "assistant",
        "content": "Please provide the name of the publisher"
      },
      {
        "role": "user",
        "content": "It was wrong before. Media name should be twitter"
      },
      {
        "role": "function call",
        "content": {
          "name": "SocialCommunication.SocialMedia.getMediumTrendsDetails",
          "arguments": {
            "medium_name": "twitter",
            "correlation": "Latest Trends in Artificial Intellig"
          }
        }
      },
      {
        "role": "assistant",
        "content": "Please provide the name of the publisher"
      },
      {
        "role": "user",
        "content": "The publisher is Li Si, who is in charge of this project."
      },
      {
        "role": "function call",
        "content": {
          "name": "SocialCommunication.SocialMedia.getMediumTrendsDetails",
          "arguments": {
            "medium_name": "twitter",
            "correlation": "Latest Trends in Artificial Intellig",
            "publisher": "Li Si"
          }
        }
      }
    ],
    "multiple_tools": [
      {
        "name": "Travel.HotelServices.viewHotelDetails",
        "description": "Get specific hotel details",
        "parameters": {
          "type": "object",
          "properties": {
            "name": {
              "type": "string",
              "description": "Hotel Name"
            },
            "location": {
              "type": "string",
              "description": "Address"
            }
          },
          "required": [
            "name",
            "location"
          ]
        }
      },
      {
        "name": "SocialCommunication.SocialMedia.getMediumTrendsDetails",
        "description": "Get the details of a given activity",
        "parameters": {
          "type": "object",
          "properties": {
            "medium_name": {
              "type": "string",
              "description": "Media name"
            },
            "correlation": {
              "type": "string",
              "description": "Dynamic Related Content"
            },
            "publisher": {
              "type": "string",
              "description": "Posted by/publisher?"
            },
            "time": {
              "type": "string",
              "description": "Release Date"
            }
          },
          "required": [
            "medium_name",
            "correlation",
            "publisher",
            "time"
          ]
        }
      },
      {
        "name": "UtilityTools.AppSearchInstallation.viewApp",
        "description": "View details for a specific mobile app, including introductions, ratings and reviews, downloads, package size, and more",
        "parameters": {
          "type": "object",
          "properties": {
            "app_name": {
              "type": "string",
              "description": "Mobile App Name"
            }
          },
          "required": [
            "app_name"
          ]
        }
      },
      {
        "name": "SocialCommunication.Community.getCommunityPostDetails",
        "description": "Get the details of a specific community post based on the title of the post",
        "parameters": {
          "type": "object",
          "properties": {
            "community_name": {
              "type": "string",
              "description": "The name of the community where the post is located"
            },
            "post_name": {
              "type": "string",
              "description": "Title of the post to get the details"
            }
          },
          "required": [
            "community_name",
            "post_name"
          ]
        }
      },
      {
        "name": "SocialCommunication.SocialMedia.searchMediumTrends",
        "description": "Find relevant activity in specific media based on keyword searches",
        "parameters": {
          "type": "object",
          "properties": {
            "medium_name": {
              "type": "string",
              "description": "To Find Dynamic Media Names"
            },
            "key_words": {
              "type": "string",
              "description": "Keywords to find"
            }
          },
          "required": [
            "medium_name",
            "key_words"
          ]
        }
      }
    ],
    "single_tool": [
      {
        "name": "SocialCommunication.SocialMedia.getMediumTrendsDetails",
        "description": "Get the details of a given activity",
        "parameters": {
          "type": "object",
          "properties": {
            "medium_name": {
              "type": "string",
              "description": "Media name"
            },
            "correlation": {
              "type": "string",
              "description": "Dynamic Related Content"
            },
            "publisher": {
              "type": "string",
              "description": "Posted by/publisher?"
            },
            "time": {
              "type": "string",
              "description": "Release Date"
            }
          },
          "required": [
            "medium_name",
            "correlation",
            "publisher",
            "time"
          ]
        }
      }
    ],
    "id": 753
  },
  {
    "messages": [
      {
        "role": "user",
        "content": "I'd like to like Xiao Ming's travel photos"
      },
      {
        "role": "function call",
        "content": {
          "name": "SocialCommunication.SocialMedia.mediumLikes",
          "arguments": {
            "publisher": "Fynn"
          }
        }
      },
      {
        "role": "assistant",
        "content": "Please provide media name"
      },
      {
        "role": "user",
        "content": "Instagram"
      },
      {
        "role": "function call",
        "content": {
          "name": "SocialCommunication.SocialMedia.mediumLikes",
          "arguments": {
            "publisher": "Fynn",
            "medium_name": "Instagram"
          }
        }
      },
      {
        "role": "assistant",
        "content": "Dynamic ID is how much dynamic content that needs to be liked is what"
      },
      {
        "role": "user",
        "content": "It was wrong before. Media name should be WeChat Moments"
      },
      {
        "role": "function call",
        "content": {
          "name": "SocialCommunication.SocialMedia.mediumLikes",
          "arguments": {
            "publisher": "Fynn",
            "medium_name": "WeChat Moments"
          }
        }
      },
      {
        "role": "assistant",
        "content": "Dynamic ID is how much dynamic content that needs to be liked is what"
      },
      {
        "role": "user",
        "content": "The activity ID I need to like is 12345 and it's a food photo and it looks very inviting."
      },
      {
        "role": "function call",
        "content": {
          "name": "SocialCommunication.SocialMedia.mediumLikes",
          "arguments": {
            "publisher": "Fynn",
            "medium_name": "WeChat Moments",
            "correlation": "Food Photos"
          }
        }
      }
    ],
    "multiple_tools": [
      {
        "name": "VideoPlayback.ShortVideos.likeShortVideo",
        "description": "Like or unlike a short video",
        "parameters": {
          "type": "object",
          "properties": {
            "name": {
              "type": "string",
              "description": "Short video name"
            },
            "like": {
              "type": "boolean",
              "description": "Like"
            }
          },
          "required": [
            "name",
            "like"
          ]
        }
      },
      {
        "name": "SocialCommunication.Community.likeCommunityPost",
        "description": "Like a post from a specific community",
        "parameters": {
          "type": "object",
          "properties": {
            "community_name": {
              "type": "string",
              "description": "The name of the community where you want to like the post"
            },
            "post_name": {
              "type": "string",
              "description": "Title of the post to like"
            }
          },
          "required": [
            "community_name",
            "post_name"
          ]
        }
      },
      {
        "name": "VideoPlayback.OnlineVideos.likeOnlineVideo",
        "description": "Like/Click to step on a video",
        "parameters": {
          "type": "object",
          "properties": {
            "name": {
              "type": "string",
              "description": "Video Name"
            },
            "like": {
              "type": "boolean",
              "description": "Like"
            }
          },
          "required": [
            "name",
            "like"
          ]
        }
      },
      {
        "name": "SocialCommunication.SocialMedia.mediumLikes",
        "description": "Like a given activity",
        "parameters": {
          "type": "object",
          "properties": {
            "medium_name": {
              "type": "string",
              "description": "Media name"
            },
            "correlation": {
              "type": "string",
              "description": "Dynamic Related Content"
            },
            "publisher": {
              "type": "string",
              "description": "Posted by/publisher?"
            },
            "publish_time": {
              "type": "string",
              "description": "Release Date"
            }
          },
          "required": [
            "medium_name",
            "correlation",
            "publisher",
            "publish_time"
          ]
        }
      },
      {
        "name": "VideoPlayback.OnlineVideos.favouriteOnlineVideo",
        "description": "Favorite a video",
        "parameters": {
          "type": "object",
          "properties": {
            "name": {
              "type": "string",
              "description": "Video Name"
            },
            "favourite": {
              "type": "boolean",
              "description": "Favorite/Cancel"
            }
          },
          "required": [
            "name",
            "favourite"
          ]
        }
      }
    ],
    "single_tool": [
      {
        "name": "SocialCommunication.SocialMedia.mediumLikes",
        "description": "Like a given activity",
        "parameters": {
          "type": "object",
          "properties": {
            "medium_name": {
              "type": "string",
              "description": "Media name"
            },
            "correlation": {
              "type": "string",
              "description": "Dynamic Related Content"
            },
            "publisher": {
              "type": "string",
              "description": "Posted by/publisher?"
            },
            "publish_time": {
              "type": "string",
              "description": "Release Date"
            }
          },
          "required": [
            "medium_name",
            "correlation",
            "publisher",
            "publish_time"
          ]
        }
      }
    ],
    "id": 754
  },
  {
    "messages": [
      {
        "role": "user",
        "content": "I want to unlike the concert photos"
      },
      {
        "role": "function call",
        "content": {
          "name": "SocialCommunication.SocialMedia.cancleMediumLikes",
          "arguments": {
            "correlation": "Concert Photos"
          }
        }
      },
      {
        "role": "assistant",
        "content": "What is the media name"
      },
      {
        "role": "user",
        "content": "The media name is Instagram"
      },
      {
        "role": "function call",
        "content": {
          "name": "SocialCommunication.SocialMedia.cancleMediumLikes",
          "arguments": {
            "correlation": "Concert Photos",
            "medium_name": "Instagram"
          }
        }
      },
      {
        "role": "assistant",
        "content": "Please provide the name of the publisher"
      },
      {
        "role": "user",
        "content": "It was wrong before. Media name should be Twitter"
      },
      {
        "role": "function call",
        "content": {
          "name": "SocialCommunication.SocialMedia.cancleMediumLikes",
          "arguments": {
            "correlation": "Concert Photos",
            "medium_name": "Twitter"
          }
        }
      },
      {
        "role": "assistant",
        "content": "Please provide the name of the publisher"
      },
      {
        "role": "user",
        "content": "The publisher is Amy."
      },
      {
        "role": "function call",
        "content": {
          "name": "SocialCommunication.SocialMedia.cancleMediumLikes",
          "arguments": {
            "correlation": "Concert Photos",
            "medium_name": "Twitter",
            "publisher": "Amy"
          }
        }
      }
    ],
    "multiple_tools": [
      {
        "name": "OfficeSoftware.Conferencing.unmuteParticipants",
        "description": "Unmute participants",
        "parameters": {
          "type": "object",
          "properties": {
            "meeting_id": {
              "type": "string",
              "description": "Conference No."
            },
            "title": {
              "type": "string",
              "description": "Meeting Title:"
            },
            "time": {
              "type": "string",
              "description": "Meeting Date"
            },
            "participant_list": {
              "type": "string",
              "description": "To unmute a list of people, the default is All People"
            }
          },
          "required": [
            "meeting_id",
            "title",
            "time",
            "participant_list"
          ]
        }
      },
      {
        "name": "SocialCommunication.SocialMedia.cancleMediumLikes",
        "description": "Unlike assigned activity",
        "parameters": {
          "type": "object",
          "properties": {
            "medium_name": {
              "type": "string",
              "description": "Media name"
            },
            "correlation": {
              "type": "string",
              "description": "Dynamic Related Content"
            },
            "publisher": {
              "type": "string",
              "description": "Posted by/publisher?"
            },
            "publish_time": {
              "type": "string",
              "description": "Release Date"
            }
          },
          "required": [
            "medium_name",
            "correlation",
            "publisher",
            "publish_time"
          ]
        }
      },
      {
        "name": "Education.OnlineClasses.cancelCourse",
        "description": "Cancel Enrolled Courses",
        "parameters": {
          "type": "object",
          "properties": {
            "course_name": {
              "type": "string",
              "description": "Course Title"
            }
          },
          "required": [
            "course_name"
          ]
        }
      },
      {
        "name": "SocialCommunication.SocialMedia.cancleCollectMediumTrends",
        "description": "Unfavorite the specified activity in the specified media",
        "parameters": {
          "type": "object",
          "properties": {
            "medium_name": {
              "type": "string",
              "description": "Media name"
            },
            "correlation": {
              "type": "string",
              "description": "Dynamic Related Content"
            },
            "publisher": {
              "type": "string",
              "description": "Posted by/publisher?"
            },
            "publish_time": {
              "type": "string",
              "description": "Release Date"
            }
          },
          "required": [
            "medium_name",
            "correlation",
            "publisher",
            "publish_time"
          ]
        }
      },
      {
        "name": "NewsMagazines.NewspapersMagazines.unsubscribeMagazine",
        "description": "Unsubscribe from magazines based on their name",
        "parameters": {
          "type": "object",
          "properties": {
            "name": {
              "type": "string",
              "description": "Magazine Name"
            }
          },
          "required": [
            "name"
          ]
        }
      }
    ],
    "single_tool": [
      {
        "name": "SocialCommunication.SocialMedia.cancleMediumLikes",
        "description": "Unlike assigned activity",
        "parameters": {
          "type": "object",
          "properties": {
            "medium_name": {
              "type": "string",
              "description": "Media name"
            },
            "correlation": {
              "type": "string",
              "description": "Dynamic Related Content"
            },
            "publisher": {
              "type": "string",
              "description": "Posted by/publisher?"
            },
            "publish_time": {
              "type": "string",
              "description": "Release Date"
            }
          },
          "required": [
            "medium_name",
            "correlation",
            "publisher",
            "publish_time"
          ]
        }
      }
    ],
    "id": 755
  },
  {
    "messages": [
      {
        "role": "user",
        "content": "No more liking the cat Mengzhao"
      },
      {
        "role": "function call",
        "content": {
          "name": "SocialCommunication.SocialMedia.cancleMediumLikes",
          "arguments": {
            "correlation": "Cat cute photo"
          }
        }
      },
      {
        "role": "assistant",
        "content": "What is the media name"
      },
      {
        "role": "user",
        "content": "WeChat Moments"
      },
      {
        "role": "function call",
        "content": {
          "name": "SocialCommunication.SocialMedia.cancleMediumLikes",
          "arguments": {
            "correlation": "Cat cute photo",
            "medium_name": "WeChat Moments"
          }
        }
      },
      {
        "role": "assistant",
        "content": "Please provide the name of the publisher"
      },
      {
        "role": "user",
        "content": "It was wrong before. Dynamic Related Content should be Concert Photos"
      },
      {
        "role": "function call",
        "content": {
          "name": "SocialCommunication.SocialMedia.cancleMediumLikes",
          "arguments": {
            "correlation": "Concert Photos",
            "medium_name": "WeChat Moments"
          }
        }
      },
      {
        "role": "assistant",
        "content": "Please provide the name of the publisher"
      },
      {
        "role": "user",
        "content": "Li Si is the publisher of this project."
      },
      {
        "role": "function call",
        "content": {
          "name": "SocialCommunication.SocialMedia.cancleMediumLikes",
          "arguments": {
            "correlation": "Concert Photos",
            "medium_name": "WeChat Moments",
            "publisher": "Li Si"
          }
        }
      }
    ],
    "multiple_tools": [
      {
        "name": "SocialCommunication.SocialMedia.cancleMediumLikes",
        "description": "Unlike assigned activity",
        "parameters": {
          "type": "object",
          "properties": {
            "medium_name": {
              "type": "string",
              "description": "Media name"
            },
            "correlation": {
              "type": "string",
              "description": "Dynamic Related Content"
            },
            "publisher": {
              "type": "string",
              "description": "Posted by/publisher?"
            },
            "publish_time": {
              "type": "string",
              "description": "Release Date"
            }
          },
          "required": [
            "medium_name",
            "correlation",
            "publisher",
            "publish_time"
          ]
        }
      },
      {
        "name": "Health.Fitness.searchNearbyGyms",
        "description": "Find a gym near you",
        "parameters": {
          "type": "object",
          "properties": {},
          "required": []
        }
      },
      {
        "name": "Education.ChildrenEducation.playChildSong",
        "description": "Play assigned children's songs",
        "parameters": {
          "type": "object",
          "properties": {
            "song_name": {
              "type": "string",
              "description": "Song Name"
            }
          },
          "required": [
            "song_name"
          ]
        }
      },
      {
        "name": "Navigation.TaxiCarRental.issueTaxiInvoice",
        "description": "Invoicing taxi rides",
        "parameters": {
          "type": "object",
          "properties": {
            "time": {
              "type": "string",
              "description": "Order time"
            },
            "destination": {
              "type": "string",
              "description": "Destination"
            }
          },
          "required": [
            "time",
            "destination"
          ]
        }
      },
      {
        "name": "ConvenientLiving.JobRecruitment.applyForJob",
        "description": "Submitting an Application to a Designated Position",
        "parameters": {
          "type": "object",
          "properties": {
            "job_name": {
              "type": "string",
              "description": "Position name"
            },
            "company_name": {
              "type": "string",
              "description": "Company name"
            }
          },
          "required": [
            "job_name",
            "company_name"
          ]
        }
      }
    ],
    "single_tool": [
      {
        "name": "SocialCommunication.SocialMedia.cancleMediumLikes",
        "description": "Unlike assigned activity",
        "parameters": {
          "type": "object",
          "properties": {
            "medium_name": {
              "type": "string",
              "description": "Media name"
            },
            "correlation": {
              "type": "string",
              "description": "Dynamic Related Content"
            },
            "publisher": {
              "type": "string",
              "description": "Posted by/publisher?"
            },
            "publish_time": {
              "type": "string",
              "description": "Release Date"
            }
          },
          "required": [
            "medium_name",
            "correlation",
            "publisher",
            "publish_time"
          ]
        }
      }
    ],
    "id": 756
  },
  {
    "messages": [
      {
        "role": "user",
        "content": "I don't want to bookmark that headline anymore. It's called Travel Vlog. Help me cancel it."
      },
      {
        "role": "function call",
        "content": {
          "name": "SocialCommunication.SocialMedia.cancleCollectMediumTrends",
          "arguments": {
            "correlation": "Travel Vlog"
          }
        }
      },
      {
        "role": "assistant",
        "content": "What is the media name"
      },
      {
        "role": "user",
        "content": "Zhihu"
      },
      {
        "role": "function call",
        "content": {
          "name": "SocialCommunication.SocialMedia.cancleCollectMediumTrends",
          "arguments": {
            "correlation": "Travel Vlog",
            "medium_name": "Zhihu"
          }
        }
      },
      {
        "role": "assistant",
        "content": "Please provide the name of the publisher"
      },
      {
        "role": "user",
        "content": "It was wrong before. Media name should be Station B"
      },
      {
        "role": "function call",
        "content": {
          "name": "SocialCommunication.SocialMedia.cancleCollectMediumTrends",
          "arguments": {
            "correlation": "Travel Vlog",
            "medium_name": "Station B"
          }
        }
      },
      {
        "role": "assistant",
        "content": "Please provide the name of the publisher"
      },
      {
        "role": "user",
        "content": "Nutritionist Zhang Qiang is the publisher of this article."
      },
      {
        "role": "function call",
        "content": {
          "name": "SocialCommunication.SocialMedia.cancleCollectMediumTrends",
          "arguments": {
            "correlation": "Travel Vlog",
            "medium_name": "Station B",
            "publisher": "Nutritionist Zhang Qiang"
          }
        }
      }
    ],
    "multiple_tools": [
      {
        "name": "Navigation.TrainTickets.cancelTrainTicket",
        "description": "Cancelling a booked train ticket",
        "parameters": {
          "type": "object",
          "properties": {
            "train_number": {
              "type": "string",
              "description": "Wagon Number"
            },
            "name": {
              "type": "string",
              "description": "Rider's name"
            },
            "time": {
              "type": "string",
              "description": "To cancel a reservation for a certain time"
            },
            "departure_station": {
              "type": "string",
              "description": "Departure Station"
            },
            "destination_station": {
              "type": "string",
              "description": "arrival station"
            }
          },
          "required": [
            "train_number",
            "name",
            "time",
            "departure_station",
            "destination_station"
          ]
        }
      },
      {
        "name": "SystemTools.SystemSettings.setSystemTurnOffDarkMode",
        "description": "Turn off Dark Mode",
        "parameters": {
          "type": "object",
          "properties": {},
          "required": []
        }
      },
      {
        "name": "NewsMagazines.NewspapersMagazines.cancelCollectMagazine",
        "description": "Unfavorite a magazine or article",
        "parameters": {
          "type": "object",
          "properties": {
            "name": {
              "type": "string",
              "description": "Magazine Name"
            },
            "issue": {
              "type": "string",
              "description": "Number of periods"
            }
          },
          "required": [
            "name",
            "issue"
          ]
        }
      },
      {
        "name": "SocialCommunication.SocialMedia.cancleCollectMediumTrends",
        "description": "Unfavorite the specified activity in the specified media",
        "parameters": {
          "type": "object",
          "properties": {
            "medium_name": {
              "type": "string",
              "description": "Media name"
            },
            "correlation": {
              "type": "string",
              "description": "Dynamic Related Content"
            },
            "publisher": {
              "type": "string",
              "description": "Posted by/publisher?"
            },
            "publish_time": {
              "type": "string",
              "description": "Release Date"
            }
          },
          "required": [
            "medium_name",
            "correlation",
            "publisher",
            "publish_time"
          ]
        }
      },
      {
        "name": "UtilityTools.Search.deleteWebBookmark",
        "description": "Delete bookmarks specified in favorites; delete bookmarks specified in favorites; delete all bookmarks in favorites",
        "parameters": {
          "type": "object",
          "properties": {
            "bookmark": {
              "type": "string",
              "description": "Bookmark title, defaults to all bookmarks from the current collection"
            }
          },
          "required": [
            "bookmark"
          ]
        }
      }
    ],
    "single_tool": [
      {
        "name": "SocialCommunication.SocialMedia.cancleCollectMediumTrends",
        "description": "Unfavorite the specified activity in the specified media",
        "parameters": {
          "type": "object",
          "properties": {
            "medium_name": {
              "type": "string",
              "description": "Media name"
            },
            "correlation": {
              "type": "string",
              "description": "Dynamic Related Content"
            },
            "publisher": {
              "type": "string",
              "description": "Posted by/publisher?"
            },
            "publish_time": {
              "type": "string",
              "description": "Release Date"
            }
          },
          "required": [
            "medium_name",
            "correlation",
            "publisher",
            "publish_time"
          ]
        }
      }
    ],
    "id": 757
  },
  {
    "messages": [
      {
        "role": "user",
        "content": "I want to see if there's any news of the happy kitten."
      },
      {
        "role": "function call",
        "content": {
          "name": "SocialCommunication.SocialMedia.viewMediumMessage",
          "arguments": {
            "name": "Happy Kitten"
          }
        }
      },
      {
        "role": "assistant",
        "content": "Please provide the media name and whether you need to see the default message for the most recent week"
      },
      {
        "role": "user",
        "content": "The media name is Telegram and needs to be checked for messages from the last week by default."
      },
      {
        "role": "function call",
        "content": {
          "name": "SocialCommunication.SocialMedia.viewMediumMessage",
          "arguments": {
            "name": "Happy Kitten",
            "medium_name": "Telegram"
          }
        }
      },
      {
        "role": "assistant",
        "content": "What's a friend's account"
      },
      {
        "role": "user",
        "content": "It was wrong before. Media name should be Snapchat"
      },
      {
        "role": "function call",
        "content": {
          "name": "SocialCommunication.SocialMedia.viewMediumMessage",
          "arguments": {
            "name": "Happy Kitten",
            "medium_name": "Snapchat"
          }
        }
      },
      {
        "role": "assistant",
        "content": "What's a friend's account"
      },
      {
        "role": "user",
        "content": "My friend's account is lucy_snap, can I help you with something else?"
      },
      {
        "role": "function call",
        "content": {
          "name": "SocialCommunication.SocialMedia.viewMediumMessage",
          "arguments": {
            "name": "Happy Kitten",
            "medium_name": "Snapchat",
            "account_number": "lucy_snap"
          }
        }
      }
    ],
    "multiple_tools": [
      {
        "name": "Navigation.Bicycles.viewBikeCoupons",
        "description": "View riding-related vouchers",
        "parameters": {
          "type": "object",
          "properties": {},
          "required": []
        }
      },
      {
        "name": "SocialCommunication.SocialMedia.viewMediumMessage",
        "description": "View messages for specified friends in specified media (defaults to last week)",
        "parameters": {
          "type": "object",
          "properties": {
            "medium_name": {
              "type": "string",
              "description": "Media name"
            },
            "name": {
              "type": "string",
              "description": "Friend's nickname"
            },
            "account_number": {
              "type": "string",
              "description": "Friend's account"
            },
            "time": {
              "type": "string",
              "description": "Release Date"
            }
          },
          "required": [
            "medium_name",
            "name",
            "account_number",
            "time"
          ]
        }
      },
      {
        "name": "OnlineShopping.Mall.viewMessage",
        "description": "View messages for a specific friend or time, and see the entire list of messages by default",
        "parameters": {
          "type": "object",
          "properties": {},
          "required": []
        }
      },
      {
        "name": "Travel.ScenicAreaServices.getScenicSpotEventInfo",
        "description": "Get upcoming event schedules for selected scenic spots",
        "parameters": {
          "type": "object",
          "properties": {
            "name": {
              "type": "string",
              "description": "Name of the tourist area"
            }
          },
          "required": [
            "name"
          ]
        }
      },
      {
        "name": "OnlineShopping.SecondhandTrading.viewSecondhandSaleMessage",
        "description": "View message list by default",
        "parameters": {
          "type": "object",
          "properties": {},
          "required": []
        }
      }
    ],
    "single_tool": [
      {
        "name": "SocialCommunication.SocialMedia.viewMediumMessage",
        "description": "View messages for specified friends in specified media (defaults to last week)",
        "parameters": {
          "type": "object",
          "properties": {
            "medium_name": {
              "type": "string",
              "description": "Media name"
            },
            "name": {
              "type": "string",
              "description": "Friend's nickname"
            },
            "account_number": {
              "type": "string",
              "description": "Friend's account"
            },
            "time": {
              "type": "string",
              "description": "Release Date"
            }
          },
          "required": [
            "medium_name",
            "name",
            "account_number",
            "time"
          ]
        }
      }
    ],
    "id": 758
  },
  {
    "messages": [
      {
        "role": "user",
        "content": "I'm sending to the recipient of 13800138000"
      },
      {
        "role": "function call",
        "content": {
          "name": "OnlineShopping.ExpressDelivery.placeExpressOrder",
          "arguments": {
            "recipient_phone": "13800138000"
          }
        }
      },
      {
        "role": "assistant",
        "content": "Please provide a shipping address"
      },
      {
        "role": "user",
        "content": "The delivery address is 200 Century Avenue, Pudong New Area, Shanghai, please."
      },
      {
        "role": "function call",
        "content": {
          "name": "OnlineShopping.ExpressDelivery.placeExpressOrder",
          "arguments": {
            "recipient_phone": "13800138000",
            "recipient_address": "No. 200 Century Avenue, Pudong New Area, Shanghai"
          }
        }
      },
      {
        "role": "assistant",
        "content": "What is the recipient's name?"
      },
      {
        "role": "user",
        "content": "It was wrong before. Recipient phone number should be 15898765432"
      },
      {
        "role": "function call",
        "content": {
          "name": "OnlineShopping.ExpressDelivery.placeExpressOrder",
          "arguments": {
            "recipient_phone": "15898765432",
            "recipient_address": "No. 200 Century Avenue, Pudong New Area, Shanghai"
          }
        }
      },
      {
        "role": "assistant",
        "content": "What is the recipient's name?"
      },
      {
        "role": "user",
        "content": "The recipient's name is Wang Gong."
      },
      {
        "role": "function call",
        "content": {
          "name": "OnlineShopping.ExpressDelivery.placeExpressOrder",
          "arguments": {
            "recipient_phone": "15898765432",
            "recipient_address": "No. 200 Century Avenue, Pudong New Area, Shanghai",
            "recipient_name": "Wang Gong"
          }
        }
      }
    ],
    "multiple_tools": [
      {
        "name": "OnlineShopping.ExpressDelivery.placeExpressOrder",
        "description": "Initiating a Sender to a Specified Recipient",
        "parameters": {
          "type": "object",
          "properties": {
            "recipient_name": {
              "type": "string",
              "description": "Recipient's name"
            },
            "recipient_phone": {
              "type": "string",
              "description": "Recipient phone number"
            },
            "recipient_address": {
              "type": "string",
              "description": "<g id=\"Bold\">Receiver's</g> <g id=\"Bold\">Address:</g>"
            }
          },
          "required": [
            "recipient_name",
            "recipient_phone",
            "recipient_address"
          ]
        }
      },
      {
        "name": "Navigation.MapNavigation.startNavigation",
        "description": "Start navigating to your destination",
        "parameters": {
          "type": "object",
          "properties": {},
          "required": []
        }
      },
      {
        "name": "Navigation.FlightTickets.bookFlightTicket",
        "description": "To book a flight, you need to give the departure location, destination, departure time, etc.",
        "parameters": {
          "type": "object",
          "properties": {
            "flight_number": {
              "type": "string",
              "description": "e.g. CA1234"
            },
            "departure": {
              "type": "string",
              "description": "Origination"
            },
            "destination": {
              "type": "string",
              "description": "Reach ground"
            },
            "name": {
              "type": "string",
              "description": "Name of person who booked"
            },
            "time": {
              "type": "string",
              "description": "Trip start time"
            },
            "passenger_id": {
              "type": "string",
              "description": "Rider ID number"
            }
          },
          "required": [
            "flight_number",
            "departure",
            "destination",
            "name",
            "time",
            "passenger_id"
          ]
        }
      },
      {
        "name": "Photography.PhotoTaking.takePhoto",
        "description": "Press the shutter to take a picture",
        "parameters": {
          "type": "object",
          "properties": {},
          "required": []
        }
      },
      {
        "name": "Navigation.TaxiCarRental.callingTaxi",
        "description": "Send a ride request based on your starting location",
        "parameters": {
          "type": "object",
          "properties": {
            "departure": {
              "type": "string",
              "description": "Pickup location, default current location"
            },
            "destination": {
              "type": "string",
              "description": "Destination"
            },
            "time": {
              "type": "string",
              "description": "Taxi time, default current time"
            }
          },
          "required": [
            "departure",
            "destination",
            "time"
          ]
        }
      }
    ],
    "single_tool": [
      {
        "name": "OnlineShopping.ExpressDelivery.placeExpressOrder",
        "description": "Initiating a Sender to a Specified Recipient",
        "parameters": {
          "type": "object",
          "properties": {
            "recipient_name": {
              "type": "string",
              "description": "Recipient's name"
            },
            "recipient_phone": {
              "type": "string",
              "description": "Recipient phone number"
            },
            "recipient_address": {
              "type": "string",
              "description": "<g id=\"Bold\">Receiver's</g> <g id=\"Bold\">Address:</g>"
            }
          },
          "required": [
            "recipient_name",
            "recipient_phone",
            "recipient_address"
          ]
        }
      }
    ],
    "id": 764
  },
  {
    "messages": [
      {
        "role": "user",
        "content": "Please help me send a courier to the recipient of phone 13912345678"
      },
      {
        "role": "function call",
        "content": {
          "name": "OnlineShopping.ExpressDelivery.placeExpressOrder",
          "arguments": {
            "recipient_phone": "13912345678"
          }
        }
      },
      {
        "role": "assistant",
        "content": "What's the delivery address?"
      },
      {
        "role": "user",
        "content": "The delivery address is 88 Jianguo Road, Chaoyang District, Beijing, please confirm."
      },
      {
        "role": "function call",
        "content": {
          "name": "OnlineShopping.ExpressDelivery.placeExpressOrder",
          "arguments": {
            "recipient_phone": "13912345678",
            "recipient_address": "88 Jianguo Road, Chaoyang District, Beijing"
          }
        }
      },
      {
        "role": "assistant",
        "content": "What is the recipient's name?"
      },
      {
        "role": "user",
        "content": "It was wrong before. <g id=\"Bold\">Receiver's</g> <g id=\"Bold\">Address:</g> should be No. 1 Zhongguancun Street, Haidian District, Beijing"
      },
      {
        "role": "function call",
        "content": {
          "name": "OnlineShopping.ExpressDelivery.placeExpressOrder",
          "arguments": {
            "recipient_phone": "13912345678",
            "recipient_address": "No. 1 Zhongguancun Street, Haidian District, Beijing"
          }
        }
      },
      {
        "role": "assistant",
        "content": "What is the recipient's name?"
      },
      {
        "role": "user",
        "content": "The recipient's name is Li Mei, but please make sure the information is accurate so as not to make mistakes."
      },
      {
        "role": "function call",
        "content": {
          "name": "OnlineShopping.ExpressDelivery.placeExpressOrder",
          "arguments": {
            "recipient_phone": "13912345678",
            "recipient_address": "No. 1 Zhongguancun Street, Haidian District, Beijing",
            "recipient_name": "Li Mei"
          }
        }
      }
    ],
    "multiple_tools": [
      {
        "name": "SocialCommunication.SocialMedia.sendMediumMessage",
        "description": "Send a message to a specific friend in a specific medium",
        "parameters": {
          "type": "object",
          "properties": {
            "medium_name": {
              "type": "string",
              "description": "Media name"
            },
            "name": {
              "type": "string",
              "description": "Friend's nickname"
            },
            "content": {
              "type": "string",
              "description": "Content "
            },
            "account_number": {
              "type": "string",
              "description": "Friend's account"
            }
          },
          "required": [
            "medium_name",
            "name",
            "content",
            "account_number"
          ]
        }
      },
      {
        "name": "OnlineShopping.ExpressDelivery.placeExpressOrder",
        "description": "Initiating a Sender to a Specified Recipient",
        "parameters": {
          "type": "object",
          "properties": {
            "recipient_name": {
              "type": "string",
              "description": "Recipient's name"
            },
            "recipient_phone": {
              "type": "string",
              "description": "Recipient phone number"
            },
            "recipient_address": {
              "type": "string",
              "description": "<g id=\"Bold\">Receiver's</g> <g id=\"Bold\">Address:</g>"
            }
          },
          "required": [
            "recipient_name",
            "recipient_phone",
            "recipient_address"
          ]
        }
      },
      {
        "name": "Health.MedicalServices.bookDoctorAppointment",
        "description": "Schedule a appointment with a designated doctor for the user",
        "parameters": {
          "type": "object",
          "properties": {
            "doctor_name": {
              "type": "string",
              "description": "Doctor Name"
            },
            "appointment_time": {
              "type": "string",
              "description": "Specific time of appointment '"
            }
          },
          "required": [
            "doctor_name",
            "appointment_time"
          ]
        }
      },
      {
        "name": "SocialCommunication.InstantMessaging.sendFile",
        "description": "Send a file to a specific contact or group",
        "parameters": {
          "type": "object",
          "properties": {
            "receiver_name": {
              "type": "string",
              "description": "Name of the contact or group receiving the file"
            },
            "file_path": {
              "type": "string",
              "description": "The path or document name of the file to send locally"
            }
          },
          "required": [
            "receiver_name",
            "file_path"
          ]
        }
      },
      {
        "name": "VideoPlayback.ShortVideos.publishShortVideo",
        "description": "Post a short video",
        "parameters": {
          "type": "object",
          "properties": {
            "name": {
              "type": "string",
              "description": "Short video name"
            },
            "filepath": {
              "type": "string",
              "description": "Video"
            }
          },
          "required": [
            "name",
            "filepath"
          ]
        }
      }
    ],
    "single_tool": [
      {
        "name": "OnlineShopping.ExpressDelivery.placeExpressOrder",
        "description": "Initiating a Sender to a Specified Recipient",
        "parameters": {
          "type": "object",
          "properties": {
            "recipient_name": {
              "type": "string",
              "description": "Recipient's name"
            },
            "recipient_phone": {
              "type": "string",
              "description": "Recipient phone number"
            },
            "recipient_address": {
              "type": "string",
              "description": "<g id=\"Bold\">Receiver's</g> <g id=\"Bold\">Address:</g>"
            }
          },
          "required": [
            "recipient_name",
            "recipient_phone",
            "recipient_address"
          ]
        }
      }
    ],
    "id": 765
  },
  {
    "messages": [
      {
        "role": "user",
        "content": "I want to start watching the technology frontier lecture.mp4 This video"
      },
      {
        "role": "function call",
        "content": {
          "name": "VideoPlayback.OnlineVideos.playOnlineVideo",
          "arguments": {
            "video_name": "Technology frontier lecture.mp4"
          }
        }
      },
      {
        "role": "assistant",
        "content": "When to start watching Default viewing from scratch"
      },
      {
        "role": "user",
        "content": "Start from Beginning"
      },
      {
        "role": "function call",
        "content": {
          "name": "VideoPlayback.OnlineVideos.playOnlineVideo",
          "arguments": {
            "video_name": "Technology frontier lecture.mp4",
            "start": "Start from Beginning"
          }
        }
      },
      {
        "role": "assistant",
        "content": "Whether full-screen viewing is required"
      },
      {
        "role": "user",
        "content": "No, just the current window size."
      },
      {
        "role": "function call",
        "content": {
          "name": "VideoPlayback.OnlineVideos.playOnlineVideo",
          "arguments": {
            "video_name": "Technology frontier lecture.mp4",
            "start": "Start from Beginning",
            "full_screen": false
          }
        }
      },
      {
        "role": "assistant",
        "content": "What is the playback speed?"
      },
      {
        "role": "user",
        "content": "It was wrong before. Video Name should be Technology Innovation Lecture"
      },
      {
        "role": "function call",
        "content": {
          "name": "VideoPlayback.OnlineVideos.playOnlineVideo",
          "arguments": {
            "video_name": "Technology Innovation Lecture",
            "start": "Start from Beginning",
            "full_screen": false
          }
        }
      },
      {
        "role": "assistant",
        "content": "What is the playback speed?"
      },
      {
        "role": "user",
        "content": "1.0x Speed"
      },
      {
        "role": "function call",
        "content": {
          "name": "VideoPlayback.OnlineVideos.playOnlineVideo",
          "arguments": {
            "video_name": "Technology Innovation Lecture",
            "start": "Start from Beginning",
            "full_screen": false,
            "playback_speed": 1.0
          }
        }
      },
      {
        "role": "assistant",
        "content": "Whether to open the barrage"
      },
      {
        "role": "user",
        "content": "Yes, open barrage True"
      },
      {
        "role": "function call",
        "content": {
          "name": "VideoPlayback.OnlineVideos.playOnlineVideo",
          "arguments": {
            "video_name": "Technology Innovation Lecture",
            "start": "Start from Beginning",
            "full_screen": false,
            "playback_speed": 1.0,
            "danmaku": true
          }
        }
      }
    ],
    "multiple_tools": [
      {
        "name": "OfficeSoftware.Documents.readDocument",
        "description": "Read the specified document based on the document name",
        "parameters": {
          "type": "object",
          "properties": {
            "document_name": {
              "type": "string",
              "description": "Document name, required"
            }
          },
          "required": [
            "document_name"
          ]
        }
      },
      {
        "name": "UtilityTools.Reading.openReadingBook",
        "description": "Open book with specified name",
        "parameters": {
          "type": "object",
          "properties": {
            "book_name": {
              "type": "string",
              "description": "Book Name"
            },
            "type": {
              "type": "string",
              "description": "Look, listen; default reading"
            }
          },
          "required": [
            "book_name",
            "type"
          ]
        }
      },
      {
        "name": "Photography.PhotoEditing.viewPicture",
        "description": "View photo",
        "parameters": {
          "type": "object",
          "properties": {
            "name_or_path": {
              "type": "string",
              "description": "Photo name or path"
            }
          },
          "required": [
            "name_or_path"
          ]
        }
      },
      {
        "name": "VideoPlayback.OnlineVideos.playOnlineVideo",
        "description": "Watch the video (when to start, watch from scratch by default)",
        "parameters": {
          "type": "object",
          "properties": {
            "video_name": {
              "type": "string",
              "description": "Video Name"
            },
            "start": {
              "type": "string",
              "description": "When to start, watch from scratch by default"
            },
            "full_screen": {
              "type": "boolean",
              "description": "Full Screen"
            },
            "playback_speed": {
              "type": "float",
              "description": "Playback Speed"
            },
            "danmaku": {
              "type": "boolean",
              "description": "enable bullet text"
            }
          },
          "required": [
            "video_name",
            "start",
            "full_screen",
            "playback_speed",
            "danmaku"
          ]
        }
      },
      {
        "name": "UtilityTools.Search.openWebPage",
        "description": "Open the specified webpage or website",
        "parameters": {
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "description": "Web Url"
            },
            "site": {
              "type": "string",
              "description": "Website name, e.g. Bing Search, China Industrial and Commercial Network"
            }
          },
          "required": [
            "url",
            "site"
          ]
        }
      }
    ],
    "single_tool": [
      {
        "name": "VideoPlayback.OnlineVideos.playOnlineVideo",
        "description": "Watch the video (when to start, watch from scratch by default)",
        "parameters": {
          "type": "object",
          "properties": {
            "video_name": {
              "type": "string",
              "description": "Video Name"
            },
            "start": {
              "type": "string",
              "description": "When to start, watch from scratch by default"
            },
            "full_screen": {
              "type": "boolean",
              "description": "Full Screen"
            },
            "playback_speed": {
              "type": "float",
              "description": "Playback Speed"
            },
            "danmaku": {
              "type": "boolean",
              "description": "enable bullet text"
            }
          },
          "required": [
            "video_name",
            "start",
            "full_screen",
            "playback_speed",
            "danmaku"
          ]
        }
      }
    ],
    "id": 766
  },
  {
    "messages": [
      {
        "role": "user",
        "content": "Schedule a livestream for next Friday at 8pm"
      },
      {
        "role": "function call",
        "content": {
          "name": "VideoPlayback.LiveStreaming.orderLiveStream",
          "arguments": {
            "livestream_time": "Next Friday at 8pm"
          }
        }
      },
      {
        "role": "assistant",
        "content": "What is the name of the livestream"
      },
      {
        "role": "user",
        "content": "Healthy Eating Seminar"
      },
      {
        "role": "function call",
        "content": {
          "name": "VideoPlayback.LiveStreaming.orderLiveStream",
          "arguments": {
            "livestream_time": "Next Friday at 8pm",
            "livestream_name": "Healthy Eating Seminar"
          }
        }
      },
      {
        "role": "assistant",
        "content": "What is the name of the anchor"
      },
      {
        "role": "user",
        "content": "It was wrong before. live broadcast time should be April 15, 2023 at 9pm"
      },
      {
        "role": "function call",
        "content": {
          "name": "VideoPlayback.LiveStreaming.orderLiveStream",
          "arguments": {
            "livestream_time": "April 15, 2023 at 9pm",
            "livestream_name": "Healthy Eating Seminar"
          }
        }
      },
      {
        "role": "assistant",
        "content": "What is the name of the anchor"
      },
      {
        "role": "user",
        "content": "The name of the anchor is Zhang Tingting, who is a very popular anchor."
      },
      {
        "role": "function call",
        "content": {
          "name": "VideoPlayback.LiveStreaming.orderLiveStream",
          "arguments": {
            "livestream_time": "April 15, 2023 at 9pm",
            "livestream_name": "Healthy Eating Seminar",
            "streamer_name": "Zhang Tingting"
          }
        }
      }
    ],
    "multiple_tools": [
      {
        "name": "Navigation.TrainTickets.bookTrainTicket",
        "description": "Book a train ticket for a specific time, origin, or destination for a specific rider",
        "parameters": {
          "type": "object",
          "properties": {
            "ride_date": {
              "type": "string",
              "description": "Date of trip"
            },
            "departure_station": {
              "type": "string",
              "description": "Departure Station"
            },
            "destination_station": {
              "type": "string",
              "description": "arrival station"
            },
            "train_type": {
              "type": "string",
              "description": "Train type, optional types are high-speed rail, motor vehicles, general express, express, etc."
            },
            "seat_type": {
              "type": "string",
              "description": "Seat Type"
            },
            "passenger_name": {
              "type": "string",
              "description": "Rider's name"
            },
            "passenger_id": {
              "type": "string",
              "description": "Rider ID number"
            }
          },
          "required": [
            "ride_date",
            "departure_station",
            "destination_station",
            "train_type",
            "seat_type",
            "passenger_name",
            "passenger_id"
          ]
        }
      },
      {
        "name": "VideoPlayback.LiveStreaming.orderLiveStream",
        "description": "Schedule a livestream",
        "parameters": {
          "type": "object",
          "properties": {
            "livestream_name": {
              "type": "string",
              "description": "Livestream Name"
            },
            "streamer_name": {
              "type": "string",
              "description": "Broadcaster Name"
            },
            "channel_name": {
              "type": "string",
              "description": "Channel name"
            },
            "livestream_time": {
              "type": "string",
              "description": "live broadcast time"
            }
          },
          "required": [
            "livestream_name",
            "streamer_name",
            "channel_name",
            "livestream_time"
          ]
        }
      },
      {
        "name": "ConvenientLiving.FoodDelivery.placeRestaurantOrder",
        "description": "Order select restaurants and dishes",
        "parameters": {
          "type": "object",
          "properties": {
            "restaurant_name": {
              "type": "string",
              "description": "Name of the restaurant"
            },
            "dishes": {
              "type": "string",
              "description": "Array containing item IDs"
            },
            "delivery_address": {
              "type": "string",
              "description": "Delivery address"
            },
            "delivery_time": {
              "type": "string",
              "description": "Expected delivery time in HH: mm format"
            },
            "note": {
              "type": "string",
              "description": "Remarks"
            }
          },
          "required": [
            "restaurant_name",
            "dishes",
            "delivery_address",
            "delivery_time",
            "note"
          ]
        }
      },
      {
        "name": "Travel.HotelServices.bookHotel",
        "description": "Book a room at a selected hotel",
        "parameters": {
          "type": "object",
          "properties": {
            "name": {
              "type": "string",
              "description": "Hotel Name"
            },
            "checkin_date": {
              "type": "string",
              "description": "Check-in Date"
            },
            "checkout_date": {
              "type": "string",
              "description": "DEPARTURE DATE"
            },
            "room_type": {
              "type": "string",
              "description": "Room types"
            },
            "tenant_name": {
              "type": "string",
              "description": "Name of the guest staying"
            },
            "tenant_number": {
              "type": "string",
              "description": "Telephone number of the guest staying at the hotel"
            }
          },
          "required": [
            "name",
            "checkin_date",
            "checkout_date",
            "room_type",
            "tenant_name",
            "tenant_number"
          ]
        }
      },
      {
        "name": "OfficeSoftware.Conferencing.createMeeting",
        "description": "Create a new meeting",
        "parameters": {
          "type": "object",
          "properties": {
            "title": {
              "type": "string",
              "description": "Meeting Title:"
            },
            "start_time": {
              "type": "string",
              "description": "Conference Start Time"
            },
            "end_time": {
              "type": "string",
              "description": "Meeting end time"
            },
            "location": {
              "type": "string",
              "description": "Meeting Address"
            },
            "participant_list": {
              "type": "string",
              "description": "List of participants in the meeting"
            }
          },
          "required": [
            "title",
            "start_time",
            "end_time",
            "location",
            "participant_list"
          ]
        }
      }
    ],
    "single_tool": [
      {
        "name": "VideoPlayback.LiveStreaming.orderLiveStream",
        "description": "Schedule a livestream",
        "parameters": {
          "type": "object",
          "properties": {
            "livestream_name": {
              "type": "string",
              "description": "Livestream Name"
            },
            "streamer_name": {
              "type": "string",
              "description": "Broadcaster Name"
            },
            "channel_name": {
              "type": "string",
              "description": "Channel name"
            },
            "livestream_time": {
              "type": "string",
              "description": "live broadcast time"
            }
          },
          "required": [
            "livestream_name",
            "streamer_name",
            "channel_name",
            "livestream_time"
          ]
        }
      }
    ],
    "id": 767
  },
  {
    "messages": [
      {
        "role": "user",
        "content": "I'd like to watch the live broadcast this Saturday at 3pm and make an appointment for me"
      },
      {
        "role": "function call",
        "content": {
          "name": "VideoPlayback.LiveStreaming.orderLiveStream",
          "arguments": {
            "livestream_time": "This Saturday at 3pm"
          }
        }
      },
      {
        "role": "assistant",
        "content": "What is the name of the livestream"
      },
      {
        "role": "user",
        "content": "Global Tourism Sharing"
      },
      {
        "role": "function call",
        "content": {
          "name": "VideoPlayback.LiveStreaming.orderLiveStream",
          "arguments": {
            "livestream_time": "This Saturday at 3pm",
            "livestream_name": "Global Tourism Sharing"
          }
        }
      },
      {
        "role": "assistant",
        "content": "What is the name of the anchor"
      },
      {
        "role": "user",
        "content": "It was wrong before. Livestream Name should be Healthy Eating Seminar"
      },
      {
        "role": "function call",
        "content": {
          "name": "VideoPlayback.LiveStreaming.orderLiveStream",
          "arguments": {
            "livestream_time": "This Saturday at 3pm",
            "livestream_name": "Healthy Eating Seminar"
          }
        }
      },
      {
        "role": "assistant",
        "content": "What is the name of the anchor"
      },
      {
        "role": "user",
        "content": "Li Xiaoyao's Game World"
      },
      {
        "role": "function call",
        "content": {
          "name": "VideoPlayback.LiveStreaming.orderLiveStream",
          "arguments": {
            "livestream_time": "This Saturday at 3pm",
            "livestream_name": "Healthy Eating Seminar",
            "streamer_name": "Li Xiaoyao"
          }
        }
      }
    ],
    "multiple_tools": [
      {
        "name": "SocialCommunication.Calling.quickPhoneCallReply",
        "description": "Set up some common response statements ahead of time, or set them up individually for a contact to send quickly during a call",
        "parameters": {
          "type": "object",
          "properties": {
            "reply_content": {
              "type": "string",
              "description": "Quick replies"
            },
            "contact_name": {
              "type": "string",
              "description": "Contact person"
            }
          },
          "required": [
            "reply_content",
            "contact_name"
          ]
        }
      },
      {
        "name": "UtilityTools.AlarmClock.viewAlarm",
        "description": "View set alarms based on alarm name or alarm time",
        "parameters": {
          "type": "object",
          "properties": {
            "clock_time_name": {
              "type": "string",
              "description": "Alarm name, defaults to all alarms"
            },
            "clock_time": {
              "type": "string",
              "description": "Alarm time"
            }
          },
          "required": [
            "clock_time_name",
            "clock_time"
          ]
        }
      },
      {
        "name": "Photography.PhotoTaking.takePhotoDelay",
        "description": "Take photos after a set period of time",
        "parameters": {
          "type": "object",
          "properties": {
            "delay": {
              "type": "integer",
              "description": "Delay duration, in seconds"
            }
          },
          "required": [
            "delay"
          ]
        }
      },
      {
        "name": "VideoPlayback.LiveStreaming.orderLiveStream",
        "description": "Schedule a livestream",
        "parameters": {
          "type": "object",
          "properties": {
            "livestream_name": {
              "type": "string",
              "description": "Livestream Name"
            },
            "streamer_name": {
              "type": "string",
              "description": "Broadcaster Name"
            },
            "channel_name": {
              "type": "string",
              "description": "Channel name"
            },
            "livestream_time": {
              "type": "string",
              "description": "live broadcast time"
            }
          },
          "required": [
            "livestream_name",
            "streamer_name",
            "channel_name",
            "livestream_time"
          ]
        }
      },
      {
        "name": "SocialCommunication.SocialMedia.viewMediumMessage",
        "description": "View messages for specified friends in specified media (defaults to last week)",
        "parameters": {
          "type": "object",
          "properties": {
            "medium_name": {
              "type": "string",
              "description": "Media name"
            },
            "name": {
              "type": "string",
              "description": "Friend's nickname"
            },
            "account_number": {
              "type": "string",
              "description": "Friend's account"
            },
            "time": {
              "type": "string",
              "description": "Release Date"
            }
          },
          "required": [
            "medium_name",
            "name",
            "account_number",
            "time"
          ]
        }
      }
    ],
    "single_tool": [
      {
        "name": "VideoPlayback.LiveStreaming.orderLiveStream",
        "description": "Schedule a livestream",
        "parameters": {
          "type": "object",
          "properties": {
            "livestream_name": {
              "type": "string",
              "description": "Livestream Name"
            },
            "streamer_name": {
              "type": "string",
              "description": "Broadcaster Name"
            },
            "channel_name": {
              "type": "string",
              "description": "Channel name"
            },
            "livestream_time": {
              "type": "string",
              "description": "live broadcast time"
            }
          },
          "required": [
            "livestream_name",
            "streamer_name",
            "channel_name",
            "livestream_time"
          ]
        }
      }
    ],
    "id": 768
  },
  {
    "messages": [
      {
        "role": "user",
        "content": "I want to apply for insurance because the accidental injury caused medical expenses"
      },
      {
        "role": "function call",
        "content": {
          "name": "Finance.Insurance.claimInsurance",
          "arguments": {
            "claim_reason": "Accidental Injury Causes Medical Expenses"
          }
        }
      },
      {
        "role": "assistant",
        "content": "What is the name of the insurance product"
      },
      {
        "role": "user",
        "content": "What I need is full corporate coverage, can you tell me more?"
      },
      {
        "role": "function call",
        "content": {
          "name": "Finance.Insurance.claimInsurance",
          "arguments": {
            "claim_reason": "Accidental Injury Causes Medical Expenses",
            "insurance_name": "Enterprise all-encompassing"
          }
        }
      },
      {
        "role": "assistant",
        "content": "What are the types of insurance products, such as life insurance, health insurance, property insurance, car insurance, etc."
      },
      {
        "role": "user",
        "content": "It was wrong before. Claim reason should be There is a fire in my home and I need to make a claim for damage to my home"
      },
      {
        "role": "function call",
        "content": {
          "name": "Finance.Insurance.claimInsurance",
          "arguments": {
            "claim_reason": "There is a fire in my home and I need to make a claim for damage to my home",
            "insurance_name": "Enterprise all-encompassing"
          }
        }
      },
      {
        "role": "assistant",
        "content": "What are the types of insurance products, such as life insurance, health insurance, property insurance, car insurance, etc."
      },
      {
        "role": "user",
        "content": "What I need to know about property insurance."
      },
      {
        "role": "function call",
        "content": {
          "name": "Finance.Insurance.claimInsurance",
          "arguments": {
            "claim_reason": "There is a fire in my home and I need to make a claim for damage to my home",
            "insurance_name": "Enterprise all-encompassing",
            "insurance_type": "Property insurance"
          }
        }
      }
    ],
    "multiple_tools": [
      {
        "name": "Finance.Insurance.claimInsurance",
        "description": "Apply for Insurance Claims",
        "parameters": {
          "type": "object",
          "properties": {
            "insurance_name": {
              "type": "string",
              "description": "Insurance Product Name"
            },
            "insurance_type": {
              "type": "string",
              "description": "Types of insurance products, such as life insurance, health insurance, property insurance, car insurance, etc."
            },
            "claim_reason": {
              "type": "string",
              "description": "Claim reason"
            },
            "claim_amount": {
              "type": "float",
              "description": "Claim amount, unit (yuan)"
            }
          },
          "required": [
            "insurance_name",
            "insurance_type",
            "claim_reason",
            "claim_amount"
          ]
        }
      },
      {
        "name": "ConvenientLiving.UtilityPayments.verifyBill",
        "description": "Verify the accuracy of bills such as utilities",
        "parameters": {
          "type": "object",
          "properties": {
            "service_type": {
              "type": "string",
              "description": "Types of paid services, such as utilities, gas, etc."
            },
            "user_name": {
              "type": "string",
              "description": "User Name"
            }
          },
          "required": [
            "service_type",
            "user_name"
          ]
        }
      },
      {
        "name": "Finance.Insurance.getInsuranceClaimProgress",
        "description": "Check the progress of your insurance claim",
        "parameters": {
          "type": "object",
          "properties": {
            "insurance_name": {
              "type": "string",
              "description": "Insurance Product Name"
            },
            "insurance_type": {
              "type": "string",
              "description": "Types of insurance products, such as life insurance, health insurance, property insurance, car insurance, etc."
            }
          },
          "required": [
            "insurance_name",
            "insurance_type"
          ]
        }
      },
      {
        "name": "Finance.Insurance.terminateInsurancePolicy",
        "description": "Uninsure the insurance policy",
        "parameters": {
          "type": "object",
          "properties": {
            "insurance_name": {
              "type": "string",
              "description": "Insurance Product Name"
            },
            "insurance_type": {
              "type": "string",
              "description": "Types of insurance products, such as life insurance, health insurance, property insurance, car insurance, etc."
            }
          },
          "required": [
            "insurance_name",
            "insurance_type"
          ]
        }
      },
      {
        "name": "Finance.Insurance.downloadInsuranceDocument",
        "description": "Download insurance documents",
        "parameters": {
          "type": "object",
          "properties": {
            "insurance_name": {
              "type": "string",
              "description": "Insurance Product Name"
            },
            "insurance_type": {
              "type": "string",
              "description": "Types of insurance products, such as life insurance, health insurance, etc."
            },
            "document_type": {
              "type": "string",
              "description": "Document type, such as policy contract, claim description, etc."
            }
          },
          "required": [
            "insurance_name",
            "insurance_type",
            "document_type"
          ]
        }
      }
    ],
    "single_tool": [
      {
        "name": "Finance.Insurance.claimInsurance",
        "description": "Apply for Insurance Claims",
        "parameters": {
          "type": "object",
          "properties": {
            "insurance_name": {
              "type": "string",
              "description": "Insurance Product Name"
            },
            "insurance_type": {
              "type": "string",
              "description": "Types of insurance products, such as life insurance, health insurance, property insurance, car insurance, etc."
            },
            "claim_reason": {
              "type": "string",
              "description": "Claim reason"
            },
            "claim_amount": {
              "type": "float",
              "description": "Claim amount, unit (yuan)"
            }
          },
          "required": [
            "insurance_name",
            "insurance_type",
            "claim_reason",
            "claim_amount"
          ]
        }
      }
    ],
    "id": 769
  },
  {
    "messages": [
      {
        "role": "user",
        "content": "Please help me turn on the automatic fund subscription function and set the amount of each subscription to 1000 yuan."
      },
      {
        "role": "function call",
        "content": {
          "name": "Finance.Funds.setFundAutoPurchase",
          "arguments": {
            "amount": 1000.0
          }
        }
      },
      {
        "role": "assistant",
        "content": "Please provide fund name"
      },
      {
        "role": "user",
        "content": "Tianhong Enhanced Revenue"
      },
      {
        "role": "function call",
        "content": {
          "name": "Finance.Funds.setFundAutoPurchase",
          "arguments": {
            "amount": 1000.0,
            "fund_name": "Tianhong Enhanced Revenue"
          }
        }
      },
      {
        "role": "assistant",
        "content": "Please provide fund code"
      },
      {
        "role": "user",
        "content": "It was wrong before. Value (Unit: yuan) should be 2000.0"
      },
      {
        "role": "function call",
        "content": {
          "name": "Finance.Funds.setFundAutoPurchase",
          "arguments": {
            "amount": 2000.0,
            "fund_name": "Tianhong Enhanced Revenue"
          }
        }
      },
      {
        "role": "assistant",
        "content": "Please provide fund code"
      },
      {
        "role": "user",
        "content": "320007 is my fund code."
      },
      {
        "role": "function call",
        "content": {
          "name": "Finance.Funds.setFundAutoPurchase",
          "arguments": {
            "amount": 2000.0,
            "fund_name": "Tianhong Enhanced Revenue",
            "fund_code": "320007"
          }
        }
      }
    ],
    "multiple_tools": [
      {
        "name": "OfficeSoftware.CloudStorage.netdiskSetRecycleBinAutoEmpty",
        "description": "Set when the Drive Recycle Bin automatically empties",
        "parameters": {
          "type": "object",
          "properties": {
            "interval_days": {
              "type": "string",
              "description": "Time automatically emptied"
            }
          },
          "required": [
            "interval_days"
          ]
        }
      },
      {
        "name": "ConvenientLiving.UtilityPayments.setAutoPayment",
        "description": "Set up automatic payment for utilities, etc.",
        "parameters": {
          "type": "object",
          "properties": {
            "service_type": {
              "type": "string",
              "description": "Types of paid services, such as utilities, gas, etc."
            },
            "user_name": {
              "type": "string",
              "description": "User Name"
            }
          },
          "required": [
            "service_type",
            "user_name"
          ]
        }
      },
      {
        "name": "Finance.Funds.setFundAutoRedeem",
        "description": "Set auto-redemption for designated funds",
        "parameters": {
          "type": "object",
          "properties": {
            "fund_name": {
              "type": "string",
              "description": "Fund name"
            },
            "fund_code": {
              "type": "string",
              "description": "Fund  Code"
            },
            "amount": {
              "type": "float",
              "description": "Value (Unit: yuan)"
            },
            "triggering_conditions": {
              "type": "string",
              "description": "Trigger conditions, such as net worth reaching a certain value"
            }
          },
          "required": [
            "fund_name",
            "fund_code",
            "amount",
            "triggering_conditions"
          ]
        }
      },
      {
        "name": "Finance.Funds.setFundAutoPurchase",
        "description": "Set auto-requisition for specified funds",
        "parameters": {
          "type": "object",
          "properties": {
            "fund_name": {
              "type": "string",
              "description": "Fund name"
            },
            "fund_code": {
              "type": "string",
              "description": "Fund  Code"
            },
            "amount": {
              "type": "float",
              "description": "Value (Unit: yuan)"
            },
            "frequency": {
              "type": "string",
              "description": "Frequency, default is monthly, value is monthly, weekly or daily"
            }
          },
          "required": [
            "fund_name",
            "fund_code",
            "amount",
            "frequency"
          ]
        }
      },
      {
        "name": "UtilityTools.AlarmClock.editTimer",
        "description": "Modify timer ring settings",
        "parameters": {
          "type": "object",
          "properties": {
            "timer_name": {
              "type": "string",
              "description": "Timer Name:      {0}"
            },
            "timer": {
              "type": "string",
              "description": "Timer time"
            }
          },
          "required": [
            "timer_name",
            "timer"
          ]
        }
      }
    ],
    "single_tool": [
      {
        "name": "Finance.Funds.setFundAutoPurchase",
        "description": "Set auto-requisition for specified funds",
        "parameters": {
          "type": "object",
          "properties": {
            "fund_name": {
              "type": "string",
              "description": "Fund name"
            },
            "fund_code": {
              "type": "string",
              "description": "Fund  Code"
            },
            "amount": {
              "type": "float",
              "description": "Value (Unit: yuan)"
            },
            "frequency": {
              "type": "string",
              "description": "Frequency, default is monthly, value is monthly, weekly or daily"
            }
          },
          "required": [
            "fund_name",
            "fund_code",
            "amount",
            "frequency"
          ]
        }
      }
    ],
    "id": 775
  },
  {
    "messages": [
      {
        "role": "user",
        "content": "I want to set up automatic redemption of my fund for 5,000 yuan"
      },
      {
        "role": "function call",
        "content": {
          "name": "Finance.Funds.setFundAutoRedeem",
          "arguments": {
            "amount": 5000
          }
        }
      },
      {
        "role": "assistant",
        "content": "Please provide fund name"
      },
      {
        "role": "user",
        "content": "I would like to know more about the Robust Income fund."
      },
      {
        "role": "function call",
        "content": {
          "name": "Finance.Funds.setFundAutoRedeem",
          "arguments": {
            "amount": 5000,
            "fund_name": "Robust Earnings"
          }
        }
      },
      {
        "role": "assistant",
        "content": "Please provide fund code"
      },
      {
        "role": "user",
        "content": "It was wrong before. Fund name should be Growth Star"
      },
      {
        "role": "function call",
        "content": {
          "name": "Finance.Funds.setFundAutoRedeem",
          "arguments": {
            "amount": 5000,
            "fund_name": "Growth Star"
          }
        }
      },
      {
        "role": "assistant",
        "content": "Please provide fund code"
      },
      {
        "role": "user",
        "content": "005678, this is the fund code I want to query."
      },
      {
        "role": "function call",
        "content": {
          "name": "Finance.Funds.setFundAutoRedeem",
          "arguments": {
            "amount": 5000,
            "fund_name": "Growth Star",
            "fund_code": "005678"
          }
        }
      }
    ],
    "multiple_tools": [
      {
        "name": "OfficeSoftware.CloudStorage.netdiskSetRecycleBinAutoEmpty",
        "description": "Set when the Drive Recycle Bin automatically empties",
        "parameters": {
          "type": "object",
          "properties": {
            "interval_days": {
              "type": "string",
              "description": "Time automatically emptied"
            }
          },
          "required": [
            "interval_days"
          ]
        }
      },
      {
        "name": "Finance.Funds.setFundAutoPurchase",
        "description": "Set auto-requisition for specified funds",
        "parameters": {
          "type": "object",
          "properties": {
            "fund_name": {
              "type": "string",
              "description": "Fund name"
            },
            "fund_code": {
              "type": "string",
              "description": "Fund  Code"
            },
            "amount": {
              "type": "float",
              "description": "Value (Unit: yuan)"
            },
            "frequency": {
              "type": "string",
              "description": "Frequency, default is monthly, value is monthly, weekly or daily"
            }
          },
          "required": [
            "fund_name",
            "fund_code",
            "amount",
            "frequency"
          ]
        }
      },
      {
        "name": "Finance.Funds.getFundRedemptionFee",
        "description": "Query redemption fee information for designated funds",
        "parameters": {
          "type": "object",
          "properties": {
            "fund_name": {
              "type": "string",
              "description": "Fund name"
            },
            "fund_code": {
              "type": "string",
              "description": "Fund  Code"
            }
          },
          "required": [
            "fund_name",
            "fund_code"
          ]
        }
      },
      {
        "name": "Finance.Funds.recommendFunds",
        "description": "Recommend user-friendly funds based on investment objectives and duration",
        "parameters": {
          "type": "object",
          "properties": {
            "objective": {
              "type": "string",
              "description": "Investment objectives such as robust, aggressive"
            },
            "investment_term": {
              "type": "string",
              "description": "Investment term, e.g. short term, long term"
            }
          },
          "required": [
            "objective",
            "investment_term"
          ]
        }
      },
      {
        "name": "Finance.Funds.setFundAutoRedeem",
        "description": "Set auto-redemption for designated funds",
        "parameters": {
          "type": "object",
          "properties": {
            "fund_name": {
              "type": "string",
              "description": "Fund name"
            },
            "fund_code": {
              "type": "string",
              "description": "Fund  Code"
            },
            "amount": {
              "type": "float",
              "description": "Value (Unit: yuan)"
            },
            "triggering_conditions": {
              "type": "string",
              "description": "Trigger conditions, such as net worth reaching a certain value"
            }
          },
          "required": [
            "fund_name",
            "fund_code",
            "amount",
            "triggering_conditions"
          ]
        }
      }
    ],
    "single_tool": [
      {
        "name": "Finance.Funds.setFundAutoRedeem",
        "description": "Set auto-redemption for designated funds",
        "parameters": {
          "type": "object",
          "properties": {
            "fund_name": {
              "type": "string",
              "description": "Fund name"
            },
            "fund_code": {
              "type": "string",
              "description": "Fund  Code"
            },
            "amount": {
              "type": "float",
              "description": "Value (Unit: yuan)"
            },
            "triggering_conditions": {
              "type": "string",
              "description": "Trigger conditions, such as net worth reaching a certain value"
            }
          },
          "required": [
            "fund_name",
            "fund_code",
            "amount",
            "triggering_conditions"
          ]
        }
      }
    ],
    "id": 776
  },
  {
    "messages": [
      {
        "role": "user",
        "content": "Please help me set up automatic fund redemption, the amount is set to 10,000 yuan"
      },
      {
        "role": "function call",
        "content": {
          "name": "Finance.Funds.setFundAutoRedeem",
          "arguments": {
            "amount": 10000
          }
        }
      },
      {
        "role": "assistant",
        "content": "Please provide fund name"
      },
      {
        "role": "user",
        "content": "Growth Star"
      },
      {
        "role": "function call",
        "content": {
          "name": "Finance.Funds.setFundAutoRedeem",
          "arguments": {
            "amount": 10000,
            "fund_name": "Growth Star"
          }
        }
      },
      {
        "role": "assistant",
        "content": "Please provide fund code"
      },
      {
        "role": "user",
        "content": "It was wrong before. Value (Unit: yuan) should be 5000.0"
      },
      {
        "role": "function call",
        "content": {
          "name": "Finance.Funds.setFundAutoRedeem",
          "arguments": {
            "amount": 5000.0,
            "fund_name": "Growth Star"
          }
        }
      },
      {
        "role": "assistant",
        "content": "Please provide fund code"
      },
      {
        "role": "user",
        "content": "001234, this is the fund code I want to query."
      },
      {
        "role": "function call",
        "content": {
          "name": "Finance.Funds.setFundAutoRedeem",
          "arguments": {
            "amount": 5000.0,
            "fund_name": "Growth Star",
            "fund_code": "001234"
          }
        }
      }
    ],
    "multiple_tools": [
      {
        "name": "UtilityTools.AlarmClock.editTimer",
        "description": "Modify timer ring settings",
        "parameters": {
          "type": "object",
          "properties": {
            "timer_name": {
              "type": "string",
              "description": "Timer Name:      {0}"
            },
            "timer": {
              "type": "string",
              "description": "Timer time"
            }
          },
          "required": [
            "timer_name",
            "timer"
          ]
        }
      },
      {
        "name": "Finance.Funds.setFundAutoRedeem",
        "description": "Set auto-redemption for designated funds",
        "parameters": {
          "type": "object",
          "properties": {
            "fund_name": {
              "type": "string",
              "description": "Fund name"
            },
            "fund_code": {
              "type": "string",
              "description": "Fund  Code"
            },
            "amount": {
              "type": "float",
              "description": "Value (Unit: yuan)"
            },
            "triggering_conditions": {
              "type": "string",
              "description": "Trigger conditions, such as net worth reaching a certain value"
            }
          },
          "required": [
            "fund_name",
            "fund_code",
            "amount",
            "triggering_conditions"
          ]
        }
      },
      {
        "name": "OfficeSoftware.CloudStorage.netdiskSetRecycleBinAutoEmpty",
        "description": "Set when the Drive Recycle Bin automatically empties",
        "parameters": {
          "type": "object",
          "properties": {
            "interval_days": {
              "type": "string",
              "description": "Time automatically emptied"
            }
          },
          "required": [
            "interval_days"
          ]
        }
      },
      {
        "name": "Finance.Funds.setFundAutoPurchase",
        "description": "Set auto-requisition for specified funds",
        "parameters": {
          "type": "object",
          "properties": {
            "fund_name": {
              "type": "string",
              "description": "Fund name"
            },
            "fund_code": {
              "type": "string",
              "description": "Fund  Code"
            },
            "amount": {
              "type": "float",
              "description": "Value (Unit: yuan)"
            },
            "frequency": {
              "type": "string",
              "description": "Frequency, default is monthly, value is monthly, weekly or daily"
            }
          },
          "required": [
            "fund_name",
            "fund_code",
            "amount",
            "frequency"
          ]
        }
      },
      {
        "name": "Finance.Funds.getFundRedemptionFee",
        "description": "Query redemption fee information for designated funds",
        "parameters": {
          "type": "object",
          "properties": {
            "fund_name": {
              "type": "string",
              "description": "Fund name"
            },
            "fund_code": {
              "type": "string",
              "description": "Fund  Code"
            }
          },
          "required": [
            "fund_name",
            "fund_code"
          ]
        }
      }
    ],
    "single_tool": [
      {
        "name": "Finance.Funds.setFundAutoRedeem",
        "description": "Set auto-redemption for designated funds",
        "parameters": {
          "type": "object",
          "properties": {
            "fund_name": {
              "type": "string",
              "description": "Fund name"
            },
            "fund_code": {
              "type": "string",
              "description": "Fund  Code"
            },
            "amount": {
              "type": "float",
              "description": "Value (Unit: yuan)"
            },
            "triggering_conditions": {
              "type": "string",
              "description": "Trigger conditions, such as net worth reaching a certain value"
            }
          },
          "required": [
            "fund_name",
            "fund_code",
            "amount",
            "triggering_conditions"
          ]
        }
      }
    ],
    "id": 777
  },
  {
    "messages": [
      {
        "role": "user",
        "content": "I would like to update the subscription amount of the fund to 5000 yuan"
      },
      {
        "role": "function call",
        "content": {
          "name": "Finance.Funds.updateFundPurchaseAmount",
          "arguments": {
            "new_amount": 5000.0
          }
        }
      },
      {
        "role": "assistant",
        "content": "What is the name of the fund"
      },
      {
        "role": "user",
        "content": "The name of the fund is the Science and Technology Innovation Fund."
      },
      {
        "role": "function call",
        "content": {
          "name": "Finance.Funds.updateFundPurchaseAmount",
          "arguments": {
            "new_amount": 5000.0,
            "fund_name": "Science and Technology Innovation Fund"
          }
        }
      },
      {
        "role": "assistant",
        "content": "What is the fund code"
      },
      {
        "role": "user",
        "content": "It was wrong before. Updated amount, unit (yuan) should be 15000.5"
      },
      {
        "role": "function call",
        "content": {
          "name": "Finance.Funds.updateFundPurchaseAmount",
          "arguments": {
            "new_amount": 15000.5,
            "fund_name": "Science and Technology Innovation Fund"
          }
        }
      },
      {
        "role": "assistant",
        "content": "What is the fund code"
      },
      {
        "role": "user",
        "content": "The fund code is 005678 and I need to know more about this fund."
      },
      {
        "role": "function call",
        "content": {
          "name": "Finance.Funds.updateFundPurchaseAmount",
          "arguments": {
            "new_amount": 15000.5,
            "fund_name": "Science and Technology Innovation Fund",
            "fund_code": "005678"
          }
        }
      }
    ],
    "multiple_tools": [
      {
        "name": "Health.HealthManagement.updateDietRecord",
        "description": "Changing dietary records based on updated conditions",
        "parameters": {
          "type": "object",
          "properties": {
            "food_name": {
              "type": "string",
              "description": "Food Name"
            },
            "meal_type": {
              "type": "string",
              "description": "Types of meals, such as breakfast, lunch, dinner, or add-ons"
            },
            "time": {
              "type": "string",
              "description": "Meal Time"
            },
            "update_content": {
              "type": "string",
              "description": "Updates, such as changes to food names, meal types, meal times, etc."
            }
          },
          "required": [
            "food_name",
            "meal_type",
            "time",
            "update_content"
          ]
        }
      },
      {
        "name": "ConvenientLiving.FoodDelivery.updateRestaurantOrder",
        "description": "Updating order information based on the order, such as delivery address, notes, etc.",
        "parameters": {
          "type": "object",
          "properties": {
            "order_name": {
              "type": "string",
              "description": "Contents of the order"
            },
            "delivery_address": {
              "type": "string",
              "description": "Delivery address"
            },
            "delivery_time": {
              "type": "string",
              "description": "Expected delivery time in HH: mm format"
            },
            "note": {
              "type": "string",
              "description": "Remarks"
            }
          },
          "required": [
            "order_name",
            "delivery_address",
            "delivery_time",
            "note"
          ]
        }
      },
      {
        "name": "Finance.Banking.modifyFinancialProductOrder",
        "description": "Modify a subscribed order for a bank wealth management product",
        "parameters": {
          "type": "object",
          "properties": {
            "order_id": {
              "type": "string",
              "description": "Purchase Order Number"
            },
            "product": {
              "type": "string",
              "description": "Financing product"
            },
            "modify": {
              "type": "string",
              "description": "Modified content, such as additional amount, revision deadline, etc."
            }
          },
          "required": [
            "order_id",
            "product",
            "modify"
          ]
        }
      },
      {
        "name": "Finance.Funds.updateFundPurchaseAmount",
        "description": "Update Subscription Amount for Designated Funds",
        "parameters": {
          "type": "object",
          "properties": {
            "fund_name": {
              "type": "string",
              "description": "Fund name"
            },
            "fund_code": {
              "type": "string",
              "description": "Fund  Code"
            },
            "new_amount": {
              "type": "float",
              "description": "Updated amount, unit (yuan)"
            },
            "delta_amount": {
              "type": "float",
              "description": "Amount of increase or decrease, unit (yuan)"
            }
          },
          "required": [
            "fund_name",
            "fund_code",
            "new_amount",
            "delta_amount"
          ]
        }
      },
      {
        "name": "Navigation.TrainTickets.updateTrainWaitlistOrder",
        "description": "Used to modify submitted train ticket waiting list information",
        "parameters": {
          "type": "object",
          "properties": {
            "train_number": {
              "type": "string",
              "description": "Booked trips"
            },
            "passenger_name": {
              "type": "string",
              "description": "Rider's name"
            },
            "after_number": {
              "type": "string",
              "description": "Booked trips"
            },
            "new_departure_date": {
              "type": "string",
              "description": "New departure date, format 'YYYY-MM-DD', optional if modified"
            },
            "new_seat_type": {
              "type": "string",
              "description": "Seat Type"
            }
          },
          "required": [
            "train_number",
            "passenger_name",
            "after_number",
            "new_departure_date",
            "new_seat_type"
          ]
        }
      }
    ],
    "single_tool": [
      {
        "name": "Finance.Funds.updateFundPurchaseAmount",
        "description": "Update Subscription Amount for Designated Funds",
        "parameters": {
          "type": "object",
          "properties": {
            "fund_name": {
              "type": "string",
              "description": "Fund name"
            },
            "fund_code": {
              "type": "string",
              "description": "Fund  Code"
            },
            "new_amount": {
              "type": "float",
              "description": "Updated amount, unit (yuan)"
            },
            "delta_amount": {
              "type": "float",
              "description": "Amount of increase or decrease, unit (yuan)"
            }
          },
          "required": [
            "fund_name",
            "fund_code",
            "new_amount",
            "delta_amount"
          ]
        }
      }
    ],
    "id": 778
  },
  {
    "messages": [
      {
        "role": "user",
        "content": "Please help me adjust the fund purchase amount to 10,000 yuan"
      },
      {
        "role": "function call",
        "content": {
          "name": "Finance.Funds.updateFundPurchaseAmount",
          "arguments": {
            "new_amount": 10000.0
          }
        }
      },
      {
        "role": "assistant",
        "content": "Please provide fund name"
      },
      {
        "role": "user",
        "content": "Steady Growth Fund"
      },
      {
        "role": "function call",
        "content": {
          "name": "Finance.Funds.updateFundPurchaseAmount",
          "arguments": {
            "new_amount": 10000.0,
            "fund_name": "Steady Growth Fund"
          }
        }
      },
      {
        "role": "assistant",
        "content": "What is the fund code"
      },
      {
        "role": "user",
        "content": "It was wrong before. Updated amount, unit (yuan) should be 5000.0"
      },
      {
        "role": "function call",
        "content": {
          "name": "Finance.Funds.updateFundPurchaseAmount",
          "arguments": {
            "new_amount": 5000.0,
            "fund_name": "Steady Growth Fund"
          }
        }
      },
      {
        "role": "assistant",
        "content": "What is the fund code"
      },
      {
        "role": "user",
        "content": "The fund code is 001234, but I have a lot of other investments, this is just one of them."
      },
      {
        "role": "function call",
        "content": {
          "name": "Finance.Funds.updateFundPurchaseAmount",
          "arguments": {
            "new_amount": 5000.0,
            "fund_name": "Steady Growth Fund",
            "fund_code": "001234"
          }
        }
      }
    ],
    "multiple_tools": [
      {
        "name": "Finance.Funds.redeemFund",
        "description": "Redeem the designated amount of the designated fund based on the name or code of the fund",
        "parameters": {
          "type": "object",
          "properties": {
            "fund_name": {
              "type": "string",
              "description": "Fund name"
            },
            "fund_code": {
              "type": "string",
              "description": "Fund  Code"
            },
            "amount": {
              "type": "float",
              "description": "Amount"
            }
          },
          "required": [
            "fund_name",
            "fund_code",
            "amount"
          ]
        }
      },
      {
        "name": "Finance.Funds.updateFundPurchaseAmount",
        "description": "Update Subscription Amount for Designated Funds",
        "parameters": {
          "type": "object",
          "properties": {
            "fund_name": {
              "type": "string",
              "description": "Fund name"
            },
            "fund_code": {
              "type": "string",
              "description": "Fund  Code"
            },
            "new_amount": {
              "type": "float",
              "description": "Updated amount, unit (yuan)"
            },
            "delta_amount": {
              "type": "float",
              "description": "Amount of increase or decrease, unit (yuan)"
            }
          },
          "required": [
            "fund_name",
            "fund_code",
            "new_amount",
            "delta_amount"
          ]
        }
      },
      {
        "name": "Finance.Banking.applyForLoan",
        "description": "Apply for a loan from your bank",
        "parameters": {
          "type": "object",
          "properties": {
            "loan_amount": {
              "type": "integer",
              "description": "Loan Amount"
            },
            "loan_term": {
              "type": "string",
              "description": "Loan Term"
            },
            "purpose_of_loan": {
              "type": "string",
              "description": "Purpose of the loan"
            }
          },
          "required": [
            "loan_amount",
            "loan_term",
            "purpose_of_loan"
          ]
        }
      },
      {
        "name": "Finance.Funds.recommendFunds",
        "description": "Recommend user-friendly funds based on investment objectives and duration",
        "parameters": {
          "type": "object",
          "properties": {
            "objective": {
              "type": "string",
              "description": "Investment objectives such as robust, aggressive"
            },
            "investment_term": {
              "type": "string",
              "description": "Investment term, e.g. short term, long term"
            }
          },
          "required": [
            "objective",
            "investment_term"
          ]
        }
      },
      {
        "name": "Finance.Banking.redempteFinancialProducts",
        "description": "Redeem purchased wealth management products",
        "parameters": {
          "type": "object",
          "properties": {
            "product": {
              "type": "string",
              "description": "Name of financial product"
            },
            "redempte_amount": {
              "type": "float",
              "description": "Redemption Amount"
            }
          },
          "required": [
            "product",
            "redempte_amount"
          ]
        }
      }
    ],
    "single_tool": [
      {
        "name": "Finance.Funds.updateFundPurchaseAmount",
        "description": "Update Subscription Amount for Designated Funds",
        "parameters": {
          "type": "object",
          "properties": {
            "fund_name": {
              "type": "string",
              "description": "Fund name"
            },
            "fund_code": {
              "type": "string",
              "description": "Fund  Code"
            },
            "new_amount": {
              "type": "float",
              "description": "Updated amount, unit (yuan)"
            },
            "delta_amount": {
              "type": "float",
              "description": "Amount of increase or decrease, unit (yuan)"
            }
          },
          "required": [
            "fund_name",
            "fund_code",
            "new_amount",
            "delta_amount"
          ]
        }
      }
    ],
    "id": 779
  },
  {
    "messages": [
      {
        "role": "user",
        "content": "I want to update the redemption amount of the fund to 5000 yuan, please help me deal with it"
      },
      {
        "role": "function call",
        "content": {
          "name": "Finance.Funds.updateFundRedeemAmount",
          "arguments": {
            "new_amount": 5000
          }
        }
      },
      {
        "role": "assistant",
        "content": "What is the name of the fund"
      },
      {
        "role": "user",
        "content": "The fund name is Yifangda Blue Chip Selection Hybrid Fund."
      },
      {
        "role": "function call",
        "content": {
          "name": "Finance.Funds.updateFundRedeemAmount",
          "arguments": {
            "new_amount": 5000,
            "fund_name": "Yifangda Blue Chip Selection Hybrid Fund"
          }
        }
      },
      {
        "role": "assistant",
        "content": "What is the fund code"
      },
      {
        "role": "user",
        "content": "It was wrong before. Updated redemption amount, unit (yuan) should be 12000"
      },
      {
        "role": "function call",
        "content": {
          "name": "Finance.Funds.updateFundRedeemAmount",
          "arguments": {
            "new_amount": 12000,
            "fund_name": "Yifangda Blue Chip Selection Hybrid Fund"
          }
        }
      },
      {
        "role": "assistant",
        "content": "What is the fund code"
      },
      {
        "role": "user",
        "content": "The fund code is 005827, right?"
      },
      {
        "role": "function call",
        "content": {
          "name": "Finance.Funds.updateFundRedeemAmount",
          "arguments": {
            "new_amount": 12000,
            "fund_name": "Yifangda Blue Chip Selection Hybrid Fund",
            "fund_code": "005827"
          }
        }
      }
    ],
    "multiple_tools": [
      {
        "name": "SystemTools.SystemOptimization.manageAppPermissions",
        "description": "Modify your app's permission settings",
        "parameters": {
          "type": "object",
          "properties": {
            "app_name": {
              "type": "string",
              "description": "Αpp Name"
            }
          },
          "required": [
            "app_name"
          ]
        }
      },
      {
        "name": "UtilityTools.AIGC.aigcPictureEnhancement",
        "description": "Adjust the contrast of an image that is too dark or too bright to make the image more vivid",
        "parameters": {
          "type": "object",
          "properties": {
            "file": {
              "type": "string",
              "description": "Pending Picture File Path"
            }
          },
          "required": [
            "file"
          ]
        }
      },
      {
        "name": "Finance.Funds.updateFundRedeemAmount",
        "description": "Update Redemption Amount for Designated Funds",
        "parameters": {
          "type": "object",
          "properties": {
            "fund_name": {
              "type": "string",
              "description": "Fund name"
            },
            "fund_code": {
              "type": "string",
              "description": "Fund  Code"
            },
            "new_amount": {
              "type": "float",
              "description": "Updated redemption amount, unit (yuan)"
            },
            "delta_amount": {
              "type": "float",
              "description": "Increase or decrease in redemption amount, unit (yuan)"
            }
          },
          "required": [
            "fund_name",
            "fund_code",
            "new_amount",
            "delta_amount"
          ]
        }
      },
      {
        "name": "Finance.Funds.updateFundPurchaseAmount",
        "description": "Update Subscription Amount for Designated Funds",
        "parameters": {
          "type": "object",
          "properties": {
            "fund_name": {
              "type": "string",
              "description": "Fund name"
            },
            "fund_code": {
              "type": "string",
              "description": "Fund  Code"
            },
            "new_amount": {
              "type": "float",
              "description": "Updated amount, unit (yuan)"
            },
            "delta_amount": {
              "type": "float",
              "description": "Amount of increase or decrease, unit (yuan)"
            }
          },
          "required": [
            "fund_name",
            "fund_code",
            "new_amount",
            "delta_amount"
          ]
        }
      },
      {
        "name": "Navigation.TaxiCarRental.modifyCarRentalOrder",
        "description": "Modify the contents of a rental order, such as pick-up time, drop-off time, pick-up person, pick-up location, etc.",
        "parameters": {
          "type": "object",
          "properties": {
            "time": {
              "type": "string",
              "description": "Release Date"
            }
          },
          "required": [
            "time"
          ]
        }
      }
    ],
    "single_tool": [
      {
        "name": "Finance.Funds.updateFundRedeemAmount",
        "description": "Update Redemption Amount for Designated Funds",
        "parameters": {
          "type": "object",
          "properties": {
            "fund_name": {
              "type": "string",
              "description": "Fund name"
            },
            "fund_code": {
              "type": "string",
              "description": "Fund  Code"
            },
            "new_amount": {
              "type": "float",
              "description": "Updated redemption amount, unit (yuan)"
            },
            "delta_amount": {
              "type": "float",
              "description": "Increase or decrease in redemption amount, unit (yuan)"
            }
          },
          "required": [
            "fund_name",
            "fund_code",
            "new_amount",
            "delta_amount"
          ]
        }
      }
    ],
    "id": 780
  },
  {
    "messages": [
      {
        "role": "user",
        "content": "Can you help me change the redemption amount to 12,000 yuan, I intend to adjust the investment strategy"
      },
      {
        "role": "function call",
        "content": {
          "name": "Finance.Funds.updateFundRedeemAmount",
          "arguments": {
            "new_amount": 12000
          }
        }
      },
      {
        "role": "assistant",
        "content": "What is the name of the fund"
      },
      {
        "role": "user",
        "content": "The fund name is Huaxia Large Cap Selected Hybrid Fund."
      },
      {
        "role": "function call",
        "content": {
          "name": "Finance.Funds.updateFundRedeemAmount",
          "arguments": {
            "new_amount": 12000,
            "fund_name": "Huaxia Large-cap Selection Hybrid Fund"
          }
        }
      },
      {
        "role": "assistant",
        "content": "What is the fund code"
      },
      {
        "role": "user",
        "content": "It was wrong before. Updated redemption amount, unit (yuan) should be 5000.0"
      },
      {
        "role": "function call",
        "content": {
          "name": "Finance.Funds.updateFundRedeemAmount",
          "arguments": {
            "new_amount": 5000.0,
            "fund_name": "Huaxia Large-cap Selection Hybrid Fund"
          }
        }
      },
      {
        "role": "assistant",
        "content": "What is the fund code"
      },
      {
        "role": "user",
        "content": "The fund code is 000011, do I need to know more?"
      },
      {
        "role": "function call",
        "content": {
          "name": "Finance.Funds.updateFundRedeemAmount",
          "arguments": {
            "new_amount": 5000.0,
            "fund_name": "Huaxia Large-cap Selection Hybrid Fund",
            "fund_code": "000011"
          }
        }
      }
    ],
    "multiple_tools": [
      {
        "name": "Navigation.TaxiCarRental.modifyCarRentalOrder",
        "description": "Modify the contents of a rental order, such as pick-up time, drop-off time, pick-up person, pick-up location, etc.",
        "parameters": {
          "type": "object",
          "properties": {
            "time": {
              "type": "string",
              "description": "Release Date"
            }
          },
          "required": [
            "time"
          ]
        }
      },
      {
        "name": "Health.HealthManagement.updateDietRecord",
        "description": "Changing dietary records based on updated conditions",
        "parameters": {
          "type": "object",
          "properties": {
            "food_name": {
              "type": "string",
              "description": "Food Name"
            },
            "meal_type": {
              "type": "string",
              "description": "Types of meals, such as breakfast, lunch, dinner, or add-ons"
            },
            "time": {
              "type": "string",
              "description": "Meal Time"
            },
            "update_content": {
              "type": "string",
              "description": "Updates, such as changes to food names, meal types, meal times, etc."
            }
          },
          "required": [
            "food_name",
            "meal_type",
            "time",
            "update_content"
          ]
        }
      },
      {
        "name": "Navigation.TrainTickets.updateTrainWaitlistOrder",
        "description": "Used to modify submitted train ticket waiting list information",
        "parameters": {
          "type": "object",
          "properties": {
            "train_number": {
              "type": "string",
              "description": "Booked trips"
            },
            "passenger_name": {
              "type": "string",
              "description": "Rider's name"
            },
            "after_number": {
              "type": "string",
              "description": "Booked trips"
            },
            "new_departure_date": {
              "type": "string",
              "description": "New departure date, format 'YYYY-MM-DD', optional if modified"
            },
            "new_seat_type": {
              "type": "string",
              "description": "Seat Type"
            }
          },
          "required": [
            "train_number",
            "passenger_name",
            "after_number",
            "new_departure_date",
            "new_seat_type"
          ]
        }
      },
      {
        "name": "Navigation.FlightTickets.modifyFlightBooking",
        "description": "Changing the departure time of a booked flight is not supported for departure and destination changes",
        "parameters": {
          "type": "object",
          "properties": {
            "departure": {
              "type": "string",
              "description": "Origination"
            },
            "destination": {
              "type": "string",
              "description": "Reach ground"
            },
            "name": {
              "type": "string",
              "description": "Name of person who booked"
            },
            "time": {
              "type": "string",
              "description": "Flight duration before modification"
            },
            "alter_time": {
              "type": "string",
              "description": "Revised flight time"
            },
            "alter_seat": {
              "type": "string",
              "description": "Class Selection"
            }
          },
          "required": [
            "departure",
            "destination",
            "name",
            "time",
            "alter_time",
            "alter_seat"
          ]
        }
      },
      {
        "name": "Finance.Funds.updateFundRedeemAmount",
        "description": "Update Redemption Amount for Designated Funds",
        "parameters": {
          "type": "object",
          "properties": {
            "fund_name": {
              "type": "string",
              "description": "Fund name"
            },
            "fund_code": {
              "type": "string",
              "description": "Fund  Code"
            },
            "new_amount": {
              "type": "float",
              "description": "Updated redemption amount, unit (yuan)"
            },
            "delta_amount": {
              "type": "float",
              "description": "Increase or decrease in redemption amount, unit (yuan)"
            }
          },
          "required": [
            "fund_name",
            "fund_code",
            "new_amount",
            "delta_amount"
          ]
        }
      }
    ],
    "single_tool": [
      {
        "name": "Finance.Funds.updateFundRedeemAmount",
        "description": "Update Redemption Amount for Designated Funds",
        "parameters": {
          "type": "object",
          "properties": {
            "fund_name": {
              "type": "string",
              "description": "Fund name"
            },
            "fund_code": {
              "type": "string",
              "description": "Fund  Code"
            },
            "new_amount": {
              "type": "float",
              "description": "Updated redemption amount, unit (yuan)"
            },
            "delta_amount": {
              "type": "float",
              "description": "Increase or decrease in redemption amount, unit (yuan)"
            }
          },
          "required": [
            "fund_name",
            "fund_code",
            "new_amount",
            "delta_amount"
          ]
        }
      }
    ],
    "id": 781
  },
  {
    "messages": [
      {
        "role": "user",
        "content": "I want to buy some 000001 stock"
      },
      {
        "role": "function call",
        "content": {
          "name": "Finance.Stocks.buyStock",
          "arguments": {
            "stock_code": "000001"
          }
        }
      },
      {
        "role": "assistant",
        "content": "Please enter the specific value of the purchase amount. Whole warehouse 13 warehouse 14 warehouse"
      },
      {
        "role": "user",
        "content": "1/4 Warehouse"
      },
      {
        "role": "function call",
        "content": {
          "name": "Finance.Stocks.buyStock",
          "arguments": {
            "stock_code": "000001",
            "amount": "1/4 Warehouse"
          }
        }
      },
      {
        "role": "assistant",
        "content": "Please enter the purchase amount unit"
      },
      {
        "role": "user",
        "content": "It was wrong before. Bid Volume; Specific Value; Whole Warehouse; Half Warehouse; 1/3 Warehouse; 1/4 Warehouse should be Full Warehouse"
      },
      {
        "role": "function call",
        "content": {
          "name": "Finance.Stocks.buyStock",
          "arguments": {
            "stock_code": "000001",
            "amount": "Full Warehouse"
          }
        }
      },
      {
        "role": "assistant",
        "content": "Please enter the purchase amount unit"
      },
      {
        "role": "user",
        "content": "30,000.0 yuan"
      },
      {
        "role": "function call",
        "content": {
          "name": "Finance.Stocks.buyStock",
          "arguments": {
            "stock_code": "000001",
            "amount": "Full Warehouse",
            "price": 30000.0
          }
        }
      }
    ],
    "multiple_tools": [
      {
        "name": "OfficeSoftware.Conferencing.joinMeeting",
        "description": "Join the specified meeting",
        "parameters": {
          "type": "object",
          "properties": {
            "meeting_id": {
              "type": "string",
              "description": "Conference No."
            },
            "title": {
              "type": "string",
              "description": "Meeting Title:"
            },
            "time": {
              "type": "string",
              "description": "Meeting Date"
            }
          },
          "required": [
            "meeting_id",
            "title",
            "time"
          ]
        }
      },
      {
        "name": "Navigation.TrainTickets.bookTrainTicket",
        "description": "Book a train ticket for a specific time, origin, or destination for a specific rider",
        "parameters": {
          "type": "object",
          "properties": {
            "ride_date": {
              "type": "string",
              "description": "Date of trip"
            },
            "departure_station": {
              "type": "string",
              "description": "Departure Station"
            },
            "destination_station": {
              "type": "string",
              "description": "arrival station"
            },
            "train_type": {
              "type": "string",
              "description": "Train type, optional types are high-speed rail, motor vehicles, general express, express, etc."
            },
            "seat_type": {
              "type": "string",
              "description": "Seat Type"
            },
            "passenger_name": {
              "type": "string",
              "description": "Rider's name"
            },
            "passenger_id": {
              "type": "string",
              "description": "Rider ID number"
            }
          },
          "required": [
            "ride_date",
            "departure_station",
            "destination_station",
            "train_type",
            "seat_type",
            "passenger_name",
            "passenger_id"
          ]
        }
      },
      {
        "name": "Finance.Stocks.buyStock",
        "description": "Purchase of Designated Shares",
        "parameters": {
          "type": "object",
          "properties": {
            "stock_code": {
              "type": "string",
              "description": "Ticker"
            },
            "stock_name": {
              "type": "string",
              "description": "Stock Key Name"
            },
            "price": {
              "type": "float",
              "description": "Purchase Amount, Unit: Yuan"
            },
            "amount": {
              "type": "string",
              "description": "Bid Volume; Specific Value; Whole Warehouse; Half Warehouse; 1/3 Warehouse; 1/4 Warehouse"
            }
          },
          "required": [
            "stock_code",
            "stock_name",
            "price",
            "amount"
          ]
        }
      },
      {
        "name": "Travel.HotelServices.bookHotel",
        "description": "Book a room at a selected hotel",
        "parameters": {
          "type": "object",
          "properties": {
            "name": {
              "type": "string",
              "description": "Hotel Name"
            },
            "checkin_date": {
              "type": "string",
              "description": "Check-in Date"
            },
            "checkout_date": {
              "type": "string",
              "description": "DEPARTURE DATE"
            },
            "room_type": {
              "type": "string",
              "description": "Room types"
            },
            "tenant_name": {
              "type": "string",
              "description": "Name of the guest staying"
            },
            "tenant_number": {
              "type": "string",
              "description": "Telephone number of the guest staying at the hotel"
            }
          },
          "required": [
            "name",
            "checkin_date",
            "checkout_date",
            "room_type",
            "tenant_name",
            "tenant_number"
          ]
        }
      },
      {
        "name": "OfficeSoftware.Documents.importDocument",
        "description": "Import an external document into a document",
        "parameters": {
          "type": "object",
          "properties": {
            "import_path": {
              "type": "string",
              "description": "Document path to import, required"
            }
          },
          "required": [
            "import_path"
          ]
        }
      }
    ],
    "single_tool": [
      {
        "name": "Finance.Stocks.buyStock",
        "description": "Purchase of Designated Shares",
        "parameters": {
          "type": "object",
          "properties": {
            "stock_code": {
              "type": "string",
              "description": "Ticker"
            },
            "stock_name": {
              "type": "string",
              "description": "Stock Key Name"
            },
            "price": {
              "type": "float",
              "description": "Purchase Amount, Unit: Yuan"
            },
            "amount": {
              "type": "string",
              "description": "Bid Volume; Specific Value; Whole Warehouse; Half Warehouse; 1/3 Warehouse; 1/4 Warehouse"
            }
          },
          "required": [
            "stock_code",
            "stock_name",
            "price",
            "amount"
          ]
        }
      }
    ],
    "id": 787
  },
  {
    "messages": [
      {
        "role": "user",
        "content": "It's time to sell the Apple stock, help me deal with it"
      },
      {
        "role": "function call",
        "content": {
          "name": "Finance.Stocks.sellStock",
          "arguments": {
            "stock_name": "Apple"
          }
        }
      },
      {
        "role": "assistant",
        "content": "What is the stock code"
      },
      {
        "role": "user",
        "content": "The stock code is 601398, how can I help?"
      },
      {
        "role": "function call",
        "content": {
          "name": "Finance.Stocks.sellStock",
          "arguments": {
            "stock_name": "Apple",
            "stock_code": "601398"
          }
        }
      },
      {
        "role": "assistant",
        "content": "Please provide the selling amount in Yuan"
      },
      {
        "role": "user",
        "content": "It was wrong before. Stock Key Name should be Tencent Holdings"
      },
      {
        "role": "function call",
        "content": {
          "name": "Finance.Stocks.sellStock",
          "arguments": {
            "stock_name": "Tencent Holdings",
            "stock_code": "601398"
          }
        }
      },
      {
        "role": "assistant",
        "content": "Please provide the selling amount in Yuan"
      },
      {
        "role": "user",
        "content": "5.6 yuan"
      },
      {
        "role": "function call",
        "content": {
          "name": "Finance.Stocks.sellStock",
          "arguments": {
            "stock_name": "Tencent Holdings",
            "stock_code": "601398",
            "price": 5.6
          }
        }
      }
    ],
    "multiple_tools": [
      {
        "name": "SocialCommunication.InstantMessaging.sendFile",
        "description": "Send a file to a specific contact or group",
        "parameters": {
          "type": "object",
          "properties": {
            "receiver_name": {
              "type": "string",
              "description": "Name of the contact or group receiving the file"
            },
            "file_path": {
              "type": "string",
              "description": "The path or document name of the file to send locally"
            }
          },
          "required": [
            "receiver_name",
            "file_path"
          ]
        }
      },
      {
        "name": "NewsMagazines.NewspapersMagazines.shareArticle",
        "description": "Share posts to social media",
        "parameters": {
          "type": "object",
          "properties": {
            "to": {
              "type": "string",
              "description": "Choose Socials To Share Single Post"
            },
            "article": {
              "type": "string",
              "description": "Articles"
            }
          },
          "required": [
            "to",
            "article"
          ]
        }
      },
      {
        "name": "MusicRadio.Karaoke.shareKsongWorks",
        "description": "Share work based on song name",
        "parameters": {
          "type": "object",
          "properties": {
            "song_name": {
              "type": "string",
              "description": "Song Name"
            },
            "media": {
              "type": "string",
              "description": "Media"
            },
            "name": {
              "type": "string",
              "description": "Friend name"
            }
          },
          "required": [
            "song_name",
            "media",
            "name"
          ]
        }
      },
      {
        "name": "Finance.Stocks.sellStock",
        "description": "Sale of Designated Shares",
        "parameters": {
          "type": "object",
          "properties": {
            "stock_code": {
              "type": "string",
              "description": "Ticker"
            },
            "stock_name": {
              "type": "string",
              "description": "Stock Key Name"
            },
            "price": {
              "type": "float",
              "description": "Amount sold, unit Yuan"
            },
            "amount": {
              "type": "string",
              "description": "Sell Volume; Specific Value; Whole Warehouse; Half Warehouse; 1/3 Warehouse; 1/4 Warehouse"
            }
          },
          "required": [
            "stock_code",
            "stock_name",
            "price",
            "amount"
          ]
        }
      },
      {
        "name": "Health.Fitness.shareExerciseProgress",
        "description": "Share your fitness progress with the people you want to share it with",
        "parameters": {
          "type": "object",
          "properties": {
            "target": {
              "type": "string",
              "description": "Share with"
            },
            "exercise_progress": {
              "type": "string",
              "description": "Fitness Progress"
            }
          },
          "required": [
            "target",
            "exercise_progress"
          ]
        }
      }
    ],
    "single_tool": [
      {
        "name": "Finance.Stocks.sellStock",
        "description": "Sale of Designated Shares",
        "parameters": {
          "type": "object",
          "properties": {
            "stock_code": {
              "type": "string",
              "description": "Ticker"
            },
            "stock_name": {
              "type": "string",
              "description": "Stock Key Name"
            },
            "price": {
              "type": "float",
              "description": "Amount sold, unit Yuan"
            },
            "amount": {
              "type": "string",
              "description": "Sell Volume; Specific Value; Whole Warehouse; Half Warehouse; 1/3 Warehouse; 1/4 Warehouse"
            }
          },
          "required": [
            "stock_code",
            "stock_name",
            "price",
            "amount"
          ]
        }
      }
    ],
    "id": 788
  },
  {
    "messages": [
      {
        "role": "user",
        "content": "I want to cancel my stock order with code 000001"
      },
      {
        "role": "function call",
        "content": {
          "name": "Finance.Stocks.cancelorderStock",
          "arguments": {
            "stock_code": "000001"
          }
        }
      },
      {
        "role": "assistant",
        "content": "Please provide stock key name"
      },
      {
        "role": "user",
        "content": "Five Grain Liquor (Wuliangye)"
      },
      {
        "role": "function call",
        "content": {
          "name": "Finance.Stocks.cancelorderStock",
          "arguments": {
            "stock_code": "000001",
            "stock_name": "Five Grain Liquor (Wuliangye)"
          }
        }
      },
      {
        "role": "assistant",
        "content": "How many unit yuan is the amount?"
      },
      {
        "role": "user",
        "content": "It was wrong before. Ticker should be 000858"
      },
      {
        "role": "function call",
        "content": {
          "name": "Finance.Stocks.cancelorderStock",
          "arguments": {
            "stock_code": "000858",
            "stock_name": "Five Grain Liquor (Wuliangye)"
          }
        }
      },
      {
        "role": "assistant",
        "content": "How many unit yuan is the amount?"
      },
      {
        "role": "user",
        "content": "The amount is 220.3 yuan."
      },
      {
        "role": "function call",
        "content": {
          "name": "Finance.Stocks.cancelorderStock",
          "arguments": {
            "stock_code": "000858",
            "stock_name": "Five Grain Liquor (Wuliangye)",
            "price": 220.3
          }
        }
      }
    ],
    "multiple_tools": [
      {
        "name": "Finance.Stocks.cancelorderStock",
        "description": "Withdrawal of Designated Shares",
        "parameters": {
          "type": "object",
          "properties": {
            "stock_code": {
              "type": "string",
              "description": "Ticker"
            },
            "stock_name": {
              "type": "string",
              "description": "Stock Key Name"
            },
            "price": {
              "type": "float",
              "description": "Amount in Yuan"
            },
            "amount": {
              "type": "string",
              "description": "Shipment quantity; specific value; full warehouse; half warehouse; 1/3 warehouse; 1/4 warehouse"
            }
          },
          "required": [
            "stock_code",
            "stock_name",
            "price",
            "amount"
          ]
        }
      },
      {
        "name": "Finance.Banking.cancelFinancialProductOrder",
        "description": "Cancel Subscribed Banking Products",
        "parameters": {
          "type": "object",
          "properties": {
            "order_id": {
              "type": "string",
              "description": "Purchase Order Number"
            },
            "product": {
              "type": "string",
              "description": "Financing product"
            }
          },
          "required": [
            "order_id",
            "product"
          ]
        }
      },
      {
        "name": "Navigation.TaxiCarRental.cancelTaxi",
        "description": "Cancel a ride request that's already been sent",
        "parameters": {
          "type": "object",
          "properties": {},
          "required": []
        }
      },
      {
        "name": "Navigation.TrainTickets.cancelTrainWaitlistOrder",
        "description": "Help the user cancel the specified train ticket standby order",
        "parameters": {
          "type": "object",
          "properties": {
            "ride_date": {
              "type": "string",
              "description": "Date of trip"
            },
            "commit_date": {
              "type": "string",
              "description": "Date/time the order was submitted"
            },
            "departure_station": {
              "type": "string",
              "description": "Departure Station"
            },
            "destination_station": {
              "type": "string",
              "description": "arrival station"
            }
          },
          "required": [
            "ride_date",
            "commit_date",
            "departure_station",
            "destination_station"
          ]
        }
      },
      {
        "name": "ConvenientLiving.FoodDelivery.cancelRestaurantOrder",
        "description": "Canceling an order based on an order",
        "parameters": {
          "type": "object",
          "properties": {
            "order_name": {
              "type": "string",
              "description": "Contents of the order"
            }
          },
          "required": [
            "order_name"
          ]
        }
      }
    ],
    "single_tool": [
      {
        "name": "Finance.Stocks.cancelorderStock",
        "description": "Withdrawal of Designated Shares",
        "parameters": {
          "type": "object",
          "properties": {
            "stock_code": {
              "type": "string",
              "description": "Ticker"
            },
            "stock_name": {
              "type": "string",
              "description": "Stock Key Name"
            },
            "price": {
              "type": "float",
              "description": "Amount in Yuan"
            },
            "amount": {
              "type": "string",
              "description": "Shipment quantity; specific value; full warehouse; half warehouse; 1/3 warehouse; 1/4 warehouse"
            }
          },
          "required": [
            "stock_code",
            "stock_name",
            "price",
            "amount"
          ]
        }
      }
    ],
    "id": 789
  },
  {
    "messages": [
      {
        "role": "user",
        "content": "Please help me remove the pending order for this stock 601318"
      },
      {
        "role": "function call",
        "content": {
          "name": "Finance.Stocks.cancelorderStock",
          "arguments": {
            "stock_code": "601318"
          }
        }
      },
      {
        "role": "assistant",
        "content": "What is the key name of the stock"
      },
      {
        "role": "user",
        "content": "Guizhou Moutai is the stock I want to know about."
      },
      {
        "role": "function call",
        "content": {
          "name": "Finance.Stocks.cancelorderStock",
          "arguments": {
            "stock_code": "601318",
            "stock_name": "Maotai of Guizhou"
          }
        }
      },
      {
        "role": "assistant",
        "content": "How many unit yuan is the amount of the order to be cancelled"
      },
      {
        "role": "user",
        "content": "It was wrong before. Stock Key Name should be Tencent Holdings"
      },
      {
        "role": "function call",
        "content": {
          "name": "Finance.Stocks.cancelorderStock",
          "arguments": {
            "stock_code": "601318",
            "stock_name": "Tencent Holdings"
          }
        }
      },
      {
        "role": "assistant",
        "content": "How many unit yuan is the amount of the order to be cancelled"
      },
      {
        "role": "user",
        "content": "The amount that needs to be cancelled is 1800.5 yuan."
      },
      {
        "role": "function call",
        "content": {
          "name": "Finance.Stocks.cancelorderStock",
          "arguments": {
            "stock_code": "601318",
            "stock_name": "Tencent Holdings",
            "price": 1800.5
          }
        }
      }
    ],
    "multiple_tools": [
      {
        "name": "ConvenientLiving.FoodDelivery.cancelRestaurantOrder",
        "description": "Canceling an order based on an order",
        "parameters": {
          "type": "object",
          "properties": {
            "order_name": {
              "type": "string",
              "description": "Contents of the order"
            }
          },
          "required": [
            "order_name"
          ]
        }
      },
      {
        "name": "OnlineShopping.Mall.deleteCommodityOrders",
        "description": "Delete an item order based on criteria such as the item name",
        "parameters": {
          "type": "object",
          "properties": {
            "goods": {
              "type": "string",
              "description": "Product Name"
            },
            "order_stage": {
              "type": "string",
              "description": "Order status, e.g. Pending Payment, Pending Receipt, Completed, Cancelled, Refund/After Sales"
            },
            "evaluate_stage": {
              "type": "string",
              "description": "Review status, e.g. reviewed, pending review"
            }
          },
          "required": [
            "goods",
            "order_stage",
            "evaluate_stage"
          ]
        }
      },
      {
        "name": "Finance.Stocks.cancelorderStock",
        "description": "Withdrawal of Designated Shares",
        "parameters": {
          "type": "object",
          "properties": {
            "stock_code": {
              "type": "string",
              "description": "Ticker"
            },
            "stock_name": {
              "type": "string",
              "description": "Stock Key Name"
            },
            "price": {
              "type": "float",
              "description": "Amount in Yuan"
            },
            "amount": {
              "type": "string",
              "description": "Shipment quantity; specific value; full warehouse; half warehouse; 1/3 warehouse; 1/4 warehouse"
            }
          },
          "required": [
            "stock_code",
            "stock_name",
            "price",
            "amount"
          ]
        }
      },
      {
        "name": "Finance.Banking.cancelFinancialProductOrder",
        "description": "Cancel Subscribed Banking Products",
        "parameters": {
          "type": "object",
          "properties": {
            "order_id": {
              "type": "string",
              "description": "Purchase Order Number"
            },
            "product": {
              "type": "string",
              "description": "Financing product"
            }
          },
          "required": [
            "order_id",
            "product"
          ]
        }
      },
      {
        "name": "Navigation.TrainTickets.cancelTrainWaitlistOrder",
        "description": "Help the user cancel the specified train ticket standby order",
        "parameters": {
          "type": "object",
          "properties": {
            "ride_date": {
              "type": "string",
              "description": "Date of trip"
            },
            "commit_date": {
              "type": "string",
              "description": "Date/time the order was submitted"
            },
            "departure_station": {
              "type": "string",
              "description": "Departure Station"
            },
            "destination_station": {
              "type": "string",
              "description": "arrival station"
            }
          },
          "required": [
            "ride_date",
            "commit_date",
            "departure_station",
            "destination_station"
          ]
        }
      }
    ],
    "single_tool": [
      {
        "name": "Finance.Stocks.cancelorderStock",
        "description": "Withdrawal of Designated Shares",
        "parameters": {
          "type": "object",
          "properties": {
            "stock_code": {
              "type": "string",
              "description": "Ticker"
            },
            "stock_name": {
              "type": "string",
              "description": "Stock Key Name"
            },
            "price": {
              "type": "float",
              "description": "Amount in Yuan"
            },
            "amount": {
              "type": "string",
              "description": "Shipment quantity; specific value; full warehouse; half warehouse; 1/3 warehouse; 1/4 warehouse"
            }
          },
          "required": [
            "stock_code",
            "stock_name",
            "price",
            "amount"
          ]
        }
      }
    ],
    "id": 790
  },
  {
    "messages": [
      {
        "role": "user",
        "content": "Find me information on Cai Xukun's 2023 concert tour"
      },
      {
        "role": "function call",
        "content": {
          "name": "MusicRadio.OnlineMusic.getConcertInfo",
          "arguments": {
            "name": "Cai Xukun 2023 Concert Tour"
          }
        }
      },
      {
        "role": "assistant",
        "content": "What are the location and dates of the concert?"
      },
      {
        "role": "user",
        "content": "The concert will be held in Beijing on the 15th of next month."
      },
      {
        "role": "function call",
        "content": {
          "name": "MusicRadio.OnlineMusic.getConcertInfo",
          "arguments": {
            "name": "Cai Xukun 2023 Concert Tour",
            "location": "Beijing"
          }
        }
      },
      {
        "role": "assistant",
        "content": "What are the dates of the concert?"
      },
      {
        "role": "user",
        "content": "It was wrong before. Location of the concert should be Shanghai"
      },
      {
        "role": "function call",
        "content": {
          "name": "MusicRadio.OnlineMusic.getConcertInfo",
          "arguments": {
            "name": "Cai Xukun 2023 Concert Tour",
            "location": "Shanghai"
          }
        }
      },
      {
        "role": "assistant",
        "content": "What are the dates of the concert?"
      },
      {
        "role": "user",
        "content": "The date of the concert is September 10, 2023, and I have arranged a schedule."
      },
      {
        "role": "function call",
        "content": {
          "name": "MusicRadio.OnlineMusic.getConcertInfo",
          "arguments": {
            "name": "Cai Xukun 2023 Concert Tour",
            "location": "Shanghai",
            "date": "September 10, 2023"
          }
        }
      }
    ],
    "multiple_tools": [
      {
        "name": "MusicRadio.OnlineMusic.getConcertInfo",
        "description": "Get information about a concert by keyword, concert location, concert date",
        "parameters": {
          "type": "object",
          "properties": {
            "name": {
              "type": "string",
              "description": "Concert Name"
            },
            "location": {
              "type": "string",
              "description": "Location of the concert"
            },
            "date": {
              "type": "string",
              "description": "Concert dates"
            }
          },
          "required": [
            "name",
            "location",
            "date"
          ]
        }
      },
      {
        "name": "ConvenientLiving.FoodDelivery.getRestaurantDetails",
        "description": "Get restaurant details based on restaurant",
        "parameters": {
          "type": "object",
          "properties": {
            "restaurant_name": {
              "type": "string",
              "description": "Name of the restaurant"
            }
          },
          "required": [
            "restaurant_name"
          ]
        }
      },
      {
        "name": "OnlineShopping.SecondhandTrading.searchSecondhandSaleCommodity",
        "description": "Query the product by the specified commodity category; name; or picture QR code query",
        "parameters": {
          "type": "object",
          "properties": {
            "search_name": {
              "type": "string",
              "description": "Trade Name/Keywords"
            },
            "type": {
              "type": "string",
              "description": ": Guess what you like, latest release, save money group, fish coins for money"
            }
          },
          "required": [
            "search_name",
            "type"
          ]
        }
      },
      {
        "name": "ConvenientLiving.GovernmentServices.queryEnterpriseInfo",
        "description": "Enter the business name to get basic information about the business",
        "parameters": {
          "type": "object",
          "properties": {
            "enterprise_name": {
              "type": "string",
              "description": "Name of the business to query"
            }
          },
          "required": [
            "enterprise_name"
          ]
        }
      },
      {
        "name": "SocialCommunication.InstantMessaging.searchMessage",
        "description": "Search historical messages for a specific contact or group based on keywords",
        "parameters": {
          "type": "object",
          "properties": {
            "receiver_name": {
              "type": "string",
              "description": "Name of the contact or group to search for the message"
            },
            "keyword": {
              "type": "string",
              "description": "Keywords for search"
            }
          },
          "required": [
            "receiver_name",
            "keyword"
          ]
        }
      }
    ],
    "single_tool": [
      {
        "name": "MusicRadio.OnlineMusic.getConcertInfo",
        "description": "Get information about a concert by keyword, concert location, concert date",
        "parameters": {
          "type": "object",
          "properties": {
            "name": {
              "type": "string",
              "description": "Concert Name"
            },
            "location": {
              "type": "string",
              "description": "Location of the concert"
            },
            "date": {
              "type": "string",
              "description": "Concert dates"
            }
          },
          "required": [
            "name",
            "location",
            "date"
          ]
        }
      }
    ],
    "id": 794
  },
  {
    "messages": [
      {
        "role": "user",
        "content": "Can you check the logistics information of the courier order number 987654321 for me?"
      },
      {
        "role": "function call",
        "content": {
          "name": "OnlineShopping.ExpressDelivery.searchExpress",
          "arguments": {
            "express_id": "987654321"
          }
        }
      },
      {
        "role": "assistant",
        "content": "Please provide the recipient address and delivery date"
      },
      {
        "role": "user",
        "content": "The address of the recipient is XX, XX Road, Chaoyang District, Beijing, and the delivery date is May 5."
      },
      {
        "role": "function call",
        "content": {
          "name": "OnlineShopping.ExpressDelivery.searchExpress",
          "arguments": {
            "express_id": "987654321",
            "date": "May 5"
          }
        }
      },
      {
        "role": "assistant",
        "content": "Please provide the sender's name"
      },
      {
        "role": "user",
        "content": "It was wrong before. Tracking Number should be 123456789012345"
      },
      {
        "role": "function call",
        "content": {
          "name": "OnlineShopping.ExpressDelivery.searchExpress",
          "arguments": {
            "express_id": "123456789012345",
            "date": "May 5"
          }
        }
      },
      {
        "role": "assistant",
        "content": "Please provide the sender's name"
      },
      {
        "role": "user",
        "content": "Wangwu"
      },
      {
        "role": "function call",
        "content": {
          "name": "OnlineShopping.ExpressDelivery.searchExpress",
          "arguments": {
            "express_id": "123456789012345",
            "date": "May 5",
            "send_name": "Wangwu"
          }
        }
      },
      {
        "role": "assistant",
        "content": "What is the recipient's name?"
      },
      {
        "role": "user",
        "content": "The recipient's name is Zhao Liu, but please make sure the information is accurate so as not to make mistakes."
      },
      {
        "role": "function call",
        "content": {
          "name": "OnlineShopping.ExpressDelivery.searchExpress",
          "arguments": {
            "express_id": "123456789012345",
            "date": "May 5",
            "send_name": "Wangwu",
            "recipient_name": "Zhao Liu"
          }
        }
      }
    ],
    "multiple_tools": [
      {
        "name": "ConvenientLiving.BuyingRentingHomes.getRealEstateAgencyInfo",
        "description": "Get contact info for a real estate agent",
        "parameters": {
          "type": "object",
          "properties": {
            "house_name": {
              "type": "string",
              "description": "Property name"
            }
          },
          "required": [
            "house_name"
          ]
        }
      },
      {
        "name": "OfficeSoftware.Documents.getDocumentStatistics",
        "description": "Get statistics for a given document, such as the number of words, pages, etc.",
        "parameters": {
          "type": "object",
          "properties": {
            "document_name": {
              "type": "string",
              "description": "To get the document name of the statistic, it is required"
            }
          },
          "required": [
            "document_name"
          ]
        }
      },
      {
        "name": "Finance.Funds.getFundManager",
        "description": "Specify fund manager information based on manager name and fund code query",
        "parameters": {
          "type": "object",
          "properties": {
            "manager_name": {
              "type": "string",
              "description": "Name of Fund Manager"
            },
            "fund_code": {
              "type": "string",
              "description": "Fund  Code"
            }
          },
          "required": [
            "manager_name",
            "fund_code"
          ]
        }
      },
      {
        "name": "OnlineShopping.ExpressDelivery.searchExpress",
        "description": "Search courier logistics based on information such as designated courier number, recipient, address, etc.",
        "parameters": {
          "type": "object",
          "properties": {
            "express_id": {
              "type": "string",
              "description": "Tracking Number"
            },
            "date": {
              "type": "string",
              "description": "Shipping date"
            },
            "send_name": {
              "type": "string",
              "description": "Name Of Sender"
            },
            "recipient_name": {
              "type": "string",
              "description": "Recipient's name"
            }
          },
          "required": [
            "express_id",
            "date",
            "send_name",
            "recipient_name"
          ]
        }
      },
      {
        "name": "SocialCommunication.Calling.viewContact",
        "description": "View the details of the specified contact",
        "parameters": {
          "type": "object",
          "properties": {
            "contact_name": {
              "type": "string",
              "description": "Name of contact to view"
            },
            "phone_number": {
              "type": "string",
              "description": "Phone No."
            }
          },
          "required": [
            "contact_name",
            "phone_number"
          ]
        }
      }
    ],
    "single_tool": [
      {
        "name": "OnlineShopping.ExpressDelivery.searchExpress",
        "description": "Search courier logistics based on information such as designated courier number, recipient, address, etc.",
        "parameters": {
          "type": "object",
          "properties": {
            "express_id": {
              "type": "string",
              "description": "Tracking Number"
            },
            "date": {
              "type": "string",
              "description": "Shipping date"
            },
            "send_name": {
              "type": "string",
              "description": "Name Of Sender"
            },
            "recipient_name": {
              "type": "string",
              "description": "Recipient's name"
            }
          },
          "required": [
            "express_id",
            "date",
            "send_name",
            "recipient_name"
          ]
        }
      }
    ],
    "id": 796
  },
  {
    "messages": [
      {
        "role": "user",
        "content": "What traffic accident happened yesterday afternoon? I want to know more. View with bean peel"
      },
      {
        "role": "function call",
        "content": {
          "name": "Navigation.TrafficViolations.viewViolationDetail",
          "arguments": {
            "time": "yesterday afternoon"
          }
        }
      },
      {
        "role": "assistant",
        "content": "What city is the violation located in?"
      },
      {
        "role": "user",
        "content": "The violating city is Nanjing."
      },
      {
        "role": "function call",
        "content": {
          "name": "Navigation.TrafficViolations.viewViolationDetail",
          "arguments": {
            "time": "yesterday afternoon",
            "city": "Nanjing"
          }
        }
      },
      {
        "role": "assistant",
        "content": "Please provide the license plate number"
      },
      {
        "role": "user",
        "content": "It was wrong before. Violating city should be Hangzhou"
      },
      {
        "role": "function call",
        "content": {
          "name": "Navigation.TrafficViolations.viewViolationDetail",
          "arguments": {
            "time": "yesterday afternoon",
            "city": "Hangzhou"
          }
        }
      },
      {
        "role": "assistant",
        "content": "Please provide the license plate number"
      },
      {
        "role": "user",
        "content": "My license plate number is Sue E98765."
      },
      {
        "role": "function call",
        "content": {
          "name": "Navigation.TrafficViolations.viewViolationDetail",
          "arguments": {
            "time": "yesterday afternoon",
            "city": "Hangzhou",
            "plate_number": "Su E98765"
          }
        }
      }
    ],
    "multiple_tools": [
      {
        "name": "Finance.Insurance.getInsuranceFAQ",
        "description": "Frequently asked questions and answers about insurance",
        "parameters": {
          "type": "object",
          "properties": {
            "keyword": {
              "type": "string",
              "description": "Question Keywords"
            }
          },
          "required": [
            "keyword"
          ]
        }
      },
      {
        "name": "Finance.Stocks.viewStockoperate",
        "description": "Query the stock market on the day of trading; the day of consignment; historical trading; historical consignment; T operation",
        "parameters": {
          "type": "object",
          "properties": {
            "transaction_today": {
              "type": "boolean",
              "description": "Deal of the day Default: 0 No"
            },
            "entrust_today": {
              "type": "boolean",
              "description": "Delegation of the day default: 0 No"
            },
            "transaction_his": {
              "type": "boolean",
              "description": "History Closing Default: 0 No"
            },
            "entrust_his": {
              "type": "boolean",
              "description": "Historical delegation default: 0 No"
            },
            "T_operate": {
              "type": "boolean",
              "description": "T Operation default: 0 No"
            }
          },
          "required": [
            "transaction_today",
            "entrust_today",
            "transaction_his",
            "entrust_his",
            "T_operate"
          ]
        }
      },
      {
        "name": "Navigation.TrafficViolations.queryViolation",
        "description": "Query traffic violation records by conditions",
        "parameters": {
          "type": "object",
          "properties": {
            "plate_number": {
              "type": "string",
              "description": "License plate number"
            },
            "city": {
              "type": "string",
              "description": "Violating city"
            },
            "time": {
              "type": "string",
              "description": "Billing Time"
            }
          },
          "required": [
            "plate_number",
            "city",
            "time"
          ]
        }
      },
      {
        "name": "Navigation.TrafficViolations.viewViolationDetail",
        "description": "View details of the specified traffic violation record",
        "parameters": {
          "type": "object",
          "properties": {
            "plate_number": {
              "type": "string",
              "description": "License plate number"
            },
            "city": {
              "type": "string",
              "description": "Violating city"
            },
            "time": {
              "type": "string",
              "description": "Billing Time"
            }
          },
          "required": [
            "plate_number",
            "city",
            "time"
          ]
        }
      },
      {
        "name": "ConvenientLiving.GovernmentServices.queryTrafficViolations",
        "description": "Check the traffic violation information of the user's vehicle",
        "parameters": {
          "type": "object",
          "properties": {
            "plate_number": {
              "type": "string",
              "description": "Vehicle license plate"
            }
          },
          "required": [
            "plate_number"
          ]
        }
      }
    ],
    "single_tool": [
      {
        "name": "Navigation.TrafficViolations.viewViolationDetail",
        "description": "View details of the specified traffic violation record",
        "parameters": {
          "type": "object",
          "properties": {
            "plate_number": {
              "type": "string",
              "description": "License plate number"
            },
            "city": {
              "type": "string",
              "description": "Violating city"
            },
            "time": {
              "type": "string",
              "description": "Billing Time"
            }
          },
          "required": [
            "plate_number",
            "city",
            "time"
          ]
        }
      }
    ],
    "id": 801
  },
  {
    "messages": [
      {
        "role": "user",
        "content": "Qian Jiu, please check the order status of the train ticket on August 8 for me."
      },
      {
        "role": "function call",
        "content": {
          "name": "Navigation.TrainTickets.queryTrainTicket",
          "arguments": {
            "ride_date": "August 8th"
          }
        }
      },
      {
        "role": "assistant",
        "content": "Where is your departure point and destination?"
      },
      {
        "role": "user",
        "content": "My departure station is Xi 'an North, and my destination is Chengdu East."
      },
      {
        "role": "function call",
        "content": {
          "name": "Navigation.TrainTickets.queryTrainTicket",
          "arguments": {
            "ride_date": "August 8th",
            "departure_station": "Xi 'an North Railway"
          }
        }
      },
      {
        "role": "assistant",
        "content": "Where is your arrival station?"
      },
      {
        "role": "user",
        "content": "It was wrong before. Date of trip should be April 10"
      },
      {
        "role": "function call",
        "content": {
          "name": "Navigation.TrainTickets.queryTrainTicket",
          "arguments": {
            "ride_date": "April 10",
            "departure_station": "Xi 'an North Railway"
          }
        }
      },
      {
        "role": "assistant",
        "content": "Where is your arrival station?"
      },
      {
        "role": "user",
        "content": "My arrival station is Lanzhou West."
      },
      {
        "role": "function call",
        "content": {
          "name": "Navigation.TrainTickets.queryTrainTicket",
          "arguments": {
            "ride_date": "April 10",
            "departure_station": "Xi 'an North Railway",
            "destination_station": "Lanzhou West Railway Station"
          }
        }
      },
      {
        "role": "assistant",
        "content": "What type of seats do you need to check for spare tickets?"
      },
      {
        "role": "user",
        "content": "I need to check the status of the remaining tickets in the soft lounge."
      },
      {
        "role": "function call",
        "content": {
          "name": "Navigation.TrainTickets.queryTrainTicket",
          "arguments": {
            "ride_date": "April 10",
            "departure_station": "Xi 'an North Railway",
            "destination_station": "Lanzhou West Railway Station",
            "seat_type": "Softbed"
          }
        }
      }
    ],
    "multiple_tools": [
      {
        "name": "Navigation.TrainTickets.queryTrainWaitlistStatus",
        "description": "Used to query the current status of train ticket standby orders submitted by users",
        "parameters": {
          "type": "object",
          "properties": {
            "ride_date": {
              "type": "string",
              "description": "Date of trip"
            },
            "commit_date": {
              "type": "string",
              "description": "Date/time the order was submitted"
            },
            "departure_station": {
              "type": "string",
              "description": "Departure Station"
            },
            "destination_station": {
              "type": "string",
              "description": "arrival station"
            },
            "passenger_id": {
              "type": "string",
              "description": "Rider ID number"
            },
            "name": {
              "type": "string",
              "description": "Name of person to query"
            }
          },
          "required": [
            "ride_date",
            "commit_date",
            "departure_station",
            "destination_station",
            "passenger_id",
            "name"
          ]
        }
      },
      {
        "name": "ConvenientLiving.FoodDelivery.checkRestaurantOrderStatus",
        "description": "View order status based on order",
        "parameters": {
          "type": "object",
          "properties": {
            "order_name": {
              "type": "string",
              "description": "Contents of the order"
            }
          },
          "required": [
            "order_name"
          ]
        }
      },
      {
        "name": "Navigation.TrainTickets.queryTrainTicket",
        "description": "Check the status of the remaining train tickets for the specified date, departure place, and destination",
        "parameters": {
          "type": "object",
          "properties": {
            "ride_date": {
              "type": "string",
              "description": "Date of trip"
            },
            "departure_station": {
              "type": "string",
              "description": "Departure Station"
            },
            "destination_station": {
              "type": "string",
              "description": "arrival station"
            },
            "train_type": {
              "type": "string",
              "description": "Train type, optional types are high-speed rail, motor vehicles, general express, express, etc."
            },
            "seat_type": {
              "type": "string",
              "description": "Seat Type"
            }
          },
          "required": [
            "ride_date",
            "departure_station",
            "destination_station",
            "train_type",
            "seat_type"
          ]
        }
      },
      {
        "name": "ConvenientLiving.JobRecruitment.checkJobApplicationStatus",
        "description": "View the status of job applications by position",
        "parameters": {
          "type": "object",
          "properties": {
            "job_name": {
              "type": "string",
              "description": "Position name"
            },
            "company_name": {
              "type": "string",
              "description": "Company name"
            }
          },
          "required": [
            "job_name",
            "company_name"
          ]
        }
      },
      {
        "name": "Travel.HotelServices.getHotelCheckInStatus",
        "description": "Check the check-in status of a specific hotel reservation",
        "parameters": {
          "type": "object",
          "properties": {
            "name": {
              "type": "string",
              "description": "Hotel Name"
            },
            "booking_date": {
              "type": "string",
              "description": "Ordered Date"
            }
          },
          "required": [
            "name",
            "booking_date"
          ]
        }
      }
    ],
    "single_tool": [
      {
        "name": "Navigation.TrainTickets.queryTrainTicket",
        "description": "Check the status of the remaining train tickets for the specified date, departure place, and destination",
        "parameters": {
          "type": "object",
          "properties": {
            "ride_date": {
              "type": "string",
              "description": "Date of trip"
            },
            "departure_station": {
              "type": "string",
              "description": "Departure Station"
            },
            "destination_station": {
              "type": "string",
              "description": "arrival station"
            },
            "train_type": {
              "type": "string",
              "description": "Train type, optional types are high-speed rail, motor vehicles, general express, express, etc."
            },
            "seat_type": {
              "type": "string",
              "description": "Seat Type"
            }
          },
          "required": [
            "ride_date",
            "departure_station",
            "destination_station",
            "train_type",
            "seat_type"
          ]
        }
      }
    ],
    "id": 808
  },
  {
    "messages": [
      {
        "role": "user",
        "content": "Use WeChat reading to turn on the night mode to read this picture of the starry sky, I want to see that star"
      },
      {
        "role": "function call",
        "content": {
          "name": "UtilityTools.Reading.setReadingMode",
          "arguments": {
            "night_mode": true
          }
        }
      },
      {
        "role": "assistant",
        "content": "Whether auto-reading needs to be turned on Reading font size How big do you want to set it?"
      },
      {
        "role": "user",
        "content": "Reading font size I would like to set to size 16, no need to turn on auto-reading."
      },
      {
        "role": "function call",
        "content": {
          "name": "UtilityTools.Reading.setReadingMode",
          "arguments": {
            "night_mode": true,
            "auto_read": false
          }
        }
      },
      {
        "role": "assistant",
        "content": "What font size do you want to set"
      },
      {
        "role": "user",
        "content": "It was wrong before. Auto-read, off by default should be True"
      },
      {
        "role": "function call",
        "content": {
          "name": "UtilityTools.Reading.setReadingMode",
          "arguments": {
            "night_mode": true,
            "auto_read": true
          }
        }
      },
      {
        "role": "assistant",
        "content": "What font size do you want to set"
      },
      {
        "role": "user",
        "content": "I would like the font size to be 16."
      },
      {
        "role": "function call",
        "content": {
          "name": "UtilityTools.Reading.setReadingMode",
          "arguments": {
            "night_mode": true,
            "auto_read": true,
            "fontsize": 16
          }
        }
      }
    ],
    "multiple_tools": [
      {
        "name": "Navigation.MapNavigation.viewMyFootprint",
        "description": "View the location of the user's past travel footprint",
        "parameters": {
          "type": "object",
          "properties": {},
          "required": []
        }
      },
      {
        "name": "MusicRadio.Karaoke.getAccompaniments",
        "description": "Get a list of song accompaniments for a given song title",
        "parameters": {
          "type": "object",
          "properties": {
            "song_name": {
              "type": "string",
              "description": "Song Name"
            },
            "singer_name": {
              "type": "string",
              "description": "Singer name"
            }
          },
          "required": [
            "song_name",
            "singer_name"
          ]
        }
      },
      {
        "name": "UtilityTools.Reading.setReadingMode",
        "description": "Set the night mode of reading, automatic reading, reading font size, etc.",
        "parameters": {
          "type": "object",
          "properties": {
            "night_mode": {
              "type": "boolean",
              "description": "Night mode, off by default"
            },
            "auto_read": {
              "type": "boolean",
              "description": "Auto-read, off by default"
            },
            "fontsize": {
              "type": "integer",
              "description": "FontSize"
            }
          },
          "required": [
            "night_mode",
            "auto_read",
            "fontsize"
          ]
        }
      },
      {
        "name": "UtilityTools.AlarmClock.viewAlarm",
        "description": "View set alarms based on alarm name or alarm time",
        "parameters": {
          "type": "object",
          "properties": {
            "clock_time_name": {
              "type": "string",
              "description": "Alarm name, defaults to all alarms"
            },
            "clock_time": {
              "type": "string",
              "description": "Alarm time"
            }
          },
          "required": [
            "clock_time_name",
            "clock_time"
          ]
        }
      },
      {
        "name": "Finance.Stocks.viewStockstrategy",
        "description": "View investment playbook",
        "parameters": {
          "type": "object",
          "properties": {},
          "required": []
        }
      }
    ],
    "single_tool": [
      {
        "name": "UtilityTools.Reading.setReadingMode",
        "description": "Set the night mode of reading, automatic reading, reading font size, etc.",
        "parameters": {
          "type": "object",
          "properties": {
            "night_mode": {
              "type": "boolean",
              "description": "Night mode, off by default"
            },
            "auto_read": {
              "type": "boolean",
              "description": "Auto-read, off by default"
            },
            "fontsize": {
              "type": "integer",
              "description": "FontSize"
            }
          },
          "required": [
            "night_mode",
            "auto_read",
            "fontsize"
          ]
        }
      }
    ],
    "id": 816
  },
  {
    "messages": [
      {
        "role": "user",
        "content": "Hey Siri, wink for me to invite Li Si and Zhang San to the meeting."
      },
      {
        "role": "function call",
        "content": {
          "name": "OfficeSoftware.Conferencing.inviteParticipants",
          "arguments": {
            "participant_list": "Li Si, Zhang San"
          }
        }
      },
      {
        "role": "assistant",
        "content": "What is the conference number"
      },
      {
        "role": "user",
        "content": "The meeting number is 2333, but please make sure you have the correct link to enter."
      },
      {
        "role": "function call",
        "content": {
          "name": "OfficeSoftware.Conferencing.inviteParticipants",
          "arguments": {
            "participant_list": "Li Si, Zhang San",
            "meeting_id": "2333"
          }
        }
      },
      {
        "role": "assistant",
        "content": "What's the title of the meeting"
      },
      {
        "role": "user",
        "content": "It was wrong before. Invitee List should be Sales Rep, Customer Service Team"
      },
      {
        "role": "function call",
        "content": {
          "name": "OfficeSoftware.Conferencing.inviteParticipants",
          "arguments": {
            "participant_list": "Sales Rep, Customer Service Team",
            "meeting_id": "2333"
          }
        }
      },
      {
        "role": "assistant",
        "content": "What's the title of the meeting"
      },
      {
        "role": "user",
        "content": "CRM System Training Session"
      },
      {
        "role": "function call",
        "content": {
          "name": "OfficeSoftware.Conferencing.inviteParticipants",
          "arguments": {
            "participant_list": "Sales Rep, Customer Service Team",
            "meeting_id": "2333",
            "title": "CRM System Training"
          }
        }
      }
    ],
    "multiple_tools": [
      {
        "name": "SocialCommunication.Calling.makePhoneCall",
        "description": "Used to call designated contacts",
        "parameters": {
          "type": "object",
          "properties": {
            "contact_name": {
              "type": "string",
              "description": "Name of the contact to call"
            },
            "phone_number": {
              "type": "string",
              "description": "Call the number directly"
            }
          },
          "required": [
            "contact_name",
            "phone_number"
          ]
        }
      },
      {
        "name": "Health.MedicalServices.bookDoctorAppointment",
        "description": "Schedule a appointment with a designated doctor for the user",
        "parameters": {
          "type": "object",
          "properties": {
            "doctor_name": {
              "type": "string",
              "description": "Doctor Name"
            },
            "appointment_time": {
              "type": "string",
              "description": "Specific time of appointment '"
            }
          },
          "required": [
            "doctor_name",
            "appointment_time"
          ]
        }
      },
      {
        "name": "SocialCommunication.SocialMedia.sendMediumMessage",
        "description": "Send a message to a specific friend in a specific medium",
        "parameters": {
          "type": "object",
          "properties": {
            "medium_name": {
              "type": "string",
              "description": "Media name"
            },
            "name": {
              "type": "string",
              "description": "Friend's nickname"
            },
            "content": {
              "type": "string",
              "description": "Content "
            },
            "account_number": {
              "type": "string",
              "description": "Friend's account"
            }
          },
          "required": [
            "medium_name",
            "name",
            "content",
            "account_number"
          ]
        }
      },
      {
        "name": "Navigation.TaxiCarRental.callingTaxi",
        "description": "Send a ride request based on your starting location",
        "parameters": {
          "type": "object",
          "properties": {
            "departure": {
              "type": "string",
              "description": "Pickup location, default current location"
            },
            "destination": {
              "type": "string",
              "description": "Destination"
            },
            "time": {
              "type": "string",
              "description": "Taxi time, default current time"
            }
          },
          "required": [
            "departure",
            "destination",
            "time"
          ]
        }
      },
      {
        "name": "OfficeSoftware.Conferencing.inviteParticipants",
        "description": "Send meeting invitations to designated people",
        "parameters": {
          "type": "object",
          "properties": {
            "meeting_id": {
              "type": "string",
              "description": "Conference No."
            },
            "title": {
              "type": "string",
              "description": "Meeting Title:"
            },
            "time": {
              "type": "string",
              "description": "Meeting Date"
            },
            "participant_list": {
              "type": "string",
              "description": "Invitee List"
            }
          },
          "required": [
            "meeting_id",
            "title",
            "time",
            "participant_list"
          ]
        }
      }
    ],
    "single_tool": [
      {
        "name": "OfficeSoftware.Conferencing.inviteParticipants",
        "description": "Send meeting invitations to designated people",
        "parameters": {
          "type": "object",
          "properties": {
            "meeting_id": {
              "type": "string",
              "description": "Conference No."
            },
            "title": {
              "type": "string",
              "description": "Meeting Title:"
            },
            "time": {
              "type": "string",
              "description": "Meeting Date"
            },
            "participant_list": {
              "type": "string",
              "description": "Invitee List"
            }
          },
          "required": [
            "meeting_id",
            "title",
            "time",
            "participant_list"
          ]
        }
      }
    ],
    "id": 817
  },
  {
    "messages": [
      {
        "role": "user",
        "content": "What good hotels are near Xi 'an Bell Tower?"
      },
      {
        "role": "function call",
        "content": {
          "name": "Travel.HotelServices.searchHotel",
          "arguments": {
            "destination": "Xi 'an Bell Tower"
          }
        }
      },
      {
        "role": "assistant",
        "content": "Is your check-in date today? If not, please let me know the exact date"
      },
      {
        "role": "user",
        "content": "No, my check-in date is October 1st."
      },
      {
        "role": "function call",
        "content": {
          "name": "Travel.HotelServices.searchHotel",
          "arguments": {
            "destination": "Xi 'an Bell Tower",
            "checkin_date": "October 1st"
          }
        }
      },
      {
        "role": "assistant",
        "content": "When is your checkout date"
      },
      {
        "role": "user",
        "content": "It was wrong before. destination should be Hangzhou"
      },
      {
        "role": "function call",
        "content": {
          "name": "Travel.HotelServices.searchHotel",
          "arguments": {
            "destination": "Hangzhou",
            "checkin_date": "October 1st"
          }
        }
      },
      {
        "role": "assistant",
        "content": "When is your checkout date"
      },
      {
        "role": "user",
        "content": "My check-out date is October 5th, and I have a morning train to catch that day."
      },
      {
        "role": "function call",
        "content": {
          "name": "Travel.HotelServices.searchHotel",
          "arguments": {
            "destination": "Hangzhou",
            "checkin_date": "October 1st",
            "checkout_date": "October 5th"
          }
        }
      },
      {
        "role": "assistant",
        "content": "What is your desired hotel price range above 0 ~ 300300 ~ 600600 ~ 10001000"
      },
      {
        "role": "user",
        "content": "I would like the hotel price to be in the range of 300 ~ 600."
      },
      {
        "role": "function call",
        "content": {
          "name": "Travel.HotelServices.searchHotel",
          "arguments": {
            "destination": "Hangzhou",
            "checkin_date": "October 1st",
            "checkout_date": "October 5th",
            "price_range": "300~600"
          }
        }
      }
    ],
    "multiple_tools": [
      {
        "name": "ConvenientLiving.FoodDelivery.searchRestaurants",
        "description": "Search for restaurants on Meituan based on user input",
        "parameters": {
          "type": "object",
          "properties": {
            "location": {
              "type": "string",
              "description": "Location"
            },
            "name": {
              "type": "string",
              "description": "regional cuisine"
            },
            "order": {
              "type": "string",
              "description": "Sort by e.g. rating, distance, average spend"
            }
          },
          "required": [
            "location",
            "name",
            "order"
          ]
        }
      },
      {
        "name": "Health.MedicalServices.getNearbyHospitals",
        "description": "Find a hospital near your location",
        "parameters": {
          "type": "object",
          "properties": {},
          "required": []
        }
      },
      {
        "name": "Travel.HotelServices.searchHotel",
        "description": "Search for hotels that match the criteria entered by the user",
        "parameters": {
          "type": "object",
          "properties": {
            "destination": {
              "type": "string",
              "description": "destination"
            },
            "checkin_date": {
              "type": "string",
              "description": "Check-in date (default today)"
            },
            "checkout_date": {
              "type": "string",
              "description": "DEPARTURE DATE"
            },
            "price_range": {
              "type": "string",
              "description": "Price range: 0 ~ 300; 300 ~ 600; 600 ~ 1000; 1000 to Shenyang"
            }
          },
          "required": [
            "destination",
            "checkin_date",
            "checkout_date",
            "price_range"
          ]
        }
      },
      {
        "name": "Navigation.Bicycles.findBikes",
        "description": "Find a bike/moped in your location",
        "parameters": {
          "type": "object",
          "properties": {
            "location": {
              "type": "string",
              "description": "Location, default current location"
            }
          },
          "required": [
            "location"
          ]
        }
      },
      {
        "name": "Navigation.MapNavigation.searchLocation",
        "description": "Search for a location by keyword, which can be a location, a point of interest such as a gas station, a charging pile, etc., and return a list of address information",
        "parameters": {
          "type": "object",
          "properties": {
            "keyword": {
              "type": "string",
              "description": "Keywords for search"
            }
          },
          "required": [
            "keyword"
          ]
        }
      }
    ],
    "single_tool": [
      {
        "name": "Travel.HotelServices.searchHotel",
        "description": "Search for hotels that match the criteria entered by the user",
        "parameters": {
          "type": "object",
          "properties": {
            "destination": {
              "type": "string",
              "description": "destination"
            },
            "checkin_date": {
              "type": "string",
              "description": "Check-in date (default today)"
            },
            "checkout_date": {
              "type": "string",
              "description": "DEPARTURE DATE"
            },
            "price_range": {
              "type": "string",
              "description": "Price range: 0 ~ 300; 300 ~ 600; 600 ~ 1000; 1000 to Shenyang"
            }
          },
          "required": [
            "destination",
            "checkin_date",
            "checkout_date",
            "price_range"
          ]
        }
      }
    ],
    "id": 819
  },
  {
    "messages": [
      {
        "role": "user",
        "content": "Urgent update! Cainiao app, please change my courier default shipping address to ‘new address: 789 ZZ Road, ZZ District, ZZ City’ immediately, thank you!!"
      },
      {
        "role": "function call",
        "content": {
          "name": "OnlineShopping.ExpressDelivery.updateAddress",
          "arguments": {
            "new_address": "No. 789, ZZ Road, ZZ District, ZZ City"
          }
        }
      },
      {
        "role": "assistant",
        "content": "What is the recipient's name?"
      },
      {
        "role": "user",
        "content": "The recipient's name is Li Si, but he's not here right now, can you tell me what's going on?"
      },
      {
        "role": "function call",
        "content": {
          "name": "OnlineShopping.ExpressDelivery.updateAddress",
          "arguments": {
            "new_address": "No. 789, ZZ Road, ZZ District, ZZ City",
            "name": "Li Si"
          }
        }
      },
      {
        "role": "assistant",
        "content": "Please provide the recipient's phone number"
      },
      {
        "role": "user",
        "content": "It was wrong before. Recipient's name should be Old Prince"
      },
      {
        "role": "function call",
        "content": {
          "name": "OnlineShopping.ExpressDelivery.updateAddress",
          "arguments": {
            "new_address": "No. 789, ZZ Road, ZZ District, ZZ City",
            "name": "Old Prince"
          }
        }
      },
      {
        "role": "assistant",
        "content": "Please provide the recipient's phone number"
      },
      {
        "role": "user",
        "content": "The phone number of the recipient is 13698765432, thank you."
      },
      {
        "role": "function call",
        "content": {
          "name": "OnlineShopping.ExpressDelivery.updateAddress",
          "arguments": {
            "new_address": "No. 789, ZZ Road, ZZ District, ZZ City",
            "name": "Old Prince",
            "phone": "13698765432"
          }
        }
      }
    ],
    "multiple_tools": [
      {
        "name": "OnlineShopping.Mall.modifyDeliveryAddress",
        "description": "Change address based on consignee",
        "parameters": {
          "type": "object",
          "properties": {
            "receiver": {
              "type": "string",
              "description": "Receiver"
            }
          },
          "required": [
            "receiver"
          ]
        }
      },
      {
        "name": "OnlineShopping.ExpressDelivery.updateAddress",
        "description": "Update old address to specified address",
        "parameters": {
          "type": "object",
          "properties": {
            "name": {
              "type": "string",
              "description": "Recipient's name"
            },
            "phone": {
              "type": "string",
              "description": "Recipient phone number"
            },
            "address": {
              "type": "string",
              "description": "To"
            },
            "new_address": {
              "type": "string",
              "description": "What's new after the update"
            }
          },
          "required": [
            "name",
            "phone",
            "address",
            "new_address"
          ]
        }
      },
      {
        "name": "Finance.Payment.updatePayUserInfo",
        "description": "Update account user information",
        "parameters": {
          "type": "object",
          "properties": {
            "user_name": {
              "type": "string",
              "description": "username"
            },
            "phone": {
              "type": "string",
              "description": "User's phone number"
            },
            "address": {
              "type": "string",
              "description": "User Address"
            }
          },
          "required": [
            "user_name",
            "phone",
            "address"
          ]
        }
      },
      {
        "name": "SocialCommunication.Calling.modifyContact",
        "description": "Modify the information for the specified contact",
        "parameters": {
          "type": "object",
          "properties": {
            "contact_name": {
              "type": "string",
              "description": "Contact name to modify"
            },
            "new_contact_name": {
              "type": "string",
              "description": "New contact name (optional)"
            },
            "new_phone_number": {
              "type": "string",
              "description": "New contact phone number (optional)"
            },
            "phone_number": {
              "type": "string",
              "description": "Contact phone number to modify"
            }
          },
          "required": [
            "contact_name",
            "new_contact_name",
            "new_phone_number",
            "phone_number"
          ]
        }
      },
      {
        "name": "SocialCommunication.SocialMedia.updateMediumInfo",
        "description": "Edit profile information",
        "parameters": {
          "type": "object",
          "properties": {
            "medium_name": {
              "type": "string",
              "description": "Media name"
            },
            "new_nickname": {
              "type": "string",
              "description": "Updated nickname"
            }
          },
          "required": [
            "medium_name",
            "new_nickname"
          ]
        }
      }
    ],
    "single_tool": [
      {
        "name": "OnlineShopping.ExpressDelivery.updateAddress",
        "description": "Update old address to specified address",
        "parameters": {
          "type": "object",
          "properties": {
            "name": {
              "type": "string",
              "description": "Recipient's name"
            },
            "phone": {
              "type": "string",
              "description": "Recipient phone number"
            },
            "address": {
              "type": "string",
              "description": "To"
            },
            "new_address": {
              "type": "string",
              "description": "What's new after the update"
            }
          },
          "required": [
            "name",
            "phone",
            "address",
            "new_address"
          ]
        }
      }
    ],
    "id": 821
  },
  {
    "messages": [
      {
        "role": "user",
        "content": "I have a ticket for violation of Su D44444, help me pay"
      },
      {
        "role": "function call",
        "content": {
          "name": "Navigation.TrafficViolations.payViolations",
          "arguments": {
            "plate_number": "Su D44444"
          }
        }
      },
      {
        "role": "assistant",
        "content": "What city is the violation located in?"
      },
      {
        "role": "user",
        "content": "The violation occurred in Guangzhou."
      },
      {
        "role": "function call",
        "content": {
          "name": "Navigation.TrafficViolations.payViolations",
          "arguments": {
            "plate_number": "Su D44444",
            "city": "Guangzhou"
          }
        }
      },
      {
        "role": "assistant",
        "content": "What is the billing time"
      },
      {
        "role": "user",
        "content": "It was wrong before. License plate number should be Su E12345"
      },
      {
        "role": "function call",
        "content": {
          "name": "Navigation.TrafficViolations.payViolations",
          "arguments": {
            "plate_number": "Su E12345",
            "city": "Guangzhou"
          }
        }
      },
      {
        "role": "assistant",
        "content": "What is the billing time"
      },
      {
        "role": "user",
        "content": "Billing starts on 15 March 2023 at 3pm."
      },
      {
        "role": "function call",
        "content": {
          "name": "Navigation.TrafficViolations.payViolations",
          "arguments": {
            "plate_number": "Su E12345",
            "city": "Guangzhou",
            "time": "March 15, 2023"
          }
        }
      }
    ],
    "multiple_tools": [
      {
        "name": "Navigation.TrafficViolations.payViolations",
        "description": "Pay fines for violations online",
        "parameters": {
          "type": "object",
          "properties": {
            "plate_number": {
              "type": "string",
              "description": "License plate number"
            },
            "city": {
              "type": "string",
              "description": "Violating city"
            },
            "time": {
              "type": "string",
              "description": "Billing Time"
            }
          },
          "required": [
            "plate_number",
            "city",
            "time"
          ]
        }
      },
      {
        "name": "ConvenientLiving.UtilityPayments.getDueDate",
        "description": "Deadline for payment of fees for the acquisition of utilities, etc.",
        "parameters": {
          "type": "object",
          "properties": {
            "service_type": {
              "type": "string",
              "description": "Types of paid services, such as utilities, gas, etc."
            },
            "user_name": {
              "type": "string",
              "description": "User Name"
            }
          },
          "required": [
            "service_type",
            "user_name"
          ]
        }
      },
      {
        "name": "Finance.Banking.applyForLoan",
        "description": "Apply for a loan from your bank",
        "parameters": {
          "type": "object",
          "properties": {
            "loan_amount": {
              "type": "integer",
              "description": "Loan Amount"
            },
            "loan_term": {
              "type": "string",
              "description": "Loan Term"
            },
            "purpose_of_loan": {
              "type": "string",
              "description": "Purpose of the loan"
            }
          },
          "required": [
            "loan_amount",
            "loan_term",
            "purpose_of_loan"
          ]
        }
      },
      {
        "name": "ConvenientLiving.JobRecruitment.getJobSalaryRange",
        "description": "Enter the job title to get its approximate salary range",
        "parameters": {
          "type": "object",
          "properties": {
            "job_title": {
              "type": "string",
              "description": "Position name"
            }
          },
          "required": [
            "job_title"
          ]
        }
      },
      {
        "name": "ConvenientLiving.UtilityPayments.payBill",
        "description": "Payment of utilities, etc.",
        "parameters": {
          "type": "object",
          "properties": {
            "service_type": {
              "type": "string",
              "description": "Types of paid services, such as utilities, gas, etc."
            },
            "user_name": {
              "type": "string",
              "description": "User Name"
            },
            "pay": {
              "type": "float",
              "description": "Contribution Amount, Default Billing Amount"
            },
            "address": {
              "type": "string",
              "description": "user address, default address"
            }
          },
          "required": [
            "service_type",
            "user_name",
            "pay",
            "address"
          ]
        }
      }
    ],
    "single_tool": [
      {
        "name": "Navigation.TrafficViolations.payViolations",
        "description": "Pay fines for violations online",
        "parameters": {
          "type": "object",
          "properties": {
            "plate_number": {
              "type": "string",
              "description": "License plate number"
            },
            "city": {
              "type": "string",
              "description": "Violating city"
            },
            "time": {
              "type": "string",
              "description": "Billing Time"
            }
          },
          "required": [
            "plate_number",
            "city",
            "time"
          ]
        }
      }
    ],
    "id": 830
  },
  {
    "messages": [
      {
        "role": "user",
        "content": "Please send me a price list of all room types of the Riujia Express Hotel (Dongzhi Store)."
      },
      {
        "role": "function call",
        "content": {
          "name": "Travel.HotelServices.getHotelRoomPrice",
          "arguments": {
            "name": "Like Home Express Hotel (Dongzhi Store)"
          }
        }
      },
      {
        "role": "assistant",
        "content": "Which room type needs a price"
      },
      {
        "role": "user",
        "content": "I need to know the price of the family room."
      },
      {
        "role": "function call",
        "content": {
          "name": "Travel.HotelServices.getHotelRoomPrice",
          "arguments": {
            "name": "Like Home Express Hotel (Dongzhi Store)",
            "room_type": "Household Room"
          }
        }
      },
      {
        "role": "assistant",
        "content": "What time is check-in?"
      },
      {
        "role": "user",
        "content": "It was wrong before. Hotel Name should be Hilton Hotel"
      },
      {
        "role": "function call",
        "content": {
          "name": "Travel.HotelServices.getHotelRoomPrice",
          "arguments": {
            "name": "Hilton Hotel",
            "room_type": "Household Room"
          }
        }
      },
      {
        "role": "assistant",
        "content": "What time is check-in?"
      },
      {
        "role": "user",
        "content": "My check-in date is July 10th and I will arrive at the hotel early on that day."
      },
      {
        "role": "function call",
        "content": {
          "name": "Travel.HotelServices.getHotelRoomPrice",
          "arguments": {
            "name": "Hilton Hotel",
            "room_type": "Household Room",
            "checkin_date": "July 10"
          }
        }
      }
    ],
    "multiple_tools": [
      {
        "name": "Travel.ScenicAreaServices.getScenicSpotTicketPrice",
        "description": "Get ticket prices for selected attractions",
        "parameters": {
          "type": "object",
          "properties": {
            "name": {
              "type": "string",
              "description": "Name of the tourist area"
            }
          },
          "required": [
            "name"
          ]
        }
      },
      {
        "name": "OnlineShopping.SecondhandTrading.sellSecondhandSaleCommodity",
        "description": "Add merchandise",
        "parameters": {
          "type": "object",
          "properties": {
            "sell_content": {
              "type": "string",
              "description": "Description or details"
            },
            "pic_path": {
              "type": "string",
              "description": "Image or video path"
            },
            "sell_price": {
              "type": "string",
              "description": "Pricing"
            },
            "shipping_method": {
              "type": "string",
              "description": "Free shipping; billed by distance (buyer pays), upfront price (buyer pays), no mailing required, buyer picks up; free shipping by default"
            }
          },
          "required": [
            "sell_content",
            "pic_path",
            "sell_price",
            "shipping_method"
          ]
        }
      },
      {
        "name": "VideoPlayback.ShortVideos.publishShortVideo",
        "description": "Post a short video",
        "parameters": {
          "type": "object",
          "properties": {
            "name": {
              "type": "string",
              "description": "Short video name"
            },
            "filepath": {
              "type": "string",
              "description": "Video"
            }
          },
          "required": [
            "name",
            "filepath"
          ]
        }
      },
      {
        "name": "Travel.HotelServices.getHotelRoomPrice",
        "description": "Get prices for selected hotel rooms or all room types",
        "parameters": {
          "type": "object",
          "properties": {
            "name": {
              "type": "string",
              "description": "Hotel Name"
            },
            "room_type": {
              "type": "string",
              "description": "Room types"
            },
            "checkin_date": {
              "type": "string",
              "description": "Check-in Date"
            },
            "checkout_date": {
              "type": "string",
              "description": "DEPARTURE DATE"
            }
          },
          "required": [
            "name",
            "room_type",
            "checkin_date",
            "checkout_date"
          ]
        }
      },
      {
        "name": "SocialCommunication.InstantMessaging.sendFile",
        "description": "Send a file to a specific contact or group",
        "parameters": {
          "type": "object",
          "properties": {
            "receiver_name": {
              "type": "string",
              "description": "Name of the contact or group receiving the file"
            },
            "file_path": {
              "type": "string",
              "description": "The path or document name of the file to send locally"
            }
          },
          "required": [
            "receiver_name",
            "file_path"
          ]
        }
      }
    ],
    "single_tool": [
      {
        "name": "Travel.HotelServices.getHotelRoomPrice",
        "description": "Get prices for selected hotel rooms or all room types",
        "parameters": {
          "type": "object",
          "properties": {
            "name": {
              "type": "string",
              "description": "Hotel Name"
            },
            "room_type": {
              "type": "string",
              "description": "Room types"
            },
            "checkin_date": {
              "type": "string",
              "description": "Check-in Date"
            },
            "checkout_date": {
              "type": "string",
              "description": "DEPARTURE DATE"
            }
          },
          "required": [
            "name",
            "room_type",
            "checkin_date",
            "checkout_date"
          ]
        }
      }
    ],
    "id": 834
  },
  {
    "messages": [
      {
        "role": "user",
        "content": "I want to know the room type and price of the Hilton hotel, can you use the Meitu Show to check it out?"
      },
      {
        "role": "function call",
        "content": {
          "name": "Travel.HotelServices.getHotelRoomPrice",
          "arguments": {
            "name": "Hilton Hotel"
          }
        }
      },
      {
        "role": "assistant",
        "content": "What room type do you need to check for prices"
      },
      {
        "role": "user",
        "content": "I would like to know the price of the executive suite."
      },
      {
        "role": "function call",
        "content": {
          "name": "Travel.HotelServices.getHotelRoomPrice",
          "arguments": {
            "name": "Hilton Hotel",
            "room_type": "Executive Suite"
          }
        }
      },
      {
        "role": "assistant",
        "content": "What time is check-in?"
      },
      {
        "role": "user",
        "content": "It was wrong before. Room types should be Presidential Suite"
      },
      {
        "role": "function call",
        "content": {
          "name": "Travel.HotelServices.getHotelRoomPrice",
          "arguments": {
            "name": "Hilton Hotel",
            "room_type": "Presidential Suite"
          }
        }
      },
      {
        "role": "assistant",
        "content": "What time is check-in?"
      },
      {
        "role": "user",
        "content": "My check-in date is April 15th and I will go directly to the hotel on that day."
      },
      {
        "role": "function call",
        "content": {
          "name": "Travel.HotelServices.getHotelRoomPrice",
          "arguments": {
            "name": "Hilton Hotel",
            "room_type": "Presidential Suite",
            "checkin_date": "April 15th"
          }
        }
      }
    ],
    "multiple_tools": [
      {
        "name": "ConvenientLiving.AutoLife.calculateCarLoan",
        "description": "The loan program is calculated based on information such as the purchase price of the car.",
        "parameters": {
          "type": "object",
          "properties": {
            "car_price": {
              "type": "float",
              "description": "Car price, required"
            },
            "down_payment": {
              "type": "float",
              "description": "First installment payment"
            }
          },
          "required": [
            "car_price",
            "down_payment"
          ]
        }
      },
      {
        "name": "Travel.HotelServices.getHotelRoomPrice",
        "description": "Get prices for selected hotel rooms or all room types",
        "parameters": {
          "type": "object",
          "properties": {
            "name": {
              "type": "string",
              "description": "Hotel Name"
            },
            "room_type": {
              "type": "string",
              "description": "Room types"
            },
            "checkin_date": {
              "type": "string",
              "description": "Check-in Date"
            },
            "checkout_date": {
              "type": "string",
              "description": "DEPARTURE DATE"
            }
          },
          "required": [
            "name",
            "room_type",
            "checkin_date",
            "checkout_date"
          ]
        }
      },
      {
        "name": "Finance.Funds.getFundSubscriptionFee",
        "description": "Query subscription fee information for designated funds",
        "parameters": {
          "type": "object",
          "properties": {
            "fund_name": {
              "type": "string",
              "description": "Fund name"
            },
            "fund_code": {
              "type": "string",
              "description": "Fund  Code"
            }
          },
          "required": [
            "fund_name",
            "fund_code"
          ]
        }
      },
      {
        "name": "Travel.ItineraryServices.estimateTravelCost",
        "description": "Estimate the approximate cost of a given trip",
        "parameters": {
          "type": "object",
          "properties": {
            "origin": {
              "type": "string",
              "description": "Origination"
            },
            "destination": {
              "type": "string",
              "description": "destination"
            }
          },
          "required": [
            "origin",
            "destination"
          ]
        }
      },
      {
        "name": "Travel.ScenicAreaServices.getScenicSpotTicketPrice",
        "description": "Get ticket prices for selected attractions",
        "parameters": {
          "type": "object",
          "properties": {
            "name": {
              "type": "string",
              "description": "Name of the tourist area"
            }
          },
          "required": [
            "name"
          ]
        }
      }
    ],
    "single_tool": [
      {
        "name": "Travel.HotelServices.getHotelRoomPrice",
        "description": "Get prices for selected hotel rooms or all room types",
        "parameters": {
          "type": "object",
          "properties": {
            "name": {
              "type": "string",
              "description": "Hotel Name"
            },
            "room_type": {
              "type": "string",
              "description": "Room types"
            },
            "checkin_date": {
              "type": "string",
              "description": "Check-in Date"
            },
            "checkout_date": {
              "type": "string",
              "description": "DEPARTURE DATE"
            }
          },
          "required": [
            "name",
            "room_type",
            "checkin_date",
            "checkout_date"
          ]
        }
      }
    ],
    "id": 835
  },
  {
    "messages": [
      {
        "role": "user",
        "content": "The last driver had a strange smell in the car, which was really uncomfortable, and it was rated 1 star."
      },
      {
        "role": "function call",
        "content": {
          "name": "Navigation.TaxiCarRental.evaluateTaxiOrder",
          "arguments": {
            "rating": "1"
          }
        }
      },
      {
        "role": "assistant",
        "content": "What is the order time"
      },
      {
        "role": "user",
        "content": "It was an order placed last Friday night."
      },
      {
        "role": "function call",
        "content": {
          "name": "Navigation.TaxiCarRental.evaluateTaxiOrder",
          "arguments": {
            "rating": "1",
            "time": "Last Friday night"
          }
        }
      },
      {
        "role": "assistant",
        "content": "Where to"
      },
      {
        "role": "user",
        "content": "It was wrong before. Order time should be March 10"
      },
      {
        "role": "function call",
        "content": {
          "name": "Navigation.TaxiCarRental.evaluateTaxiOrder",
          "arguments": {
            "rating": "1",
            "time": "March 10"
          }
        }
      },
      {
        "role": "assistant",
        "content": "Where to"
      },
      {
        "role": "user",
        "content": "We are planning to go to Friends Memories Cafe, which is centrally located in a great setting for a party."
      },
      {
        "role": "function call",
        "content": {
          "name": "Navigation.TaxiCarRental.evaluateTaxiOrder",
          "arguments": {
            "rating": "1",
            "time": "March 10",
            "destination": "Friends Remember Cafe"
          }
        }
      }
    ],
    "multiple_tools": [
      {
        "name": "Navigation.Bicycles.rateRidingExperience",
        "description": "Rate this bike ride",
        "parameters": {
          "type": "object",
          "properties": {
            "rating": {
              "type": "integer",
              "description": "Rating"
            },
            "comment": {
              "type": "string",
              "description": "Review Content"
            }
          },
          "required": [
            "rating",
            "comment"
          ]
        }
      },
      {
        "name": "SocialCommunication.Calling.checkPhoneCallQuality",
        "description": "Evaluate metrics such as network quality and sound clarity of the current call",
        "parameters": {
          "type": "object",
          "properties": {},
          "required": []
        }
      },
      {
        "name": "OnlineShopping.ExpressDelivery.rateExpressService",
        "description": "Rate courier service",
        "parameters": {
          "type": "object",
          "properties": {
            "express_id": {
              "type": "string",
              "description": "Tracking Number"
            },
            "signing_date": {
              "type": "string",
              "description": "The date of signing"
            },
            "rating": {
              "type": "string",
              "description": "Rating, 1-5 points"
            },
            "comment": {
              "type": "string",
              "description": "Scoring contents"
            }
          },
          "required": [
            "express_id",
            "signing_date",
            "rating",
            "comment"
          ]
        }
      },
      {
        "name": "NewsMagazines.NewspapersMagazines.rateMagazine",
        "description": "Rating and evaluation of newspapers and magazines",
        "parameters": {
          "type": "object",
          "properties": {
            "name": {
              "type": "string",
              "description": "Magazine Name"
            },
            "rating": {
              "type": "integer",
              "description": "Rating"
            },
            "comment": {
              "type": "string",
              "description": "Review Content"
            }
          },
          "required": [
            "name",
            "rating",
            "comment"
          ]
        }
      },
      {
        "name": "Navigation.TaxiCarRental.evaluateTaxiOrder",
        "description": "Rate the driver who completed the trip",
        "parameters": {
          "type": "object",
          "properties": {
            "time": {
              "type": "string",
              "description": "Order time"
            },
            "destination": {
              "type": "string",
              "description": "Destination"
            },
            "rating": {
              "type": "string",
              "description": "Review Score"
            }
          },
          "required": [
            "time",
            "destination",
            "rating"
          ]
        }
      }
    ],
    "single_tool": [
      {
        "name": "Navigation.TaxiCarRental.evaluateTaxiOrder",
        "description": "Rate the driver who completed the trip",
        "parameters": {
          "type": "object",
          "properties": {
            "time": {
              "type": "string",
              "description": "Order time"
            },
            "destination": {
              "type": "string",
              "description": "Destination"
            },
            "rating": {
              "type": "string",
              "description": "Review Score"
            }
          },
          "required": [
            "time",
            "destination",
            "rating"
          ]
        }
      }
    ],
    "id": 845
  },
  {
    "messages": [
      {
        "role": "user",
        "content": "Hey, it's time to mute everyone in meeting 556677."
      },
      {
        "role": "function call",
        "content": {
          "name": "OfficeSoftware.Conferencing.muteParticipants",
          "arguments": {
            "meeting_id": "556677"
          }
        }
      },
      {
        "role": "assistant",
        "content": "What's the title of the meeting"
      },
      {
        "role": "user",
        "content": "Product Development Progress Discussion"
      },
      {
        "role": "function call",
        "content": {
          "name": "OfficeSoftware.Conferencing.muteParticipants",
          "arguments": {
            "meeting_id": "556677",
            "title": "Product Development Progress Discussion"
          }
        }
      },
      {
        "role": "assistant",
        "content": "What is the meeting time?"
      },
      {
        "role": "user",
        "content": "It was wrong before. Meeting Title: should be Monthly Sales Report"
      },
      {
        "role": "function call",
        "content": {
          "name": "OfficeSoftware.Conferencing.muteParticipants",
          "arguments": {
            "meeting_id": "556677",
            "title": "Monthly Sales Report"
          }
        }
      },
      {
        "role": "assistant",
        "content": "What is the meeting time?"
      },
      {
        "role": "user",
        "content": "We scheduled a meeting this Friday at 3pm."
      },
      {
        "role": "function call",
        "content": {
          "name": "OfficeSoftware.Conferencing.muteParticipants",
          "arguments": {
            "meeting_id": "556677",
            "title": "Monthly Sales Report",
            "time": "This Friday at 3pm"
          }
        }
      }
    ],
    "multiple_tools": [
      {
        "name": "SocialCommunication.Community.hideCommunityPost",
        "description": "Hide posts from selected communities",
        "parameters": {
          "type": "object",
          "properties": {
            "community_name": {
              "type": "string",
              "description": "The name of the community to hide the post from"
            },
            "post_name": {
              "type": "string",
              "description": "Title of the post to hide"
            }
          },
          "required": [
            "community_name",
            "post_name"
          ]
        }
      },
      {
        "name": "Photography.VideoEditing.videoMute",
        "description": "Turn off video sound; restore video sound",
        "parameters": {
          "type": "object",
          "properties": {
            "name_or_path": {
              "type": "string",
              "description": "The name or path of the video"
            },
            "open": {
              "type": "boolean",
              "description": "Turn on mute, turn off mute"
            }
          },
          "required": [
            "name_or_path",
            "open"
          ]
        }
      },
      {
        "name": "SocialCommunication.Calling.mutePhoneCall",
        "description": "Control whether your microphone is muted during the call",
        "parameters": {
          "type": "object",
          "properties": {
            "mute_status": {
              "type": "boolean",
              "description": "true to mute, false to unmute"
            }
          },
          "required": [
            "mute_status"
          ]
        }
      },
      {
        "name": "SystemTools.SystemSettings.setSystemTurnOnSilentMode",
        "description": "Turn on Mute Mode",
        "parameters": {
          "type": "object",
          "properties": {},
          "required": []
        }
      },
      {
        "name": "OfficeSoftware.Conferencing.muteParticipants",
        "description": "Mute Assigned Participants",
        "parameters": {
          "type": "object",
          "properties": {
            "meeting_id": {
              "type": "string",
              "description": "Conference No."
            },
            "title": {
              "type": "string",
              "description": "Meeting Title:"
            },
            "time": {
              "type": "string",
              "description": "Meeting Date"
            },
            "participant_list": {
              "type": "string",
              "description": "List of people to mute, defaults to All People"
            }
          },
          "required": [
            "meeting_id",
            "title",
            "time",
            "participant_list"
          ]
        }
      }
    ],
    "single_tool": [
      {
        "name": "OfficeSoftware.Conferencing.muteParticipants",
        "description": "Mute Assigned Participants",
        "parameters": {
          "type": "object",
          "properties": {
            "meeting_id": {
              "type": "string",
              "description": "Conference No."
            },
            "title": {
              "type": "string",
              "description": "Meeting Title:"
            },
            "time": {
              "type": "string",
              "description": "Meeting Date"
            },
            "participant_list": {
              "type": "string",
              "description": "List of people to mute, defaults to All People"
            }
          },
          "required": [
            "meeting_id",
            "title",
            "time",
            "participant_list"
          ]
        }
      }
    ],
    "id": 846
  },
  {
    "messages": [
      {
        "role": "user",
        "content": "Request a ride to People's Square"
      },
      {
        "role": "function call",
        "content": {
          "name": "Navigation.TaxiCarRental.callingTaxi",
          "arguments": {
            "destination": "People's Square"
          }
        }
      },
      {
        "role": "assistant",
        "content": "Where is your pickup location? Confirm if you're using your current location"
      },
      {
        "role": "user",
        "content": "My pickup location is Shanghai Railway Station, please confirm your current location."
      },
      {
        "role": "function call",
        "content": {
          "name": "Navigation.TaxiCarRental.callingTaxi",
          "arguments": {
            "destination": "People's Square",
            "departure": "Shanghai Railway Station"
          }
        }
      },
      {
        "role": "assistant",
        "content": "When to take a taxi"
      },
      {
        "role": "user",
        "content": "It was wrong before. Pickup location, default current location should be my family"
      },
      {
        "role": "function call",
        "content": {
          "name": "Navigation.TaxiCarRental.callingTaxi",
          "arguments": {
            "destination": "People's Square",
            "departure": "my family"
          }
        }
      },
      {
        "role": "assistant",
        "content": "When to take a taxi"
      },
      {
        "role": "user",
        "content": "Tomorrow at 10 am, I need a taxi to the airport."
      },
      {
        "role": "function call",
        "content": {
          "name": "Navigation.TaxiCarRental.callingTaxi",
          "arguments": {
            "destination": "People's Square",
            "departure": "my family",
            "time": "Tomorrow at 10am"
          }
        }
      }
    ],
    "multiple_tools": [
      {
        "name": "SystemTools.SystemSettings.setSystemTurnOnScreen2TV",
        "description": "Turn on phone projection to TV",
        "parameters": {
          "type": "object",
          "properties": {},
          "required": []
        }
      },
      {
        "name": "ConvenientLiving.GovernmentServices.createServiceRequest",
        "description": "Submit a new city service request",
        "parameters": {
          "type": "object",
          "properties": {
            "city_name": {
              "type": "string",
              "description": "City"
            }
          },
          "required": [
            "city_name"
          ]
        }
      },
      {
        "name": "SystemTools.SystemSettings.setSystemTurnOnFlashlight",
        "description": "Turn on flashlight",
        "parameters": {
          "type": "object",
          "properties": {},
          "required": []
        }
      },
      {
        "name": "Navigation.TaxiCarRental.callingTaxi",
        "description": "Send a ride request based on your starting location",
        "parameters": {
          "type": "object",
          "properties": {
            "departure": {
              "type": "string",
              "description": "Pickup location, default current location"
            },
            "destination": {
              "type": "string",
              "description": "Destination"
            },
            "time": {
              "type": "string",
              "description": "Taxi time, default current time"
            }
          },
          "required": [
            "departure",
            "destination",
            "time"
          ]
        }
      },
      {
        "name": "Health.MedicalServices.bookDoctorAppointment",
        "description": "Schedule a appointment with a designated doctor for the user",
        "parameters": {
          "type": "object",
          "properties": {
            "doctor_name": {
              "type": "string",
              "description": "Doctor Name"
            },
            "appointment_time": {
              "type": "string",
              "description": "Specific time of appointment '"
            }
          },
          "required": [
            "doctor_name",
            "appointment_time"
          ]
        }
      }
    ],
    "single_tool": [
      {
        "name": "Navigation.TaxiCarRental.callingTaxi",
        "description": "Send a ride request based on your starting location",
        "parameters": {
          "type": "object",
          "properties": {
            "departure": {
              "type": "string",
              "description": "Pickup location, default current location"
            },
            "destination": {
              "type": "string",
              "description": "Destination"
            },
            "time": {
              "type": "string",
              "description": "Taxi time, default current time"
            }
          },
          "required": [
            "departure",
            "destination",
            "time"
          ]
        }
      }
    ],
    "id": 853
  },
  {
    "messages": [
      {
        "role": "user",
        "content": "Next Monday at 8am I need a rental car to book for me"
      },
      {
        "role": "function call",
        "content": {
          "name": "Navigation.TaxiCarRental.createCarRentalOrder",
          "arguments": {
            "start_time": "Next Monday at 8am"
          }
        }
      },
      {
        "role": "assistant",
        "content": "Where to pick up your car"
      },
      {
        "role": "user",
        "content": "Pick up at Beijing Capital International Airport."
      },
      {
        "role": "function call",
        "content": {
          "name": "Navigation.TaxiCarRental.createCarRentalOrder",
          "arguments": {
            "start_time": "Next Monday at 8am",
            "location": "Beijing Capital International Airport"
          }
        }
      },
      {
        "role": "assistant",
        "content": "When is the dropoff time?"
      },
      {
        "role": "user",
        "content": "It was wrong before. Pick-up from should be Shanghai Pudong Railway Station"
      },
      {
        "role": "function call",
        "content": {
          "name": "Navigation.TaxiCarRental.createCarRentalOrder",
          "arguments": {
            "start_time": "Next Monday at 8am",
            "location": "Shanghai Pudong Railway Station"
          }
        }
      },
      {
        "role": "assistant",
        "content": "When is the dropoff time?"
      },
      {
        "role": "user",
        "content": "The return time is 6:00 pm on April 15th, remember to return it on time."
      },
      {
        "role": "function call",
        "content": {
          "name": "Navigation.TaxiCarRental.createCarRentalOrder",
          "arguments": {
            "start_time": "Next Monday at 8am",
            "location": "Shanghai Pudong Railway Station",
            "end_time": "April 15th at 6pm"
          }
        }
      }
    ],
    "multiple_tools": [
      {
        "name": "Navigation.TaxiCarRental.createCarRentalOrder",
        "description": "Book a rental car",
        "parameters": {
          "type": "object",
          "properties": {
            "location": {
              "type": "string",
              "description": "Pick-up from"
            },
            "start_time": {
              "type": "string",
              "description": "Start Time "
            },
            "end_time": {
              "type": "string",
              "description": "drop-off date"
            }
          },
          "required": [
            "location",
            "start_time",
            "end_time"
          ]
        }
      },
      {
        "name": "ConvenientLiving.FoodDelivery.placeRestaurantOrder",
        "description": "Order select restaurants and dishes",
        "parameters": {
          "type": "object",
          "properties": {
            "restaurant_name": {
              "type": "string",
              "description": "Name of the restaurant"
            },
            "dishes": {
              "type": "string",
              "description": "Array containing item IDs"
            },
            "delivery_address": {
              "type": "string",
              "description": "Delivery address"
            },
            "delivery_time": {
              "type": "string",
              "description": "Expected delivery time in HH: mm format"
            },
            "note": {
              "type": "string",
              "description": "Remarks"
            }
          },
          "required": [
            "restaurant_name",
            "dishes",
            "delivery_address",
            "delivery_time",
            "note"
          ]
        }
      },
      {
        "name": "Navigation.TrainTickets.bookTrainTicket",
        "description": "Book a train ticket for a specific time, origin, or destination for a specific rider",
        "parameters": {
          "type": "object",
          "properties": {
            "ride_date": {
              "type": "string",
              "description": "Date of trip"
            },
            "departure_station": {
              "type": "string",
              "description": "Departure Station"
            },
            "destination_station": {
              "type": "string",
              "description": "arrival station"
            },
            "train_type": {
              "type": "string",
              "description": "Train type, optional types are high-speed rail, motor vehicles, general express, express, etc."
            },
            "seat_type": {
              "type": "string",
              "description": "Seat Type"
            },
            "passenger_name": {
              "type": "string",
              "description": "Rider's name"
            },
            "passenger_id": {
              "type": "string",
              "description": "Rider ID number"
            }
          },
          "required": [
            "ride_date",
            "departure_station",
            "destination_station",
            "train_type",
            "seat_type",
            "passenger_name",
            "passenger_id"
          ]
        }
      },
      {
        "name": "OfficeSoftware.Conferencing.createMeeting",
        "description": "Create a new meeting",
        "parameters": {
          "type": "object",
          "properties": {
            "title": {
              "type": "string",
              "description": "Meeting Title:"
            },
            "start_time": {
              "type": "string",
              "description": "Conference Start Time"
            },
            "end_time": {
              "type": "string",
              "description": "Meeting end time"
            },
            "location": {
              "type": "string",
              "description": "Meeting Address"
            },
            "participant_list": {
              "type": "string",
              "description": "List of participants in the meeting"
            }
          },
          "required": [
            "title",
            "start_time",
            "end_time",
            "location",
            "participant_list"
          ]
        }
      },
      {
        "name": "Travel.HotelServices.bookHotel",
        "description": "Book a room at a selected hotel",
        "parameters": {
          "type": "object",
          "properties": {
            "name": {
              "type": "string",
              "description": "Hotel Name"
            },
            "checkin_date": {
              "type": "string",
              "description": "Check-in Date"
            },
            "checkout_date": {
              "type": "string",
              "description": "DEPARTURE DATE"
            },
            "room_type": {
              "type": "string",
              "description": "Room types"
            },
            "tenant_name": {
              "type": "string",
              "description": "Name of the guest staying"
            },
            "tenant_number": {
              "type": "string",
              "description": "Telephone number of the guest staying at the hotel"
            }
          },
          "required": [
            "name",
            "checkin_date",
            "checkout_date",
            "room_type",
            "tenant_name",
            "tenant_number"
          ]
        }
      }
    ],
    "single_tool": [
      {
        "name": "Navigation.TaxiCarRental.createCarRentalOrder",
        "description": "Book a rental car",
        "parameters": {
          "type": "object",
          "properties": {
            "location": {
              "type": "string",
              "description": "Pick-up from"
            },
            "start_time": {
              "type": "string",
              "description": "Start Time "
            },
            "end_time": {
              "type": "string",
              "description": "drop-off date"
            }
          },
          "required": [
            "location",
            "start_time",
            "end_time"
          ]
        }
      }
    ],
    "id": 858
  },
  {
    "messages": [
      {
        "role": "user",
        "content": "I plan to apply for a business license online, the company name is Geek Technology Co., Ltd."
      },
      {
        "role": "function call",
        "content": {
          "name": "ConvenientLiving.GovernmentServices.applyForBusinessLicense",
          "arguments": {
            "business_name": "Geek Technology Co., Ltd."
          }
        }
      },
      {
        "role": "assistant",
        "content": "Please provide the business owner's name, ID number, and contact information"
      },
      {
        "role": "user",
        "content": "Zhang San, ID card number 123456789012345678, contact information 13800000000."
      },
      {
        "role": "function call",
        "content": {
          "name": "ConvenientLiving.GovernmentServices.applyForBusinessLicense",
          "arguments": {
            "business_name": "Geek Technology Co., Ltd.",
            "name": "Zhang San"
          }
        }
      },
      {
        "role": "assistant",
        "content": "Please provide your ID number"
      },
      {
        "role": "user",
        "content": "It was wrong before. Objects that contain information about the business owner, such as name, ID number, etc. should be Li Si"
      },
      {
        "role": "function call",
        "content": {
          "name": "ConvenientLiving.GovernmentServices.applyForBusinessLicense",
          "arguments": {
            "business_name": "Geek Technology Co., Ltd.",
            "name": "Li Si"
          }
        }
      },
      {
        "role": "assistant",
        "content": "Please provide your ID number"
      },
      {
        "role": "user",
        "content": "My ID number is 440582199001011234, would you like me to provide additional information?"
      },
      {
        "role": "function call",
        "content": {
          "name": "ConvenientLiving.GovernmentServices.applyForBusinessLicense",
          "arguments": {
            "business_name": "Geek Technology Co., Ltd.",
            "name": "Li Si",
            "id_card": "440582199001011234"
          }
        }
      }
    ],
    "multiple_tools": [
      {
        "name": "ConvenientLiving.GovernmentServices.applyForBusinessLicense",
        "description": "Apply for a business license online",
        "parameters": {
          "type": "object",
          "properties": {
            "business_name": {
              "type": "string",
              "description": "Name of the Enterprise"
            },
            "name": {
              "type": "string",
              "description": "Objects that contain information about the business owner, such as name, ID number, etc."
            },
            "id_card": {
              "type": "string",
              "description": "ID No."
            }
          },
          "required": [
            "business_name",
            "name",
            "id_card"
          ]
        }
      },
      {
        "name": "ConvenientLiving.GovernmentServices.applyForEducationGrant",
        "description": "Submit an application for an education grant",
        "parameters": {
          "type": "object",
          "properties": {
            "name": {
              "type": "string",
              "description": "Applicant, default user self"
            },
            "school": {
              "type": "string",
              "description": "Schools"
            }
          },
          "required": [
            "name",
            "school"
          ]
        }
      },
      {
        "name": "ConvenientLiving.UtilityPayments.payBill",
        "description": "Payment of utilities, etc.",
        "parameters": {
          "type": "object",
          "properties": {
            "service_type": {
              "type": "string",
              "description": "Types of paid services, such as utilities, gas, etc."
            },
            "user_name": {
              "type": "string",
              "description": "User Name"
            },
            "pay": {
              "type": "float",
              "description": "Contribution Amount, Default Billing Amount"
            },
            "address": {
              "type": "string",
              "description": "user address, default address"
            }
          },
          "required": [
            "service_type",
            "user_name",
            "pay",
            "address"
          ]
        }
      },
      {
        "name": "MusicRadio.OnlineMusic.bindSocialPlatforms",
        "description": "Link your account to a social platform",
        "parameters": {
          "type": "object",
          "properties": {
            "platforms": {
              "type": "string",
              "description": "Social platforms to be linked"
            }
          },
          "required": [
            "platforms"
          ]
        }
      },
      {
        "name": "Finance.Payment.linkPayBankCard",
        "description": "Link your card to your account",
        "parameters": {
          "type": "object",
          "properties": {
            "card_number": {
              "type": "string",
              "description": "Bank Card Number"
            },
            "card_holder_name": {
              "type": "string",
              "description": "Card holder name"
            },
            "bank_name": {
              "type": "string",
              "description": "Bank Name"
            }
          },
          "required": [
            "card_number",
            "card_holder_name",
            "bank_name"
          ]
        }
      }
    ],
    "single_tool": [
      {
        "name": "ConvenientLiving.GovernmentServices.applyForBusinessLicense",
        "description": "Apply for a business license online",
        "parameters": {
          "type": "object",
          "properties": {
            "business_name": {
              "type": "string",
              "description": "Name of the Enterprise"
            },
            "name": {
              "type": "string",
              "description": "Objects that contain information about the business owner, such as name, ID number, etc."
            },
            "id_card": {
              "type": "string",
              "description": "ID No."
            }
          },
          "required": [
            "business_name",
            "name",
            "id_card"
          ]
        }
      }
    ],
    "id": 859
  },
  {
    "messages": [
      {
        "role": "user",
        "content": "I am 28 years old, help me update the age information in the profile"
      },
      {
        "role": "function call",
        "content": {
          "name": "Health.HealthManagement.updateProfile",
          "arguments": {
            "age": 28
          }
        }
      },
      {
        "role": "assistant",
        "content": "What is your height in centimeters and what is your weight in kilograms?"
      },
      {
        "role": "user",
        "content": "I am 172cm tall and weigh 65kg."
      },
      {
        "role": "function call",
        "content": {
          "name": "Health.HealthManagement.updateProfile",
          "arguments": {
            "age": 28,
            "height": 172
          }
        }
      },
      {
        "role": "assistant",
        "content": "Please provide your weight in kilograms"
      },
      {
        "role": "user",
        "content": "It was wrong before. Height (in cm) should be 175"
      },
      {
        "role": "function call",
        "content": {
          "name": "Health.HealthManagement.updateProfile",
          "arguments": {
            "age": 28,
            "height": 175
          }
        }
      },
      {
        "role": "assistant",
        "content": "Please provide your weight in kilograms"
      },
      {
        "role": "user",
        "content": "I weigh 68 kg."
      },
      {
        "role": "function call",
        "content": {
          "name": "Health.HealthManagement.updateProfile",
          "arguments": {
            "age": 28,
            "height": 175,
            "weight": 68
          }
        }
      }
    ],
    "multiple_tools": [
      {
        "name": "SocialCommunication.SocialMedia.updateMediumInfo",
        "description": "Edit profile information",
        "parameters": {
          "type": "object",
          "properties": {
            "medium_name": {
              "type": "string",
              "description": "Media name"
            },
            "new_nickname": {
              "type": "string",
              "description": "Updated nickname"
            }
          },
          "required": [
            "medium_name",
            "new_nickname"
          ]
        }
      },
      {
        "name": "SystemTools.SystemSettings.modifyuserAccounts",
        "description": "Modify the current user's information",
        "parameters": {
          "type": "object",
          "properties": {
            "phone_number": {
              "type": "string",
              "description": "Phone No."
            },
            "nickname": {
              "type": "string",
              "description": "Nickname"
            }
          },
          "required": [
            "phone_number",
            "nickname"
          ]
        }
      },
      {
        "name": "SocialCommunication.Calling.modifyContact",
        "description": "Modify the information for the specified contact",
        "parameters": {
          "type": "object",
          "properties": {
            "contact_name": {
              "type": "string",
              "description": "Contact name to modify"
            },
            "new_contact_name": {
              "type": "string",
              "description": "New contact name (optional)"
            },
            "new_phone_number": {
              "type": "string",
              "description": "New contact phone number (optional)"
            },
            "phone_number": {
              "type": "string",
              "description": "Contact phone number to modify"
            }
          },
          "required": [
            "contact_name",
            "new_contact_name",
            "new_phone_number",
            "phone_number"
          ]
        }
      },
      {
        "name": "Finance.Payment.updatePayUserInfo",
        "description": "Update account user information",
        "parameters": {
          "type": "object",
          "properties": {
            "user_name": {
              "type": "string",
              "description": "username"
            },
            "phone": {
              "type": "string",
              "description": "User's phone number"
            },
            "address": {
              "type": "string",
              "description": "User Address"
            }
          },
          "required": [
            "user_name",
            "phone",
            "address"
          ]
        }
      },
      {
        "name": "Health.HealthManagement.updateProfile",
        "description": "Update user profile based on height, weight, age, etc.",
        "parameters": {
          "type": "object",
          "properties": {
            "height": {
              "type": "float",
              "description": "Height (in cm)"
            },
            "weight": {
              "type": "float",
              "description": "Weight (kg)"
            },
            "age": {
              "type": "float",
              "description": "Age"
            }
          },
          "required": [
            "height",
            "weight",
            "age"
          ]
        }
      }
    ],
    "single_tool": [
      {
        "name": "Health.HealthManagement.updateProfile",
        "description": "Update user profile based on height, weight, age, etc.",
        "parameters": {
          "type": "object",
          "properties": {
            "height": {
              "type": "float",
              "description": "Height (in cm)"
            },
            "weight": {
              "type": "float",
              "description": "Weight (kg)"
            },
            "age": {
              "type": "float",
              "description": "Age"
            }
          },
          "required": [
            "height",
            "weight",
            "age"
          ]
        }
      }
    ],
    "id": 868
  },
  {
    "messages": [
      {
        "role": "user",
        "content": "Help me add a new contact named Zhang San"
      },
      {
        "role": "function call",
        "content": {
          "name": "SocialCommunication.Calling.addContact",
          "arguments": {
            "contact_name": "Zhang San"
          }
        }
      },
      {
        "role": "assistant",
        "content": "Please provide the contact's phone number"
      },
      {
        "role": "user",
        "content": "My phone number is 13987654321, how can I help?"
      },
      {
        "role": "function call",
        "content": {
          "name": "SocialCommunication.Calling.addContact",
          "arguments": {
            "contact_name": "Zhang San",
            "phone_number": "13987654321"
          }
        }
      },
      {
        "role": "assistant",
        "content": "Please provide the contact's email address"
      },
      {
        "role": "user",
        "content": "It was wrong before. Missing contact phone number. should be 13812345678"
      },
      {
        "role": "function call",
        "content": {
          "name": "SocialCommunication.Calling.addContact",
          "arguments": {
            "contact_name": "Zhang San",
            "phone_number": "13812345678"
          }
        }
      },
      {
        "role": "assistant",
        "content": "Please provide the contact's email address"
      },
      {
        "role": "user",
        "content": "The contact's email address is example@email.com."
      },
      {
        "role": "function call",
        "content": {
          "name": "SocialCommunication.Calling.addContact",
          "arguments": {
            "contact_name": "Zhang San",
            "phone_number": "13812345678",
            "email": ""
          }
        }
      }
    ],
    "multiple_tools": [
      {
        "name": "Navigation.MapNavigation.addCommonAddress",
        "description": "Add usual address",
        "parameters": {
          "type": "object",
          "properties": {
            "address": {
              "type": "string",
              "description": "Primary address string to add"
            }
          },
          "required": [
            "address"
          ]
        }
      },
      {
        "name": "OnlineShopping.Mall.addDeliveryAddress",
        "description": "Add a new shipping address based on the information",
        "parameters": {
          "type": "object",
          "properties": {
            "receiver": {
              "type": "string",
              "description": "Receiver"
            },
            "phoneNumber": {
              "type": "string",
              "description": "Phone No."
            },
            "address": {
              "type": "string",
              "description": "Shipping Address"
            }
          },
          "required": [
            "receiver",
            "phoneNumber",
            "address"
          ]
        }
      },
      {
        "name": "OnlineShopping.ExpressDelivery.addAddress",
        "description": "Add the specified address to the address book",
        "parameters": {
          "type": "object",
          "properties": {
            "name": {
              "type": "string",
              "description": "Name"
            },
            "phone": {
              "type": "string",
              "description": "Phone No."
            },
            "address": {
              "type": "string",
              "description": "Address"
            }
          },
          "required": [
            "name",
            "phone",
            "address"
          ]
        }
      },
      {
        "name": "Navigation.MapNavigation.addRemakeToCommonAddress",
        "description": "Add a note to your favorite address",
        "parameters": {
          "type": "object",
          "properties": {
            "address": {
              "type": "string",
              "description": "Primary address for note"
            },
            "remake": {
              "type": "string",
              "description": "Comment Message Content"
            }
          },
          "required": [
            "address",
            "remake"
          ]
        }
      },
      {
        "name": "SocialCommunication.Calling.addContact",
        "description": "Used to add new contact information",
        "parameters": {
          "type": "object",
          "properties": {
            "contact_name": {
              "type": "string",
              "description": "Contact person"
            },
            "phone_number": {
              "type": "string",
              "description": "Missing contact phone number."
            },
            "email": {
              "type": "string",
              "description": "Contact email (optional)"
            }
          },
          "required": [
            "contact_name",
            "phone_number",
            "email"
          ]
        }
      }
    ],
    "single_tool": [
      {
        "name": "SocialCommunication.Calling.addContact",
        "description": "Used to add new contact information",
        "parameters": {
          "type": "object",
          "properties": {
            "contact_name": {
              "type": "string",
              "description": "Contact person"
            },
            "phone_number": {
              "type": "string",
              "description": "Missing contact phone number."
            },
            "email": {
              "type": "string",
              "description": "Contact email (optional)"
            }
          },
          "required": [
            "contact_name",
            "phone_number",
            "email"
          ]
        }
      }
    ],
    "id": 871
  },
  {
    "messages": [
      {
        "role": "user",
        "content": "I need to add a new friend to my address book. His name is Li Si."
      },
      {
        "role": "function call",
        "content": {
          "name": "SocialCommunication.Calling.addContact",
          "arguments": {
            "contact_name": "Li Si"
          }
        }
      },
      {
        "role": "assistant",
        "content": "Please provide the contact's phone number"
      },
      {
        "role": "user",
        "content": "My phone number is 13812345678, how can I help?"
      },
      {
        "role": "function call",
        "content": {
          "name": "SocialCommunication.Calling.addContact",
          "arguments": {
            "contact_name": "Li Si",
            "phone_number": "13812345678"
          }
        }
      },
      {
        "role": "assistant",
        "content": "Please provide the contact's email address"
      },
      {
        "role": "user",
        "content": "It was wrong before. Contact person should be Li Hua"
      },
      {
        "role": "function call",
        "content": {
          "name": "SocialCommunication.Calling.addContact",
          "arguments": {
            "contact_name": "Li Hua",
            "phone_number": "13812345678"
          }
        }
      },
      {
        "role": "assistant",
        "content": "Please provide the contact's email address"
      },
      {
        "role": "user",
        "content": "The contact's email address is lihua@example.com."
      },
      {
        "role": "function call",
        "content": {
          "name": "SocialCommunication.Calling.addContact",
          "arguments": {
            "contact_name": "Li Hua",
            "phone_number": "13812345678",
            "email": "lihua@example.com"
          }
        }
      }
    ],
    "multiple_tools": [
      {
        "name": "SocialCommunication.Calling.addContact",
        "description": "Used to add new contact information",
        "parameters": {
          "type": "object",
          "properties": {
            "contact_name": {
              "type": "string",
              "description": "Contact person"
            },
            "phone_number": {
              "type": "string",
              "description": "Missing contact phone number."
            },
            "email": {
              "type": "string",
              "description": "Contact email (optional)"
            }
          },
          "required": [
            "contact_name",
            "phone_number",
            "email"
          ]
        }
      },
      {
        "name": "Navigation.MapNavigation.addRemakeToCommonAddress",
        "description": "Add a note to your favorite address",
        "parameters": {
          "type": "object",
          "properties": {
            "address": {
              "type": "string",
              "description": "Primary address for note"
            },
            "remake": {
              "type": "string",
              "description": "Comment Message Content"
            }
          },
          "required": [
            "address",
            "remake"
          ]
        }
      },
      {
        "name": "OnlineShopping.ExpressDelivery.addAddress",
        "description": "Add the specified address to the address book",
        "parameters": {
          "type": "object",
          "properties": {
            "name": {
              "type": "string",
              "description": "Name"
            },
            "phone": {
              "type": "string",
              "description": "Phone No."
            },
            "address": {
              "type": "string",
              "description": "Address"
            }
          },
          "required": [
            "name",
            "phone",
            "address"
          ]
        }
      },
      {
        "name": "SocialCommunication.InstantMessaging.addContact",
        "description": "Add New Contact",
        "parameters": {
          "type": "object",
          "properties": {
            "name": {
              "type": "string",
              "description": "Contact person"
            },
            "phone": {
              "type": "string",
              "description": "Cellphone"
            }
          },
          "required": [
            "name",
            "phone"
          ]
        }
      },
      {
        "name": "Navigation.MapNavigation.addCommonAddress",
        "description": "Add usual address",
        "parameters": {
          "type": "object",
          "properties": {
            "address": {
              "type": "string",
              "description": "Primary address string to add"
            }
          },
          "required": [
            "address"
          ]
        }
      }
    ],
    "single_tool": [
      {
        "name": "SocialCommunication.Calling.addContact",
        "description": "Used to add new contact information",
        "parameters": {
          "type": "object",
          "properties": {
            "contact_name": {
              "type": "string",
              "description": "Contact person"
            },
            "phone_number": {
              "type": "string",
              "description": "Missing contact phone number."
            },
            "email": {
              "type": "string",
              "description": "Contact email (optional)"
            }
          },
          "required": [
            "contact_name",
            "phone_number",
            "email"
          ]
        }
      }
    ],
    "id": 872
  },
  {
    "messages": [
      {
        "role": "user",
        "content": "I want to modify the information of this contact Zhang San"
      },
      {
        "role": "function call",
        "content": {
          "name": "SocialCommunication.Calling.modifyContact",
          "arguments": {
            "contact_name": "Zhang San"
          }
        }
      },
      {
        "role": "assistant",
        "content": "What's the new contact name"
      },
      {
        "role": "user",
        "content": "The new contact name is Li Ming."
      },
      {
        "role": "function call",
        "content": {
          "name": "SocialCommunication.Calling.modifyContact",
          "arguments": {
            "contact_name": "Zhang San",
            "new_contact_name": ""
          }
        }
      },
      {
        "role": "assistant",
        "content": "What is the new contact phone number"
      },
      {
        "role": "user",
        "content": "It was wrong before. New contact name (optional) should be Zhang Sanfeng"
      },
      {
        "role": "function call",
        "content": {
          "name": "SocialCommunication.Calling.modifyContact",
          "arguments": {
            "contact_name": "Zhang San",
            "new_contact_name": "Zhang Sanfeng"
          }
        }
      },
      {
        "role": "assistant",
        "content": "What is the new contact phone number"
      },
      {
        "role": "user",
        "content": "The new contact phone number is 13612345678, remember to save it."
      },
      {
        "role": "function call",
        "content": {
          "name": "SocialCommunication.Calling.modifyContact",
          "arguments": {
            "contact_name": "Zhang San",
            "new_contact_name": "Zhang Sanfeng",
            "new_phone_number": "13612345678"
          }
        }
      },
      {
        "role": "assistant",
        "content": "What is the contact phone number to modify"
      },
      {
        "role": "user",
        "content": "The phone number that needs to be changed is 13712345678, what is the problem?"
      },
      {
        "role": "function call",
        "content": {
          "name": "SocialCommunication.Calling.modifyContact",
          "arguments": {
            "contact_name": "Zhang San",
            "new_contact_name": "Zhang Sanfeng",
            "new_phone_number": "13612345678",
            "phone_number": "13712345678"
          }
        }
      }
    ],
    "multiple_tools": [
      {
        "name": "Finance.Payment.updatePayUserInfo",
        "description": "Update account user information",
        "parameters": {
          "type": "object",
          "properties": {
            "user_name": {
              "type": "string",
              "description": "username"
            },
            "phone": {
              "type": "string",
              "description": "User's phone number"
            },
            "address": {
              "type": "string",
              "description": "User Address"
            }
          },
          "required": [
            "user_name",
            "phone",
            "address"
          ]
        }
      },
      {
        "name": "ConvenientLiving.JobRecruitment.updateJobPosition",
        "description": "Modify Published Job Information",
        "parameters": {
          "type": "object",
          "properties": {
            "position_name": {
              "type": "string",
              "description": "Position name"
            },
            "work_location": {
              "type": "string",
              "description": "Work Location"
            }
          },
          "required": [
            "position_name",
            "work_location"
          ]
        }
      },
      {
        "name": "SocialCommunication.SocialMedia.updateMediumInfo",
        "description": "Edit profile information",
        "parameters": {
          "type": "object",
          "properties": {
            "medium_name": {
              "type": "string",
              "description": "Media name"
            },
            "new_nickname": {
              "type": "string",
              "description": "Updated nickname"
            }
          },
          "required": [
            "medium_name",
            "new_nickname"
          ]
        }
      },
      {
        "name": "SocialCommunication.Calling.modifyContact",
        "description": "Modify the information for the specified contact",
        "parameters": {
          "type": "object",
          "properties": {
            "contact_name": {
              "type": "string",
              "description": "Contact name to modify"
            },
            "new_contact_name": {
              "type": "string",
              "description": "New contact name (optional)"
            },
            "new_phone_number": {
              "type": "string",
              "description": "New contact phone number (optional)"
            },
            "phone_number": {
              "type": "string",
              "description": "Contact phone number to modify"
            }
          },
          "required": [
            "contact_name",
            "new_contact_name",
            "new_phone_number",
            "phone_number"
          ]
        }
      },
      {
        "name": "SystemTools.SystemSettings.modifyuserAccounts",
        "description": "Modify the current user's information",
        "parameters": {
          "type": "object",
          "properties": {
            "phone_number": {
              "type": "string",
              "description": "Phone No."
            },
            "nickname": {
              "type": "string",
              "description": "Nickname"
            }
          },
          "required": [
            "phone_number",
            "nickname"
          ]
        }
      }
    ],
    "single_tool": [
      {
        "name": "SocialCommunication.Calling.modifyContact",
        "description": "Modify the information for the specified contact",
        "parameters": {
          "type": "object",
          "properties": {
            "contact_name": {
              "type": "string",
              "description": "Contact name to modify"
            },
            "new_contact_name": {
              "type": "string",
              "description": "New contact name (optional)"
            },
            "new_phone_number": {
              "type": "string",
              "description": "New contact phone number (optional)"
            },
            "phone_number": {
              "type": "string",
              "description": "Contact phone number to modify"
            }
          },
          "required": [
            "contact_name",
            "new_contact_name",
            "new_phone_number",
            "phone_number"
          ]
        }
      }
    ],
    "id": 873
  },
  {
    "messages": [
      {
        "role": "user",
        "content": "Update Li Si's contact information"
      },
      {
        "role": "function call",
        "content": {
          "name": "SocialCommunication.Calling.modifyContact",
          "arguments": {
            "contact_name": "Li Si"
          }
        }
      },
      {
        "role": "assistant",
        "content": "What's the new contact name"
      },
      {
        "role": "user",
        "content": "The new contact name is Zhang Sanfeng, who is my martial arts instructor."
      },
      {
        "role": "function call",
        "content": {
          "name": "SocialCommunication.Calling.modifyContact",
          "arguments": {
            "contact_name": "Li Si",
            "new_contact_name": "Zhang Sanfeng"
          }
        }
      },
      {
        "role": "assistant",
        "content": "What is the new contact phone number"
      },
      {
        "role": "user",
        "content": "The new contact phone number is 13812345678, remember to save it."
      },
      {
        "role": "function call",
        "content": {
          "name": "SocialCommunication.Calling.modifyContact",
          "arguments": {
            "contact_name": "Li Si",
            "new_contact_name": "Zhang Sanfeng",
            "new_phone_number": "13812345678"
          }
        }
      },
      {
        "role": "assistant",
        "content": "What is the contact phone number to modify"
      },
      {
        "role": "user",
        "content": "It was wrong before. New contact phone number (optional) should be 13800138000"
      },
      {
        "role": "function call",
        "content": {
          "name": "SocialCommunication.Calling.modifyContact",
          "arguments": {
            "contact_name": "Li Si",
            "new_contact_name": "Zhang Sanfeng",
            "new_phone_number": "13800138000"
          }
        }
      },
      {
        "role": "assistant",
        "content": "What is the contact phone number to modify"
      },
      {
        "role": "user",
        "content": "The phone number that needs to be changed is 13512345678, what is the problem?"
      },
      {
        "role": "function call",
        "content": {
          "name": "SocialCommunication.Calling.modifyContact",
          "arguments": {
            "contact_name": "Li Si",
            "new_contact_name": "Zhang Sanfeng",
            "new_phone_number": "13800138000",
            "phone_number": "13512345678"
          }
        }
      }
    ],
    "multiple_tools": [
      {
        "name": "SocialCommunication.Calling.modifyContact",
        "description": "Modify the information for the specified contact",
        "parameters": {
          "type": "object",
          "properties": {
            "contact_name": {
              "type": "string",
              "description": "Contact name to modify"
            },
            "new_contact_name": {
              "type": "string",
              "description": "New contact name (optional)"
            },
            "new_phone_number": {
              "type": "string",
              "description": "New contact phone number (optional)"
            },
            "phone_number": {
              "type": "string",
              "description": "Contact phone number to modify"
            }
          },
          "required": [
            "contact_name",
            "new_contact_name",
            "new_phone_number",
            "phone_number"
          ]
        }
      },
      {
        "name": "SystemTools.SystemSettings.modifyuserAccounts",
        "description": "Modify the current user's information",
        "parameters": {
          "type": "object",
          "properties": {
            "phone_number": {
              "type": "string",
              "description": "Phone No."
            },
            "nickname": {
              "type": "string",
              "description": "Nickname"
            }
          },
          "required": [
            "phone_number",
            "nickname"
          ]
        }
      },
      {
        "name": "OnlineShopping.ExpressDelivery.updateAddress",
        "description": "Update old address to specified address",
        "parameters": {
          "type": "object",
          "properties": {
            "name": {
              "type": "string",
              "description": "Recipient's name"
            },
            "phone": {
              "type": "string",
              "description": "Recipient phone number"
            },
            "address": {
              "type": "string",
              "description": "To"
            },
            "new_address": {
              "type": "string",
              "description": "What's new after the update"
            }
          },
          "required": [
            "name",
            "phone",
            "address",
            "new_address"
          ]
        }
      },
      {
        "name": "SocialCommunication.SocialMedia.updateMediumInfo",
        "description": "Edit profile information",
        "parameters": {
          "type": "object",
          "properties": {
            "medium_name": {
              "type": "string",
              "description": "Media name"
            },
            "new_nickname": {
              "type": "string",
              "description": "Updated nickname"
            }
          },
          "required": [
            "medium_name",
            "new_nickname"
          ]
        }
      },
      {
        "name": "Finance.Payment.updatePayUserInfo",
        "description": "Update account user information",
        "parameters": {
          "type": "object",
          "properties": {
            "user_name": {
              "type": "string",
              "description": "username"
            },
            "phone": {
              "type": "string",
              "description": "User's phone number"
            },
            "address": {
              "type": "string",
              "description": "User Address"
            }
          },
          "required": [
            "user_name",
            "phone",
            "address"
          ]
        }
      }
    ],
    "single_tool": [
      {
        "name": "SocialCommunication.Calling.modifyContact",
        "description": "Modify the information for the specified contact",
        "parameters": {
          "type": "object",
          "properties": {
            "contact_name": {
              "type": "string",
              "description": "Contact name to modify"
            },
            "new_contact_name": {
              "type": "string",
              "description": "New contact name (optional)"
            },
            "new_phone_number": {
              "type": "string",
              "description": "New contact phone number (optional)"
            },
            "phone_number": {
              "type": "string",
              "description": "Contact phone number to modify"
            }
          },
          "required": [
            "contact_name",
            "new_contact_name",
            "new_phone_number",
            "phone_number"
          ]
        }
      }
    ],
    "id": 874
  },
  {
    "messages": [
      {
        "role": "user",
        "content": "Show me the order details for the Xiaomi phone I ordered"
      },
      {
        "role": "function call",
        "content": {
          "name": "OnlineShopping.Mall.searchCommodityOrderDetails",
          "arguments": {
            "goods": "Xiaomi cell phone"
          }
        }
      },
      {
        "role": "assistant",
        "content": "Whether the review status is reviewed or pending"
      },
      {
        "role": "user",
        "content": "Evaluated"
      },
      {
        "role": "function call",
        "content": {
          "name": "OnlineShopping.Mall.searchCommodityOrderDetails",
          "arguments": {
            "goods": "Xiaomi cell phone",
            "evaluate_stage": "Evaluated"
          }
        }
      },
      {
        "role": "assistant",
        "content": "What is the status of the order e.g. Pending Payment Pending Receipt Completed Cancelled Refund After Sale"
      },
      {
        "role": "user",
        "content": "It was wrong before. Product Name should be Skin care products"
      },
      {
        "role": "function call",
        "content": {
          "name": "OnlineShopping.Mall.searchCommodityOrderDetails",
          "arguments": {
            "goods": "Skin care products",
            "evaluate_stage": "Evaluated"
          }
        }
      },
      {
        "role": "assistant",
        "content": "What is the status of the order e.g. Pending Payment Pending Receipt Completed Cancelled Refund After Sale"
      },
      {
        "role": "user",
        "content": "Completed"
      },
      {
        "role": "function call",
        "content": {
          "name": "OnlineShopping.Mall.searchCommodityOrderDetails",
          "arguments": {
            "goods": "Skin care products",
            "evaluate_stage": "Evaluated",
            "order_stage": "Completed"
          }
        }
      }
    ],
    "multiple_tools": [
      {
        "name": "Education.OnlineClasses.viewCourseOrdersDetails",
        "description": "View a reservation's details",
        "parameters": {
          "type": "object",
          "properties": {
            "course_name": {
              "type": "string",
              "description": "Course Title"
            }
          },
          "required": [
            "course_name"
          ]
        }
      },
      {
        "name": "OnlineShopping.Mall.searchCommodityOrderDetails",
        "description": "View details of an item order based on criteria",
        "parameters": {
          "type": "object",
          "properties": {
            "goods": {
              "type": "string",
              "description": "Product Name"
            },
            "order_stage": {
              "type": "string",
              "description": "Order status, e.g. Pending Payment, Pending Receipt, Completed, Cancelled, Refund/After Sales"
            },
            "evaluate_stage": {
              "type": "string",
              "description": "Review status, e.g. reviewed, pending review"
            }
          },
          "required": [
            "goods",
            "order_stage",
            "evaluate_stage"
          ]
        }
      },
      {
        "name": "Navigation.TaxiCarRental.viewCarRentalOrdersDetails",
        "description": "Review the details of a rental order",
        "parameters": {
          "type": "object",
          "properties": {
            "time": {
              "type": "string",
              "description": "Release Date"
            }
          },
          "required": [
            "time"
          ]
        }
      },
      {
        "name": "OnlineShopping.SecondhandTrading.searchSecondhandSaleOrdersDetails",
        "description": "View specific item order details based on criteria",
        "parameters": {
          "type": "object",
          "properties": {
            "goods_name": {
              "type": "string",
              "description": "Product name keywords"
            }
          },
          "required": [
            "goods_name"
          ]
        }
      },
      {
        "name": "Navigation.Bicycles.searchBikesOrderDetails",
        "description": "View bike order details",
        "parameters": {
          "type": "object",
          "properties": {},
          "required": []
        }
      }
    ],
    "single_tool": [
      {
        "name": "OnlineShopping.Mall.searchCommodityOrderDetails",
        "description": "View details of an item order based on criteria",
        "parameters": {
          "type": "object",
          "properties": {
            "goods": {
              "type": "string",
              "description": "Product Name"
            },
            "order_stage": {
              "type": "string",
              "description": "Order status, e.g. Pending Payment, Pending Receipt, Completed, Cancelled, Refund/After Sales"
            },
            "evaluate_stage": {
              "type": "string",
              "description": "Review status, e.g. reviewed, pending review"
            }
          },
          "required": [
            "goods",
            "order_stage",
            "evaluate_stage"
          ]
        }
      }
    ],
    "id": 875
  },
  {
    "messages": [
      {
        "role": "user",
        "content": "Check if the phone number is 13800138000's contact information"
      },
      {
        "role": "function call",
        "content": {
          "name": "OnlineShopping.ExpressDelivery.searchContactInfos",
          "arguments": {
            "phone": "13800138000"
          }
        }
      },
      {
        "role": "assistant",
        "content": "Please provide the contact's name and address"
      },
      {
        "role": "user",
        "content": "The contact person is Li Na, and the address is No. 1 Zhongguancun Street, Haidian District, Beijing."
      },
      {
        "role": "function call",
        "content": {
          "name": "OnlineShopping.ExpressDelivery.searchContactInfos",
          "arguments": {
            "phone": "13800138000",
            "name": "Li Na"
          }
        }
      },
      {
        "role": "assistant",
        "content": "Please provide the contact's address"
      },
      {
        "role": "user",
        "content": "It was wrong before. Name should be Zhang Wei"
      },
      {
        "role": "function call",
        "content": {
          "name": "OnlineShopping.ExpressDelivery.searchContactInfos",
          "arguments": {
            "phone": "13800138000",
            "name": "Zhang Wei"
          }
        }
      },
      {
        "role": "assistant",
        "content": "Please provide the contact's address"
      },
      {
        "role": "user",
        "content": "The address of the contact person is a certain street in Chaoyang District, Beijing."
      },
      {
        "role": "function call",
        "content": {
          "name": "OnlineShopping.ExpressDelivery.searchContactInfos",
          "arguments": {
            "phone": "13800138000",
            "name": "Zhang Wei",
            "address": "Room 301, Future Business Center 17"
          }
        }
      }
    ],
    "multiple_tools": [
      {
        "name": "OnlineShopping.ExpressDelivery.searchContactInfos",
        "description": "Search for contacts based on given name, phone, address, etc.",
        "parameters": {
          "type": "object",
          "properties": {
            "name": {
              "type": "string",
              "description": "Name"
            },
            "phone": {
              "type": "string",
              "description": "Phone No."
            },
            "address": {
              "type": "string",
              "description": "Address"
            }
          },
          "required": [
            "name",
            "phone",
            "address"
          ]
        }
      },
      {
        "name": "MusicRadio.OnlineMusic.getUserInfo",
        "description": "Get user information by username",
        "parameters": {
          "type": "object",
          "properties": {
            "name": {
              "type": "string",
              "description": "Username"
            }
          },
          "required": [
            "name"
          ]
        }
      },
      {
        "name": "SocialCommunication.Calling.viewContact",
        "description": "View the details of the specified contact",
        "parameters": {
          "type": "object",
          "properties": {
            "contact_name": {
              "type": "string",
              "description": "Name of contact to view"
            },
            "phone_number": {
              "type": "string",
              "description": "Phone No."
            }
          },
          "required": [
            "contact_name",
            "phone_number"
          ]
        }
      },
      {
        "name": "SocialCommunication.Community.getCommunityUserInfo",
        "description": "Get user details for a specific community based on user nickname",
        "parameters": {
          "type": "object",
          "properties": {
            "community_name": {
              "type": "string",
              "description": "The name of the community where you want to get user information"
            },
            "user_nickname": {
              "type": "string",
              "description": "User's nickname"
            }
          },
          "required": [
            "community_name",
            "user_nickname"
          ]
        }
      },
      {
        "name": "ConvenientLiving.BuyingRentingHomes.getRealEstateAgencyInfo",
        "description": "Get contact info for a real estate agent",
        "parameters": {
          "type": "object",
          "properties": {
            "house_name": {
              "type": "string",
              "description": "Property name"
            }
          },
          "required": [
            "house_name"
          ]
        }
      }
    ],
    "single_tool": [
      {
        "name": "OnlineShopping.ExpressDelivery.searchContactInfos",
        "description": "Search for contacts based on given name, phone, address, etc.",
        "parameters": {
          "type": "object",
          "properties": {
            "name": {
              "type": "string",
              "description": "Name"
            },
            "phone": {
              "type": "string",
              "description": "Phone No."
            },
            "address": {
              "type": "string",
              "description": "Address"
            }
          },
          "required": [
            "name",
            "phone",
            "address"
          ]
        }
      }
    ],
    "id": 879
  },
  {
    "messages": [
      {
        "role": "user",
        "content": "I want to see a breakdown of last month's fees"
      },
      {
        "role": "function call",
        "content": {
          "name": "ConvenientLiving.UtilityPayments.queryBillInfo",
          "arguments": {
            "time": "Last Month"
          }
        }
      },
      {
        "role": "assistant",
        "content": "Please provide the type of paid service you need to inquire about, such as water, electricity, gas, etc."
      },
      {
        "role": "user",
        "content": "I need to check gas payment service."
      },
      {
        "role": "function call",
        "content": {
          "name": "ConvenientLiving.UtilityPayments.queryBillInfo",
          "arguments": {
            "time": "Last Month",
            "service_type": "Gas"
          }
        }
      },
      {
        "role": "assistant",
        "content": "Please provide your name so we can look up your billing details"
      },
      {
        "role": "user",
        "content": "It was wrong before. Bill Time should be December of last year"
      },
      {
        "role": "function call",
        "content": {
          "name": "ConvenientLiving.UtilityPayments.queryBillInfo",
          "arguments": {
            "time": "December of last year",
            "service_type": "Gas"
          }
        }
      },
      {
        "role": "assistant",
        "content": "Please provide your name so we can look up your billing details"
      },
      {
        "role": "user",
        "content": "My name is Li Si, please help me check the billing details."
      },
      {
        "role": "function call",
        "content": {
          "name": "ConvenientLiving.UtilityPayments.queryBillInfo",
          "arguments": {
            "time": "December of last year",
            "service_type": "Gas",
            "user_name": "Li Si"
          }
        }
      }
    ],
    "multiple_tools": [
      {
        "name": "ConvenientLiving.UtilityPayments.queryBillInfo",
        "description": "Used to get billing details for utilities, etc.",
        "parameters": {
          "type": "object",
          "properties": {
            "service_type": {
              "type": "string",
              "description": "Types of paid services, such as utilities, gas, etc."
            },
            "user_name": {
              "type": "string",
              "description": "User Name"
            },
            "time": {
              "type": "string",
              "description": "Bill Time"
            }
          },
          "required": [
            "service_type",
            "user_name",
            "time"
          ]
        }
      },
      {
        "name": "Navigation.Bicycles.viewMileage",
        "description": "View cumulative kilometers cycled",
        "parameters": {
          "type": "object",
          "properties": {},
          "required": []
        }
      },
      {
        "name": "SocialCommunication.Calling.queryPhoneCallCharges",
        "description": "View charges for this or a recent call",
        "parameters": {
          "type": "object",
          "properties": {
            "query_period": {
              "type": "string",
              "description": "The time period of the query, such as this month, this week, etc."
            }
          },
          "required": [
            "query_period"
          ]
        }
      },
      {
        "name": "Navigation.Bicycles.viewBikeCoupons",
        "description": "View riding-related vouchers",
        "parameters": {
          "type": "object",
          "properties": {},
          "required": []
        }
      },
      {
        "name": "Finance.Stocks.viewStockoperate",
        "description": "Query the stock market on the day of trading; the day of consignment; historical trading; historical consignment; T operation",
        "parameters": {
          "type": "object",
          "properties": {
            "transaction_today": {
              "type": "boolean",
              "description": "Deal of the day Default: 0 No"
            },
            "entrust_today": {
              "type": "boolean",
              "description": "Delegation of the day default: 0 No"
            },
            "transaction_his": {
              "type": "boolean",
              "description": "History Closing Default: 0 No"
            },
            "entrust_his": {
              "type": "boolean",
              "description": "Historical delegation default: 0 No"
            },
            "T_operate": {
              "type": "boolean",
              "description": "T Operation default: 0 No"
            }
          },
          "required": [
            "transaction_today",
            "entrust_today",
            "transaction_his",
            "entrust_his",
            "T_operate"
          ]
        }
      }
    ],
    "single_tool": [
      {
        "name": "ConvenientLiving.UtilityPayments.queryBillInfo",
        "description": "Used to get billing details for utilities, etc.",
        "parameters": {
          "type": "object",
          "properties": {
            "service_type": {
              "type": "string",
              "description": "Types of paid services, such as utilities, gas, etc."
            },
            "user_name": {
              "type": "string",
              "description": "User Name"
            },
            "time": {
              "type": "string",
              "description": "Bill Time"
            }
          },
          "required": [
            "service_type",
            "user_name",
            "time"
          ]
        }
      }
    ],
    "id": 885
  },
  {
    "messages": [
      {
        "role": "user",
        "content": "Adjust the meeting time to 3pm, remember to let everyone know"
      },
      {
        "role": "function call",
        "content": {
          "name": "OfficeSoftware.Conferencing.setMeetingOptions",
          "arguments": {
            "time": "15:00"
          }
        }
      },
      {
        "role": "assistant",
        "content": "Please provide the conference number Whether the video is turned on Whether the audio is turned on"
      },
      {
        "role": "user",
        "content": "The conference number is 789012, the video is on, and the audio is on."
      },
      {
        "role": "function call",
        "content": {
          "name": "OfficeSoftware.Conferencing.setMeetingOptions",
          "arguments": {
            "time": "15:00",
            "meeting_id": "789012"
          }
        }
      },
      {
        "role": "assistant",
        "content": "What the meeting title is Whether the video is turned on Whether the audio is turned on"
      },
      {
        "role": "user",
        "content": "It was wrong before. Meeting Date should be 10am the day after tomorrow"
      },
      {
        "role": "function call",
        "content": {
          "name": "OfficeSoftware.Conferencing.setMeetingOptions",
          "arguments": {
            "time": "10am the day after tomorrow",
            "meeting_id": "789012"
          }
        }
      },
      {
        "role": "assistant",
        "content": "What the meeting title is Whether the video is turned on Whether the audio is turned on"
      },
      {
        "role": "user",
        "content": "The title of the meeting is a market strategy discussion that needs to be turned on for video and audio."
      },
      {
        "role": "function call",
        "content": {
          "name": "OfficeSoftware.Conferencing.setMeetingOptions",
          "arguments": {
            "time": "10am the day after tomorrow",
            "meeting_id": "789012",
            "title": "Market Strategy Discussion"
          }
        }
      }
    ],
    "multiple_tools": [
      {
        "name": "NewsMagazines.News.recommendNewsBasedOnHistory",
        "description": "Suggest relevant news to users based on their browsing history",
        "parameters": {
          "type": "object",
          "properties": {},
          "required": []
        }
      },
      {
        "name": "UtilityTools.Weather.setPersonalizedReminder",
        "description": "Set personalized alerts for specific cities and weather conditions",
        "parameters": {
          "type": "object",
          "properties": {
            "location": {
              "type": "string",
              "description": "Location, defaults to local"
            },
            "weather": {
              "type": "string",
              "description": "Weather conditions."
            }
          },
          "required": [
            "location",
            "weather"
          ]
        }
      },
      {
        "name": "OfficeSoftware.Conferencing.setMeetingOptions",
        "description": "Change the title, time, whether the video is turned on, whether the audio is turned on, etc. settings of the meeting",
        "parameters": {
          "type": "object",
          "properties": {
            "meeting_id": {
              "type": "string",
              "description": "Conference No."
            },
            "title": {
              "type": "string",
              "description": "Meeting Title:"
            },
            "time": {
              "type": "string",
              "description": "Meeting Date"
            }
          },
          "required": [
            "meeting_id",
            "title",
            "time"
          ]
        }
      },
      {
        "name": "SocialCommunication.Community.pinCommunityPost",
        "description": "Pin a post to a specific community",
        "parameters": {
          "type": "object",
          "properties": {
            "community_name": {
              "type": "string",
              "description": "The name of the community to pin the post to"
            },
            "post_name": {
              "type": "string",
              "description": "Title of the post to sticky"
            }
          },
          "required": [
            "community_name",
            "post_name"
          ]
        }
      },
      {
        "name": "SocialCommunication.SocialMedia.collectMediumTrends",
        "description": "Favorite specified activity in specified media",
        "parameters": {
          "type": "object",
          "properties": {
            "medium_name": {
              "type": "string",
              "description": "Media name"
            },
            "correlation": {
              "type": "string",
              "description": "Dynamic Related Content"
            },
            "publisher": {
              "type": "string",
              "description": "Posted by/publisher?"
            },
            "publish_time": {
              "type": "string",
              "description": "Release Date"
            }
          },
          "required": [
            "medium_name",
            "correlation",
            "publisher",
            "publish_time"
          ]
        }
      }
    ],
    "single_tool": [
      {
        "name": "OfficeSoftware.Conferencing.setMeetingOptions",
        "description": "Change the title, time, whether the video is turned on, whether the audio is turned on, etc. settings of the meeting",
        "parameters": {
          "type": "object",
          "properties": {
            "meeting_id": {
              "type": "string",
              "description": "Conference No."
            },
            "title": {
              "type": "string",
              "description": "Meeting Title:"
            },
            "time": {
              "type": "string",
              "description": "Meeting Date"
            }
          },
          "required": [
            "meeting_id",
            "title",
            "time"
          ]
        }
      }
    ],
    "id": 886
  },
  {
    "messages": [
      {
        "role": "user",
        "content": "Change the meeting to 10am tomorrow to make sure everyone receives the message"
      },
      {
        "role": "function call",
        "content": {
          "name": "OfficeSoftware.Conferencing.setMeetingOptions",
          "arguments": {
            "time": "Tomorrow at 10am"
          }
        }
      },
      {
        "role": "assistant",
        "content": "Please provide the conference number Whether the video is turned on Whether the audio is turned on"
      },
      {
        "role": "user",
        "content": "The conference number is 78910, the video is on, and the audio is on."
      },
      {
        "role": "function call",
        "content": {
          "name": "OfficeSoftware.Conferencing.setMeetingOptions",
          "arguments": {
            "time": "Tomorrow at 10am",
            "meeting_id": "78910"
          }
        }
      },
      {
        "role": "assistant",
        "content": "What the meeting title is Whether the video is turned on Whether the audio is turned on"
      },
      {
        "role": "user",
        "content": "It was wrong before. Conference No. should be 789012"
      },
      {
        "role": "function call",
        "content": {
          "name": "OfficeSoftware.Conferencing.setMeetingOptions",
          "arguments": {
            "time": "Tomorrow at 10am",
            "meeting_id": "789012"
          }
        }
      },
      {
        "role": "assistant",
        "content": "What the meeting title is Whether the video is turned on Whether the audio is turned on"
      },
      {
        "role": "user",
        "content": "The title of the meeting is a Friday team building event that needs to be turned on for video and audio."
      },
      {
        "role": "function call",
        "content": {
          "name": "OfficeSoftware.Conferencing.setMeetingOptions",
          "arguments": {
            "time": "Tomorrow at 10am",
            "meeting_id": "789012",
            "title": "Friday team building activities"
          }
        }
      }
    ],
    "multiple_tools": [
      {
        "name": "Health.HealthManagement.updateDietRecord",
        "description": "Changing dietary records based on updated conditions",
        "parameters": {
          "type": "object",
          "properties": {
            "food_name": {
              "type": "string",
              "description": "Food Name"
            },
            "meal_type": {
              "type": "string",
              "description": "Types of meals, such as breakfast, lunch, dinner, or add-ons"
            },
            "time": {
              "type": "string",
              "description": "Meal Time"
            },
            "update_content": {
              "type": "string",
              "description": "Updates, such as changes to food names, meal types, meal times, etc."
            }
          },
          "required": [
            "food_name",
            "meal_type",
            "time",
            "update_content"
          ]
        }
      },
      {
        "name": "Navigation.FlightTickets.modifyFlightBooking",
        "description": "Changing the departure time of a booked flight is not supported for departure and destination changes",
        "parameters": {
          "type": "object",
          "properties": {
            "departure": {
              "type": "string",
              "description": "Origination"
            },
            "destination": {
              "type": "string",
              "description": "Reach ground"
            },
            "name": {
              "type": "string",
              "description": "Name of person who booked"
            },
            "time": {
              "type": "string",
              "description": "Flight duration before modification"
            },
            "alter_time": {
              "type": "string",
              "description": "Revised flight time"
            },
            "alter_seat": {
              "type": "string",
              "description": "Class Selection"
            }
          },
          "required": [
            "departure",
            "destination",
            "name",
            "time",
            "alter_time",
            "alter_seat"
          ]
        }
      },
      {
        "name": "OfficeSoftware.Email.updateMailDraft",
        "description": "Update specified message draft",
        "parameters": {
          "type": "object",
          "properties": {
            "mail_title": {
              "type": "string",
              "description": "Draft title to update"
            }
          },
          "required": [
            "mail_title"
          ]
        }
      },
      {
        "name": "OfficeSoftware.Conferencing.setMeetingOptions",
        "description": "Change the title, time, whether the video is turned on, whether the audio is turned on, etc. settings of the meeting",
        "parameters": {
          "type": "object",
          "properties": {
            "meeting_id": {
              "type": "string",
              "description": "Conference No."
            },
            "title": {
              "type": "string",
              "description": "Meeting Title:"
            },
            "time": {
              "type": "string",
              "description": "Meeting Date"
            }
          },
          "required": [
            "meeting_id",
            "title",
            "time"
          ]
        }
      },
      {
        "name": "SocialCommunication.InstantMessaging.updateGroupInfo",
        "description": "Update announcements and other information for a specific group",
        "parameters": {
          "type": "object",
          "properties": {
            "group_name": {
              "type": "string",
              "description": "Name of the group to update"
            },
            "new_announcement": {
              "type": "string",
              "description": "Updated group announcements"
            }
          },
          "required": [
            "group_name",
            "new_announcement"
          ]
        }
      }
    ],
    "single_tool": [
      {
        "name": "OfficeSoftware.Conferencing.setMeetingOptions",
        "description": "Change the title, time, whether the video is turned on, whether the audio is turned on, etc. settings of the meeting",
        "parameters": {
          "type": "object",
          "properties": {
            "meeting_id": {
              "type": "string",
              "description": "Conference No."
            },
            "title": {
              "type": "string",
              "description": "Meeting Title:"
            },
            "time": {
              "type": "string",
              "description": "Meeting Date"
            }
          },
          "required": [
            "meeting_id",
            "title",
            "time"
          ]
        }
      }
    ],
    "id": 887
  },
  {
    "messages": [
      {
        "role": "user",
        "content": "Watch this short video of your cat's daily test.mp4"
      },
      {
        "role": "function call",
        "content": {
          "name": "VideoPlayback.ShortVideos.playShortVideo",
          "arguments": {
            "video_name": "Cat daily test.mp4"
          }
        }
      },
      {
        "role": "assistant",
        "content": "Whether full-screen viewing is required"
      },
      {
        "role": "user",
        "content": "No, just keep the current window size."
      },
      {
        "role": "function call",
        "content": {
          "name": "VideoPlayback.ShortVideos.playShortVideo",
          "arguments": {
            "video_name": "Cat daily test.mp4",
            "full_screen": false
          }
        }
      },
      {
        "role": "assistant",
        "content": "What is the playback speed?"
      },
      {
        "role": "user",
        "content": "1.0, I want to maintain normal speed."
      },
      {
        "role": "function call",
        "content": {
          "name": "VideoPlayback.ShortVideos.playShortVideo",
          "arguments": {
            "video_name": "Cat daily test.mp4",
            "full_screen": false,
            "playback_speed": 1.0
          }
        }
      },
      {
        "role": "assistant",
        "content": "Whether to open the barrage"
      },
      {
        "role": "user",
        "content": "It was wrong before. Short video name should be Laughing Cat Highlights"
      },
      {
        "role": "function call",
        "content": {
          "name": "VideoPlayback.ShortVideos.playShortVideo",
          "arguments": {
            "video_name": "Laughing Cat Highlights",
            "full_screen": false,
            "playback_speed": 1.0
          }
        }
      },
      {
        "role": "assistant",
        "content": "Whether to open the barrage"
      },
      {
        "role": "user",
        "content": "No?"
      },
      {
        "role": "function call",
        "content": {
          "name": "VideoPlayback.ShortVideos.playShortVideo",
          "arguments": {
            "video_name": "Laughing Cat Highlights",
            "full_screen": false,
            "playback_speed": 1.0,
            "danmaku": false
          }
        }
      }
    ],
    "multiple_tools": [
      {
        "name": "VideoPlayback.ShortVideos.playShortVideo",
        "description": "Watch the short video, watch from scratch by default",
        "parameters": {
          "type": "object",
          "properties": {
            "video_name": {
              "type": "string",
              "description": "Short video name"
            },
            "full_screen": {
              "type": "boolean",
              "description": "Full Screen"
            },
            "playback_speed": {
              "type": "float",
              "description": "Playback Speed"
            },
            "danmaku": {
              "type": "boolean",
              "description": "enable bullet text"
            }
          },
          "required": [
            "video_name",
            "full_screen",
            "playback_speed",
            "danmaku"
          ]
        }
      },
      {
        "name": "VideoPlayback.OnlineVideos.playOnlineVideo",
        "description": "Watch the video (when to start, watch from scratch by default)",
        "parameters": {
          "type": "object",
          "properties": {
            "video_name": {
              "type": "string",
              "description": "Video Name"
            },
            "start": {
              "type": "string",
              "description": "When to start, watch from scratch by default"
            },
            "full_screen": {
              "type": "boolean",
              "description": "Full Screen"
            },
            "playback_speed": {
              "type": "float",
              "description": "Playback Speed"
            },
            "danmaku": {
              "type": "boolean",
              "description": "enable bullet text"
            }
          },
          "required": [
            "video_name",
            "start",
            "full_screen",
            "playback_speed",
            "danmaku"
          ]
        }
      },
      {
        "name": "OfficeSoftware.Documents.readDocument",
        "description": "Read the specified document based on the document name",
        "parameters": {
          "type": "object",
          "properties": {
            "document_name": {
              "type": "string",
              "description": "Document name, required"
            }
          },
          "required": [
            "document_name"
          ]
        }
      },
      {
        "name": "Finance.Stocks.viewStockstrategy",
        "description": "View investment playbook",
        "parameters": {
          "type": "object",
          "properties": {},
          "required": []
        }
      },
      {
        "name": "Photography.PhotoEditing.viewPicture",
        "description": "View photo",
        "parameters": {
          "type": "object",
          "properties": {
            "name_or_path": {
              "type": "string",
              "description": "Photo name or path"
            }
          },
          "required": [
            "name_or_path"
          ]
        }
      }
    ],
    "single_tool": [
      {
        "name": "VideoPlayback.ShortVideos.playShortVideo",
        "description": "Watch the short video, watch from scratch by default",
        "parameters": {
          "type": "object",
          "properties": {
            "video_name": {
              "type": "string",
              "description": "Short video name"
            },
            "full_screen": {
              "type": "boolean",
              "description": "Full Screen"
            },
            "playback_speed": {
              "type": "float",
              "description": "Playback Speed"
            },
            "danmaku": {
              "type": "boolean",
              "description": "enable bullet text"
            }
          },
          "required": [
            "video_name",
            "full_screen",
            "playback_speed",
            "danmaku"
          ]
        }
      }
    ],
    "id": 895
  },
  {
    "messages": [
      {
        "role": "user",
        "content": "Watch Travel Vlogtest.mp4."
      },
      {
        "role": "function call",
        "content": {
          "name": "VideoPlayback.ShortVideos.playShortVideo",
          "arguments": {
            "video_name": "Travel Vlogtest.mp4"
          }
        }
      },
      {
        "role": "assistant",
        "content": "Would you like to watch it in full screen?"
      },
      {
        "role": "user",
        "content": "Yes, I would like to watch full screen."
      },
      {
        "role": "function call",
        "content": {
          "name": "VideoPlayback.ShortVideos.playShortVideo",
          "arguments": {
            "video_name": "Travel Vlogtest.mp4",
            "full_screen": true
          }
        }
      },
      {
        "role": "assistant",
        "content": "What is the playback speed?"
      },
      {
        "role": "user",
        "content": "It was wrong before. Short video name should be Laughing Cat Highlights"
      },
      {
        "role": "function call",
        "content": {
          "name": "VideoPlayback.ShortVideos.playShortVideo",
          "arguments": {
            "video_name": "Laughing Cat Highlights",
            "full_screen": true
          }
        }
      },
      {
        "role": "assistant",
        "content": "What is the playback speed?"
      },
      {
        "role": "user",
        "content": "1.2x Speed"
      },
      {
        "role": "function call",
        "content": {
          "name": "VideoPlayback.ShortVideos.playShortVideo",
          "arguments": {
            "video_name": "Laughing Cat Highlights",
            "full_screen": true,
            "playback_speed": 1.2
          }
        }
      },
      {
        "role": "assistant",
        "content": "Whether to open the barrage"
      },
      {
        "role": "user",
        "content": "Yes, open the barrage. True"
      },
      {
        "role": "function call",
        "content": {
          "name": "VideoPlayback.ShortVideos.playShortVideo",
          "arguments": {
            "video_name": "Laughing Cat Highlights",
            "full_screen": true,
            "playback_speed": 1.2,
            "danmaku": true
          }
        }
      }
    ],
    "multiple_tools": [
      {
        "name": "Photography.PhotoEditing.viewPicture",
        "description": "View photo",
        "parameters": {
          "type": "object",
          "properties": {
            "name_or_path": {
              "type": "string",
              "description": "Photo name or path"
            }
          },
          "required": [
            "name_or_path"
          ]
        }
      },
      {
        "name": "VideoPlayback.ShortVideos.playShortVideo",
        "description": "Watch the short video, watch from scratch by default",
        "parameters": {
          "type": "object",
          "properties": {
            "video_name": {
              "type": "string",
              "description": "Short video name"
            },
            "full_screen": {
              "type": "boolean",
              "description": "Full Screen"
            },
            "playback_speed": {
              "type": "float",
              "description": "Playback Speed"
            },
            "danmaku": {
              "type": "boolean",
              "description": "enable bullet text"
            }
          },
          "required": [
            "video_name",
            "full_screen",
            "playback_speed",
            "danmaku"
          ]
        }
      },
      {
        "name": "OfficeSoftware.Documents.readDocument",
        "description": "Read the specified document based on the document name",
        "parameters": {
          "type": "object",
          "properties": {
            "document_name": {
              "type": "string",
              "description": "Document name, required"
            }
          },
          "required": [
            "document_name"
          ]
        }
      },
      {
        "name": "VideoPlayback.OnlineVideos.playOnlineVideo",
        "description": "Watch the video (when to start, watch from scratch by default)",
        "parameters": {
          "type": "object",
          "properties": {
            "video_name": {
              "type": "string",
              "description": "Video Name"
            },
            "start": {
              "type": "string",
              "description": "When to start, watch from scratch by default"
            },
            "full_screen": {
              "type": "boolean",
              "description": "Full Screen"
            },
            "playback_speed": {
              "type": "float",
              "description": "Playback Speed"
            },
            "danmaku": {
              "type": "boolean",
              "description": "enable bullet text"
            }
          },
          "required": [
            "video_name",
            "start",
            "full_screen",
            "playback_speed",
            "danmaku"
          ]
        }
      },
      {
        "name": "Finance.Banking.viewAccount",
        "description": "See an overview of your bank account",
        "parameters": {
          "type": "object",
          "properties": {
            "account_name": {
              "type": "string",
              "description": "Account Name"
            }
          },
          "required": [
            "account_name"
          ]
        }
      }
    ],
    "single_tool": [
      {
        "name": "VideoPlayback.ShortVideos.playShortVideo",
        "description": "Watch the short video, watch from scratch by default",
        "parameters": {
          "type": "object",
          "properties": {
            "video_name": {
              "type": "string",
              "description": "Short video name"
            },
            "full_screen": {
              "type": "boolean",
              "description": "Full Screen"
            },
            "playback_speed": {
              "type": "float",
              "description": "Playback Speed"
            },
            "danmaku": {
              "type": "boolean",
              "description": "enable bullet text"
            }
          },
          "required": [
            "video_name",
            "full_screen",
            "playback_speed",
            "danmaku"
          ]
        }
      }
    ],
    "id": 896
  },
  {
    "messages": [
      {
        "role": "user",
        "content": "Share the illegal information of Beijing A12345 with my friends through WeChat"
      },
      {
        "role": "function call",
        "content": {
          "name": "Navigation.TrafficViolations.shareViolationDetail",
          "arguments": {
            "plate_number": "Beijing A12345",
            "media": "WeChat"
          }
        }
      },
      {
        "role": "assistant",
        "content": "What city is the offending city located in?"
      },
      {
        "role": "user",
        "content": "The violation occurred in Chongqing."
      },
      {
        "role": "function call",
        "content": {
          "name": "Navigation.TrafficViolations.shareViolationDetail",
          "arguments": {
            "plate_number": "Beijing A12345",
            "media": "WeChat",
            "city": "Chongqing"
          }
        }
      },
      {
        "role": "assistant",
        "content": "Who is the recipient of the shared content"
      },
      {
        "role": "user",
        "content": "It was wrong before. License plate number should be Guangdong B6789X"
      },
      {
        "role": "function call",
        "content": {
          "name": "Navigation.TrafficViolations.shareViolationDetail",
          "arguments": {
            "plate_number": "Guangdong B6789X",
            "media": "WeChat",
            "city": "Chongqing"
          }
        }
      },
      {
        "role": "assistant",
        "content": "Who is the recipient of the shared content"
      },
      {
        "role": "user",
        "content": "It's Tom, my project partner."
      },
      {
        "role": "function call",
        "content": {
          "name": "Navigation.TrafficViolations.shareViolationDetail",
          "arguments": {
            "plate_number": "Guangdong B6789X",
            "media": "WeChat",
            "city": "Chongqing",
            "name": "Tom"
          }
        }
      },
      {
        "role": "assistant",
        "content": "When is the order opening time?"
      },
      {
        "role": "user",
        "content": "Just the night before yesterday."
      },
      {
        "role": "function call",
        "content": {
          "name": "Navigation.TrafficViolations.shareViolationDetail",
          "arguments": {
            "plate_number": "Guangdong B6789X",
            "media": "WeChat",
            "city": "Chongqing",
            "name": "Tom",
            "time": "the night before yesterday"
          }
        }
      }
    ],
    "multiple_tools": [
      {
        "name": "Photography.PhotoEditing.sharePicture",
        "description": "Share photos to select locations",
        "parameters": {
          "type": "object",
          "properties": {
            "name_or_path": {
              "type": "string",
              "description": "Photo name or path"
            },
            "to": {
              "type": "string",
              "description": "Destination app name"
            }
          },
          "required": [
            "name_or_path",
            "to"
          ]
        }
      },
      {
        "name": "NewsMagazines.News.shareNews",
        "description": "Share news",
        "parameters": {
          "type": "object",
          "properties": {
            "news_name": {
              "type": "string",
              "description": "News Name"
            },
            "to": {
              "type": "string",
              "description": "WeChat/qq/TikTok"
            }
          },
          "required": [
            "news_name",
            "to"
          ]
        }
      },
      {
        "name": "MusicRadio.RadioStations.radioShareRadio",
        "description": "Share the station to social platforms based on the station name",
        "parameters": {
          "type": "object",
          "properties": {
            "radio_name": {
              "type": "string",
              "description": "Radio Name"
            },
            "to": {
              "type": "string",
              "description": "Sharing platform"
            }
          },
          "required": [
            "radio_name",
            "to"
          ]
        }
      },
      {
        "name": "ConvenientLiving.AutoLife.shareCarModels",
        "description": "Share Selected Cars",
        "parameters": {
          "type": "object",
          "properties": {
            "brand": {
              "type": "string",
              "description": "Car Brand"
            },
            "to": {
              "type": "string",
              "description": "Media, such as WeChat, Xiaohongshu, Weibo, etc."
            },
            "name": {
              "type": "string",
              "description": "Shared goals"
            }
          },
          "required": [
            "brand",
            "to",
            "name"
          ]
        }
      },
      {
        "name": "Navigation.TrafficViolations.shareViolationDetail",
        "description": "Share Designated Violation Information",
        "parameters": {
          "type": "object",
          "properties": {
            "plate_number": {
              "type": "string",
              "description": "License plate number"
            },
            "city": {
              "type": "string",
              "description": "Violating city"
            },
            "time": {
              "type": "string",
              "description": "Billing Time"
            },
            "media": {
              "type": "string",
              "description": "Ways to share"
            },
            "name": {
              "type": "string",
              "description": "Shared content recipients"
            }
          },
          "required": [
            "plate_number",
            "city",
            "time",
            "media",
            "name"
          ]
        }
      }
    ],
    "single_tool": [
      {
        "name": "Navigation.TrafficViolations.shareViolationDetail",
        "description": "Share Designated Violation Information",
        "parameters": {
          "type": "object",
          "properties": {
            "plate_number": {
              "type": "string",
              "description": "License plate number"
            },
            "city": {
              "type": "string",
              "description": "Violating city"
            },
            "time": {
              "type": "string",
              "description": "Billing Time"
            },
            "media": {
              "type": "string",
              "description": "Ways to share"
            },
            "name": {
              "type": "string",
              "description": "Shared content recipients"
            }
          },
          "required": [
            "plate_number",
            "city",
            "time",
            "media",
            "name"
          ]
        }
      }
    ],
    "id": 897
  },
  {
    "messages": [
      {
        "role": "user",
        "content": "I want to share the violation record of Shanghai B67890 to the QQ group"
      },
      {
        "role": "function call",
        "content": {
          "name": "Navigation.TrafficViolations.shareViolationDetail",
          "arguments": {
            "plate_number": "Shanghai B67890",
            "media": "QQ"
          }
        }
      },
      {
        "role": "assistant",
        "content": "What city is the violation located in?"
      },
      {
        "role": "user",
        "content": "The violation occurred in Guangzhou."
      },
      {
        "role": "function call",
        "content": {
          "name": "Navigation.TrafficViolations.shareViolationDetail",
          "arguments": {
            "plate_number": "Shanghai B67890",
            "media": "QQ",
            "city": "Guangzhou"
          }
        }
      },
      {
        "role": "assistant",
        "content": "Who is the recipient of the shared content"
      },
      {
        "role": "user",
        "content": "It was wrong before. Ways to share should be Facebook"
      },
      {
        "role": "function call",
        "content": {
          "name": "Navigation.TrafficViolations.shareViolationDetail",
          "arguments": {
            "plate_number": "Shanghai B67890",
            "media": "Facebook",
            "city": "Guangzhou"
          }
        }
      },
      {
        "role": "assistant",
        "content": "Who is the recipient of the shared content"
      },
      {
        "role": "user",
        "content": "The recipient of the shared content is Manager Zhang."
      },
      {
        "role": "function call",
        "content": {
          "name": "Navigation.TrafficViolations.shareViolationDetail",
          "arguments": {
            "plate_number": "Shanghai B67890",
            "media": "Facebook",
            "city": "Guangzhou",
            "name": "Manager Zhang"
          }
        }
      },
      {
        "role": "assistant",
        "content": "Please provide the order time"
      },
      {
        "role": "user",
        "content": "It was yesterday."
      },
      {
        "role": "function call",
        "content": {
          "name": "Navigation.TrafficViolations.shareViolationDetail",
          "arguments": {
            "plate_number": "Shanghai B67890",
            "media": "Facebook",
            "city": "Guangzhou",
            "name": "Manager Zhang",
            "time": "yesterday"
          }
        }
      }
    ],
    "multiple_tools": [
      {
        "name": "SocialCommunication.Community.shareCommunityPost",
        "description": "Share a specific post to a specific medium or to someone",
        "parameters": {
          "type": "object",
          "properties": {
            "community_name": {
              "type": "string",
              "description": "The name of the community where the post is located"
            },
            "title": {
              "type": "string",
              "description": "Prev Post Caption"
            },
            "medium": {
              "type": "string",
              "description": "Share media"
            },
            "user_name": {
              "type": "string",
              "description": "Shared by"
            }
          },
          "required": [
            "community_name",
            "title",
            "medium",
            "user_name"
          ]
        }
      },
      {
        "name": "Navigation.TrafficViolations.shareViolationDetail",
        "description": "Share Designated Violation Information",
        "parameters": {
          "type": "object",
          "properties": {
            "plate_number": {
              "type": "string",
              "description": "License plate number"
            },
            "city": {
              "type": "string",
              "description": "Violating city"
            },
            "time": {
              "type": "string",
              "description": "Billing Time"
            },
            "media": {
              "type": "string",
              "description": "Ways to share"
            },
            "name": {
              "type": "string",
              "description": "Shared content recipients"
            }
          },
          "required": [
            "plate_number",
            "city",
            "time",
            "media",
            "name"
          ]
        }
      },
      {
        "name": "Photography.PhotoEditing.sharePicture",
        "description": "Share photos to select locations",
        "parameters": {
          "type": "object",
          "properties": {
            "name_or_path": {
              "type": "string",
              "description": "Photo name or path"
            },
            "to": {
              "type": "string",
              "description": "Destination app name"
            }
          },
          "required": [
            "name_or_path",
            "to"
          ]
        }
      },
      {
        "name": "MusicRadio.RadioStations.radioShareRadio",
        "description": "Share the station to social platforms based on the station name",
        "parameters": {
          "type": "object",
          "properties": {
            "radio_name": {
              "type": "string",
              "description": "Radio Name"
            },
            "to": {
              "type": "string",
              "description": "Sharing platform"
            }
          },
          "required": [
            "radio_name",
            "to"
          ]
        }
      },
      {
        "name": "NewsMagazines.News.shareNews",
        "description": "Share news",
        "parameters": {
          "type": "object",
          "properties": {
            "news_name": {
              "type": "string",
              "description": "News Name"
            },
            "to": {
              "type": "string",
              "description": "WeChat/qq/TikTok"
            }
          },
          "required": [
            "news_name",
            "to"
          ]
        }
      }
    ],
    "single_tool": [
      {
        "name": "Navigation.TrafficViolations.shareViolationDetail",
        "description": "Share Designated Violation Information",
        "parameters": {
          "type": "object",
          "properties": {
            "plate_number": {
              "type": "string",
              "description": "License plate number"
            },
            "city": {
              "type": "string",
              "description": "Violating city"
            },
            "time": {
              "type": "string",
              "description": "Billing Time"
            },
            "media": {
              "type": "string",
              "description": "Ways to share"
            },
            "name": {
              "type": "string",
              "description": "Shared content recipients"
            }
          },
          "required": [
            "plate_number",
            "city",
            "time",
            "media",
            "name"
          ]
        }
      }
    ],
    "id": 898
  },
  {
    "messages": [
      {
        "role": "user",
        "content": "Help me share the 101 bus information with Wang"
      },
      {
        "role": "function call",
        "content": {
          "name": "Navigation.PublicTransit.shareBusRoute",
          "arguments": {
            "recipient": "Young Prince",
            "line": "Bus 101"
          }
        }
      },
      {
        "role": "assistant",
        "content": "Where is the starting point? Is it the current position by default?"
      },
      {
        "role": "user",
        "content": "The starting location is not the default current location and I need to go from the city center."
      },
      {
        "role": "function call",
        "content": {
          "name": "Navigation.PublicTransit.shareBusRoute",
          "arguments": {
            "recipient": "Young Prince",
            "line": "Bus 101",
            "departure": "the centre of town "
          }
        }
      },
      {
        "role": "assistant",
        "content": "Where to"
      },
      {
        "role": "user",
        "content": "The destination is the innovation center near the science park."
      },
      {
        "role": "function call",
        "content": {
          "name": "Navigation.PublicTransit.shareBusRoute",
          "arguments": {
            "recipient": "Young Prince",
            "line": "Bus 101",
            "departure": "the centre of town ",
            "destination": "Technology Park"
          }
        }
      },
      {
        "role": "assistant",
        "content": "When is the departure time What is the preferred route type"
      },
      {
        "role": "user",
        "content": "It was wrong before. recipient should be Li Hua"
      },
      {
        "role": "function call",
        "content": {
          "name": "Navigation.PublicTransit.shareBusRoute",
          "arguments": {
            "recipient": "Li Hua",
            "line": "Bus 101",
            "departure": "the centre of town ",
            "destination": "Technology Park"
          }
        }
      },
      {
        "role": "assistant",
        "content": "When is the departure time What is the preferred route type"
      },
      {
        "role": "user",
        "content": "Departure time is 8am, preferring routes with few transfers."
      },
      {
        "role": "function call",
        "content": {
          "name": "Navigation.PublicTransit.shareBusRoute",
          "arguments": {
            "recipient": "Li Hua",
            "line": "Bus 101",
            "departure": "the centre of town ",
            "destination": "Technology Park",
            "preferred_line": "Fewer transfers"
          }
        }
      }
    ],
    "multiple_tools": [
      {
        "name": "UtilityTools.Search.shareWebPage",
        "description": "Share the current page to other platforms/media",
        "parameters": {
          "type": "object",
          "properties": {
            "media": {
              "type": "string",
              "description": "Media or platform to share"
            },
            "person": {
              "type": "string",
              "description": "Specify who to share with"
            }
          },
          "required": [
            "media",
            "person"
          ]
        }
      },
      {
        "name": "Navigation.PublicTransit.shareBusRoute",
        "description": "Share designated bus routes with others",
        "parameters": {
          "type": "object",
          "properties": {
            "line": {
              "type": "string",
              "description": "line"
            },
            "departure": {
              "type": "string",
              "description": "Starting location, default current location"
            },
            "destination": {
              "type": "string",
              "description": "Destination"
            },
            "preferred_line": {
              "type": "string",
              "description": "Departure time, the default departure time is now; the preferred route type, such as the shortest time, less transfer, less walking, etc."
            },
            "recipient": {
              "type": "string",
              "description": "recipient"
            },
            "medium": {
              "type": "string",
              "description": "Medium"
            }
          },
          "required": [
            "line",
            "departure",
            "destination",
            "preferred_line",
            "recipient",
            "medium"
          ]
        }
      },
      {
        "name": "OnlineShopping.ExpressDelivery.shareExpress",
        "description": "Share specific courier logistics information with the intended audience",
        "parameters": {
          "type": "object",
          "properties": {
            "to": {
              "type": "string",
              "description": "Shared with"
            },
            "date": {
              "type": "string",
              "description": "Shipping date"
            }
          },
          "required": [
            "to",
            "date"
          ]
        }
      },
      {
        "name": "Navigation.TaxiCarRental.shareTaxiOrder",
        "description": "Share route",
        "parameters": {
          "type": "object",
          "properties": {
            "time": {
              "type": "string",
              "description": "Order time"
            },
            "destination": {
              "type": "string",
              "description": "destination"
            },
            "media": {
              "type": "string",
              "description": "Choose Socials To Share Single Post"
            }
          },
          "required": [
            "time",
            "destination",
            "media"
          ]
        }
      },
      {
        "name": "NewsMagazines.News.shareNews",
        "description": "Share news",
        "parameters": {
          "type": "object",
          "properties": {
            "news_name": {
              "type": "string",
              "description": "News Name"
            },
            "to": {
              "type": "string",
              "description": "WeChat/qq/TikTok"
            }
          },
          "required": [
            "news_name",
            "to"
          ]
        }
      }
    ],
    "single_tool": [
      {
        "name": "Navigation.PublicTransit.shareBusRoute",
        "description": "Share designated bus routes with others",
        "parameters": {
          "type": "object",
          "properties": {
            "line": {
              "type": "string",
              "description": "line"
            },
            "departure": {
              "type": "string",
              "description": "Starting location, default current location"
            },
            "destination": {
              "type": "string",
              "description": "Destination"
            },
            "preferred_line": {
              "type": "string",
              "description": "Departure time, the default departure time is now; the preferred route type, such as the shortest time, less transfer, less walking, etc."
            },
            "recipient": {
              "type": "string",
              "description": "recipient"
            },
            "medium": {
              "type": "string",
              "description": "Medium"
            }
          },
          "required": [
            "line",
            "departure",
            "destination",
            "preferred_line",
            "recipient",
            "medium"
          ]
        }
      }
    ],
    "id": 899
  },
  {
    "messages": [
      {
        "role": "user",
        "content": "Send a message to Li Hua on the 202 night bus"
      },
      {
        "role": "function call",
        "content": {
          "name": "Navigation.PublicTransit.shareBusRoute",
          "arguments": {
            "recipient": "Li Hua",
            "line": "Night Bus No. 202"
          }
        }
      },
      {
        "role": "assistant",
        "content": "Where is the starting point? Is it the current position by default?"
      },
      {
        "role": "user",
        "content": "No, the starting point is the train station."
      },
      {
        "role": "function call",
        "content": {
          "name": "Navigation.PublicTransit.shareBusRoute",
          "arguments": {
            "recipient": "Li Hua",
            "line": "Night Bus No. 202",
            "departure": "train station"
          }
        }
      },
      {
        "role": "assistant",
        "content": "Where to"
      },
      {
        "role": "user",
        "content": "The destination is the library near the university town."
      },
      {
        "role": "function call",
        "content": {
          "name": "Navigation.PublicTransit.shareBusRoute",
          "arguments": {
            "recipient": "Li Hua",
            "line": "Night Bus No. 202",
            "departure": "train station",
            "destination": "a university town "
          }
        }
      },
      {
        "role": "assistant",
        "content": "When is the departure time What is the preferred route type"
      },
      {
        "role": "user",
        "content": "It was wrong before. Starting location, default current location should be the centre of town "
      },
      {
        "role": "function call",
        "content": {
          "name": "Navigation.PublicTransit.shareBusRoute",
          "arguments": {
            "recipient": "Li Hua",
            "line": "Night Bus No. 202",
            "departure": "the centre of town ",
            "destination": "a university town "
          }
        }
      },
      {
        "role": "assistant",
        "content": "When is the departure time What is the preferred route type"
      },
      {
        "role": "user",
        "content": "The departure time is 8am tomorrow morning and the preferred route type is the shortest highway."
      },
      {
        "role": "function call",
        "content": {
          "name": "Navigation.PublicTransit.shareBusRoute",
          "arguments": {
            "recipient": "Li Hua",
            "line": "Night Bus No. 202",
            "departure": "the centre of town ",
            "destination": "a university town ",
            "preferred_line": "Minimum time required"
          }
        }
      }
    ],
    "multiple_tools": [
      {
        "name": "Navigation.PublicTransit.shareBusRoute",
        "description": "Share designated bus routes with others",
        "parameters": {
          "type": "object",
          "properties": {
            "line": {
              "type": "string",
              "description": "line"
            },
            "departure": {
              "type": "string",
              "description": "Starting location, default current location"
            },
            "destination": {
              "type": "string",
              "description": "Destination"
            },
            "preferred_line": {
              "type": "string",
              "description": "Departure time, the default departure time is now; the preferred route type, such as the shortest time, less transfer, less walking, etc."
            },
            "recipient": {
              "type": "string",
              "description": "recipient"
            },
            "medium": {
              "type": "string",
              "description": "Medium"
            }
          },
          "required": [
            "line",
            "departure",
            "destination",
            "preferred_line",
            "recipient",
            "medium"
          ]
        }
      },
      {
        "name": "OfficeSoftware.Email.sendMail",
        "description": "Send a new message",
        "parameters": {
          "type": "object",
          "properties": {
            "title": {
              "type": "string",
              "description": "Email Title"
            },
            "content": {
              "type": "string",
              "description": "Email Content"
            },
            "receivers": {
              "type": "string",
              "description": "Recipient of the email"
            }
          },
          "required": [
            "title",
            "content",
            "receivers"
          ]
        }
      },
      {
        "name": "SocialCommunication.InstantMessaging.sendMessage",
        "description": "Send a text message to a specific contact or group",
        "parameters": {
          "type": "object",
          "properties": {
            "receiver_name": {
              "type": "string",
              "description": "Name of the contact or group receiving the message"
            },
            "message_content": {
              "type": "string",
              "description": "Text content to send"
            }
          },
          "required": [
            "receiver_name",
            "message_content"
          ]
        }
      },
      {
        "name": "SocialCommunication.InstantMessaging.sendSystemMessage",
        "description": "Send a system text message to a specific number or contact",
        "parameters": {
          "type": "object",
          "properties": {
            "receiver_number": {
              "type": "string",
              "description": "Phone number to receive SMS messages"
            },
            "receiver_name": {
              "type": "string",
              "description": "Username to receive SMS"
            },
            "message_content": {
              "type": "string",
              "description": "Text content of the text message to be sent"
            },
            "attachment_path": {
              "type": "string",
              "description": "Image or file URL"
            }
          },
          "required": [
            "receiver_number",
            "receiver_name",
            "message_content",
            "attachment_path"
          ]
        }
      },
      {
        "name": "SocialCommunication.SocialMedia.sendMediumMessage",
        "description": "Send a message to a specific friend in a specific medium",
        "parameters": {
          "type": "object",
          "properties": {
            "medium_name": {
              "type": "string",
              "description": "Media name"
            },
            "name": {
              "type": "string",
              "description": "Friend's nickname"
            },
            "content": {
              "type": "string",
              "description": "Content "
            },
            "account_number": {
              "type": "string",
              "description": "Friend's account"
            }
          },
          "required": [
            "medium_name",
            "name",
            "content",
            "account_number"
          ]
        }
      }
    ],
    "single_tool": [
      {
        "name": "Navigation.PublicTransit.shareBusRoute",
        "description": "Share designated bus routes with others",
        "parameters": {
          "type": "object",
          "properties": {
            "line": {
              "type": "string",
              "description": "line"
            },
            "departure": {
              "type": "string",
              "description": "Starting location, default current location"
            },
            "destination": {
              "type": "string",
              "description": "Destination"
            },
            "preferred_line": {
              "type": "string",
              "description": "Departure time, the default departure time is now; the preferred route type, such as the shortest time, less transfer, less walking, etc."
            },
            "recipient": {
              "type": "string",
              "description": "recipient"
            },
            "medium": {
              "type": "string",
              "description": "Medium"
            }
          },
          "required": [
            "line",
            "departure",
            "destination",
            "preferred_line",
            "recipient",
            "medium"
          ]
        }
      }
    ],
    "id": 900
  },
  {
    "messages": [
      {
        "role": "user",
        "content": "I want to check flight tickets from Beijing to Shanghai"
      },
      {
        "role": "function call",
        "content": {
          "name": "Navigation.FlightTickets.searchFlight",
          "arguments": {
            "departure": "Beijing",
            "destination": "Shanghai"
          }
        }
      },
      {
        "role": "assistant",
        "content": "What time is your departure time"
      },
      {
        "role": "user",
        "content": "My departure time is May 1st at 8am."
      },
      {
        "role": "function call",
        "content": {
          "name": "Navigation.FlightTickets.searchFlight",
          "arguments": {
            "departure": "Beijing",
            "destination": "Shanghai",
            "date": "May 1st"
          }
        }
      },
      {
        "role": "assistant",
        "content": "Do you need economy or business class"
      },
      {
        "role": "user",
        "content": "It was wrong before. Reach ground should be Bangkok"
      },
      {
        "role": "function call",
        "content": {
          "name": "Navigation.FlightTickets.searchFlight",
          "arguments": {
            "departure": "Beijing",
            "destination": "Bangkok",
            "date": "May 1st"
          }
        }
      },
      {
        "role": "assistant",
        "content": "Do you need economy or business class"
      },
      {
        "role": "user",
        "content": "I need economy class."
      },
      {
        "role": "function call",
        "content": {
          "name": "Navigation.FlightTickets.searchFlight",
          "arguments": {
            "departure": "Beijing",
            "destination": "Bangkok",
            "date": "May 1st",
            "site_type": "Economy Class"
          }
        }
      }
    ],
    "multiple_tools": [
      {
        "name": "Navigation.FlightTickets.searchCheapFlights",
        "description": "Search cheap flights by specified criteria",
        "parameters": {
          "type": "object",
          "properties": {
            "type": {
              "type": "string",
              "description": "One way, round trip"
            },
            "departure": {
              "type": "string",
              "description": "Origination"
            },
            "destination": {
              "type": "string",
              "description": "Reach ground"
            },
            "travel_date": {
              "type": "string",
              "description": "Specify date, next month, next three months, etc."
            }
          },
          "required": [
            "type",
            "departure",
            "destination",
            "travel_date"
          ]
        }
      },
      {
        "name": "ConvenientLiving.GovernmentServices.queryCityServiceInfo",
        "description": "Find information about public city services in selected cities",
        "parameters": {
          "type": "object",
          "properties": {
            "city_name": {
              "type": "string",
              "description": "Name of the city to query"
            }
          },
          "required": [
            "city_name"
          ]
        }
      },
      {
        "name": "Navigation.FlightTickets.checkInOnlineFlight",
        "description": "Online check-in for selected flights",
        "parameters": {
          "type": "object",
          "properties": {
            "flight_number": {
              "type": "string",
              "description": "e.g. CA1234"
            },
            "name": {
              "type": "string",
              "description": "Name"
            },
            "passenger_id": {
              "type": "string",
              "description": "Rider ID number"
            }
          },
          "required": [
            "flight_number",
            "name",
            "passenger_id"
          ]
        }
      },
      {
        "name": "Navigation.FlightTickets.searchFlight",
        "description": "Find tickets for specific dates",
        "parameters": {
          "type": "object",
          "properties": {
            "date": {
              "type": "string",
              "description": "Trip start time"
            },
            "departure": {
              "type": "string",
              "description": "Origination"
            },
            "destination": {
              "type": "string",
              "description": "Reach ground"
            },
            "type": {
              "type": "string",
              "description": "One-way, round-trip, multi-trip"
            },
            "site_type": {
              "type": "string",
              "description": "Economy, Business"
            }
          },
          "required": [
            "date",
            "departure",
            "destination",
            "type",
            "site_type"
          ]
        }
      },
      {
        "name": "Travel.ItineraryServices.searchTravelRoute",
        "description": "Search for relevant travel itineraries based on keywords",
        "parameters": {
          "type": "object",
          "properties": {
            "keyword": {
              "type": "string",
              "description": "Search keywords"
            }
          },
          "required": [
            "keyword"
          ]
        }
      }
    ],
    "single_tool": [
      {
        "name": "Navigation.FlightTickets.searchFlight",
        "description": "Find tickets for specific dates",
        "parameters": {
          "type": "object",
          "properties": {
            "date": {
              "type": "string",
              "description": "Trip start time"
            },
            "departure": {
              "type": "string",
              "description": "Origination"
            },
            "destination": {
              "type": "string",
              "description": "Reach ground"
            },
            "type": {
              "type": "string",
              "description": "One-way, round-trip, multi-trip"
            },
            "site_type": {
              "type": "string",
              "description": "Economy, Business"
            }
          },
          "required": [
            "date",
            "departure",
            "destination",
            "type",
            "site_type"
          ]
        }
      }
    ],
    "id": 903
  },
  {
    "messages": [
      {
        "role": "user",
        "content": "Help me take a look at flight ticket information from Guangzhou to Chengdu"
      },
      {
        "role": "function call",
        "content": {
          "name": "Navigation.FlightTickets.searchFlight",
          "arguments": {
            "departure": "Guangzhou",
            "destination": "Chengdu"
          }
        }
      },
      {
        "role": "assistant",
        "content": "What time does it leave?"
      },
      {
        "role": "user",
        "content": "The departure time is the week after the Spring Festival next year."
      },
      {
        "role": "function call",
        "content": {
          "name": "Navigation.FlightTickets.searchFlight",
          "arguments": {
            "departure": "Guangzhou",
            "destination": "Chengdu",
            "date": "Next year's Spring Festival"
          }
        }
      },
      {
        "role": "assistant",
        "content": "Do you need economy or business class"
      },
      {
        "role": "user",
        "content": "It was wrong before. Reach ground should be Bangkok"
      },
      {
        "role": "function call",
        "content": {
          "name": "Navigation.FlightTickets.searchFlight",
          "arguments": {
            "departure": "Guangzhou",
            "destination": "Bangkok",
            "date": "Next year's Spring Festival"
          }
        }
      },
      {
        "role": "assistant",
        "content": "Do you need economy or business class"
      },
      {
        "role": "user",
        "content": "I need business class."
      },
      {
        "role": "function call",
        "content": {
          "name": "Navigation.FlightTickets.searchFlight",
          "arguments": {
            "departure": "Guangzhou",
            "destination": "Bangkok",
            "date": "Next year's Spring Festival",
            "site_type": "- business class"
          }
        }
      }
    ],
    "multiple_tools": [
      {
        "name": "Navigation.FlightTickets.checkInOnlineFlight",
        "description": "Online check-in for selected flights",
        "parameters": {
          "type": "object",
          "properties": {
            "flight_number": {
              "type": "string",
              "description": "e.g. CA1234"
            },
            "name": {
              "type": "string",
              "description": "Name"
            },
            "passenger_id": {
              "type": "string",
              "description": "Rider ID number"
            }
          },
          "required": [
            "flight_number",
            "name",
            "passenger_id"
          ]
        }
      },
      {
        "name": "ConvenientLiving.JobRecruitment.getJobApplicantsForPosition",
        "description": "Get information about people applying for specific roles",
        "parameters": {
          "type": "object",
          "properties": {
            "position_name": {
              "type": "string",
              "description": "Job title, required"
            }
          },
          "required": [
            "position_name"
          ]
        }
      },
      {
        "name": "UtilityTools.Calendar.viewCalendareschedule",
        "description": "View information for a specific schedule",
        "parameters": {
          "type": "object",
          "properties": {
            "date_name": {
              "type": "string",
              "description": "Visiting program name"
            },
            "start_date": {
              "type": "string",
              "description": "Schedule start time; default current date"
            },
            "end_date": {
              "type": "string",
              "description": "Schedule end time; do not write the default start time 24 o'clock on the same day"
            },
            "schedule": {
              "type": "string",
              "description": "Schedule Related Descriptions"
            }
          },
          "required": [
            "date_name",
            "start_date",
            "end_date",
            "schedule"
          ]
        }
      },
      {
        "name": "Navigation.FlightTickets.searchFlight",
        "description": "Find tickets for specific dates",
        "parameters": {
          "type": "object",
          "properties": {
            "date": {
              "type": "string",
              "description": "Trip start time"
            },
            "departure": {
              "type": "string",
              "description": "Origination"
            },
            "destination": {
              "type": "string",
              "description": "Reach ground"
            },
            "type": {
              "type": "string",
              "description": "One-way, round-trip, multi-trip"
            },
            "site_type": {
              "type": "string",
              "description": "Economy, Business"
            }
          },
          "required": [
            "date",
            "departure",
            "destination",
            "type",
            "site_type"
          ]
        }
      },
      {
        "name": "NewsMagazines.News.getLiveNews",
        "description": "Get information about live news as specified by the user",
        "parameters": {
          "type": "object",
          "properties": {
            "channel": {
              "type": "string",
              "description": "Live Channels"
            }
          },
          "required": [
            "channel"
          ]
        }
      }
    ],
    "single_tool": [
      {
        "name": "Navigation.FlightTickets.searchFlight",
        "description": "Find tickets for specific dates",
        "parameters": {
          "type": "object",
          "properties": {
            "date": {
              "type": "string",
              "description": "Trip start time"
            },
            "departure": {
              "type": "string",
              "description": "Origination"
            },
            "destination": {
              "type": "string",
              "description": "Reach ground"
            },
            "type": {
              "type": "string",
              "description": "One-way, round-trip, multi-trip"
            },
            "site_type": {
              "type": "string",
              "description": "Economy, Business"
            }
          },
          "required": [
            "date",
            "departure",
            "destination",
            "type",
            "site_type"
          ]
        }
      }
    ],
    "id": 904
  },
  {
    "messages": [
      {
        "role": "user",
        "content": "I'm flying from Beijing to Shanghai to check the ticket information"
      },
      {
        "role": "function call",
        "content": {
          "name": "Navigation.FlightTickets.bookFlightTicket",
          "arguments": {
            "departure": "Beijing",
            "destination": "Shanghai"
          }
        }
      },
      {
        "role": "assistant",
        "content": "What is your flight number?"
      },
      {
        "role": "user",
        "content": "My flight number is MU9876."
      },
      {
        "role": "function call",
        "content": {
          "name": "Navigation.FlightTickets.bookFlightTicket",
          "arguments": {
            "departure": "Beijing",
            "destination": "Shanghai",
            "flight_number": "MU9876"
          }
        }
      },
      {
        "role": "assistant",
        "content": "What's the name of the person who booked the reservation"
      },
      {
        "role": "user",
        "content": "It was wrong before. Reach ground should be Wuhan"
      },
      {
        "role": "function call",
        "content": {
          "name": "Navigation.FlightTickets.bookFlightTicket",
          "arguments": {
            "departure": "Beijing",
            "destination": "Wuhan",
            "flight_number": "MU9876"
          }
        }
      },
      {
        "role": "assistant",
        "content": "What's the name of the person who booked the reservation"
      },
      {
        "role": "user",
        "content": "The name of the booker is Zhao Liu, who will be attending the meeting."
      },
      {
        "role": "function call",
        "content": {
          "name": "Navigation.FlightTickets.bookFlightTicket",
          "arguments": {
            "departure": "Beijing",
            "destination": "Wuhan",
            "flight_number": "MU9876",
            "name": "Zhao Liu"
          }
        }
      },
      {
        "role": "assistant",
        "content": "Provide the rider's ID number"
      },
      {
        "role": "user",
        "content": "420106198806080019, which is the rider's ID number."
      },
      {
        "role": "function call",
        "content": {
          "name": "Navigation.FlightTickets.bookFlightTicket",
          "arguments": {
            "departure": "Beijing",
            "destination": "Wuhan",
            "flight_number": "MU9876",
            "name": "Zhao Liu",
            "passenger_id": "420106198806080019"
          }
        }
      }
    ],
    "multiple_tools": [
      {
        "name": "OnlineShopping.ExpressDelivery.searchExpress",
        "description": "Search courier logistics based on information such as designated courier number, recipient, address, etc.",
        "parameters": {
          "type": "object",
          "properties": {
            "express_id": {
              "type": "string",
              "description": "Tracking Number"
            },
            "date": {
              "type": "string",
              "description": "Shipping date"
            },
            "send_name": {
              "type": "string",
              "description": "Name Of Sender"
            },
            "recipient_name": {
              "type": "string",
              "description": "Recipient's name"
            }
          },
          "required": [
            "express_id",
            "date",
            "send_name",
            "recipient_name"
          ]
        }
      },
      {
        "name": "Navigation.TrainTickets.queryHighSpeedRailRoutes",
        "description": "Find high-speeded rail routes from and to specific destinations",
        "parameters": {
          "type": "object",
          "properties": {
            "departure_station": {
              "type": "string",
              "description": "Departure Station"
            },
            "destination_station": {
              "type": "string",
              "description": "arrival station"
            },
            "max_results": {
              "type": "integer",
              "description": "Returns the maximum number of results, optional, default is 5"
            }
          },
          "required": [
            "departure_station",
            "destination_station",
            "max_results"
          ]
        }
      },
      {
        "name": "Travel.ItineraryServices.getTravelTransportationOptions",
        "description": "Provide transportation and directions to your destination",
        "parameters": {
          "type": "object",
          "properties": {
            "origin": {
              "type": "string",
              "description": "Origination"
            },
            "destination": {
              "type": "string",
              "description": "destination"
            }
          },
          "required": [
            "origin",
            "destination"
          ]
        }
      },
      {
        "name": "Navigation.TaxiCarRental.searchCarRental",
        "description": "See cars available in your location",
        "parameters": {
          "type": "object",
          "properties": {
            "location": {
              "type": "string",
              "description": "Pick-up from"
            },
            "start_time": {
              "type": "string",
              "description": "Start Time "
            },
            "end_time": {
              "type": "string",
              "description": "drop-off date"
            }
          },
          "required": [
            "location",
            "start_time",
            "end_time"
          ]
        }
      },
      {
        "name": "Navigation.FlightTickets.bookFlightTicket",
        "description": "To book a flight, you need to give the departure location, destination, departure time, etc.",
        "parameters": {
          "type": "object",
          "properties": {
            "flight_number": {
              "type": "string",
              "description": "e.g. CA1234"
            },
            "departure": {
              "type": "string",
              "description": "Origination"
            },
            "destination": {
              "type": "string",
              "description": "Reach ground"
            },
            "name": {
              "type": "string",
              "description": "Name of person who booked"
            },
            "time": {
              "type": "string",
              "description": "Trip start time"
            },
            "passenger_id": {
              "type": "string",
              "description": "Rider ID number"
            }
          },
          "required": [
            "flight_number",
            "departure",
            "destination",
            "name",
            "time",
            "passenger_id"
          ]
        }
      }
    ],
    "single_tool": [
      {
        "name": "Navigation.FlightTickets.bookFlightTicket",
        "description": "To book a flight, you need to give the departure location, destination, departure time, etc.",
        "parameters": {
          "type": "object",
          "properties": {
            "flight_number": {
              "type": "string",
              "description": "e.g. CA1234"
            },
            "departure": {
              "type": "string",
              "description": "Origination"
            },
            "destination": {
              "type": "string",
              "description": "Reach ground"
            },
            "name": {
              "type": "string",
              "description": "Name of person who booked"
            },
            "time": {
              "type": "string",
              "description": "Trip start time"
            },
            "passenger_id": {
              "type": "string",
              "description": "Rider ID number"
            }
          },
          "required": [
            "flight_number",
            "departure",
            "destination",
            "name",
            "time",
            "passenger_id"
          ]
        }
      }
    ],
    "id": 907
  },
  {
    "messages": [
      {
        "role": "user",
        "content": "Find out if there are any tickets from Guangzhou to Chengdu"
      },
      {
        "role": "function call",
        "content": {
          "name": "Navigation.FlightTickets.bookFlightTicket",
          "arguments": {
            "departure": "Guangzhou",
            "destination": "Chengdu"
          }
        }
      },
      {
        "role": "assistant",
        "content": "What's the name of the person who booked the reservation"
      },
      {
        "role": "user",
        "content": "The name of the booker is Zhang San."
      },
      {
        "role": "function call",
        "content": {
          "name": "Navigation.FlightTickets.bookFlightTicket",
          "arguments": {
            "departure": "Guangzhou",
            "destination": "Chengdu",
            "name": "Zhang San"
          }
        }
      },
      {
        "role": "assistant",
        "content": "What is your departure time?"
      },
      {
        "role": "user",
        "content": "It was wrong before. Name of person who booked should be Zhao Liu"
      },
      {
        "role": "function call",
        "content": {
          "name": "Navigation.FlightTickets.bookFlightTicket",
          "arguments": {
            "departure": "Guangzhou",
            "destination": "Chengdu",
            "name": "Zhao Liu"
          }
        }
      },
      {
        "role": "assistant",
        "content": "What is your departure time?"
      },
      {
        "role": "user",
        "content": "Tomorrow at 8am"
      },
      {
        "role": "function call",
        "content": {
          "name": "Navigation.FlightTickets.bookFlightTicket",
          "arguments": {
            "departure": "Guangzhou",
            "destination": "Chengdu",
            "name": "Zhao Liu",
            "time": "Tomorrow at 8am"
          }
        }
      },
      {
        "role": "assistant",
        "content": "Provide the rider's ID number"
      },
      {
        "role": "user",
        "content": "123456789012345678"
      },
      {
        "role": "function call",
        "content": {
          "name": "Navigation.FlightTickets.bookFlightTicket",
          "arguments": {
            "departure": "Guangzhou",
            "destination": "Chengdu",
            "name": "Zhao Liu",
            "time": "Tomorrow",
            "passenger_id": "123456789012345678"
          }
        }
      }
    ],
    "multiple_tools": [
      {
        "name": "Navigation.FlightTickets.bookFlightTicket",
        "description": "To book a flight, you need to give the departure location, destination, departure time, etc.",
        "parameters": {
          "type": "object",
          "properties": {
            "flight_number": {
              "type": "string",
              "description": "e.g. CA1234"
            },
            "departure": {
              "type": "string",
              "description": "Origination"
            },
            "destination": {
              "type": "string",
              "description": "Reach ground"
            },
            "name": {
              "type": "string",
              "description": "Name of person who booked"
            },
            "time": {
              "type": "string",
              "description": "Trip start time"
            },
            "passenger_id": {
              "type": "string",
              "description": "Rider ID number"
            }
          },
          "required": [
            "flight_number",
            "departure",
            "destination",
            "name",
            "time",
            "passenger_id"
          ]
        }
      },
      {
        "name": "UtilityTools.Memo.searchNotes",
        "description": "Search memos by keyword (see all by default)",
        "parameters": {
          "type": "object",
          "properties": {
            "key_words": {
              "type": "string",
              "description": "KEYWORDS"
            }
          },
          "required": [
            "key_words"
          ]
        }
      },
      {
        "name": "Travel.ItineraryServices.searchTravelRoute",
        "description": "Search for relevant travel itineraries based on keywords",
        "parameters": {
          "type": "object",
          "properties": {
            "keyword": {
              "type": "string",
              "description": "Search keywords"
            }
          },
          "required": [
            "keyword"
          ]
        }
      },
      {
        "name": "ConvenientLiving.BuyingRentingHomes.searchRentingHouses",
        "description": "Search for rentals by criteria",
        "parameters": {
          "type": "object",
          "properties": {
            "price": {
              "type": "string",
              "description": "Rents"
            },
            "house_area": {
              "type": "string",
              "description": "Area"
            },
            "level": {
              "type": "string",
              "description": "Floor"
            },
            "age": {
              "type": "integer",
              "description": "fixed number of years"
            },
            "house_type": {
              "type": "string",
              "description": "Layout"
            },
            "housing_estate": {
              "type": "string",
              "description": "Community"
            },
            "location": {
              "type": "string",
              "description": "Position"
            },
            "indoor_decoration": {
              "type": "string",
              "description": "decorate"
            },
            "furniture": {
              "type": "string",
              "description": "Furniture"
            }
          },
          "required": [
            "price",
            "house_area",
            "level",
            "age",
            "house_type",
            "housing_estate",
            "location",
            "indoor_decoration",
            "furniture"
          ]
        }
      },
      {
        "name": "Navigation.FlightTickets.searchCheapFlights",
        "description": "Search cheap flights by specified criteria",
        "parameters": {
          "type": "object",
          "properties": {
            "type": {
              "type": "string",
              "description": "One way, round trip"
            },
            "departure": {
              "type": "string",
              "description": "Origination"
            },
            "destination": {
              "type": "string",
              "description": "Reach ground"
            },
            "travel_date": {
              "type": "string",
              "description": "Specify date, next month, next three months, etc."
            }
          },
          "required": [
            "type",
            "departure",
            "destination",
            "travel_date"
          ]
        }
      }
    ],
    "single_tool": [
      {
        "name": "Navigation.FlightTickets.bookFlightTicket",
        "description": "To book a flight, you need to give the departure location, destination, departure time, etc.",
        "parameters": {
          "type": "object",
          "properties": {
            "flight_number": {
              "type": "string",
              "description": "e.g. CA1234"
            },
            "departure": {
              "type": "string",
              "description": "Origination"
            },
            "destination": {
              "type": "string",
              "description": "Reach ground"
            },
            "name": {
              "type": "string",
              "description": "Name of person who booked"
            },
            "time": {
              "type": "string",
              "description": "Trip start time"
            },
            "passenger_id": {
              "type": "string",
              "description": "Rider ID number"
            }
          },
          "required": [
            "flight_number",
            "departure",
            "destination",
            "name",
            "time",
            "passenger_id"
          ]
        }
      }
    ],
    "id": 908
  },
  {
    "messages": [
      {
        "role": "user",
        "content": "I need to reschedule my flight from Beijing for 3pm"
      },
      {
        "role": "function call",
        "content": {
          "name": "Navigation.FlightTickets.modifyFlightBooking",
          "arguments": {
            "alter_time": "15:00",
            "departure": "Beijing"
          }
        }
      },
      {
        "role": "assistant",
        "content": "Where to"
      },
      {
        "role": "user",
        "content": "Chengdu"
      },
      {
        "role": "function call",
        "content": {
          "name": "Navigation.FlightTickets.modifyFlightBooking",
          "arguments": {
            "alter_time": "15:00",
            "departure": "Beijing",
            "destination": "Chengdu"
          }
        }
      },
      {
        "role": "assistant",
        "content": "What's the name of the person who booked the reservation"
      },
      {
        "role": "user",
        "content": "The name of the booker is Li Si, who will be attending the event."
      },
      {
        "role": "function call",
        "content": {
          "name": "Navigation.FlightTickets.modifyFlightBooking",
          "arguments": {
            "alter_time": "15:00",
            "departure": "Beijing",
            "destination": "Chengdu",
            "name": "Li Si"
          }
        }
      },
      {
        "role": "assistant",
        "content": "Please provide the flight time before the change"
      },
      {
        "role": "user",
        "content": "It was wrong before. Origination should be Shenzhen"
      },
      {
        "role": "function call",
        "content": {
          "name": "Navigation.FlightTickets.modifyFlightBooking",
          "arguments": {
            "alter_time": "15:00",
            "departure": "Shenzhen",
            "destination": "Chengdu",
            "name": "Li Si"
          }
        }
      },
      {
        "role": "assistant",
        "content": "Please provide the flight time before the change"
      },
      {
        "role": "user",
        "content": "The original flight time was 5pm."
      },
      {
        "role": "function call",
        "content": {
          "name": "Navigation.FlightTickets.modifyFlightBooking",
          "arguments": {
            "alter_time": "15:00",
            "departure": "Shenzhen",
            "destination": "Chengdu",
            "name": "Li Si",
            "time": "5pm"
          }
        }
      }
    ],
    "multiple_tools": [
      {
        "name": "Navigation.FlightTickets.modifyFlightBooking",
        "description": "Changing the departure time of a booked flight is not supported for departure and destination changes",
        "parameters": {
          "type": "object",
          "properties": {
            "departure": {
              "type": "string",
              "description": "Origination"
            },
            "destination": {
              "type": "string",
              "description": "Reach ground"
            },
            "name": {
              "type": "string",
              "description": "Name of person who booked"
            },
            "time": {
              "type": "string",
              "description": "Flight duration before modification"
            },
            "alter_time": {
              "type": "string",
              "description": "Revised flight time"
            },
            "alter_seat": {
              "type": "string",
              "description": "Class Selection"
            }
          },
          "required": [
            "departure",
            "destination",
            "name",
            "time",
            "alter_time",
            "alter_seat"
          ]
        }
      },
      {
        "name": "Finance.Payment.refundPay",
        "description": "Initiate refund action for payment",
        "parameters": {
          "type": "object",
          "properties": {
            "pay_date": {
              "type": "string",
              "description": "Date pay"
            },
            "amount": {
              "type": "float",
              "description": "Amount Transferred"
            },
            "reason": {
              "type": "string",
              "description": "Refund reason:"
            }
          },
          "required": [
            "pay_date",
            "amount",
            "reason"
          ]
        }
      },
      {
        "name": "OnlineShopping.ExpressDelivery.returnExpressPreOrder",
        "description": "Specify a time to initiate the shipment to the courier",
        "parameters": {
          "type": "object",
          "properties": {
            "date": {
              "type": "string",
              "description": "Shipping time"
            },
            "recipient_address": {
              "type": "string",
              "description": "<g id=\"Bold\">Receiver's</g> <g id=\"Bold\">Address:</g>"
            }
          },
          "required": [
            "date",
            "recipient_address"
          ]
        }
      },
      {
        "name": "SystemTools.SystemSettings.resetMobilePhone",
        "description": "Restore phone factory settings",
        "parameters": {
          "type": "object",
          "properties": {},
          "required": []
        }
      },
      {
        "name": "UtilityTools.AlarmClock.resetStopwatch",
        "description": "Reset current stopwatch",
        "parameters": {
          "type": "object",
          "properties": {},
          "required": []
        }
      }
    ],
    "single_tool": [
      {
        "name": "Navigation.FlightTickets.modifyFlightBooking",
        "description": "Changing the departure time of a booked flight is not supported for departure and destination changes",
        "parameters": {
          "type": "object",
          "properties": {
            "departure": {
              "type": "string",
              "description": "Origination"
            },
            "destination": {
              "type": "string",
              "description": "Reach ground"
            },
            "name": {
              "type": "string",
              "description": "Name of person who booked"
            },
            "time": {
              "type": "string",
              "description": "Flight duration before modification"
            },
            "alter_time": {
              "type": "string",
              "description": "Revised flight time"
            },
            "alter_seat": {
              "type": "string",
              "description": "Class Selection"
            }
          },
          "required": [
            "departure",
            "destination",
            "name",
            "time",
            "alter_time",
            "alter_seat"
          ]
        }
      }
    ],
    "id": 909
  },
  {
    "messages": [
      {
        "role": "user",
        "content": "Please help me adjust the departure time of the flight to Shenzhen to 8pm"
      },
      {
        "role": "function call",
        "content": {
          "name": "Navigation.FlightTickets.modifyFlightBooking",
          "arguments": {
            "alter_time": "8pm",
            "departure": "Shenzhen"
          }
        }
      },
      {
        "role": "assistant",
        "content": "What's the destination"
      },
      {
        "role": "user",
        "content": "The destination is the Bund in Shanghai."
      },
      {
        "role": "function call",
        "content": {
          "name": "Navigation.FlightTickets.modifyFlightBooking",
          "arguments": {
            "alter_time": "8pm",
            "departure": "Shenzhen",
            "destination": "Shanghai"
          }
        }
      },
      {
        "role": "assistant",
        "content": "What's the name of the person who booked the reservation"
      },
      {
        "role": "user",
        "content": "The name of the booker is Zhang San."
      },
      {
        "role": "function call",
        "content": {
          "name": "Navigation.FlightTickets.modifyFlightBooking",
          "arguments": {
            "alter_time": "8pm",
            "departure": "Shenzhen",
            "destination": "Shanghai",
            "name": "Zhang San"
          }
        }
      },
      {
        "role": "assistant",
        "content": "What was your original flight time?"
      },
      {
        "role": "user",
        "content": "It was wrong before. Name of person who booked should be Li Si"
      },
      {
        "role": "function call",
        "content": {
          "name": "Navigation.FlightTickets.modifyFlightBooking",
          "arguments": {
            "alter_time": "8pm",
            "departure": "Shenzhen",
            "destination": "Shanghai",
            "name": "Li Si"
          }
        }
      },
      {
        "role": "assistant",
        "content": "What was your original flight time?"
      },
      {
        "role": "user",
        "content": "My flight was originally scheduled for 10am but was rescheduled."
      },
      {
        "role": "function call",
        "content": {
          "name": "Navigation.FlightTickets.modifyFlightBooking",
          "arguments": {
            "alter_time": "8pm",
            "departure": "Shenzhen",
            "destination": "Shanghai",
            "name": "Li Si",
            "time": "10am"
          }
        }
      }
    ],
    "multiple_tools": [
      {
        "name": "Navigation.FlightTickets.modifyFlightBooking",
        "description": "Changing the departure time of a booked flight is not supported for departure and destination changes",
        "parameters": {
          "type": "object",
          "properties": {
            "departure": {
              "type": "string",
              "description": "Origination"
            },
            "destination": {
              "type": "string",
              "description": "Reach ground"
            },
            "name": {
              "type": "string",
              "description": "Name of person who booked"
            },
            "time": {
              "type": "string",
              "description": "Flight duration before modification"
            },
            "alter_time": {
              "type": "string",
              "description": "Revised flight time"
            },
            "alter_seat": {
              "type": "string",
              "description": "Class Selection"
            }
          },
          "required": [
            "departure",
            "destination",
            "name",
            "time",
            "alter_time",
            "alter_seat"
          ]
        }
      },
      {
        "name": "ConvenientLiving.GovernmentServices.applyForResidentPermit",
        "description": "Provide a residence permit application service for the user",
        "parameters": {
          "type": "object",
          "properties": {
            "identity_card_number": {
              "type": "string",
              "description": "User ID number, default user himself"
            },
            "address": {
              "type": "string",
              "description": "Residential Address"
            }
          },
          "required": [
            "identity_card_number",
            "address"
          ]
        }
      },
      {
        "name": "Navigation.FlightTickets.bookFlightTicket",
        "description": "To book a flight, you need to give the departure location, destination, departure time, etc.",
        "parameters": {
          "type": "object",
          "properties": {
            "flight_number": {
              "type": "string",
              "description": "e.g. CA1234"
            },
            "departure": {
              "type": "string",
              "description": "Origination"
            },
            "destination": {
              "type": "string",
              "description": "Reach ground"
            },
            "name": {
              "type": "string",
              "description": "Name of person who booked"
            },
            "time": {
              "type": "string",
              "description": "Trip start time"
            },
            "passenger_id": {
              "type": "string",
              "description": "Rider ID number"
            }
          },
          "required": [
            "flight_number",
            "departure",
            "destination",
            "name",
            "time",
            "passenger_id"
          ]
        }
      },
      {
        "name": "Finance.Funds.recommendFunds",
        "description": "Recommend user-friendly funds based on investment objectives and duration",
        "parameters": {
          "type": "object",
          "properties": {
            "objective": {
              "type": "string",
              "description": "Investment objectives such as robust, aggressive"
            },
            "investment_term": {
              "type": "string",
              "description": "Investment term, e.g. short term, long term"
            }
          },
          "required": [
            "objective",
            "investment_term"
          ]
        }
      },
      {
        "name": "Finance.Funds.updateFundRedeemAmount",
        "description": "Update Redemption Amount for Designated Funds",
        "parameters": {
          "type": "object",
          "properties": {
            "fund_name": {
              "type": "string",
              "description": "Fund name"
            },
            "fund_code": {
              "type": "string",
              "description": "Fund  Code"
            },
            "new_amount": {
              "type": "float",
              "description": "Updated redemption amount, unit (yuan)"
            },
            "delta_amount": {
              "type": "float",
              "description": "Increase or decrease in redemption amount, unit (yuan)"
            }
          },
          "required": [
            "fund_name",
            "fund_code",
            "new_amount",
            "delta_amount"
          ]
        }
      }
    ],
    "single_tool": [
      {
        "name": "Navigation.FlightTickets.modifyFlightBooking",
        "description": "Changing the departure time of a booked flight is not supported for departure and destination changes",
        "parameters": {
          "type": "object",
          "properties": {
            "departure": {
              "type": "string",
              "description": "Origination"
            },
            "destination": {
              "type": "string",
              "description": "Reach ground"
            },
            "name": {
              "type": "string",
              "description": "Name of person who booked"
            },
            "time": {
              "type": "string",
              "description": "Flight duration before modification"
            },
            "alter_time": {
              "type": "string",
              "description": "Revised flight time"
            },
            "alter_seat": {
              "type": "string",
              "description": "Class Selection"
            }
          },
          "required": [
            "departure",
            "destination",
            "name",
            "time",
            "alter_time",
            "alter_seat"
          ]
        }
      }
    ],
    "id": 910
  },
  {
    "messages": [
      {
        "role": "user",
        "content": "Find out how many train tickets are left from Beijing on May 1, 2023"
      },
      {
        "role": "function call",
        "content": {
          "name": "Navigation.TrainTickets.queryTrainTicket",
          "arguments": {
            "ride_date": "01/May/2023",
            "departure_station": "Beijing"
          }
        }
      },
      {
        "role": "assistant",
        "content": "Where is your arrival station?"
      },
      {
        "role": "user",
        "content": "My arrival station is Lanzhou West."
      },
      {
        "role": "function call",
        "content": {
          "name": "Navigation.TrainTickets.queryTrainTicket",
          "arguments": {
            "ride_date": "01/May/2023",
            "departure_station": "Beijing",
            "destination_station": "Lanzhou West Railway Station"
          }
        }
      },
      {
        "role": "assistant",
        "content": "Please provide the type of seat you need"
      },
      {
        "role": "user",
        "content": "It was wrong before. Date of trip should be April 10"
      },
      {
        "role": "function call",
        "content": {
          "name": "Navigation.TrainTickets.queryTrainTicket",
          "arguments": {
            "ride_date": "April 10",
            "departure_station": "Beijing",
            "destination_station": "Lanzhou West Railway Station"
          }
        }
      },
      {
        "role": "assistant",
        "content": "Please provide the type of seat you need"
      },
      {
        "role": "user",
        "content": "I need a soft bed."
      },
      {
        "role": "function call",
        "content": {
          "name": "Navigation.TrainTickets.queryTrainTicket",
          "arguments": {
            "ride_date": "April 10",
            "departure_station": "Beijing",
            "destination_station": "Lanzhou West Railway Station",
            "seat_type": "Softbed"
          }
        }
      }
    ],
    "multiple_tools": [
      {
        "name": "Navigation.FlightTickets.searchFlight",
        "description": "Find tickets for specific dates",
        "parameters": {
          "type": "object",
          "properties": {
            "date": {
              "type": "string",
              "description": "Trip start time"
            },
            "departure": {
              "type": "string",
              "description": "Origination"
            },
            "destination": {
              "type": "string",
              "description": "Reach ground"
            },
            "type": {
              "type": "string",
              "description": "One-way, round-trip, multi-trip"
            },
            "site_type": {
              "type": "string",
              "description": "Economy, Business"
            }
          },
          "required": [
            "date",
            "departure",
            "destination",
            "type",
            "site_type"
          ]
        }
      },
      {
        "name": "Navigation.TrainTickets.queryTrainTicket",
        "description": "Check the status of the remaining train tickets for the specified date, departure place, and destination",
        "parameters": {
          "type": "object",
          "properties": {
            "ride_date": {
              "type": "string",
              "description": "Date of trip"
            },
            "departure_station": {
              "type": "string",
              "description": "Departure Station"
            },
            "destination_station": {
              "type": "string",
              "description": "arrival station"
            },
            "train_type": {
              "type": "string",
              "description": "Train type, optional types are high-speed rail, motor vehicles, general express, express, etc."
            },
            "seat_type": {
              "type": "string",
              "description": "Seat Type"
            }
          },
          "required": [
            "ride_date",
            "departure_station",
            "destination_station",
            "train_type",
            "seat_type"
          ]
        }
      },
      {
        "name": "UtilityTools.Memo.searchNotes",
        "description": "Search memos by keyword (see all by default)",
        "parameters": {
          "type": "object",
          "properties": {
            "key_words": {
              "type": "string",
              "description": "KEYWORDS"
            }
          },
          "required": [
            "key_words"
          ]
        }
      },
      {
        "name": "Navigation.TrainTickets.searchWaitlistTrain",
        "description": "Search for alternate train numbers based on the criteria entered by the user",
        "parameters": {
          "type": "object",
          "properties": {
            "ride_date": {
              "type": "string",
              "description": "Date of trip"
            },
            "departure_station": {
              "type": "string",
              "description": "Departure Station"
            },
            "destination_station": {
              "type": "string",
              "description": "arrival station"
            }
          },
          "required": [
            "ride_date",
            "departure_station",
            "destination_station"
          ]
        }
      },
      {
        "name": "OnlineShopping.SecondhandTrading.searchSecondhandSaleOrders",
        "description": "Search for item orders by keyword, and query all current status orders directly by default",
        "parameters": {
          "type": "object",
          "properties": {
            "goods_order": {
              "type": "string",
              "description": "Product name keywords"
            }
          },
          "required": [
            "goods_order"
          ]
        }
      }
    ],
    "single_tool": [
      {
        "name": "Navigation.TrainTickets.queryTrainTicket",
        "description": "Check the status of the remaining train tickets for the specified date, departure place, and destination",
        "parameters": {
          "type": "object",
          "properties": {
            "ride_date": {
              "type": "string",
              "description": "Date of trip"
            },
            "departure_station": {
              "type": "string",
              "description": "Departure Station"
            },
            "destination_station": {
              "type": "string",
              "description": "arrival station"
            },
            "train_type": {
              "type": "string",
              "description": "Train type, optional types are high-speed rail, motor vehicles, general express, express, etc."
            },
            "seat_type": {
              "type": "string",
              "description": "Seat Type"
            }
          },
          "required": [
            "ride_date",
            "departure_station",
            "destination_station",
            "train_type",
            "seat_type"
          ]
        }
      }
    ],
    "id": 911
  },
  {
    "messages": [
      {
        "role": "user",
        "content": "I would like to know if there are any remaining train tickets from Shanghai on May 15, 2023"
      },
      {
        "role": "function call",
        "content": {
          "name": "Navigation.TrainTickets.queryTrainTicket",
          "arguments": {
            "ride_date": "May 15, 2023.",
            "departure_station": "Shanghai"
          }
        }
      },
      {
        "role": "assistant",
        "content": "Where is your arrival station?"
      },
      {
        "role": "user",
        "content": "My arrival station is Changsha South."
      },
      {
        "role": "function call",
        "content": {
          "name": "Navigation.TrainTickets.queryTrainTicket",
          "arguments": {
            "ride_date": "May 15, 2023.",
            "departure_station": "Shanghai",
            "destination_station": "Changsha South"
          }
        }
      },
      {
        "role": "assistant",
        "content": "Please provide the type of seat you need"
      },
      {
        "role": "user",
        "content": "It was wrong before. Date of trip should be 01/May/2023"
      },
      {
        "role": "function call",
        "content": {
          "name": "Navigation.TrainTickets.queryTrainTicket",
          "arguments": {
            "ride_date": "01/May/2023",
            "departure_station": "Shanghai",
            "destination_station": "Changsha South"
          }
        }
      },
      {
        "role": "assistant",
        "content": "Please provide the type of seat you need"
      },
      {
        "role": "user",
        "content": "I need a second class seat, thank you."
      },
      {
        "role": "function call",
        "content": {
          "name": "Navigation.TrainTickets.queryTrainTicket",
          "arguments": {
            "ride_date": "01/May/2023",
            "departure_station": "Shanghai",
            "destination_station": "Changsha South",
            "seat_type": "Second class"
          }
        }
      }
    ],
    "multiple_tools": [
      {
        "name": "Navigation.TrainTickets.searchWaitlistTrain",
        "description": "Search for alternate train numbers based on the criteria entered by the user",
        "parameters": {
          "type": "object",
          "properties": {
            "ride_date": {
              "type": "string",
              "description": "Date of trip"
            },
            "departure_station": {
              "type": "string",
              "description": "Departure Station"
            },
            "destination_station": {
              "type": "string",
              "description": "arrival station"
            }
          },
          "required": [
            "ride_date",
            "departure_station",
            "destination_station"
          ]
        }
      },
      {
        "name": "Navigation.TrainTickets.queryPassengerTrainOrder",
        "description": "Check the passenger's train ticket reservation information",
        "parameters": {
          "type": "object",
          "properties": {
            "passenger_id": {
              "type": "string",
              "description": "Rider ID number"
            },
            "name": {
              "type": "string",
              "description": "Name of person to query"
            },
            "time": {
              "type": "string",
              "description": "Release Date"
            }
          },
          "required": [
            "passenger_id",
            "name",
            "time"
          ]
        }
      },
      {
        "name": "ConvenientLiving.BuyingRentingHomes.searchRentingHouses",
        "description": "Search for rentals by criteria",
        "parameters": {
          "type": "object",
          "properties": {
            "price": {
              "type": "string",
              "description": "Rents"
            },
            "house_area": {
              "type": "string",
              "description": "Area"
            },
            "level": {
              "type": "string",
              "description": "Floor"
            },
            "age": {
              "type": "integer",
              "description": "fixed number of years"
            },
            "house_type": {
              "type": "string",
              "description": "Layout"
            },
            "housing_estate": {
              "type": "string",
              "description": "Community"
            },
            "location": {
              "type": "string",
              "description": "Position"
            },
            "indoor_decoration": {
              "type": "string",
              "description": "decorate"
            },
            "furniture": {
              "type": "string",
              "description": "Furniture"
            }
          },
          "required": [
            "price",
            "house_area",
            "level",
            "age",
            "house_type",
            "housing_estate",
            "location",
            "indoor_decoration",
            "furniture"
          ]
        }
      },
      {
        "name": "Navigation.TrainTickets.queryTrainTicket",
        "description": "Check the status of the remaining train tickets for the specified date, departure place, and destination",
        "parameters": {
          "type": "object",
          "properties": {
            "ride_date": {
              "type": "string",
              "description": "Date of trip"
            },
            "departure_station": {
              "type": "string",
              "description": "Departure Station"
            },
            "destination_station": {
              "type": "string",
              "description": "arrival station"
            },
            "train_type": {
              "type": "string",
              "description": "Train type, optional types are high-speed rail, motor vehicles, general express, express, etc."
            },
            "seat_type": {
              "type": "string",
              "description": "Seat Type"
            }
          },
          "required": [
            "ride_date",
            "departure_station",
            "destination_station",
            "train_type",
            "seat_type"
          ]
        }
      },
      {
        "name": "Navigation.FlightTickets.searchFlight",
        "description": "Find tickets for specific dates",
        "parameters": {
          "type": "object",
          "properties": {
            "date": {
              "type": "string",
              "description": "Trip start time"
            },
            "departure": {
              "type": "string",
              "description": "Origination"
            },
            "destination": {
              "type": "string",
              "description": "Reach ground"
            },
            "type": {
              "type": "string",
              "description": "One-way, round-trip, multi-trip"
            },
            "site_type": {
              "type": "string",
              "description": "Economy, Business"
            }
          },
          "required": [
            "date",
            "departure",
            "destination",
            "type",
            "site_type"
          ]
        }
      }
    ],
    "single_tool": [
      {
        "name": "Navigation.TrainTickets.queryTrainTicket",
        "description": "Check the status of the remaining train tickets for the specified date, departure place, and destination",
        "parameters": {
          "type": "object",
          "properties": {
            "ride_date": {
              "type": "string",
              "description": "Date of trip"
            },
            "departure_station": {
              "type": "string",
              "description": "Departure Station"
            },
            "destination_station": {
              "type": "string",
              "description": "arrival station"
            },
            "train_type": {
              "type": "string",
              "description": "Train type, optional types are high-speed rail, motor vehicles, general express, express, etc."
            },
            "seat_type": {
              "type": "string",
              "description": "Seat Type"
            }
          },
          "required": [
            "ride_date",
            "departure_station",
            "destination_station",
            "train_type",
            "seat_type"
          ]
        }
      }
    ],
    "id": 912
  },
  {
    "messages": [
      {
        "role": "user",
        "content": "Book me a train ticket from Beijing next Monday"
      },
      {
        "role": "function call",
        "content": {
          "name": "Navigation.TrainTickets.bookTrainTicket",
          "arguments": {
            "ride_date": "Next Monday",
            "departure_station": "Beijing"
          }
        }
      },
      {
        "role": "assistant",
        "content": "Where is your arrival station?"
      },
      {
        "role": "user",
        "content": "My arrival station is Nanjing South."
      },
      {
        "role": "function call",
        "content": {
          "name": "Navigation.TrainTickets.bookTrainTicket",
          "arguments": {
            "ride_date": "Next Monday",
            "departure_station": "Beijing",
            "destination_station": "Nanjing South Railway Station"
          }
        }
      },
      {
        "role": "assistant",
        "content": "Provide the rider's ID number"
      },
      {
        "role": "user",
        "content": "It was wrong before. Departure Station should be Shanghai"
      },
      {
        "role": "function call",
        "content": {
          "name": "Navigation.TrainTickets.bookTrainTicket",
          "arguments": {
            "ride_date": "Next Monday",
            "departure_station": "Shanghai",
            "destination_station": "Nanjing South Railway Station"
          }
        }
      },
      {
        "role": "assistant",
        "content": "Provide the rider's ID number"
      },
      {
        "role": "user",
        "content": "345678901234567890"
      },
      {
        "role": "function call",
        "content": {
          "name": "Navigation.TrainTickets.bookTrainTicket",
          "arguments": {
            "ride_date": "Next Monday",
            "departure_station": "Shanghai",
            "destination_station": "Nanjing South Railway Station",
            "passenger_id": "345678901234567890"
          }
        }
      },
      {
        "role": "assistant",
        "content": "What's the rider's name"
      },
      {
        "role": "user",
        "content": "The passenger's name was Wang Wu."
      },
      {
        "role": "function call",
        "content": {
          "name": "Navigation.TrainTickets.bookTrainTicket",
          "arguments": {
            "ride_date": "Next Monday",
            "departure_station": "Shanghai",
            "destination_station": "Nanjing South Railway Station",
            "passenger_id": "345678901234567890",
            "passenger_name": "Wangwu"
          }
        }
      },
      {
        "role": "assistant",
        "content": "What type of seat would you like to book"
      },
      {
        "role": "user",
        "content": "I would like to reserve a first class seat."
      },
      {
        "role": "function call",
        "content": {
          "name": "Navigation.TrainTickets.bookTrainTicket",
          "arguments": {
            "ride_date": "Next Monday",
            "departure_station": "Shanghai",
            "destination_station": "Nanjing South Railway Station",
            "passenger_id": "345678901234567890",
            "passenger_name": "Wangwu",
            "seat_type": "First class seat"
          }
        }
      }
    ],
    "multiple_tools": [
      {
        "name": "OnlineShopping.ExpressDelivery.signForOrderExpress",
        "description": "Sign and receive courier orders according to the designated courier number",
        "parameters": {
          "type": "object",
          "properties": {
            "date": {
              "type": "string",
              "description": "Express date"
            },
            "express_id": {
              "type": "string",
              "description": "Tracking Number"
            }
          },
          "required": [
            "date",
            "express_id"
          ]
        }
      },
      {
        "name": "Navigation.TrainTickets.addTrainWaitlistOrder",
        "description": "User submits train ticket standby order",
        "parameters": {
          "type": "object",
          "properties": {
            "train_number": {
              "type": "string",
              "description": "Number of trips to book; select all by default, up to 6"
            },
            "passenger_name": {
              "type": "string",
              "description": "Rider's name"
            },
            "passenger_id": {
              "type": "string",
              "description": "Rider ID number"
            },
            "ride_date": {
              "type": "string",
              "description": "Trip date in YYYY-MM-DD format"
            },
            "departure_station": {
              "type": "string",
              "description": "Departure Station"
            },
            "destination_station": {
              "type": "string",
              "description": "arrival station"
            },
            "seat_type": {
              "type": "string",
              "description": "Seat Type"
            }
          },
          "required": [
            "train_number",
            "passenger_name",
            "passenger_id",
            "ride_date",
            "departure_station",
            "destination_station",
            "seat_type"
          ]
        }
      },
      {
        "name": "ConvenientLiving.GovernmentServices.applyForEducationGrant",
        "description": "Submit an application for an education grant",
        "parameters": {
          "type": "object",
          "properties": {
            "name": {
              "type": "string",
              "description": "Applicant, default user self"
            },
            "school": {
              "type": "string",
              "description": "Schools"
            }
          },
          "required": [
            "name",
            "school"
          ]
        }
      },
      {
        "name": "Navigation.TrainTickets.bookTrainTicket",
        "description": "Book a train ticket for a specific time, origin, or destination for a specific rider",
        "parameters": {
          "type": "object",
          "properties": {
            "ride_date": {
              "type": "string",
              "description": "Date of trip"
            },
            "departure_station": {
              "type": "string",
              "description": "Departure Station"
            },
            "destination_station": {
              "type": "string",
              "description": "arrival station"
            },
            "train_type": {
              "type": "string",
              "description": "Train type, optional types are high-speed rail, motor vehicles, general express, express, etc."
            },
            "seat_type": {
              "type": "string",
              "description": "Seat Type"
            },
            "passenger_name": {
              "type": "string",
              "description": "Rider's name"
            },
            "passenger_id": {
              "type": "string",
              "description": "Rider ID number"
            }
          },
          "required": [
            "ride_date",
            "departure_station",
            "destination_station",
            "train_type",
            "seat_type",
            "passenger_name",
            "passenger_id"
          ]
        }
      },
      {
        "name": "VideoPlayback.OnlineVideos.coinOnlinevideo",
        "description": "Coin a video",
        "parameters": {
          "type": "object",
          "properties": {
            "name": {
              "type": "string",
              "description": "Video Name"
            },
            "count": {
              "type": "integer",
              "description": "Number of coins, default 1 coin"
            }
          },
          "required": [
            "name",
            "count"
          ]
        }
      }
    ],
    "single_tool": [
      {
        "name": "Navigation.TrainTickets.bookTrainTicket",
        "description": "Book a train ticket for a specific time, origin, or destination for a specific rider",
        "parameters": {
          "type": "object",
          "properties": {
            "ride_date": {
              "type": "string",
              "description": "Date of trip"
            },
            "departure_station": {
              "type": "string",
              "description": "Departure Station"
            },
            "destination_station": {
              "type": "string",
              "description": "arrival station"
            },
            "train_type": {
              "type": "string",
              "description": "Train type, optional types are high-speed rail, motor vehicles, general express, express, etc."
            },
            "seat_type": {
              "type": "string",
              "description": "Seat Type"
            },
            "passenger_name": {
              "type": "string",
              "description": "Rider's name"
            },
            "passenger_id": {
              "type": "string",
              "description": "Rider ID number"
            }
          },
          "required": [
            "ride_date",
            "departure_station",
            "destination_station",
            "train_type",
            "seat_type",
            "passenger_name",
            "passenger_id"
          ]
        }
      }
    ],
    "id": 913
  },
  {
    "messages": [
      {
        "role": "user",
        "content": "Help me see the train tickets from Shanghai on April 5"
      },
      {
        "role": "function call",
        "content": {
          "name": "Navigation.TrainTickets.bookTrainTicket",
          "arguments": {
            "ride_date": "April 5",
            "departure_station": "Shanghai"
          }
        }
      },
      {
        "role": "assistant",
        "content": "Where is your arrival station?"
      },
      {
        "role": "user",
        "content": "My arrival station is Hangzhou East Station."
      },
      {
        "role": "function call",
        "content": {
          "name": "Navigation.TrainTickets.bookTrainTicket",
          "arguments": {
            "ride_date": "April 5",
            "departure_station": "Shanghai",
            "destination_station": "Hangzhou East Railway Station"
          }
        }
      },
      {
        "role": "assistant",
        "content": "Provide the rider's ID number"
      },
      {
        "role": "user",
        "content": "234567890123456789"
      },
      {
        "role": "function call",
        "content": {
          "name": "Navigation.TrainTickets.bookTrainTicket",
          "arguments": {
            "ride_date": "April 5",
            "departure_station": "Shanghai",
            "destination_station": "Hangzhou East Railway Station",
            "passenger_id": "234567890123456789"
          }
        }
      },
      {
        "role": "assistant",
        "content": "What's the rider's name"
      },
      {
        "role": "user",
        "content": "It was wrong before. Date of trip should be Next Friday"
      },
      {
        "role": "function call",
        "content": {
          "name": "Navigation.TrainTickets.bookTrainTicket",
          "arguments": {
            "ride_date": "Next Friday",
            "departure_station": "Shanghai",
            "destination_station": "Hangzhou East Railway Station",
            "passenger_id": "234567890123456789"
          }
        }
      },
      {
        "role": "assistant",
        "content": "What's the rider's name"
      },
      {
        "role": "user",
        "content": "The passenger's name was Li Si."
      },
      {
        "role": "function call",
        "content": {
          "name": "Navigation.TrainTickets.bookTrainTicket",
          "arguments": {
            "ride_date": "Next Friday",
            "departure_station": "Shanghai",
            "destination_station": "Hangzhou East Railway Station",
            "passenger_id": "234567890123456789",
            "passenger_name": "Li Si"
          }
        }
      },
      {
        "role": "assistant",
        "content": "What type of seat would you like to book"
      },
      {
        "role": "user",
        "content": "I would like to book a second class seat at a moderate and comfortable price."
      },
      {
        "role": "function call",
        "content": {
          "name": "Navigation.TrainTickets.bookTrainTicket",
          "arguments": {
            "ride_date": "Next Friday",
            "departure_station": "Shanghai",
            "destination_station": "Hangzhou East Railway Station",
            "passenger_id": "234567890123456789",
            "passenger_name": "Li Si",
            "seat_type": "Second class"
          }
        }
      }
    ],
    "multiple_tools": [
      {
        "name": "Navigation.TrainTickets.searchWaitlistTrain",
        "description": "Search for alternate train numbers based on the criteria entered by the user",
        "parameters": {
          "type": "object",
          "properties": {
            "ride_date": {
              "type": "string",
              "description": "Date of trip"
            },
            "departure_station": {
              "type": "string",
              "description": "Departure Station"
            },
            "destination_station": {
              "type": "string",
              "description": "arrival station"
            }
          },
          "required": [
            "ride_date",
            "departure_station",
            "destination_station"
          ]
        }
      },
      {
        "name": "Navigation.TrainTickets.queryPassengerTrainOrder",
        "description": "Check the passenger's train ticket reservation information",
        "parameters": {
          "type": "object",
          "properties": {
            "passenger_id": {
              "type": "string",
              "description": "Rider ID number"
            },
            "name": {
              "type": "string",
              "description": "Name of person to query"
            },
            "time": {
              "type": "string",
              "description": "Release Date"
            }
          },
          "required": [
            "passenger_id",
            "name",
            "time"
          ]
        }
      },
      {
        "name": "Navigation.TrainTickets.queryTrainTicket",
        "description": "Check the status of the remaining train tickets for the specified date, departure place, and destination",
        "parameters": {
          "type": "object",
          "properties": {
            "ride_date": {
              "type": "string",
              "description": "Date of trip"
            },
            "departure_station": {
              "type": "string",
              "description": "Departure Station"
            },
            "destination_station": {
              "type": "string",
              "description": "arrival station"
            },
            "train_type": {
              "type": "string",
              "description": "Train type, optional types are high-speed rail, motor vehicles, general express, express, etc."
            },
            "seat_type": {
              "type": "string",
              "description": "Seat Type"
            }
          },
          "required": [
            "ride_date",
            "departure_station",
            "destination_station",
            "train_type",
            "seat_type"
          ]
        }
      },
      {
        "name": "Navigation.TrainTickets.bookTrainTicket",
        "description": "Book a train ticket for a specific time, origin, or destination for a specific rider",
        "parameters": {
          "type": "object",
          "properties": {
            "ride_date": {
              "type": "string",
              "description": "Date of trip"
            },
            "departure_station": {
              "type": "string",
              "description": "Departure Station"
            },
            "destination_station": {
              "type": "string",
              "description": "arrival station"
            },
            "train_type": {
              "type": "string",
              "description": "Train type, optional types are high-speed rail, motor vehicles, general express, express, etc."
            },
            "seat_type": {
              "type": "string",
              "description": "Seat Type"
            },
            "passenger_name": {
              "type": "string",
              "description": "Rider's name"
            },
            "passenger_id": {
              "type": "string",
              "description": "Rider ID number"
            }
          },
          "required": [
            "ride_date",
            "departure_station",
            "destination_station",
            "train_type",
            "seat_type",
            "passenger_name",
            "passenger_id"
          ]
        }
      },
      {
        "name": "VideoPlayback.OnlineVideos.playOnlineVideo",
        "description": "Watch the video (when to start, watch from scratch by default)",
        "parameters": {
          "type": "object",
          "properties": {
            "video_name": {
              "type": "string",
              "description": "Video Name"
            },
            "start": {
              "type": "string",
              "description": "When to start, watch from scratch by default"
            },
            "full_screen": {
              "type": "boolean",
              "description": "Full Screen"
            },
            "playback_speed": {
              "type": "float",
              "description": "Playback Speed"
            },
            "danmaku": {
              "type": "boolean",
              "description": "enable bullet text"
            }
          },
          "required": [
            "video_name",
            "start",
            "full_screen",
            "playback_speed",
            "danmaku"
          ]
        }
      }
    ],
    "single_tool": [
      {
        "name": "Navigation.TrainTickets.bookTrainTicket",
        "description": "Book a train ticket for a specific time, origin, or destination for a specific rider",
        "parameters": {
          "type": "object",
          "properties": {
            "ride_date": {
              "type": "string",
              "description": "Date of trip"
            },
            "departure_station": {
              "type": "string",
              "description": "Departure Station"
            },
            "destination_station": {
              "type": "string",
              "description": "arrival station"
            },
            "train_type": {
              "type": "string",
              "description": "Train type, optional types are high-speed rail, motor vehicles, general express, express, etc."
            },
            "seat_type": {
              "type": "string",
              "description": "Seat Type"
            },
            "passenger_name": {
              "type": "string",
              "description": "Rider's name"
            },
            "passenger_id": {
              "type": "string",
              "description": "Rider ID number"
            }
          },
          "required": [
            "ride_date",
            "departure_station",
            "destination_station",
            "train_type",
            "seat_type",
            "passenger_name",
            "passenger_id"
          ]
        }
      }
    ],
    "id": 914
  },
  {
    "messages": [
      {
        "role": "user",
        "content": "Do me a favor and cancel Li Si's D5678 train ticket reservations"
      },
      {
        "role": "function call",
        "content": {
          "name": "Navigation.TrainTickets.cancelTrainTicket",
          "arguments": {
            "train_number": "D5678",
            "name": "Li Si"
          }
        }
      },
      {
        "role": "assistant",
        "content": "What is the date and time of the ticket"
      },
      {
        "role": "user",
        "content": "Tomorrow's ticket is at 3pm."
      },
      {
        "role": "function call",
        "content": {
          "name": "Navigation.TrainTickets.cancelTrainTicket",
          "arguments": {
            "train_number": "D5678",
            "name": "Li Si",
            "time": "Tomorrow at 3pm"
          }
        }
      },
      {
        "role": "assistant",
        "content": "Which station is the departure station"
      },
      {
        "role": "user",
        "content": "It was wrong before. To cancel a reservation for a certain time should be 10 September"
      },
      {
        "role": "function call",
        "content": {
          "name": "Navigation.TrainTickets.cancelTrainTicket",
          "arguments": {
            "train_number": "D5678",
            "name": "Li Si",
            "time": "10 September"
          }
        }
      },
      {
        "role": "assistant",
        "content": "Which station is the departure station"
      },
      {
        "role": "user",
        "content": "The departure station is Beijing Station"
      },
      {
        "role": "function call",
        "content": {
          "name": "Navigation.TrainTickets.cancelTrainTicket",
          "arguments": {
            "train_number": "D5678",
            "name": "Li Si",
            "time": "10 September",
            "departure_station": "Beijing"
          }
        }
      }
    ],
    "multiple_tools": [
      {
        "name": "Navigation.TaxiCarRental.cancelCarRentalOrder",
        "description": "Cancel the rental (all pending reservations are canceled by default)",
        "parameters": {
          "type": "object",
          "properties": {
            "time": {
              "type": "string",
              "description": "Release Date"
            }
          },
          "required": [
            "time"
          ]
        }
      },
      {
        "name": "Navigation.FlightTickets.cancelFlightBooking",
        "description": "Cancelling a flight for a specific reservation",
        "parameters": {
          "type": "object",
          "properties": {
            "departure": {
              "type": "string",
              "description": "Origination"
            },
            "destination": {
              "type": "string",
              "description": "Reach ground"
            },
            "name": {
              "type": "string",
              "description": "Name of person who booked"
            },
            "time": {
              "type": "string",
              "description": "Flight departure time"
            },
            "passenger_id": {
              "type": "string",
              "description": "Rider ID number"
            }
          },
          "required": [
            "departure",
            "destination",
            "name",
            "time",
            "passenger_id"
          ]
        }
      },
      {
        "name": "Travel.ScenicAreaServices.cancelScenicSpotBooking",
        "description": "Canceling a reservation at a designated attraction",
        "parameters": {
          "type": "object",
          "properties": {
            "name": {
              "type": "string",
              "description": "Name of the tourist area"
            },
            "booking_date": {
              "type": "string",
              "description": "Ordered Date"
            }
          },
          "required": [
            "name",
            "booking_date"
          ]
        }
      },
      {
        "name": "Navigation.TrainTickets.cancelTrainTicket",
        "description": "Cancelling a booked train ticket",
        "parameters": {
          "type": "object",
          "properties": {
            "train_number": {
              "type": "string",
              "description": "Wagon Number"
            },
            "name": {
              "type": "string",
              "description": "Rider's name"
            },
            "time": {
              "type": "string",
              "description": "To cancel a reservation for a certain time"
            },
            "departure_station": {
              "type": "string",
              "description": "Departure Station"
            },
            "destination_station": {
              "type": "string",
              "description": "arrival station"
            }
          },
          "required": [
            "train_number",
            "name",
            "time",
            "departure_station",
            "destination_station"
          ]
        }
      },
      {
        "name": "Travel.HotelServices.cancelHotelBooking",
        "description": "Cancel the specified hotel reservation",
        "parameters": {
          "type": "object",
          "properties": {
            "name": {
              "type": "string",
              "description": "Hotel Name"
            },
            "booking_date": {
              "type": "string",
              "description": "Ordered Date"
            },
            "room_type": {
              "type": "string",
              "description": "Room types"
            },
            "tenant_name": {
              "type": "string",
              "description": "Name of the guest staying"
            },
            "tenant_number": {
              "type": "string",
              "description": "Telephone number of the guest staying at the hotel"
            }
          },
          "required": [
            "name",
            "booking_date",
            "room_type",
            "tenant_name",
            "tenant_number"
          ]
        }
      }
    ],
    "single_tool": [
      {
        "name": "Navigation.TrainTickets.cancelTrainTicket",
        "description": "Cancelling a booked train ticket",
        "parameters": {
          "type": "object",
          "properties": {
            "train_number": {
              "type": "string",
              "description": "Wagon Number"
            },
            "name": {
              "type": "string",
              "description": "Rider's name"
            },
            "time": {
              "type": "string",
              "description": "To cancel a reservation for a certain time"
            },
            "departure_station": {
              "type": "string",
              "description": "Departure Station"
            },
            "destination_station": {
              "type": "string",
              "description": "arrival station"
            }
          },
          "required": [
            "train_number",
            "name",
            "time",
            "departure_station",
            "destination_station"
          ]
        }
      }
    ],
    "id": 916
  },
  {
    "messages": [
      {
        "role": "user",
        "content": "I want to check the status of the train ticket waiting order from Beijing to Shanghai"
      },
      {
        "role": "function call",
        "content": {
          "name": "Navigation.TrainTickets.queryTrainWaitlistStatus",
          "arguments": {
            "departure_station": "Beijing",
            "destination_station": "Shanghai"
          }
        }
      },
      {
        "role": "assistant",
        "content": "What's the date of the trip"
      },
      {
        "role": "user",
        "content": "I plan to travel on July 10th."
      },
      {
        "role": "function call",
        "content": {
          "name": "Navigation.TrainTickets.queryTrainWaitlistStatus",
          "arguments": {
            "departure_station": "Beijing",
            "destination_station": "Shanghai",
            "ride_date": "10 July."
          }
        }
      },
      {
        "role": "assistant",
        "content": "When to place your order"
      },
      {
        "role": "user",
        "content": "It was wrong before. arrival station should be Shenzhen"
      },
      {
        "role": "function call",
        "content": {
          "name": "Navigation.TrainTickets.queryTrainWaitlistStatus",
          "arguments": {
            "departure_station": "Beijing",
            "destination_station": "Shenzhen",
            "ride_date": "10 July."
          }
        }
      },
      {
        "role": "assistant",
        "content": "When to place your order"
      },
      {
        "role": "user",
        "content": "The order was placed on July 8th at 3pm."
      },
      {
        "role": "function call",
        "content": {
          "name": "Navigation.TrainTickets.queryTrainWaitlistStatus",
          "arguments": {
            "departure_station": "Beijing",
            "destination_station": "Shenzhen",
            "ride_date": "10 July.",
            "commit_date": "July 8th at 3pm"
          }
        }
      },
      {
        "role": "assistant",
        "content": "Provide the rider's ID number"
      },
      {
        "role": "user",
        "content": "The rider's ID number is 987654321098765432, do you need me to confirm it again?"
      },
      {
        "role": "function call",
        "content": {
          "name": "Navigation.TrainTickets.queryTrainWaitlistStatus",
          "arguments": {
            "departure_station": "Beijing",
            "destination_station": "Shenzhen",
            "ride_date": "10 July.",
            "commit_date": "8 July",
            "passenger_id": "987654321098765432"
          }
        }
      }
    ],
    "multiple_tools": [
      {
        "name": "Navigation.TrainTickets.queryTrainWaitlistStatus",
        "description": "Used to query the current status of train ticket standby orders submitted by users",
        "parameters": {
          "type": "object",
          "properties": {
            "ride_date": {
              "type": "string",
              "description": "Date of trip"
            },
            "commit_date": {
              "type": "string",
              "description": "Date/time the order was submitted"
            },
            "departure_station": {
              "type": "string",
              "description": "Departure Station"
            },
            "destination_station": {
              "type": "string",
              "description": "arrival station"
            },
            "passenger_id": {
              "type": "string",
              "description": "Rider ID number"
            },
            "name": {
              "type": "string",
              "description": "Name of person to query"
            }
          },
          "required": [
            "ride_date",
            "commit_date",
            "departure_station",
            "destination_station",
            "passenger_id",
            "name"
          ]
        }
      },
      {
        "name": "ConvenientLiving.JobRecruitment.checkJobApplicationStatus",
        "description": "View the status of job applications by position",
        "parameters": {
          "type": "object",
          "properties": {
            "job_name": {
              "type": "string",
              "description": "Position name"
            },
            "company_name": {
              "type": "string",
              "description": "Company name"
            }
          },
          "required": [
            "job_name",
            "company_name"
          ]
        }
      },
      {
        "name": "ConvenientLiving.GovernmentServices.readServiceRequestStatus",
        "description": "Check the status of city service requests submitted",
        "parameters": {
          "type": "object",
          "properties": {
            "request_name": {
              "type": "string",
              "description": "Service name"
            }
          },
          "required": [
            "request_name"
          ]
        }
      },
      {
        "name": "Travel.HotelServices.getHotelCheckInStatus",
        "description": "Check the check-in status of a specific hotel reservation",
        "parameters": {
          "type": "object",
          "properties": {
            "name": {
              "type": "string",
              "description": "Hotel Name"
            },
            "booking_date": {
              "type": "string",
              "description": "Ordered Date"
            }
          },
          "required": [
            "name",
            "booking_date"
          ]
        }
      },
      {
        "name": "ConvenientLiving.FoodDelivery.checkRestaurantOrderStatus",
        "description": "View order status based on order",
        "parameters": {
          "type": "object",
          "properties": {
            "order_name": {
              "type": "string",
              "description": "Contents of the order"
            }
          },
          "required": [
            "order_name"
          ]
        }
      }
    ],
    "single_tool": [
      {
        "name": "Navigation.TrainTickets.queryTrainWaitlistStatus",
        "description": "Used to query the current status of train ticket standby orders submitted by users",
        "parameters": {
          "type": "object",
          "properties": {
            "ride_date": {
              "type": "string",
              "description": "Date of trip"
            },
            "commit_date": {
              "type": "string",
              "description": "Date/time the order was submitted"
            },
            "departure_station": {
              "type": "string",
              "description": "Departure Station"
            },
            "destination_station": {
              "type": "string",
              "description": "arrival station"
            },
            "passenger_id": {
              "type": "string",
              "description": "Rider ID number"
            },
            "name": {
              "type": "string",
              "description": "Name of person to query"
            }
          },
          "required": [
            "ride_date",
            "commit_date",
            "departure_station",
            "destination_station",
            "passenger_id",
            "name"
          ]
        }
      }
    ],
    "id": 917
  },
  {
    "messages": [
      {
        "role": "user",
        "content": "Take a look at the train ticket standby from Guangzhou to Shenzhen"
      },
      {
        "role": "function call",
        "content": {
          "name": "Navigation.TrainTickets.queryTrainWaitlistStatus",
          "arguments": {
            "departure_station": "Guangzhou",
            "destination_station": "Shenzhen"
          }
        }
      },
      {
        "role": "assistant",
        "content": "What's the date of the trip"
      },
      {
        "role": "user",
        "content": "June 5th is the day I plan to travel."
      },
      {
        "role": "function call",
        "content": {
          "name": "Navigation.TrainTickets.queryTrainWaitlistStatus",
          "arguments": {
            "departure_station": "Guangzhou",
            "destination_station": "Shenzhen",
            "ride_date": "5 June"
          }
        }
      },
      {
        "role": "assistant",
        "content": "When to place your order"
      },
      {
        "role": "user",
        "content": "It was wrong before. arrival station should be Shanghai"
      },
      {
        "role": "function call",
        "content": {
          "name": "Navigation.TrainTickets.queryTrainWaitlistStatus",
          "arguments": {
            "departure_station": "Guangzhou",
            "destination_station": "Shanghai",
            "ride_date": "5 June"
          }
        }
      },
      {
        "role": "assistant",
        "content": "When to place your order"
      },
      {
        "role": "user",
        "content": "My order was placed at 14:30 on June 1st."
      },
      {
        "role": "function call",
        "content": {
          "name": "Navigation.TrainTickets.queryTrainWaitlistStatus",
          "arguments": {
            "departure_station": "Guangzhou",
            "destination_station": "Shanghai",
            "ride_date": "5 June",
            "commit_date": "June 1, 14:30"
          }
        }
      },
      {
        "role": "assistant",
        "content": "Provide the rider's ID number"
      },
      {
        "role": "user",
        "content": "123456789012345678"
      },
      {
        "role": "function call",
        "content": {
          "name": "Navigation.TrainTickets.queryTrainWaitlistStatus",
          "arguments": {
            "departure_station": "Guangzhou",
            "destination_station": "Shanghai",
            "ride_date": "5 June",
            "commit_date": "1 June",
            "passenger_id": "123456789012345678"
          }
        }
      }
    ],
    "multiple_tools": [
      {
        "name": "MusicRadio.RadioStations.radioListenRadio",
        "description": "Listen to stations by station name",
        "parameters": {
          "type": "object",
          "properties": {
            "name": {
              "type": "string",
              "description": "Radio Name"
            }
          },
          "required": [
            "name"
          ]
        }
      },
      {
        "name": "SystemTools.SystemSettings.setSystemTurnOnScreen2TV",
        "description": "Turn on phone projection to TV",
        "parameters": {
          "type": "object",
          "properties": {},
          "required": []
        }
      },
      {
        "name": "UtilityTools.Memo.viewUpcoming",
        "description": "View current to-do",
        "parameters": {
          "type": "object",
          "properties": {},
          "required": []
        }
      },
      {
        "name": "Navigation.TrainTickets.queryTrainWaitlistStatus",
        "description": "Used to query the current status of train ticket standby orders submitted by users",
        "parameters": {
          "type": "object",
          "properties": {
            "ride_date": {
              "type": "string",
              "description": "Date of trip"
            },
            "commit_date": {
              "type": "string",
              "description": "Date/time the order was submitted"
            },
            "departure_station": {
              "type": "string",
              "description": "Departure Station"
            },
            "destination_station": {
              "type": "string",
              "description": "arrival station"
            },
            "passenger_id": {
              "type": "string",
              "description": "Rider ID number"
            },
            "name": {
              "type": "string",
              "description": "Name of person to query"
            }
          },
          "required": [
            "ride_date",
            "commit_date",
            "departure_station",
            "destination_station",
            "passenger_id",
            "name"
          ]
        }
      },
      {
        "name": "SystemTools.SystemSettings.setSystemTurnOnFlashlight",
        "description": "Turn on flashlight",
        "parameters": {
          "type": "object",
          "properties": {},
          "required": []
        }
      }
    ],
    "single_tool": [
      {
        "name": "Navigation.TrainTickets.queryTrainWaitlistStatus",
        "description": "Used to query the current status of train ticket standby orders submitted by users",
        "parameters": {
          "type": "object",
          "properties": {
            "ride_date": {
              "type": "string",
              "description": "Date of trip"
            },
            "commit_date": {
              "type": "string",
              "description": "Date/time the order was submitted"
            },
            "departure_station": {
              "type": "string",
              "description": "Departure Station"
            },
            "destination_station": {
              "type": "string",
              "description": "arrival station"
            },
            "passenger_id": {
              "type": "string",
              "description": "Rider ID number"
            },
            "name": {
              "type": "string",
              "description": "Name of person to query"
            }
          },
          "required": [
            "ride_date",
            "commit_date",
            "departure_station",
            "destination_station",
            "passenger_id",
            "name"
          ]
        }
      }
    ],
    "id": 918
  },
  {
    "messages": [
      {
        "role": "user",
        "content": "I want to submit a train ticket waiting order for Zhang San, the ride date is May 1, 2023."
      },
      {
        "role": "function call",
        "content": {
          "name": "Navigation.TrainTickets.addTrainWaitlistOrder",
          "arguments": {
            "passenger_name": "Zhang San",
            "ride_date": "2023-05-01"
          }
        }
      },
      {
        "role": "assistant",
        "content": "Select up to 6 by default for the number of trips to be booked"
      },
      {
        "role": "user",
        "content": "D456"
      },
      {
        "role": "function call",
        "content": {
          "name": "Navigation.TrainTickets.addTrainWaitlistOrder",
          "arguments": {
            "passenger_name": "Zhang San",
            "ride_date": "2023-05-01",
            "train_number": "D456"
          }
        }
      },
      {
        "role": "assistant",
        "content": "What is the rider ID number"
      },
      {
        "role": "user",
        "content": "It was wrong before. Trip date in YYYY-MM-DD format should be 2023-08-15"
      },
      {
        "role": "function call",
        "content": {
          "name": "Navigation.TrainTickets.addTrainWaitlistOrder",
          "arguments": {
            "passenger_name": "Zhang San",
            "ride_date": "2023-08-15",
            "train_number": "D456"
          }
        }
      },
      {
        "role": "assistant",
        "content": "What is the rider ID number"
      },
      {
        "role": "user",
        "content": "My ID number is 987654321098765432, but please keep it safe."
      },
      {
        "role": "function call",
        "content": {
          "name": "Navigation.TrainTickets.addTrainWaitlistOrder",
          "arguments": {
            "passenger_name": "Zhang San",
            "ride_date": "2023-08-15",
            "train_number": "D456",
            "passenger_id": "987654321098765432"
          }
        }
      },
      {
        "role": "assistant",
        "content": "What is the departure station"
      },
      {
        "role": "user",
        "content": "The departure station is Guangzhou Station."
      },
      {
        "role": "function call",
        "content": {
          "name": "Navigation.TrainTickets.addTrainWaitlistOrder",
          "arguments": {
            "passenger_name": "Zhang San",
            "ride_date": "2023-08-15",
            "train_number": "D456",
            "passenger_id": "987654321098765432",
            "departure_station": "Guangzhou"
          }
        }
      },
      {
        "role": "assistant",
        "content": "Where is your arrival station?"
      },
      {
        "role": "user",
        "content": "My arrival station is Shenzhen."
      },
      {
        "role": "function call",
        "content": {
          "name": "Navigation.TrainTickets.addTrainWaitlistOrder",
          "arguments": {
            "passenger_name": "Zhang San",
            "ride_date": "2023-08-15",
            "train_number": "D456",
            "passenger_id": "987654321098765432",
            "departure_station": "Guangzhou",
            "destination_station": "Shenzhen"
          }
        }
      }
    ],
    "multiple_tools": [
      {
        "name": "ConvenientLiving.GovernmentServices.applyForVisa",
        "description": "Submit Visa Application",
        "parameters": {
          "type": "object",
          "properties": {
            "passport_number": {
              "type": "string",
              "description": "Pasaport No."
            }
          },
          "required": [
            "passport_number"
          ]
        }
      },
      {
        "name": "Navigation.TrainTickets.addTrainWaitlistOrder",
        "description": "User submits train ticket standby order",
        "parameters": {
          "type": "object",
          "properties": {
            "train_number": {
              "type": "string",
              "description": "Number of trips to book; select all by default, up to 6"
            },
            "passenger_name": {
              "type": "string",
              "description": "Rider's name"
            },
            "passenger_id": {
              "type": "string",
              "description": "Rider ID number"
            },
            "ride_date": {
              "type": "string",
              "description": "Trip date in YYYY-MM-DD format"
            },
            "departure_station": {
              "type": "string",
              "description": "Departure Station"
            },
            "destination_station": {
              "type": "string",
              "description": "arrival station"
            },
            "seat_type": {
              "type": "string",
              "description": "Seat Type"
            }
          },
          "required": [
            "train_number",
            "passenger_name",
            "passenger_id",
            "ride_date",
            "departure_station",
            "destination_station",
            "seat_type"
          ]
        }
      },
      {
        "name": "Photography.PhotoEditing.addWatermarkToPicture",
        "description": "Add a watermark to your photo",
        "parameters": {
          "type": "object",
          "properties": {
            "name_or_path": {
              "type": "string",
              "description": "Photo name or path"
            },
            "text": {
              "type": "string",
              "description": "Watermark text content"
            }
          },
          "required": [
            "name_or_path",
            "text"
          ]
        }
      },
      {
        "name": "ConvenientLiving.JobRecruitment.collectJob",
        "description": "Favorite posts of interest",
        "parameters": {
          "type": "object",
          "properties": {
            "job_name": {
              "type": "string",
              "description": "Position name"
            },
            "company_name": {
              "type": "string",
              "description": "Company name"
            }
          },
          "required": [
            "job_name",
            "company_name"
          ]
        }
      },
      {
        "name": "Navigation.MapNavigation.addRemakeToCommonAddress",
        "description": "Add a note to your favorite address",
        "parameters": {
          "type": "object",
          "properties": {
            "address": {
              "type": "string",
              "description": "Primary address for note"
            },
            "remake": {
              "type": "string",
              "description": "Comment Message Content"
            }
          },
          "required": [
            "address",
            "remake"
          ]
        }
      }
    ],
    "single_tool": [
      {
        "name": "Navigation.TrainTickets.addTrainWaitlistOrder",
        "description": "User submits train ticket standby order",
        "parameters": {
          "type": "object",
          "properties": {
            "train_number": {
              "type": "string",
              "description": "Number of trips to book; select all by default, up to 6"
            },
            "passenger_name": {
              "type": "string",
              "description": "Rider's name"
            },
            "passenger_id": {
              "type": "string",
              "description": "Rider ID number"
            },
            "ride_date": {
              "type": "string",
              "description": "Trip date in YYYY-MM-DD format"
            },
            "departure_station": {
              "type": "string",
              "description": "Departure Station"
            },
            "destination_station": {
              "type": "string",
              "description": "arrival station"
            },
            "seat_type": {
              "type": "string",
              "description": "Seat Type"
            }
          },
          "required": [
            "train_number",
            "passenger_name",
            "passenger_id",
            "ride_date",
            "departure_station",
            "destination_station",
            "seat_type"
          ]
        }
      }
    ],
    "id": 919
  },
  {
    "messages": [
      {
        "role": "user",
        "content": "Please help me submit Li Si's train ticket alternate, the ride date is scheduled for April 30, 2023"
      },
      {
        "role": "function call",
        "content": {
          "name": "Navigation.TrainTickets.addTrainWaitlistOrder",
          "arguments": {
            "passenger_name": "Li Si",
            "ride_date": "April 30, 2023"
          }
        }
      },
      {
        "role": "assistant",
        "content": "The number of trips to book is selected by default Up to 6 Which number of trips do you want to select"
      },
      {
        "role": "user",
        "content": "I choose the G123 train."
      },
      {
        "role": "function call",
        "content": {
          "name": "Navigation.TrainTickets.addTrainWaitlistOrder",
          "arguments": {
            "passenger_name": "Li Si",
            "ride_date": "April 30, 2023",
            "train_number": "G123"
          }
        }
      },
      {
        "role": "assistant",
        "content": "What is the rider ID number"
      },
      {
        "role": "user",
        "content": "My ID number is 123456789012345678, do I need to reconfirm it?"
      },
      {
        "role": "function call",
        "content": {
          "name": "Navigation.TrainTickets.addTrainWaitlistOrder",
          "arguments": {
            "passenger_name": "Li Si",
            "ride_date": "April 30, 2023",
            "train_number": "G123",
            "passenger_id": "123456789012345678"
          }
        }
      },
      {
        "role": "assistant",
        "content": "What is the departure station"
      },
      {
        "role": "user",
        "content": "The departure station is Beijing station."
      },
      {
        "role": "function call",
        "content": {
          "name": "Navigation.TrainTickets.addTrainWaitlistOrder",
          "arguments": {
            "passenger_name": "Li Si",
            "ride_date": "April 30, 2023",
            "train_number": "G123",
            "passenger_id": "123456789012345678",
            "departure_station": "Beijing"
          }
        }
      },
      {
        "role": "assistant",
        "content": "Please provide arrival station"
      },
      {
        "role": "user",
        "content": "It was wrong before. Departure Station should be Guangzhou"
      },
      {
        "role": "function call",
        "content": {
          "name": "Navigation.TrainTickets.addTrainWaitlistOrder",
          "arguments": {
            "passenger_name": "Li Si",
            "ride_date": "April 30, 2023",
            "train_number": "G123",
            "passenger_id": "123456789012345678",
            "departure_station": "Guangzhou"
          }
        }
      },
      {
        "role": "assistant",
        "content": "Please provide arrival station"
      },
      {
        "role": "user",
        "content": "Shanghai"
      },
      {
        "role": "function call",
        "content": {
          "name": "Navigation.TrainTickets.addTrainWaitlistOrder",
          "arguments": {
            "passenger_name": "Li Si",
            "ride_date": "April 30, 2023",
            "train_number": "G123",
            "passenger_id": "123456789012345678",
            "departure_station": "Guangzhou",
            "destination_station": "Shanghai"
          }
        }
      }
    ],
    "multiple_tools": [
      {
        "name": "ConvenientLiving.GovernmentServices.applyForVisa",
        "description": "Submit Visa Application",
        "parameters": {
          "type": "object",
          "properties": {
            "passport_number": {
              "type": "string",
              "description": "Pasaport No."
            }
          },
          "required": [
            "passport_number"
          ]
        }
      },
      {
        "name": "NewsMagazines.NewspapersMagazines.collectMagazine",
        "description": "Collect magazines or articles by name or journal",
        "parameters": {
          "type": "object",
          "properties": {
            "name": {
              "type": "string",
              "description": "Magazine Name"
            },
            "issue": {
              "type": "string",
              "description": "Number of periods"
            }
          },
          "required": [
            "name",
            "issue"
          ]
        }
      },
      {
        "name": "SocialCommunication.SocialMedia.collectMediumTrends",
        "description": "Favorite specified activity in specified media",
        "parameters": {
          "type": "object",
          "properties": {
            "medium_name": {
              "type": "string",
              "description": "Media name"
            },
            "correlation": {
              "type": "string",
              "description": "Dynamic Related Content"
            },
            "publisher": {
              "type": "string",
              "description": "Posted by/publisher?"
            },
            "publish_time": {
              "type": "string",
              "description": "Release Date"
            }
          },
          "required": [
            "medium_name",
            "correlation",
            "publisher",
            "publish_time"
          ]
        }
      },
      {
        "name": "ConvenientLiving.JobRecruitment.collectJob",
        "description": "Favorite posts of interest",
        "parameters": {
          "type": "object",
          "properties": {
            "job_name": {
              "type": "string",
              "description": "Position name"
            },
            "company_name": {
              "type": "string",
              "description": "Company name"
            }
          },
          "required": [
            "job_name",
            "company_name"
          ]
        }
      },
      {
        "name": "Navigation.TrainTickets.addTrainWaitlistOrder",
        "description": "User submits train ticket standby order",
        "parameters": {
          "type": "object",
          "properties": {
            "train_number": {
              "type": "string",
              "description": "Number of trips to book; select all by default, up to 6"
            },
            "passenger_name": {
              "type": "string",
              "description": "Rider's name"
            },
            "passenger_id": {
              "type": "string",
              "description": "Rider ID number"
            },
            "ride_date": {
              "type": "string",
              "description": "Trip date in YYYY-MM-DD format"
            },
            "departure_station": {
              "type": "string",
              "description": "Departure Station"
            },
            "destination_station": {
              "type": "string",
              "description": "arrival station"
            },
            "seat_type": {
              "type": "string",
              "description": "Seat Type"
            }
          },
          "required": [
            "train_number",
            "passenger_name",
            "passenger_id",
            "ride_date",
            "departure_station",
            "destination_station",
            "seat_type"
          ]
        }
      }
    ],
    "single_tool": [
      {
        "name": "Navigation.TrainTickets.addTrainWaitlistOrder",
        "description": "User submits train ticket standby order",
        "parameters": {
          "type": "object",
          "properties": {
            "train_number": {
              "type": "string",
              "description": "Number of trips to book; select all by default, up to 6"
            },
            "passenger_name": {
              "type": "string",
              "description": "Rider's name"
            },
            "passenger_id": {
              "type": "string",
              "description": "Rider ID number"
            },
            "ride_date": {
              "type": "string",
              "description": "Trip date in YYYY-MM-DD format"
            },
            "departure_station": {
              "type": "string",
              "description": "Departure Station"
            },
            "destination_station": {
              "type": "string",
              "description": "arrival station"
            },
            "seat_type": {
              "type": "string",
              "description": "Seat Type"
            }
          },
          "required": [
            "train_number",
            "passenger_name",
            "passenger_id",
            "ride_date",
            "departure_station",
            "destination_station",
            "seat_type"
          ]
        }
      }
    ],
    "id": 920
  },
  {
    "messages": [
      {
        "role": "user",
        "content": "I need to generate a rental contract for room 201, building 3, Xingfu Neighborhood, with a monthly rent of 3500 yuan"
      },
      {
        "role": "function call",
        "content": {
          "name": "ConvenientLiving.BuyingRentingHomes.getLeaseAgreement",
          "arguments": {
            "house_name": "Room 201, Building 3, Xingfu Neighborhood",
            "price": 3500.0
          }
        }
      },
      {
        "role": "assistant",
        "content": "When does it end?"
      },
      {
        "role": "user",
        "content": "The end time is July 31, 2024. Please refer to the project schedule for the end time of the specific project phase."
      },
      {
        "role": "function call",
        "content": {
          "name": "ConvenientLiving.BuyingRentingHomes.getLeaseAgreement",
          "arguments": {
            "house_name": "Room 201, Building 3, Xingfu Neighborhood",
            "price": 3500.0,
            "end_time": "July 31, 2024"
          }
        }
      },
      {
        "role": "assistant",
        "content": "How much is the deposit"
      },
      {
        "role": "user",
        "content": "The deposit is 30,000 yuan."
      },
      {
        "role": "function call",
        "content": {
          "name": "ConvenientLiving.BuyingRentingHomes.getLeaseAgreement",
          "arguments": {
            "house_name": "Room 201, Building 3, Xingfu Neighborhood",
            "price": 3500.0,
            "end_time": "July 31, 2024",
            "guarantee_deposit": 30000
          }
        }
      },
      {
        "role": "assistant",
        "content": "Could you please provide the following host information?"
      },
      {
        "role": "user",
        "content": "The host is called Sun Quan"
      },
      {
        "role": "function call",
        "content": {
          "name": "ConvenientLiving.BuyingRentingHomes.getLeaseAgreement",
          "arguments": {
            "house_name": "Room 201, Building 3, Xingfu Neighborhood",
            "price": 3500.0,
            "end_time": "July 31, 2024",
            "guarantee_deposit": 30000,
            "landlord_info": "Lord Sun Quan"
          }
        }
      },
      {
        "role": "assistant",
        "content": "Provide the following tenant information"
      },
      {
        "role": "user",
        "content": "It was wrong before. Host info should be Politician Liu Bei"
      },
      {
        "role": "function call",
        "content": {
          "name": "ConvenientLiving.BuyingRentingHomes.getLeaseAgreement",
          "arguments": {
            "house_name": "Room 201, Building 3, Xingfu Neighborhood",
            "price": 3500.0,
            "end_time": "July 31, 2024",
            "guarantee_deposit": 30000,
            "landlord_info": "Politician Liu Bei"
          }
        }
      },
      {
        "role": "assistant",
        "content": "Provide the following tenant information"
      },
      {
        "role": "user",
        "content": "It was called Zhao Yun."
      },
      {
        "role": "function call",
        "content": {
          "name": "ConvenientLiving.BuyingRentingHomes.getLeaseAgreement",
          "arguments": {
            "house_name": "Room 201, Building 3, Xingfu Neighborhood",
            "price": 3500.0,
            "end_time": "July 31, 2024",
            "guarantee_deposit": 30000,
            "landlord_info": "Politician Liu Bei",
            "lessee_info": "Stalwart Zhao Yun"
          }
        }
      },
      {
        "role": "assistant",
        "content": "What is the rent collection date per month"
      },
      {
        "role": "user",
        "content": "The 1st of each month is the day when rent is collected."
      },
      {
        "role": "function call",
        "content": {
          "name": "ConvenientLiving.BuyingRentingHomes.getLeaseAgreement",
          "arguments": {
            "house_name": "Room 201, Building 3, Xingfu Neighborhood",
            "price": 3500.0,
            "end_time": "July 31, 2024",
            "guarantee_deposit": 30000,
            "landlord_info": "Politician Liu Bei",
            "lessee_info": "Stalwart Zhao Yun",
            "payment_date": 1.0
          }
        }
      }
    ],
    "multiple_tools": [
      {
        "name": "Navigation.TrainTickets.addTrainWaitlistOrder",
        "description": "User submits train ticket standby order",
        "parameters": {
          "type": "object",
          "properties": {
            "train_number": {
              "type": "string",
              "description": "Number of trips to book; select all by default, up to 6"
            },
            "passenger_name": {
              "type": "string",
              "description": "Rider's name"
            },
            "passenger_id": {
              "type": "string",
              "description": "Rider ID number"
            },
            "ride_date": {
              "type": "string",
              "description": "Trip date in YYYY-MM-DD format"
            },
            "departure_station": {
              "type": "string",
              "description": "Departure Station"
            },
            "destination_station": {
              "type": "string",
              "description": "arrival station"
            },
            "seat_type": {
              "type": "string",
              "description": "Seat Type"
            }
          },
          "required": [
            "train_number",
            "passenger_name",
            "passenger_id",
            "ride_date",
            "departure_station",
            "destination_station",
            "seat_type"
          ]
        }
      },
      {
        "name": "ConvenientLiving.BuyingRentingHomes.getLeaseAgreement",
        "description": "Generate rental contract template",
        "parameters": {
          "type": "object",
          "properties": {
            "house_name": {
              "type": "string",
              "description": "Property name"
            },
            "start_time": {
              "type": "float",
              "description": "Start Time "
            },
            "end_time": {
              "type": "float",
              "description": "End Time"
            },
            "price": {
              "type": "float",
              "description": "Monthly Rent"
            },
            "payment_date": {
              "type": "float",
              "description": "Monthly rent collection date"
            },
            "guarantee_deposit": {
              "type": "float",
              "description": "Deposit"
            },
            "lessee_info": {
              "type": "string",
              "description": "Tenant Information"
            },
            "landlord_info": {
              "type": "string",
              "description": "Host info"
            }
          },
          "required": [
            "house_name",
            "start_time",
            "end_time",
            "price",
            "payment_date",
            "guarantee_deposit",
            "lessee_info",
            "landlord_info"
          ]
        }
      },
      {
        "name": "VideoPlayback.OnlineVideos.coinOnlinevideo",
        "description": "Coin a video",
        "parameters": {
          "type": "object",
          "properties": {
            "name": {
              "type": "string",
              "description": "Video Name"
            },
            "count": {
              "type": "integer",
              "description": "Number of coins, default 1 coin"
            }
          },
          "required": [
            "name",
            "count"
          ]
        }
      },
      {
        "name": "Navigation.TrainTickets.bookTrainTicket",
        "description": "Book a train ticket for a specific time, origin, or destination for a specific rider",
        "parameters": {
          "type": "object",
          "properties": {
            "ride_date": {
              "type": "string",
              "description": "Date of trip"
            },
            "departure_station": {
              "type": "string",
              "description": "Departure Station"
            },
            "destination_station": {
              "type": "string",
              "description": "arrival station"
            },
            "train_type": {
              "type": "string",
              "description": "Train type, optional types are high-speed rail, motor vehicles, general express, express, etc."
            },
            "seat_type": {
              "type": "string",
              "description": "Seat Type"
            },
            "passenger_name": {
              "type": "string",
              "description": "Rider's name"
            },
            "passenger_id": {
              "type": "string",
              "description": "Rider ID number"
            }
          },
          "required": [
            "ride_date",
            "departure_station",
            "destination_station",
            "train_type",
            "seat_type",
            "passenger_name",
            "passenger_id"
          ]
        }
      },
      {
        "name": "Travel.ItineraryServices.createTravelItinerary",
        "description": "Create a personalized travel itinerary",
        "parameters": {
          "type": "object",
          "properties": {
            "destination": {
              "type": "string",
              "description": "destination"
            }
          },
          "required": [
            "destination"
          ]
        }
      }
    ],
    "single_tool": [
      {
        "name": "ConvenientLiving.BuyingRentingHomes.getLeaseAgreement",
        "description": "Generate rental contract template",
        "parameters": {
          "type": "object",
          "properties": {
            "house_name": {
              "type": "string",
              "description": "Property name"
            },
            "start_time": {
              "type": "float",
              "description": "Start Time "
            },
            "end_time": {
              "type": "float",
              "description": "End Time"
            },
            "price": {
              "type": "float",
              "description": "Monthly Rent"
            },
            "payment_date": {
              "type": "float",
              "description": "Monthly rent collection date"
            },
            "guarantee_deposit": {
              "type": "float",
              "description": "Deposit"
            },
            "lessee_info": {
              "type": "string",
              "description": "Tenant Information"
            },
            "landlord_info": {
              "type": "string",
              "description": "Host info"
            }
          },
          "required": [
            "house_name",
            "start_time",
            "end_time",
            "price",
            "payment_date",
            "guarantee_deposit",
            "lessee_info",
            "landlord_info"
          ]
        }
      }
    ],
    "id": 925
  },
  {
    "messages": [
      {
        "role": "user",
        "content": "Help me prepare a lease contract template for Sunshine Garden Building 15, the rent is 4500 yuan per month"
      },
      {
        "role": "function call",
        "content": {
          "name": "ConvenientLiving.BuyingRentingHomes.getLeaseAgreement",
          "arguments": {
            "house_name": "Building 15, Sunshine Garden",
            "price": 4500.0
          }
        }
      },
      {
        "role": "assistant",
        "content": "When does it end?"
      },
      {
        "role": "user",
        "content": "The end time is May 10, 2024."
      },
      {
        "role": "function call",
        "content": {
          "name": "ConvenientLiving.BuyingRentingHomes.getLeaseAgreement",
          "arguments": {
            "house_name": "Building 15, Sunshine Garden",
            "price": 4500.0,
            "end_time": "May-24"
          }
        }
      },
      {
        "role": "assistant",
        "content": "How much is the deposit"
      },
      {
        "role": "user",
        "content": "The deposit is 11,000 yuan."
      },
      {
        "role": "function call",
        "content": {
          "name": "ConvenientLiving.BuyingRentingHomes.getLeaseAgreement",
          "arguments": {
            "house_name": "Building 15, Sunshine Garden",
            "price": 4500.0,
            "end_time": "May-24",
            "guarantee_deposit": 11000
          }
        }
      },
      {
        "role": "assistant",
        "content": "Host name Host contact info Host address Host ID number"
      },
      {
        "role": "user",
        "content": "Liu Bei's host name is Zhang San, contact information is 13800138000, address is 188 Shuhan Road, Wuhou District, Chengdu, ID number is 510107198001011234."
      },
      {
        "role": "function call",
        "content": {
          "name": "ConvenientLiving.BuyingRentingHomes.getLeaseAgreement",
          "arguments": {
            "house_name": "Building 15, Sunshine Garden",
            "price": 4500.0,
            "end_time": "May-24",
            "guarantee_deposit": 11000,
            "landlord_info": "Politician Liu Bei"
          }
        }
      },
      {
        "role": "assistant",
        "content": "Tenant Name Contact Rental Start Time Rental Term Payment Method Rental Payment Cycle"
      },
      {
        "role": "user",
        "content": "Zhao Lei, 13800138000, 10/1/2023, 12 months, bank transfer, 1st of each month"
      },
      {
        "role": "function call",
        "content": {
          "name": "ConvenientLiving.BuyingRentingHomes.getLeaseAgreement",
          "arguments": {
            "house_name": "Building 15, Sunshine Garden",
            "price": 4500.0,
            "end_time": "May-24",
            "guarantee_deposit": 11000,
            "landlord_info": "Politician Liu Bei",
            "lessee_info": "Zhao Lei"
          }
        }
      },
      {
        "role": "assistant",
        "content": "What is the rent collection date per month"
      },
      {
        "role": "user",
        "content": "It was wrong before. Property name should be Sunny Gardens"
      },
      {
        "role": "function call",
        "content": {
          "name": "ConvenientLiving.BuyingRentingHomes.getLeaseAgreement",
          "arguments": {
            "house_name": "Sunny Gardens",
            "price": 4500.0,
            "end_time": "May-24",
            "guarantee_deposit": 11000,
            "landlord_info": "Politician Liu Bei",
            "lessee_info": "Zhao Lei"
          }
        }
      },
      {
        "role": "assistant",
        "content": "What is the rent collection date per month"
      },
      {
        "role": "user",
        "content": "The 5th of the month is the day when rent is collected."
      },
      {
        "role": "function call",
        "content": {
          "name": "ConvenientLiving.BuyingRentingHomes.getLeaseAgreement",
          "arguments": {
            "house_name": "Sunny Gardens",
            "price": 4500.0,
            "end_time": "May-24",
            "guarantee_deposit": 11000,
            "landlord_info": "Politician Liu Bei",
            "lessee_info": "Zhao Lei",
            "payment_date": 5.0
          }
        }
      }
    ],
    "multiple_tools": [
      {
        "name": "UtilityTools.AIGC.aigcText2Pictrue",
        "description": "Based on the text description entered, the corresponding image content is generated, and the text is converted into an image.",
        "parameters": {
          "type": "object",
          "properties": {
            "text": {
              "type": "string",
              "description": "literal content"
            }
          },
          "required": [
            "text"
          ]
        }
      },
      {
        "name": "SocialCommunication.InstantMessaging.createSystemMessageTemplate",
        "description": "Create a new system SMS template",
        "parameters": {
          "type": "object",
          "properties": {
            "template_name": {
              "type": "string",
              "description": "Name of the template to be created"
            },
            "templateContent": {
              "type": "string",
              "description": "Specific text content of the template"
            }
          },
          "required": [
            "template_name",
            "templateContent"
          ]
        }
      },
      {
        "name": "UtilityTools.AIGC.aigcPicture2Pictrue",
        "description": "Generate a new image based on the input image, and realize the conversion and creation of the image to the image.",
        "parameters": {
          "type": "object",
          "properties": {
            "file": {
              "type": "string",
              "description": "Enter the URL for your photo"
            }
          },
          "required": [
            "file"
          ]
        }
      },
      {
        "name": "ConvenientLiving.BuyingRentingHomes.getLeaseAgreement",
        "description": "Generate rental contract template",
        "parameters": {
          "type": "object",
          "properties": {
            "house_name": {
              "type": "string",
              "description": "Property name"
            },
            "start_time": {
              "type": "float",
              "description": "Start Time "
            },
            "end_time": {
              "type": "float",
              "description": "End Time"
            },
            "price": {
              "type": "float",
              "description": "Monthly Rent"
            },
            "payment_date": {
              "type": "float",
              "description": "Monthly rent collection date"
            },
            "guarantee_deposit": {
              "type": "float",
              "description": "Deposit"
            },
            "lessee_info": {
              "type": "string",
              "description": "Tenant Information"
            },
            "landlord_info": {
              "type": "string",
              "description": "Host info"
            }
          },
          "required": [
            "house_name",
            "start_time",
            "end_time",
            "price",
            "payment_date",
            "guarantee_deposit",
            "lessee_info",
            "landlord_info"
          ]
        }
      },
      {
        "name": "OfficeSoftware.Documents.applyDocumentTemplate",
        "description": "Apply a template to the specified document",
        "parameters": {
          "type": "object",
          "properties": {
            "document_name": {
              "type": "string",
              "description": "Document name to apply template, required"
            },
            "template_name": {
              "type": "string",
              "description": "Template name to apply, required"
            }
          },
          "required": [
            "document_name",
            "template_name"
          ]
        }
      }
    ],
    "single_tool": [
      {
        "name": "ConvenientLiving.BuyingRentingHomes.getLeaseAgreement",
        "description": "Generate rental contract template",
        "parameters": {
          "type": "object",
          "properties": {
            "house_name": {
              "type": "string",
              "description": "Property name"
            },
            "start_time": {
              "type": "float",
              "description": "Start Time "
            },
            "end_time": {
              "type": "float",
              "description": "End Time"
            },
            "price": {
              "type": "float",
              "description": "Monthly Rent"
            },
            "payment_date": {
              "type": "float",
              "description": "Monthly rent collection date"
            },
            "guarantee_deposit": {
              "type": "float",
              "description": "Deposit"
            },
            "lessee_info": {
              "type": "string",
              "description": "Tenant Information"
            },
            "landlord_info": {
              "type": "string",
              "description": "Host info"
            }
          },
          "required": [
            "house_name",
            "start_time",
            "end_time",
            "price",
            "payment_date",
            "guarantee_deposit",
            "lessee_info",
            "landlord_info"
          ]
        }
      }
    ],
    "id": 926
  },
  {
    "messages": [
      {
        "role": "user",
        "content": "I want to order a red roast meat and a Gongbao chicken in Dafu Building"
      },
      {
        "role": "function call",
        "content": {
          "name": "ConvenientLiving.FoodDelivery.placeRestaurantOrder",
          "arguments": {
            "restaurant_name": "Dafu Building",
            "dishes": "Red roast meat, Gongbao chicken"
          }
        }
      },
      {
        "role": "assistant",
        "content": "Please provide a delivery address"
      },
      {
        "role": "user",
        "content": "The delivery address is the office near the Wudaokou Shopping Mall, and the specific location is the office building at the second intersection on the right out of the north gate of the shopping mall."
      },
      {
        "role": "function call",
        "content": {
          "name": "ConvenientLiving.FoodDelivery.placeRestaurantOrder",
          "arguments": {
            "restaurant_name": "Dafu Building",
            "dishes": "Red roast meat, Gongbao chicken",
            "delivery_address": "Wudaokou Shopping Mall"
          }
        }
      },
      {
        "role": "assistant",
        "content": "What is a note"
      },
      {
        "role": "user",
        "content": "It was wrong before. Delivery address should be Zhongguancun Science Park"
      },
      {
        "role": "function call",
        "content": {
          "name": "ConvenientLiving.FoodDelivery.placeRestaurantOrder",
          "arguments": {
            "restaurant_name": "Dafu Building",
            "dishes": "Red roast meat, Gongbao chicken",
            "delivery_address": "Zhongguancun Science Park"
          }
        }
      },
      {
        "role": "assistant",
        "content": "What is a note"
      },
      {
        "role": "user",
        "content": "Note is that extra napkins are needed."
      },
      {
        "role": "function call",
        "content": {
          "name": "ConvenientLiving.FoodDelivery.placeRestaurantOrder",
          "arguments": {
            "restaurant_name": "Dafu Building",
            "dishes": "Red roast meat, Gongbao chicken",
            "delivery_address": "Zhongguancun Science Park",
            "note": "Give more napkins"
          }
        }
      }
    ],
    "multiple_tools": [
      {
        "name": "ConvenientLiving.FoodDelivery.placeRestaurantOrder",
        "description": "Order select restaurants and dishes",
        "parameters": {
          "type": "object",
          "properties": {
            "restaurant_name": {
              "type": "string",
              "description": "Name of the restaurant"
            },
            "dishes": {
              "type": "string",
              "description": "Array containing item IDs"
            },
            "delivery_address": {
              "type": "string",
              "description": "Delivery address"
            },
            "delivery_time": {
              "type": "string",
              "description": "Expected delivery time in HH: mm format"
            },
            "note": {
              "type": "string",
              "description": "Remarks"
            }
          },
          "required": [
            "restaurant_name",
            "dishes",
            "delivery_address",
            "delivery_time",
            "note"
          ]
        }
      },
      {
        "name": "Travel.HotelServices.bookHotel",
        "description": "Book a room at a selected hotel",
        "parameters": {
          "type": "object",
          "properties": {
            "name": {
              "type": "string",
              "description": "Hotel Name"
            },
            "checkin_date": {
              "type": "string",
              "description": "Check-in Date"
            },
            "checkout_date": {
              "type": "string",
              "description": "DEPARTURE DATE"
            },
            "room_type": {
              "type": "string",
              "description": "Room types"
            },
            "tenant_name": {
              "type": "string",
              "description": "Name of the guest staying"
            },
            "tenant_number": {
              "type": "string",
              "description": "Telephone number of the guest staying at the hotel"
            }
          },
          "required": [
            "name",
            "checkin_date",
            "checkout_date",
            "room_type",
            "tenant_name",
            "tenant_number"
          ]
        }
      },
      {
        "name": "OfficeSoftware.Conferencing.createMeeting",
        "description": "Create a new meeting",
        "parameters": {
          "type": "object",
          "properties": {
            "title": {
              "type": "string",
              "description": "Meeting Title:"
            },
            "start_time": {
              "type": "string",
              "description": "Conference Start Time"
            },
            "end_time": {
              "type": "string",
              "description": "Meeting end time"
            },
            "location": {
              "type": "string",
              "description": "Meeting Address"
            },
            "participant_list": {
              "type": "string",
              "description": "List of participants in the meeting"
            }
          },
          "required": [
            "title",
            "start_time",
            "end_time",
            "location",
            "participant_list"
          ]
        }
      },
      {
        "name": "UtilityTools.Calendar.addCalendarschedule",
        "description": "Create a new schedule",
        "parameters": {
          "type": "object",
          "properties": {
            "date_name": {
              "type": "string",
              "description": "Visiting program name"
            },
            "start_date": {
              "type": "string",
              "description": "Schedule start time"
            },
            "end_date": {
              "type": "string",
              "description": "Schedule end time; do not write the default start time 24 o'clock on the same day"
            },
            "schedule": {
              "type": "string",
              "description": "Schedule Related Descriptions"
            }
          },
          "required": [
            "date_name",
            "start_date",
            "end_date",
            "schedule"
          ]
        }
      },
      {
        "name": "Navigation.TrainTickets.bookTrainTicket",
        "description": "Book a train ticket for a specific time, origin, or destination for a specific rider",
        "parameters": {
          "type": "object",
          "properties": {
            "ride_date": {
              "type": "string",
              "description": "Date of trip"
            },
            "departure_station": {
              "type": "string",
              "description": "Departure Station"
            },
            "destination_station": {
              "type": "string",
              "description": "arrival station"
            },
            "train_type": {
              "type": "string",
              "description": "Train type, optional types are high-speed rail, motor vehicles, general express, express, etc."
            },
            "seat_type": {
              "type": "string",
              "description": "Seat Type"
            },
            "passenger_name": {
              "type": "string",
              "description": "Rider's name"
            },
            "passenger_id": {
              "type": "string",
              "description": "Rider ID number"
            }
          },
          "required": [
            "ride_date",
            "departure_station",
            "destination_station",
            "train_type",
            "seat_type",
            "passenger_name",
            "passenger_id"
          ]
        }
      }
    ],
    "single_tool": [
      {
        "name": "ConvenientLiving.FoodDelivery.placeRestaurantOrder",
        "description": "Order select restaurants and dishes",
        "parameters": {
          "type": "object",
          "properties": {
            "restaurant_name": {
              "type": "string",
              "description": "Name of the restaurant"
            },
            "dishes": {
              "type": "string",
              "description": "Array containing item IDs"
            },
            "delivery_address": {
              "type": "string",
              "description": "Delivery address"
            },
            "delivery_time": {
              "type": "string",
              "description": "Expected delivery time in HH: mm format"
            },
            "note": {
              "type": "string",
              "description": "Remarks"
            }
          },
          "required": [
            "restaurant_name",
            "dishes",
            "delivery_address",
            "delivery_time",
            "note"
          ]
        }
      }
    ],
    "id": 929
  },
  {
    "messages": [
      {
        "role": "user",
        "content": "Help me order Xiao Yang Sheng, raw fried bread and beef fan soup"
      },
      {
        "role": "function call",
        "content": {
          "name": "ConvenientLiving.FoodDelivery.placeRestaurantOrder",
          "arguments": {
            "restaurant_name": "Little Yang Shengjian",
            "dishes": "Raw Soup, Beef Fan Soup"
          }
        }
      },
      {
        "role": "assistant",
        "content": "Please provide a delivery address"
      },
      {
        "role": "user",
        "content": "The delivery address is 123 Chuangye Street in Zhongguancun Science Park."
      },
      {
        "role": "function call",
        "content": {
          "name": "ConvenientLiving.FoodDelivery.placeRestaurantOrder",
          "arguments": {
            "restaurant_name": "Little Yang Shengjian",
            "dishes": "Raw Soup, Beef Fan Soup",
            "delivery_address": "No. 123, Chuangye Street, Zhongguancun Science Park"
          }
        }
      },
      {
        "role": "assistant",
        "content": "Please provide a note about your order, such as a special request or preference"
      },
      {
        "role": "user",
        "content": "It was wrong before. Name of the restaurant should be Dafu Building"
      },
      {
        "role": "function call",
        "content": {
          "name": "ConvenientLiving.FoodDelivery.placeRestaurantOrder",
          "arguments": {
            "restaurant_name": "Dafu Building",
            "dishes": "Raw Soup, Beef Fan Soup",
            "delivery_address": "No. 123, Chuangye Street, Zhongguancun Science Park"
          }
        }
      },
      {
        "role": "assistant",
        "content": "Please provide a note about your order, such as a special request or preference"
      },
      {
        "role": "user",
        "content": "I can't eat spicy food, please put less chili."
      },
      {
        "role": "function call",
        "content": {
          "name": "ConvenientLiving.FoodDelivery.placeRestaurantOrder",
          "arguments": {
            "restaurant_name": "Dafu Building",
            "dishes": "Raw Soup, Beef Fan Soup",
            "delivery_address": "No. 123, Chuangye Street, Zhongguancun Science Park",
            "note": "Somewhat spicy"
          }
        }
      }
    ],
    "multiple_tools": [
      {
        "name": "OfficeSoftware.Conferencing.createMeeting",
        "description": "Create a new meeting",
        "parameters": {
          "type": "object",
          "properties": {
            "title": {
              "type": "string",
              "description": "Meeting Title:"
            },
            "start_time": {
              "type": "string",
              "description": "Conference Start Time"
            },
            "end_time": {
              "type": "string",
              "description": "Meeting end time"
            },
            "location": {
              "type": "string",
              "description": "Meeting Address"
            },
            "participant_list": {
              "type": "string",
              "description": "List of participants in the meeting"
            }
          },
          "required": [
            "title",
            "start_time",
            "end_time",
            "location",
            "participant_list"
          ]
        }
      },
      {
        "name": "ConvenientLiving.FoodDelivery.placeRestaurantOrder",
        "description": "Order select restaurants and dishes",
        "parameters": {
          "type": "object",
          "properties": {
            "restaurant_name": {
              "type": "string",
              "description": "Name of the restaurant"
            },
            "dishes": {
              "type": "string",
              "description": "Array containing item IDs"
            },
            "delivery_address": {
              "type": "string",
              "description": "Delivery address"
            },
            "delivery_time": {
              "type": "string",
              "description": "Expected delivery time in HH: mm format"
            },
            "note": {
              "type": "string",
              "description": "Remarks"
            }
          },
          "required": [
            "restaurant_name",
            "dishes",
            "delivery_address",
            "delivery_time",
            "note"
          ]
        }
      },
      {
        "name": "Travel.HotelServices.bookHotel",
        "description": "Book a room at a selected hotel",
        "parameters": {
          "type": "object",
          "properties": {
            "name": {
              "type": "string",
              "description": "Hotel Name"
            },
            "checkin_date": {
              "type": "string",
              "description": "Check-in Date"
            },
            "checkout_date": {
              "type": "string",
              "description": "DEPARTURE DATE"
            },
            "room_type": {
              "type": "string",
              "description": "Room types"
            },
            "tenant_name": {
              "type": "string",
              "description": "Name of the guest staying"
            },
            "tenant_number": {
              "type": "string",
              "description": "Telephone number of the guest staying at the hotel"
            }
          },
          "required": [
            "name",
            "checkin_date",
            "checkout_date",
            "room_type",
            "tenant_name",
            "tenant_number"
          ]
        }
      },
      {
        "name": "OfficeSoftware.Documents.createDocument",
        "description": "Create a new document",
        "parameters": {
          "type": "object",
          "properties": {
            "document_name": {
              "type": "string",
              "description": "Document name, required"
            }
          },
          "required": [
            "document_name"
          ]
        }
      },
      {
        "name": "Navigation.TrainTickets.bookTrainTicket",
        "description": "Book a train ticket for a specific time, origin, or destination for a specific rider",
        "parameters": {
          "type": "object",
          "properties": {
            "ride_date": {
              "type": "string",
              "description": "Date of trip"
            },
            "departure_station": {
              "type": "string",
              "description": "Departure Station"
            },
            "destination_station": {
              "type": "string",
              "description": "arrival station"
            },
            "train_type": {
              "type": "string",
              "description": "Train type, optional types are high-speed rail, motor vehicles, general express, express, etc."
            },
            "seat_type": {
              "type": "string",
              "description": "Seat Type"
            },
            "passenger_name": {
              "type": "string",
              "description": "Rider's name"
            },
            "passenger_id": {
              "type": "string",
              "description": "Rider ID number"
            }
          },
          "required": [
            "ride_date",
            "departure_station",
            "destination_station",
            "train_type",
            "seat_type",
            "passenger_name",
            "passenger_id"
          ]
        }
      }
    ],
    "single_tool": [
      {
        "name": "ConvenientLiving.FoodDelivery.placeRestaurantOrder",
        "description": "Order select restaurants and dishes",
        "parameters": {
          "type": "object",
          "properties": {
            "restaurant_name": {
              "type": "string",
              "description": "Name of the restaurant"
            },
            "dishes": {
              "type": "string",
              "description": "Array containing item IDs"
            },
            "delivery_address": {
              "type": "string",
              "description": "Delivery address"
            },
            "delivery_time": {
              "type": "string",
              "description": "Expected delivery time in HH: mm format"
            },
            "note": {
              "type": "string",
              "description": "Remarks"
            }
          },
          "required": [
            "restaurant_name",
            "dishes",
            "delivery_address",
            "delivery_time",
            "note"
          ]
        }
      }
    ],
    "id": 930
  },
  {
    "messages": [
      {
        "role": "user",
        "content": "I gave my last order a score of 4, and the comment was: The food was delicious and the service was very attentive, that is, the environment was a little noisy."
      },
      {
        "role": "function call",
        "content": {
          "name": "ConvenientLiving.FoodDelivery.rateRestaurantOrder",
          "arguments": {
            "rating": 4,
            "comment": "The food is delicious and the service is very attentive, that is, the environment is a little noisy."
          }
        }
      },
      {
        "role": "assistant",
        "content": "Please provide the name of the restaurant"
      },
      {
        "role": "user",
        "content": "Shu Da Xia"
      },
      {
        "role": "function call",
        "content": {
          "name": "ConvenientLiving.FoodDelivery.rateRestaurantOrder",
          "arguments": {
            "rating": 4,
            "comment": "The food is delicious and the service is very attentive, that is, the environment is a little noisy.",
            "restaurant_name": "Shu Da Xia"
          }
        }
      },
      {
        "role": "assistant",
        "content": "What is the order number? Are you satisfied with the delivery time?"
      },
      {
        "role": "user",
        "content": "It was wrong before. Review Content should be Excellent service, fresh and delicious food"
      },
      {
        "role": "function call",
        "content": {
          "name": "ConvenientLiving.FoodDelivery.rateRestaurantOrder",
          "arguments": {
            "rating": 4,
            "comment": "Excellent service, fresh and delicious food",
            "restaurant_name": "Shu Da Xia"
          }
        }
      },
      {
        "role": "assistant",
        "content": "What is the order number? Are you satisfied with the delivery time?"
      },
      {
        "role": "user",
        "content": "The order number is 123456, I am quite satisfied with the delivery time, and the sauerkraut fish tastes good."
      },
      {
        "role": "function call",
        "content": {
          "name": "ConvenientLiving.FoodDelivery.rateRestaurantOrder",
          "arguments": {
            "rating": 4,
            "comment": "Excellent service, fresh and delicious food",
            "restaurant_name": "Shu Da Xia",
            "order_name": "sour fish"
          }
        }
      }
    ],
    "multiple_tools": [
      {
        "name": "OfficeSoftware.Documents.addDocumentComment",
        "description": "Add a comment for the specified document",
        "parameters": {
          "type": "object",
          "properties": {
            "document_name": {
              "type": "string",
              "description": "Document name to add comment, required"
            },
            "comment_content": {
              "type": "string",
              "description": "Comment (required)"
            }
          },
          "required": [
            "document_name",
            "comment_content"
          ]
        }
      },
      {
        "name": "OnlineShopping.Mall.evaluateCommodityOrders",
        "description": "Evaluate the order based on the product name and other conditions",
        "parameters": {
          "type": "object",
          "properties": {
            "goods": {
              "type": "string",
              "description": "Product Name"
            },
            "evaluation": {
              "type": "string",
              "description": "Content of the review"
            }
          },
          "required": [
            "goods",
            "evaluation"
          ]
        }
      },
      {
        "name": "ConvenientLiving.FoodDelivery.rateRestaurantOrder",
        "description": "Evaluate a specific order",
        "parameters": {
          "type": "object",
          "properties": {
            "restaurant_name": {
              "type": "string",
              "description": "Name of the restaurant"
            },
            "order_name": {
              "type": "string",
              "description": "Contents of the order"
            },
            "order_time": {
              "type": "string",
              "description": "Order time"
            },
            "rating": {
              "type": "integer",
              "description": "Rating, 1 to 5"
            },
            "comment": {
              "type": "string",
              "description": "Review Content"
            }
          },
          "required": [
            "restaurant_name",
            "order_name",
            "order_time",
            "rating",
            "comment"
          ]
        }
      },
      {
        "name": "SocialCommunication.SocialMedia.mediumComment",
        "description": "Comment on a given activity",
        "parameters": {
          "type": "object",
          "properties": {
            "medium_name": {
              "type": "string",
              "description": "Media name"
            },
            "correlation": {
              "type": "string",
              "description": "Dynamic Related Content"
            },
            "publisher": {
              "type": "string",
              "description": "Posted by/publisher?"
            },
            "publish_time": {
              "type": "string",
              "description": "Release Date"
            }
          },
          "required": [
            "medium_name",
            "correlation",
            "publisher",
            "publish_time"
          ]
        }
      },
      {
        "name": "OnlineShopping.SecondhandTrading.evaluateSecondhandSaleOrders",
        "description": "Evaluate the order based on the product name and other conditions",
        "parameters": {
          "type": "object",
          "properties": {
            "goods_name": {
              "type": "string",
              "description": "Product Name"
            }
          },
          "required": [
            "goods_name"
          ]
        }
      }
    ],
    "single_tool": [
      {
        "name": "ConvenientLiving.FoodDelivery.rateRestaurantOrder",
        "description": "Evaluate a specific order",
        "parameters": {
          "type": "object",
          "properties": {
            "restaurant_name": {
              "type": "string",
              "description": "Name of the restaurant"
            },
            "order_name": {
              "type": "string",
              "description": "Contents of the order"
            },
            "order_time": {
              "type": "string",
              "description": "Order time"
            },
            "rating": {
              "type": "integer",
              "description": "Rating, 1 to 5"
            },
            "comment": {
              "type": "string",
              "description": "Review Content"
            }
          },
          "required": [
            "restaurant_name",
            "order_name",
            "order_time",
            "rating",
            "comment"
          ]
        }
      }
    ],
    "id": 931
  },
  {
    "messages": [
      {
        "role": "user",
        "content": "I wanted to give that meal a 5 out of 5, and my review was: Superb experience, fresh dishes, excellent service, highly recommended!"
      },
      {
        "role": "function call",
        "content": {
          "name": "ConvenientLiving.FoodDelivery.rateRestaurantOrder",
          "arguments": {
            "rating": 5,
            "comment": "Great experience, fresh dishes, great service, highly recommend!"
          }
        }
      },
      {
        "role": "assistant",
        "content": "Please provide the name of the restaurant"
      },
      {
        "role": "user",
        "content": "Haidilao"
      },
      {
        "role": "function call",
        "content": {
          "name": "ConvenientLiving.FoodDelivery.rateRestaurantOrder",
          "arguments": {
            "rating": 5,
            "comment": "Great experience, fresh dishes, great service, highly recommend!",
            "restaurant_name": "Haidilao"
          }
        }
      },
      {
        "role": "assistant",
        "content": "What is the order number? Are you satisfied with the speed of delivery?"
      },
      {
        "role": "user",
        "content": "It was wrong before. Review Content should be Excellent service, fresh and delicious food"
      },
      {
        "role": "function call",
        "content": {
          "name": "ConvenientLiving.FoodDelivery.rateRestaurantOrder",
          "arguments": {
            "rating": 5,
            "comment": "Excellent service, fresh and delicious food",
            "restaurant_name": "Haidilao"
          }
        }
      },
      {
        "role": "assistant",
        "content": "What is the order number? Are you satisfied with the speed of delivery?"
      },
      {
        "role": "user",
        "content": "My order number is 123456. I am quite satisfied with the delivery speed. After all, the weather is not good now, and I am very happy to be delivered to me on time. However, what I am most looking forward to is tonight's tomato beef pot."
      },
      {
        "role": "function call",
        "content": {
          "name": "ConvenientLiving.FoodDelivery.rateRestaurantOrder",
          "arguments": {
            "rating": 5,
            "comment": "Excellent service, fresh and delicious food",
            "restaurant_name": "Haidilao",
            "order_name": "Tomato Beef Pot"
          }
        }
      }
    ],
    "multiple_tools": [
      {
        "name": "SocialCommunication.Community.likeCommunityComment",
        "description": "Like a comment from a specific community",
        "parameters": {
          "type": "object",
          "properties": {
            "community_name": {
              "type": "string",
              "description": "The name of the community where the review is to be liked"
            },
            "comment_name": {
              "type": "string",
              "description": "Comments to like"
            }
          },
          "required": [
            "community_name",
            "comment_name"
          ]
        }
      },
      {
        "name": "ConvenientLiving.FoodDelivery.rateRestaurantOrder",
        "description": "Evaluate a specific order",
        "parameters": {
          "type": "object",
          "properties": {
            "restaurant_name": {
              "type": "string",
              "description": "Name of the restaurant"
            },
            "order_name": {
              "type": "string",
              "description": "Contents of the order"
            },
            "order_time": {
              "type": "string",
              "description": "Order time"
            },
            "rating": {
              "type": "integer",
              "description": "Rating, 1 to 5"
            },
            "comment": {
              "type": "string",
              "description": "Review Content"
            }
          },
          "required": [
            "restaurant_name",
            "order_name",
            "order_time",
            "rating",
            "comment"
          ]
        }
      },
      {
        "name": "SocialCommunication.Calling.checkPhoneCallQuality",
        "description": "Evaluate metrics such as network quality and sound clarity of the current call",
        "parameters": {
          "type": "object",
          "properties": {},
          "required": []
        }
      },
      {
        "name": "NewsMagazines.NewspapersMagazines.rateMagazine",
        "description": "Rating and evaluation of newspapers and magazines",
        "parameters": {
          "type": "object",
          "properties": {
            "name": {
              "type": "string",
              "description": "Magazine Name"
            },
            "rating": {
              "type": "integer",
              "description": "Rating"
            },
            "comment": {
              "type": "string",
              "description": "Review Content"
            }
          },
          "required": [
            "name",
            "rating",
            "comment"
          ]
        }
      },
      {
        "name": "OnlineShopping.ExpressDelivery.rateExpressService",
        "description": "Rate courier service",
        "parameters": {
          "type": "object",
          "properties": {
            "express_id": {
              "type": "string",
              "description": "Tracking Number"
            },
            "signing_date": {
              "type": "string",
              "description": "The date of signing"
            },
            "rating": {
              "type": "string",
              "description": "Rating, 1-5 points"
            },
            "comment": {
              "type": "string",
              "description": "Scoring contents"
            }
          },
          "required": [
            "express_id",
            "signing_date",
            "rating",
            "comment"
          ]
        }
      }
    ],
    "single_tool": [
      {
        "name": "ConvenientLiving.FoodDelivery.rateRestaurantOrder",
        "description": "Evaluate a specific order",
        "parameters": {
          "type": "object",
          "properties": {
            "restaurant_name": {
              "type": "string",
              "description": "Name of the restaurant"
            },
            "order_name": {
              "type": "string",
              "description": "Contents of the order"
            },
            "order_time": {
              "type": "string",
              "description": "Order time"
            },
            "rating": {
              "type": "integer",
              "description": "Rating, 1 to 5"
            },
            "comment": {
              "type": "string",
              "description": "Review Content"
            }
          },
          "required": [
            "restaurant_name",
            "order_name",
            "order_time",
            "rating",
            "comment"
          ]
        }
      }
    ],
    "id": 932
  },
  {
    "messages": [
      {
        "role": "user",
        "content": "Add a line of subtitles to the bottom of the holiday_vacation.mp4 video"
      },
      {
        "role": "function call",
        "content": {
          "name": "Photography.VideoEditing.addCaptionToVideoEdit",
          "arguments": {
            "name_or_path": "holiday_vacation.mp4",
            "location": "Bottom"
          }
        }
      },
      {
        "role": "assistant",
        "content": "Please provide the font type and font size to use"
      },
      {
        "role": "user",
        "content": "I need to use * * bold * * with a font size of 14."
      },
      {
        "role": "function call",
        "content": {
          "name": "Photography.VideoEditing.addCaptionToVideoEdit",
          "arguments": {
            "name_or_path": "holiday_vacation.mp4",
            "location": "Bottom",
            "font": "Blackbody"
          }
        }
      },
      {
        "role": "assistant",
        "content": "What is the font color of the added text message"
      },
      {
        "role": "user",
        "content": "It was wrong before. The name or path of the video should be vacation_vlog.mp4"
      },
      {
        "role": "function call",
        "content": {
          "name": "Photography.VideoEditing.addCaptionToVideoEdit",
          "arguments": {
            "name_or_path": "vacation_vlog.mp4",
            "location": "Bottom",
            "font": "Blackbody"
          }
        }
      },
      {
        "role": "assistant",
        "content": "What is the font color of the added text message"
      },
      {
        "role": "user",
        "content": "The font color is red."
      },
      {
        "role": "function call",
        "content": {
          "name": "Photography.VideoEditing.addCaptionToVideoEdit",
          "arguments": {
            "name_or_path": "vacation_vlog.mp4",
            "location": "Bottom",
            "font": "Blackbody",
            "color": "Red"
          }
        }
      },
      {
        "role": "assistant",
        "content": "Please provide a font size for adding text information"
      },
      {
        "role": "user",
        "content": "Set the font size to 30."
      },
      {
        "role": "function call",
        "content": {
          "name": "Photography.VideoEditing.addCaptionToVideoEdit",
          "arguments": {
            "name_or_path": "vacation_vlog.mp4",
            "location": "Bottom",
            "font": "Blackbody",
            "color": "Red",
            "size": 30
          }
        }
      }
    ],
    "multiple_tools": [
      {
        "name": "Photography.VideoRecording.videoAddSpecialEffects",
        "description": "Adding Effects to Filmed Videos",
        "parameters": {
          "type": "object",
          "properties": {
            "open": {
              "type": "boolean",
              "description": "Whether to turn on special effects"
            }
          },
          "required": [
            "open"
          ]
        }
      },
      {
        "name": "Photography.VideoEditing.addCaptionToVideoEdit",
        "description": "Adding text to video screens",
        "parameters": {
          "type": "object",
          "properties": {
            "name_or_path": {
              "type": "string",
              "description": "The name or path of the video"
            },
            "location": {
              "type": "string",
              "description": "Add the position of the text message, such as bottom, top, left, right, etc."
            },
            "font": {
              "type": "string",
              "description": "Add font for text messages"
            },
            "color": {
              "type": "string",
              "description": "Add text message font color"
            },
            "size": {
              "type": "float",
              "description": "Add font size for text messages"
            }
          },
          "required": [
            "name_or_path",
            "location",
            "font",
            "color",
            "size"
          ]
        }
      },
      {
        "name": "UtilityTools.AlarmClock.addTimer",
        "description": "Add a timer, not a countdown",
        "parameters": {
          "type": "object",
          "properties": {
            "timer_name": {
              "type": "string",
              "description": "Timer name, empty by default"
            },
            "timer": {
              "type": "string",
              "description": "Timer Time Settings"
            }
          },
          "required": [
            "timer_name",
            "timer"
          ]
        }
      },
      {
        "name": "Photography.VideoEditing.videoStickerAdd",
        "description": "Add a sticker to your video",
        "parameters": {
          "type": "object",
          "properties": {
            "name_or_path": {
              "type": "string",
              "description": "The name or path of the video"
            }
          },
          "required": [
            "name_or_path"
          ]
        }
      },
      {
        "name": "UtilityTools.Reading.addReadingBookShelf",
        "description": "Add online and local books to your shelves",
        "parameters": {
          "type": "object",
          "properties": {
            "book_name": {
              "type": "string",
              "description": "Book Name"
            },
            "book_author": {
              "type": "string",
              "description": "Author name"
            },
            "path": {
              "type": "string",
              "description": "Local Book Path"
            }
          },
          "required": [
            "book_name",
            "book_author",
            "path"
          ]
        }
      }
    ],
    "single_tool": [
      {
        "name": "Photography.VideoEditing.addCaptionToVideoEdit",
        "description": "Adding text to video screens",
        "parameters": {
          "type": "object",
          "properties": {
            "name_or_path": {
              "type": "string",
              "description": "The name or path of the video"
            },
            "location": {
              "type": "string",
              "description": "Add the position of the text message, such as bottom, top, left, right, etc."
            },
            "font": {
              "type": "string",
              "description": "Add font for text messages"
            },
            "color": {
              "type": "string",
              "description": "Add text message font color"
            },
            "size": {
              "type": "float",
              "description": "Add font size for text messages"
            }
          },
          "required": [
            "name_or_path",
            "location",
            "font",
            "color",
            "size"
          ]
        }
      }
    ],
    "id": 934
  },
  {
    "messages": [
      {
        "role": "user",
        "content": "I want to add some caption at the top of this video family_reunion.mkv"
      },
      {
        "role": "function call",
        "content": {
          "name": "Photography.VideoEditing.addCaptionToVideoEdit",
          "arguments": {
            "name_or_path": "family_reunion.mkv",
            "location": "Top"
          }
        }
      },
      {
        "role": "assistant",
        "content": "Please provide the font type and font size to use"
      },
      {
        "role": "user",
        "content": "The font type uses Microsoft Black and the size is set to 12."
      },
      {
        "role": "function call",
        "content": {
          "name": "Photography.VideoEditing.addCaptionToVideoEdit",
          "arguments": {
            "name_or_path": "family_reunion.mkv",
            "location": "Top",
            "font": "Microsoft Accor black,  one of the microsoft fonts."
          }
        }
      },
      {
        "role": "assistant",
        "content": "Please provide a font color for the added text message"
      },
      {
        "role": "user",
        "content": "It was wrong before. Add font for text messages should be Blackbody"
      },
      {
        "role": "function call",
        "content": {
          "name": "Photography.VideoEditing.addCaptionToVideoEdit",
          "arguments": {
            "name_or_path": "family_reunion.mkv",
            "location": "Top",
            "font": "Blackbody"
          }
        }
      },
      {
        "role": "assistant",
        "content": "Please provide a font color for the added text message"
      },
      {
        "role": "user",
        "content": "I want the font color to be white."
      },
      {
        "role": "function call",
        "content": {
          "name": "Photography.VideoEditing.addCaptionToVideoEdit",
          "arguments": {
            "name_or_path": "family_reunion.mkv",
            "location": "Top",
            "font": "Blackbody",
            "color": "White"
          }
        }
      },
      {
        "role": "assistant",
        "content": "Please provide a font size for adding text information"
      },
      {
        "role": "user",
        "content": "Set the font size to 40."
      },
      {
        "role": "function call",
        "content": {
          "name": "Photography.VideoEditing.addCaptionToVideoEdit",
          "arguments": {
            "name_or_path": "family_reunion.mkv",
            "location": "Top",
            "font": "Blackbody",
            "color": "White",
            "size": 40
          }
        }
      }
    ],
    "multiple_tools": [
      {
        "name": "Navigation.TrainTickets.updateTrainWaitlistOrder",
        "description": "Used to modify submitted train ticket waiting list information",
        "parameters": {
          "type": "object",
          "properties": {
            "train_number": {
              "type": "string",
              "description": "Booked trips"
            },
            "passenger_name": {
              "type": "string",
              "description": "Rider's name"
            },
            "after_number": {
              "type": "string",
              "description": "Booked trips"
            },
            "new_departure_date": {
              "type": "string",
              "description": "New departure date, format 'YYYY-MM-DD', optional if modified"
            },
            "new_seat_type": {
              "type": "string",
              "description": "Seat Type"
            }
          },
          "required": [
            "train_number",
            "passenger_name",
            "after_number",
            "new_departure_date",
            "new_seat_type"
          ]
        }
      },
      {
        "name": "Health.HealthManagement.updateDietRecord",
        "description": "Changing dietary records based on updated conditions",
        "parameters": {
          "type": "object",
          "properties": {
            "food_name": {
              "type": "string",
              "description": "Food Name"
            },
            "meal_type": {
              "type": "string",
              "description": "Types of meals, such as breakfast, lunch, dinner, or add-ons"
            },
            "time": {
              "type": "string",
              "description": "Meal Time"
            },
            "update_content": {
              "type": "string",
              "description": "Updates, such as changes to food names, meal types, meal times, etc."
            }
          },
          "required": [
            "food_name",
            "meal_type",
            "time",
            "update_content"
          ]
        }
      },
      {
        "name": "Photography.VideoEditing.addCaptionToVideoEdit",
        "description": "Adding text to video screens",
        "parameters": {
          "type": "object",
          "properties": {
            "name_or_path": {
              "type": "string",
              "description": "The name or path of the video"
            },
            "location": {
              "type": "string",
              "description": "Add the position of the text message, such as bottom, top, left, right, etc."
            },
            "font": {
              "type": "string",
              "description": "Add font for text messages"
            },
            "color": {
              "type": "string",
              "description": "Add text message font color"
            },
            "size": {
              "type": "float",
              "description": "Add font size for text messages"
            }
          },
          "required": [
            "name_or_path",
            "location",
            "font",
            "color",
            "size"
          ]
        }
      },
      {
        "name": "ConvenientLiving.FoodDelivery.updateRestaurantOrder",
        "description": "Updating order information based on the order, such as delivery address, notes, etc.",
        "parameters": {
          "type": "object",
          "properties": {
            "order_name": {
              "type": "string",
              "description": "Contents of the order"
            },
            "delivery_address": {
              "type": "string",
              "description": "Delivery address"
            },
            "delivery_time": {
              "type": "string",
              "description": "Expected delivery time in HH: mm format"
            },
            "note": {
              "type": "string",
              "description": "Remarks"
            }
          },
          "required": [
            "order_name",
            "delivery_address",
            "delivery_time",
            "note"
          ]
        }
      },
      {
        "name": "Finance.Banking.modifyFinancialProductOrder",
        "description": "Modify a subscribed order for a bank wealth management product",
        "parameters": {
          "type": "object",
          "properties": {
            "order_id": {
              "type": "string",
              "description": "Purchase Order Number"
            },
            "product": {
              "type": "string",
              "description": "Financing product"
            },
            "modify": {
              "type": "string",
              "description": "Modified content, such as additional amount, revision deadline, etc."
            }
          },
          "required": [
            "order_id",
            "product",
            "modify"
          ]
        }
      }
    ],
    "single_tool": [
      {
        "name": "Photography.VideoEditing.addCaptionToVideoEdit",
        "description": "Adding text to video screens",
        "parameters": {
          "type": "object",
          "properties": {
            "name_or_path": {
              "type": "string",
              "description": "The name or path of the video"
            },
            "location": {
              "type": "string",
              "description": "Add the position of the text message, such as bottom, top, left, right, etc."
            },
            "font": {
              "type": "string",
              "description": "Add font for text messages"
            },
            "color": {
              "type": "string",
              "description": "Add text message font color"
            },
            "size": {
              "type": "float",
              "description": "Add font size for text messages"
            }
          },
          "required": [
            "name_or_path",
            "location",
            "font",
            "color",
            "size"
          ]
        }
      }
    ],
    "id": 935
  },
  {
    "messages": [
      {
        "role": "user",
        "content": "Increase the brightness of the video to 20.5 and set the playback speed to 1.5x"
      },
      {
        "role": "function call",
        "content": {
          "name": "Photography.VideoEditing.videoEditAdjust",
          "arguments": {
            "brightness": 20.5,
            "speed": 1.5
          }
        }
      },
      {
        "role": "assistant",
        "content": "Please provide the name or path of the video and the saturation and contrast values you would like to adjust"
      },
      {
        "role": "user",
        "content": "The video name is holiday_video.mp4 and I want to adjust the saturation to 1.5 and the contrast to 1.2."
      },
      {
        "role": "function call",
        "content": {
          "name": "Photography.VideoEditing.videoEditAdjust",
          "arguments": {
            "brightness": 20.5,
            "speed": 1.5,
            "name_or_path": "holiday_video.mp4"
          }
        }
      },
      {
        "role": "assistant",
        "content": "Please provide video saturation value - 100 to 100 contrast value - 100 to 100"
      },
      {
        "role": "user",
        "content": "The video has a saturation value of 5 and a contrast value of 10."
      },
      {
        "role": "function call",
        "content": {
          "name": "Photography.VideoEditing.videoEditAdjust",
          "arguments": {
            "brightness": 20.5,
            "speed": 1.5,
            "name_or_path": "holiday_video.mp4",
            "saturation": 5
          }
        }
      },
      {
        "role": "assistant",
        "content": "Please provide a contrast value for the video - 100 to 100"
      },
      {
        "role": "user",
        "content": "It was wrong before. Saturation value, -100 to 100 should be 10"
      },
      {
        "role": "function call",
        "content": {
          "name": "Photography.VideoEditing.videoEditAdjust",
          "arguments": {
            "brightness": 20.5,
            "speed": 1.5,
            "name_or_path": "holiday_video.mp4",
            "saturation": 10
          }
        }
      },
      {
        "role": "assistant",
        "content": "Please provide a contrast value for the video - 100 to 100"
      },
      {
        "role": "user",
        "content": "The contrast value is set to 10."
      },
      {
        "role": "function call",
        "content": {
          "name": "Photography.VideoEditing.videoEditAdjust",
          "arguments": {
            "brightness": 20.5,
            "speed": 1.5,
            "name_or_path": "holiday_video.mp4",
            "saturation": 10,
            "contrast": 10
          }
        }
      }
    ],
    "multiple_tools": [
      {
        "name": "Photography.VideoEditing.videoEditAdjust",
        "description": "Adjust the video, including brightness, saturation, contrast, playback speed, etc.",
        "parameters": {
          "type": "object",
          "properties": {
            "name_or_path": {
              "type": "string",
              "description": "The name or path of the video"
            },
            "brightness": {
              "type": "float",
              "description": "Brightness value, -100 to 100"
            },
            "saturation": {
              "type": "float",
              "description": "Saturation value, -100 to 100"
            },
            "contrast": {
              "type": "float",
              "description": "Contrast value, -100 to 100"
            },
            "exposure": {
              "type": "float",
              "description": "Exposure value, -100 to 100"
            },
            "speed": {
              "type": "float",
              "description": "Video Playback Zoom Value"
            }
          },
          "required": [
            "name_or_path",
            "brightness",
            "saturation",
            "contrast",
            "exposure",
            "speed"
          ]
        }
      },
      {
        "name": "Finance.Banking.queryInterestRates",
        "description": "Find your bank's deposit and loan rates",
        "parameters": {
          "type": "object",
          "properties": {},
          "required": []
        }
      },
      {
        "name": "SystemTools.SystemSettings.setSystemBrightness",
        "description": "Set the brightness of your phone's screen",
        "parameters": {
          "type": "object",
          "properties": {
            "brightness_level": {
              "type": "integer",
              "description": "Brightness level, 0 to 100"
            }
          },
          "required": [
            "brightness_level"
          ]
        }
      },
      {
        "name": "SocialCommunication.Calling.quickPhoneCallReply",
        "description": "Set up some common response statements ahead of time, or set them up individually for a contact to send quickly during a call",
        "parameters": {
          "type": "object",
          "properties": {
            "reply_content": {
              "type": "string",
              "description": "Quick replies"
            },
            "contact_name": {
              "type": "string",
              "description": "Contact person"
            }
          },
          "required": [
            "reply_content",
            "contact_name"
          ]
        }
      },
      {
        "name": "SystemTools.SystemOptimization.speedUpPhonePerformance",
        "description": "Optimize your phone's system settings to run faster",
        "parameters": {
          "type": "object",
          "properties": {},
          "required": []
        }
      }
    ],
    "single_tool": [
      {
        "name": "Photography.VideoEditing.videoEditAdjust",
        "description": "Adjust the video, including brightness, saturation, contrast, playback speed, etc.",
        "parameters": {
          "type": "object",
          "properties": {
            "name_or_path": {
              "type": "string",
              "description": "The name or path of the video"
            },
            "brightness": {
              "type": "float",
              "description": "Brightness value, -100 to 100"
            },
            "saturation": {
              "type": "float",
              "description": "Saturation value, -100 to 100"
            },
            "contrast": {
              "type": "float",
              "description": "Contrast value, -100 to 100"
            },
            "exposure": {
              "type": "float",
              "description": "Exposure value, -100 to 100"
            },
            "speed": {
              "type": "float",
              "description": "Video Playback Zoom Value"
            }
          },
          "required": [
            "name_or_path",
            "brightness",
            "saturation",
            "contrast",
            "exposure",
            "speed"
          ]
        }
      }
    ],
    "id": 936
  },
  {
    "messages": [
      {
        "role": "user",
        "content": "Reduce video brightness by 30 points while setting playback speed to 0.75 x"
      },
      {
        "role": "function call",
        "content": {
          "name": "Photography.VideoEditing.videoEditAdjust",
          "arguments": {
            "brightness": -30.0,
            "speed": 0.75
          }
        }
      },
      {
        "role": "assistant",
        "content": "What is the name or path of the video"
      },
      {
        "role": "user",
        "content": "The name of the video is test.mp4."
      },
      {
        "role": "function call",
        "content": {
          "name": "Photography.VideoEditing.videoEditAdjust",
          "arguments": {
            "brightness": -30.0,
            "speed": 0.75,
            "name_or_path": "test.mp4"
          }
        }
      },
      {
        "role": "assistant",
        "content": "Please provide video saturation value range - 100 to 100 contrast value range - 100 to 100"
      },
      {
        "role": "user",
        "content": "The saturation value of the video is set to 10 and the contrast value is set to 20."
      },
      {
        "role": "function call",
        "content": {
          "name": "Photography.VideoEditing.videoEditAdjust",
          "arguments": {
            "brightness": -30.0,
            "speed": 0.75,
            "name_or_path": "test.mp4",
            "saturation": 10
          }
        }
      },
      {
        "role": "assistant",
        "content": "What is the contrast value - 100 to 100"
      },
      {
        "role": "user",
        "content": "It was wrong before. The name or path of the video should be holiday_video.mp4"
      },
      {
        "role": "function call",
        "content": {
          "name": "Photography.VideoEditing.videoEditAdjust",
          "arguments": {
            "brightness": -30.0,
            "speed": 0.75,
            "name_or_path": "holiday_video.mp4",
            "saturation": 10
          }
        }
      },
      {
        "role": "assistant",
        "content": "What is the contrast value - 100 to 100"
      },
      {
        "role": "user",
        "content": "The contrast value is -5."
      },
      {
        "role": "function call",
        "content": {
          "name": "Photography.VideoEditing.videoEditAdjust",
          "arguments": {
            "brightness": -30.0,
            "speed": 0.75,
            "name_or_path": "holiday_video.mp4",
            "saturation": 10,
            "contrast": -5
          }
        }
      }
    ],
    "multiple_tools": [
      {
        "name": "Finance.Banking.queryInterestRates",
        "description": "Find your bank's deposit and loan rates",
        "parameters": {
          "type": "object",
          "properties": {},
          "required": []
        }
      },
      {
        "name": "SocialCommunication.Calling.quickPhoneCallReply",
        "description": "Set up some common response statements ahead of time, or set them up individually for a contact to send quickly during a call",
        "parameters": {
          "type": "object",
          "properties": {
            "reply_content": {
              "type": "string",
              "description": "Quick replies"
            },
            "contact_name": {
              "type": "string",
              "description": "Contact person"
            }
          },
          "required": [
            "reply_content",
            "contact_name"
          ]
        }
      },
      {
        "name": "SystemTools.SystemSettings.setSystemBrightness",
        "description": "Set the brightness of your phone's screen",
        "parameters": {
          "type": "object",
          "properties": {
            "brightness_level": {
              "type": "integer",
              "description": "Brightness level, 0 to 100"
            }
          },
          "required": [
            "brightness_level"
          ]
        }
      },
      {
        "name": "Photography.VideoEditing.videoEditAdjust",
        "description": "Adjust the video, including brightness, saturation, contrast, playback speed, etc.",
        "parameters": {
          "type": "object",
          "properties": {
            "name_or_path": {
              "type": "string",
              "description": "The name or path of the video"
            },
            "brightness": {
              "type": "float",
              "description": "Brightness value, -100 to 100"
            },
            "saturation": {
              "type": "float",
              "description": "Saturation value, -100 to 100"
            },
            "contrast": {
              "type": "float",
              "description": "Contrast value, -100 to 100"
            },
            "exposure": {
              "type": "float",
              "description": "Exposure value, -100 to 100"
            },
            "speed": {
              "type": "float",
              "description": "Video Playback Zoom Value"
            }
          },
          "required": [
            "name_or_path",
            "brightness",
            "saturation",
            "contrast",
            "exposure",
            "speed"
          ]
        }
      },
      {
        "name": "SystemTools.SystemOptimization.speedUpPhonePerformance",
        "description": "Optimize your phone's system settings to run faster",
        "parameters": {
          "type": "object",
          "properties": {},
          "required": []
        }
      }
    ],
    "single_tool": [
      {
        "name": "Photography.VideoEditing.videoEditAdjust",
        "description": "Adjust the video, including brightness, saturation, contrast, playback speed, etc.",
        "parameters": {
          "type": "object",
          "properties": {
            "name_or_path": {
              "type": "string",
              "description": "The name or path of the video"
            },
            "brightness": {
              "type": "float",
              "description": "Brightness value, -100 to 100"
            },
            "saturation": {
              "type": "float",
              "description": "Saturation value, -100 to 100"
            },
            "contrast": {
              "type": "float",
              "description": "Contrast value, -100 to 100"
            },
            "exposure": {
              "type": "float",
              "description": "Exposure value, -100 to 100"
            },
            "speed": {
              "type": "float",
              "description": "Video Playback Zoom Value"
            }
          },
          "required": [
            "name_or_path",
            "brightness",
            "saturation",
            "contrast",
            "exposure",
            "speed"
          ]
        }
      }
    ],
    "id": 937
  },
  {
    "messages": [
      {
        "role": "user",
        "content": "Help me find travel packages to Bali on May 15th"
      },
      {
        "role": "function call",
        "content": {
          "name": "Travel.ItineraryServices.searchTravelPackage",
          "arguments": {
            "destination": "Bali",
            "start_time": "May 15th"
          }
        }
      },
      {
        "role": "assistant",
        "content": "Where you're flying from"
      },
      {
        "role": "user",
        "content": "My starting place is Wuhan."
      },
      {
        "role": "function call",
        "content": {
          "name": "Travel.ItineraryServices.searchTravelPackage",
          "arguments": {
            "destination": "Bali",
            "start_time": "May 15th",
            "origin": "Wuhan"
          }
        }
      },
      {
        "role": "assistant",
        "content": "When is your trip end date and what is the price budget"
      },
      {
        "role": "user",
        "content": "My travel end date is November 12th and the budget is about 5000 yuan."
      },
      {
        "role": "function call",
        "content": {
          "name": "Travel.ItineraryServices.searchTravelPackage",
          "arguments": {
            "destination": "Bali",
            "start_time": "May 15th",
            "origin": "Wuhan",
            "end_time": "November 12th"
          }
        }
      },
      {
        "role": "assistant",
        "content": "What is the unit price of your budget?"
      },
      {
        "role": "user",
        "content": "It was wrong before. Origination should be Chengdu"
      },
      {
        "role": "function call",
        "content": {
          "name": "Travel.ItineraryServices.searchTravelPackage",
          "arguments": {
            "destination": "Bali",
            "start_time": "May 15th",
            "origin": "Chengdu",
            "end_time": "November 12th"
          }
        }
      },
      {
        "role": "assistant",
        "content": "What is the unit price of your budget?"
      },
      {
        "role": "user",
        "content": "My budget price is 6500.0 yuan."
      },
      {
        "role": "function call",
        "content": {
          "name": "Travel.ItineraryServices.searchTravelPackage",
          "arguments": {
            "destination": "Bali",
            "start_time": "May 15th",
            "origin": "Chengdu",
            "end_time": "November 12th",
            "price": 6500.0
          }
        }
      }
    ],
    "multiple_tools": [
      {
        "name": "Travel.ItineraryServices.searchTravelPackage",
        "description": "Search travel packages by destination, time, price, and more",
        "parameters": {
          "type": "object",
          "properties": {
            "origin": {
              "type": "string",
              "description": "Origination"
            },
            "destination": {
              "type": "string",
              "description": "destination"
            },
            "start_time": {
              "type": "string",
              "description": "Start date"
            },
            "end_time": {
              "type": "string",
              "description": "End Date"
            },
            "price": {
              "type": "float",
              "description": "Price, unit (yuan)"
            }
          },
          "required": [
            "origin",
            "destination",
            "start_time",
            "end_time",
            "price"
          ]
        }
      },
      {
        "name": "VideoPlayback.ShortVideos.searchShortVideo",
        "description": "Search for short videos based on keywords (vlog blogger/video keywords/taxonomy keywords)",
        "parameters": {
          "type": "object",
          "properties": {
            "keyword": {
              "type": "string",
              "description": "Short video blogger name/video keyword search"
            },
            "type": {
              "type": "string",
              "description": "Recommended, Popular, Chase, Film and TV New Journey/Reference bilibili, etc."
            },
            "datetime": {
              "type": "string",
              "description": "Release time: unlimited, within a day, within a week, within half a year"
            },
            "duration": {
              "type": "string",
              "description": "Video time: unlimited, 1 minute, 1--5 minutes, more than 5 minutes"
            },
            "ai_search": {
              "type": "string",
              "description": "Based on search history, viewing history can only be searched"
            }
          },
          "required": [
            "keyword",
            "type",
            "datetime",
            "duration",
            "ai_search"
          ]
        }
      },
      {
        "name": "ConvenientLiving.BuyingRentingHomes.searchRentingHouses",
        "description": "Search for rentals by criteria",
        "parameters": {
          "type": "object",
          "properties": {
            "price": {
              "type": "string",
              "description": "Rents"
            },
            "house_area": {
              "type": "string",
              "description": "Area"
            },
            "level": {
              "type": "string",
              "description": "Floor"
            },
            "age": {
              "type": "integer",
              "description": "fixed number of years"
            },
            "house_type": {
              "type": "string",
              "description": "Layout"
            },
            "housing_estate": {
              "type": "string",
              "description": "Community"
            },
            "location": {
              "type": "string",
              "description": "Position"
            },
            "indoor_decoration": {
              "type": "string",
              "description": "decorate"
            },
            "furniture": {
              "type": "string",
              "description": "Furniture"
            }
          },
          "required": [
            "price",
            "house_area",
            "level",
            "age",
            "house_type",
            "housing_estate",
            "location",
            "indoor_decoration",
            "furniture"
          ]
        }
      },
      {
        "name": "VideoPlayback.OnlineVideos.searchOnlineVideo",
        "description": "Search online videos, which can be searched based on keywords (director/publisher/video keywords); can be searched based on categories; can be searched based on AI smart search",
        "parameters": {
          "type": "object",
          "properties": {
            "keyword": {
              "type": "array",
              "description": "Director/Publisher/Video Keyword Search"
            },
            "video_type": {
              "type": "string",
              "description": "Video Type Categories, Recommended, Popular, Chase, Film and Television New Journey"
            },
            "ai_search": {
              "type": "string",
              "description": "Based on search history, viewing history can only be turned off by default"
            }
          },
          "required": [
            "keyword",
            "video_type",
            "ai_search"
          ]
        }
      },
      {
        "name": "OfficeSoftware.Documents.searchDocuments",
        "description": "Search documents by keyword",
        "parameters": {
          "type": "object",
          "properties": {
            "keyword": {
              "type": "string",
              "description": "Search keywords, required"
            }
          },
          "required": [
            "keyword"
          ]
        }
      }
    ],
    "single_tool": [
      {
        "name": "Travel.ItineraryServices.searchTravelPackage",
        "description": "Search travel packages by destination, time, price, and more",
        "parameters": {
          "type": "object",
          "properties": {
            "origin": {
              "type": "string",
              "description": "Origination"
            },
            "destination": {
              "type": "string",
              "description": "destination"
            },
            "start_time": {
              "type": "string",
              "description": "Start date"
            },
            "end_time": {
              "type": "string",
              "description": "End Date"
            },
            "price": {
              "type": "float",
              "description": "Price, unit (yuan)"
            }
          },
          "required": [
            "origin",
            "destination",
            "start_time",
            "end_time",
            "price"
          ]
        }
      }
    ],
    "id": 938
  },
  {
    "messages": [
      {
        "role": "user",
        "content": "Want to see the travel packages to Tokyo on June 1, what do you recommend?"
      },
      {
        "role": "function call",
        "content": {
          "name": "Travel.ItineraryServices.searchTravelPackage",
          "arguments": {
            "destination": "Tukyo",
            "start_time": "June 1"
          }
        }
      },
      {
        "role": "assistant",
        "content": "What is your departure location What is the price range"
      },
      {
        "role": "user",
        "content": "My starting place is Chengdu, and the price ranges from 500 to 1000 yuan."
      },
      {
        "role": "function call",
        "content": {
          "name": "Travel.ItineraryServices.searchTravelPackage",
          "arguments": {
            "destination": "Tukyo",
            "start_time": "June 1",
            "origin": "Chengdu"
          }
        }
      },
      {
        "role": "assistant",
        "content": "When is your trip end date and what is the price budget"
      },
      {
        "role": "user",
        "content": "It was wrong before. destination should be Sanya Railway Station"
      },
      {
        "role": "function call",
        "content": {
          "name": "Travel.ItineraryServices.searchTravelPackage",
          "arguments": {
            "destination": "Sanya Railway Station",
            "start_time": "June 1",
            "origin": "Chengdu"
          }
        }
      },
      {
        "role": "assistant",
        "content": "When is your trip end date and what is the price budget"
      },
      {
        "role": "user",
        "content": "My travel end date is June 7th and the budget is about 5000 yuan."
      },
      {
        "role": "function call",
        "content": {
          "name": "Travel.ItineraryServices.searchTravelPackage",
          "arguments": {
            "destination": "Sanya Railway Station",
            "start_time": "June 1",
            "origin": "Chengdu",
            "end_time": "June 7"
          }
        }
      },
      {
        "role": "assistant",
        "content": "What is the unit price of your budget?"
      },
      {
        "role": "user",
        "content": "My budget is 8000.0 yuan."
      },
      {
        "role": "function call",
        "content": {
          "name": "Travel.ItineraryServices.searchTravelPackage",
          "arguments": {
            "destination": "Sanya Railway Station",
            "start_time": "June 1",
            "origin": "Chengdu",
            "end_time": "June 7",
            "price": 8000.0
          }
        }
      }
    ],
    "multiple_tools": [
      {
        "name": "Navigation.FlightTickets.searchFlight",
        "description": "Find tickets for specific dates",
        "parameters": {
          "type": "object",
          "properties": {
            "date": {
              "type": "string",
              "description": "Trip start time"
            },
            "departure": {
              "type": "string",
              "description": "Origination"
            },
            "destination": {
              "type": "string",
              "description": "Reach ground"
            },
            "type": {
              "type": "string",
              "description": "One-way, round-trip, multi-trip"
            },
            "site_type": {
              "type": "string",
              "description": "Economy, Business"
            }
          },
          "required": [
            "date",
            "departure",
            "destination",
            "type",
            "site_type"
          ]
        }
      },
      {
        "name": "Finance.Insurance.getInsuranceCoverage",
        "description": "Check the coverage of insurance products",
        "parameters": {
          "type": "object",
          "properties": {
            "insurance_name": {
              "type": "string",
              "description": "Insurance Product Name"
            },
            "insurance_type": {
              "type": "string",
              "description": "Types of insurance products, such as life insurance, health insurance, property insurance, car insurance, etc."
            }
          },
          "required": [
            "insurance_name",
            "insurance_type"
          ]
        }
      },
      {
        "name": "Finance.Stocks.viewStockoperate",
        "description": "Query the stock market on the day of trading; the day of consignment; historical trading; historical consignment; T operation",
        "parameters": {
          "type": "object",
          "properties": {
            "transaction_today": {
              "type": "boolean",
              "description": "Deal of the day Default: 0 No"
            },
            "entrust_today": {
              "type": "boolean",
              "description": "Delegation of the day default: 0 No"
            },
            "transaction_his": {
              "type": "boolean",
              "description": "History Closing Default: 0 No"
            },
            "entrust_his": {
              "type": "boolean",
              "description": "Historical delegation default: 0 No"
            },
            "T_operate": {
              "type": "boolean",
              "description": "T Operation default: 0 No"
            }
          },
          "required": [
            "transaction_today",
            "entrust_today",
            "transaction_his",
            "entrust_his",
            "T_operate"
          ]
        }
      },
      {
        "name": "UtilityTools.AppSearchInstallation.viewApp",
        "description": "View details for a specific mobile app, including introductions, ratings and reviews, downloads, package size, and more",
        "parameters": {
          "type": "object",
          "properties": {
            "app_name": {
              "type": "string",
              "description": "Mobile App Name"
            }
          },
          "required": [
            "app_name"
          ]
        }
      },
      {
        "name": "Travel.ItineraryServices.searchTravelPackage",
        "description": "Search travel packages by destination, time, price, and more",
        "parameters": {
          "type": "object",
          "properties": {
            "origin": {
              "type": "string",
              "description": "Origination"
            },
            "destination": {
              "type": "string",
              "description": "destination"
            },
            "start_time": {
              "type": "string",
              "description": "Start date"
            },
            "end_time": {
              "type": "string",
              "description": "End Date"
            },
            "price": {
              "type": "float",
              "description": "Price, unit (yuan)"
            }
          },
          "required": [
            "origin",
            "destination",
            "start_time",
            "end_time",
            "price"
          ]
        }
      }
    ],
    "single_tool": [
      {
        "name": "Travel.ItineraryServices.searchTravelPackage",
        "description": "Search travel packages by destination, time, price, and more",
        "parameters": {
          "type": "object",
          "properties": {
            "origin": {
              "type": "string",
              "description": "Origination"
            },
            "destination": {
              "type": "string",
              "description": "destination"
            },
            "start_time": {
              "type": "string",
              "description": "Start date"
            },
            "end_time": {
              "type": "string",
              "description": "End Date"
            },
            "price": {
              "type": "float",
              "description": "Price, unit (yuan)"
            }
          },
          "required": [
            "origin",
            "destination",
            "start_time",
            "end_time",
            "price"
          ]
        }
      }
    ],
    "id": 939
  },
  {
    "messages": [
      {
        "role": "user",
        "content": "I want to book the Haitian Hotel and check in from next Monday"
      },
      {
        "role": "function call",
        "content": {
          "name": "Travel.HotelServices.bookHotel",
          "arguments": {
            "name": "Haitian Grand Hotel",
            "checkin_date": "Next Monday"
          }
        }
      },
      {
        "role": "assistant",
        "content": "What type of room do you need to book"
      },
      {
        "role": "user",
        "content": "I need to book an executive single room."
      },
      {
        "role": "function call",
        "content": {
          "name": "Travel.HotelServices.bookHotel",
          "arguments": {
            "name": "Haitian Grand Hotel",
            "checkin_date": "Next Monday",
            "room_type": "Executive Single Room"
          }
        }
      },
      {
        "role": "assistant",
        "content": "Please provide information about the guest checking in"
      },
      {
        "role": "user",
        "content": "It was wrong before. Check-in Date should be April 15"
      },
      {
        "role": "function call",
        "content": {
          "name": "Travel.HotelServices.bookHotel",
          "arguments": {
            "name": "Haitian Grand Hotel",
            "checkin_date": "April 15",
            "room_type": "Executive Single Room"
          }
        }
      },
      {
        "role": "assistant",
        "content": "Please provide information about the guest checking in"
      },
      {
        "role": "user",
        "content": "The tenant is called Miss Wang."
      },
      {
        "role": "function call",
        "content": {
          "name": "Travel.HotelServices.bookHotel",
          "arguments": {
            "name": "Haitian Grand Hotel",
            "checkin_date": "April 15",
            "room_type": "Executive Single Room",
            "tenant_name": "Miss Wang"
          }
        }
      }
    ],
    "multiple_tools": [
      {
        "name": "OfficeSoftware.Conferencing.joinMeeting",
        "description": "Join the specified meeting",
        "parameters": {
          "type": "object",
          "properties": {
            "meeting_id": {
              "type": "string",
              "description": "Conference No."
            },
            "title": {
              "type": "string",
              "description": "Meeting Title:"
            },
            "time": {
              "type": "string",
              "description": "Meeting Date"
            }
          },
          "required": [
            "meeting_id",
            "title",
            "time"
          ]
        }
      },
      {
        "name": "ConvenientLiving.AutoLife.followCarModels",
        "description": "Keep an eye on the car models you're interested in so you can stay up to date.",
        "parameters": {
          "type": "object",
          "properties": {
            "brands": {
              "type": "string",
              "description": "Car Brand"
            }
          },
          "required": [
            "brands"
          ]
        }
      },
      {
        "name": "Travel.HotelServices.bookHotel",
        "description": "Book a room at a selected hotel",
        "parameters": {
          "type": "object",
          "properties": {
            "name": {
              "type": "string",
              "description": "Hotel Name"
            },
            "checkin_date": {
              "type": "string",
              "description": "Check-in Date"
            },
            "checkout_date": {
              "type": "string",
              "description": "DEPARTURE DATE"
            },
            "room_type": {
              "type": "string",
              "description": "Room types"
            },
            "tenant_name": {
              "type": "string",
              "description": "Name of the guest staying"
            },
            "tenant_number": {
              "type": "string",
              "description": "Telephone number of the guest staying at the hotel"
            }
          },
          "required": [
            "name",
            "checkin_date",
            "checkout_date",
            "room_type",
            "tenant_name",
            "tenant_number"
          ]
        }
      },
      {
        "name": "Education.OnlineClasses.enrollCourse",
        "description": "Enroll in a designated course",
        "parameters": {
          "type": "object",
          "properties": {
            "course_name": {
              "type": "string",
              "description": "Course Title"
            }
          },
          "required": [
            "course_name"
          ]
        }
      },
      {
        "name": "UtilityTools.Weather.getLivingIndex",
        "description": "Get the Life Services Index for a given day and a given location",
        "parameters": {
          "type": "object",
          "properties": {
            "date": {
              "type": "string",
              "description": "Date, defaults to current time"
            },
            "location": {
              "type": "string",
              "description": "Location, defaults to local"
            }
          },
          "required": [
            "date",
            "location"
          ]
        }
      }
    ],
    "single_tool": [
      {
        "name": "Travel.HotelServices.bookHotel",
        "description": "Book a room at a selected hotel",
        "parameters": {
          "type": "object",
          "properties": {
            "name": {
              "type": "string",
              "description": "Hotel Name"
            },
            "checkin_date": {
              "type": "string",
              "description": "Check-in Date"
            },
            "checkout_date": {
              "type": "string",
              "description": "DEPARTURE DATE"
            },
            "room_type": {
              "type": "string",
              "description": "Room types"
            },
            "tenant_name": {
              "type": "string",
              "description": "Name of the guest staying"
            },
            "tenant_number": {
              "type": "string",
              "description": "Telephone number of the guest staying at the hotel"
            }
          },
          "required": [
            "name",
            "checkin_date",
            "checkout_date",
            "room_type",
            "tenant_name",
            "tenant_number"
          ]
        }
      }
    ],
    "id": 940
  },
  {
    "messages": [
      {
        "role": "user",
        "content": "Book me a room at the Oasis Resort with a check-in date of December 25"
      },
      {
        "role": "function call",
        "content": {
          "name": "Travel.HotelServices.bookHotel",
          "arguments": {
            "name": "Oasis Resort",
            "checkin_date": "25-Dec"
          }
        }
      },
      {
        "role": "assistant",
        "content": "What type of room would you like to book"
      },
      {
        "role": "user",
        "content": "I want to book a luxury suite."
      },
      {
        "role": "function call",
        "content": {
          "name": "Travel.HotelServices.bookHotel",
          "arguments": {
            "name": "Oasis Resort",
            "checkin_date": "25-Dec",
            "room_type": "Executive Suite"
          }
        }
      },
      {
        "role": "assistant",
        "content": "Please provide the name information of the guest checking in"
      },
      {
        "role": "user",
        "content": "It was wrong before. Check-in Date should be April 15"
      },
      {
        "role": "function call",
        "content": {
          "name": "Travel.HotelServices.bookHotel",
          "arguments": {
            "name": "Oasis Resort",
            "checkin_date": "April 15",
            "room_type": "Executive Suite"
          }
        }
      },
      {
        "role": "assistant",
        "content": "Please provide the name information of the guest checking in"
      },
      {
        "role": "user",
        "content": "The name of the check-in guest is Li Si."
      },
      {
        "role": "function call",
        "content": {
          "name": "Travel.HotelServices.bookHotel",
          "arguments": {
            "name": "Oasis Resort",
            "checkin_date": "April 15",
            "room_type": "Executive Suite",
            "tenant_name": "Li Si"
          }
        }
      }
    ],
    "multiple_tools": [
      {
        "name": "UtilityTools.AlarmClock.addAlarm",
        "description": "New key for an alarm clock",
        "parameters": {
          "type": "object",
          "properties": {
            "clock_time_name": {
              "type": "string",
              "description": "Alarm name, default is empty"
            },
            "clock_time": {
              "type": "string",
              "description": "Alarm time"
            }
          },
          "required": [
            "clock_time_name",
            "clock_time"
          ]
        }
      },
      {
        "name": "MusicRadio.Karaoke.enterSingingRoom",
        "description": "Enter the singing room according to the name of the singing room and other conditions",
        "parameters": {
          "type": "object",
          "properties": {
            "name": {
              "type": "string",
              "description": "Karaoke Room Name"
            }
          },
          "required": [
            "name"
          ]
        }
      },
      {
        "name": "ConvenientLiving.AutoLife.followCarModels",
        "description": "Keep an eye on the car models you're interested in so you can stay up to date.",
        "parameters": {
          "type": "object",
          "properties": {
            "brands": {
              "type": "string",
              "description": "Car Brand"
            }
          },
          "required": [
            "brands"
          ]
        }
      },
      {
        "name": "Travel.HotelServices.bookHotel",
        "description": "Book a room at a selected hotel",
        "parameters": {
          "type": "object",
          "properties": {
            "name": {
              "type": "string",
              "description": "Hotel Name"
            },
            "checkin_date": {
              "type": "string",
              "description": "Check-in Date"
            },
            "checkout_date": {
              "type": "string",
              "description": "DEPARTURE DATE"
            },
            "room_type": {
              "type": "string",
              "description": "Room types"
            },
            "tenant_name": {
              "type": "string",
              "description": "Name of the guest staying"
            },
            "tenant_number": {
              "type": "string",
              "description": "Telephone number of the guest staying at the hotel"
            }
          },
          "required": [
            "name",
            "checkin_date",
            "checkout_date",
            "room_type",
            "tenant_name",
            "tenant_number"
          ]
        }
      },
      {
        "name": "Finance.Banking.fixDeposit",
        "description": "Convert a specified amount of demand deposits to time deposits of a specific time deposit duration",
        "parameters": {
          "type": "object",
          "properties": {
            "amount": {
              "type": "float",
              "description": "Amount of time deposit, unit (yuan)"
            },
            "duration": {
              "type": "string",
              "description": "Fixed Deposit Time"
            }
          },
          "required": [
            "amount",
            "duration"
          ]
        }
      }
    ],
    "single_tool": [
      {
        "name": "Travel.HotelServices.bookHotel",
        "description": "Book a room at a selected hotel",
        "parameters": {
          "type": "object",
          "properties": {
            "name": {
              "type": "string",
              "description": "Hotel Name"
            },
            "checkin_date": {
              "type": "string",
              "description": "Check-in Date"
            },
            "checkout_date": {
              "type": "string",
              "description": "DEPARTURE DATE"
            },
            "room_type": {
              "type": "string",
              "description": "Room types"
            },
            "tenant_name": {
              "type": "string",
              "description": "Name of the guest staying"
            },
            "tenant_number": {
              "type": "string",
              "description": "Telephone number of the guest staying at the hotel"
            }
          },
          "required": [
            "name",
            "checkin_date",
            "checkout_date",
            "room_type",
            "tenant_name",
            "tenant_number"
          ]
        }
      }
    ],
    "id": 941
  },
  {
    "messages": [
      {
        "role": "user",
        "content": "Watch The Tech Frontier: The Future of AI in 15 Minutes"
      },
      {
        "role": "function call",
        "content": {
          "name": "VideoPlayback.OnlineVideos.playOnlineVideo",
          "arguments": {
            "video_name": "The Technology Frontier: The Future of AI",
            "start": "15 minutes"
          }
        }
      },
      {
        "role": "assistant",
        "content": "Whether full-screen viewing is required"
      },
      {
        "role": "user",
        "content": "No, just keep the current window size."
      },
      {
        "role": "function call",
        "content": {
          "name": "VideoPlayback.OnlineVideos.playOnlineVideo",
          "arguments": {
            "video_name": "The Technology Frontier: The Future of AI",
            "start": "15 minutes",
            "full_screen": false
          }
        }
      },
      {
        "role": "assistant",
        "content": "What is the playback speed?"
      },
      {
        "role": "user",
        "content": "1.0, I want to maintain normal speed."
      },
      {
        "role": "function call",
        "content": {
          "name": "VideoPlayback.OnlineVideos.playOnlineVideo",
          "arguments": {
            "video_name": "The Technology Frontier: The Future of AI",
            "start": "15 minutes",
            "full_screen": false,
            "playback_speed": 1.0
          }
        }
      },
      {
        "role": "assistant",
        "content": "Whether to open the barrage"
      },
      {
        "role": "user",
        "content": "It was wrong before. Playback Speed should be 1.5"
      },
      {
        "role": "function call",
        "content": {
          "name": "VideoPlayback.OnlineVideos.playOnlineVideo",
          "arguments": {
            "video_name": "The Technology Frontier: The Future of AI",
            "start": "15 minutes",
            "full_screen": false,
            "playback_speed": 1.5
          }
        }
      },
      {
        "role": "assistant",
        "content": "Whether to open the barrage"
      },
      {
        "role": "user",
        "content": "Yes, open barrage True"
      },
      {
        "role": "function call",
        "content": {
          "name": "VideoPlayback.OnlineVideos.playOnlineVideo",
          "arguments": {
            "video_name": "The Technology Frontier: The Future of AI",
            "start": "15 minutes",
            "full_screen": false,
            "playback_speed": 1.5,
            "danmaku": true
          }
        }
      }
    ],
    "multiple_tools": [
      {
        "name": "UtilityTools.AlarmClock.viewAlarm",
        "description": "View set alarms based on alarm name or alarm time",
        "parameters": {
          "type": "object",
          "properties": {
            "clock_time_name": {
              "type": "string",
              "description": "Alarm name, defaults to all alarms"
            },
            "clock_time": {
              "type": "string",
              "description": "Alarm time"
            }
          },
          "required": [
            "clock_time_name",
            "clock_time"
          ]
        }
      },
      {
        "name": "UtilityTools.Reading.openReadingBookShelf",
        "description": "View current books on the shelf",
        "parameters": {
          "type": "object",
          "properties": {},
          "required": []
        }
      },
      {
        "name": "UtilityTools.AlarmClock.viewtimer",
        "description": "View assigned timers",
        "parameters": {
          "type": "object",
          "properties": {
            "timer_name": {
              "type": "string",
              "description": "Timer name, empty by default"
            },
            "timer": {
              "type": "string",
              "description": "Timer time"
            }
          },
          "required": [
            "timer_name",
            "timer"
          ]
        }
      },
      {
        "name": "VideoPlayback.ShortVideos.playShortVideo",
        "description": "Watch the short video, watch from scratch by default",
        "parameters": {
          "type": "object",
          "properties": {
            "video_name": {
              "type": "string",
              "description": "Short video name"
            },
            "full_screen": {
              "type": "boolean",
              "description": "Full Screen"
            },
            "playback_speed": {
              "type": "float",
              "description": "Playback Speed"
            },
            "danmaku": {
              "type": "boolean",
              "description": "enable bullet text"
            }
          },
          "required": [
            "video_name",
            "full_screen",
            "playback_speed",
            "danmaku"
          ]
        }
      },
      {
        "name": "VideoPlayback.OnlineVideos.playOnlineVideo",
        "description": "Watch the video (when to start, watch from scratch by default)",
        "parameters": {
          "type": "object",
          "properties": {
            "video_name": {
              "type": "string",
              "description": "Video Name"
            },
            "start": {
              "type": "string",
              "description": "When to start, watch from scratch by default"
            },
            "full_screen": {
              "type": "boolean",
              "description": "Full Screen"
            },
            "playback_speed": {
              "type": "float",
              "description": "Playback Speed"
            },
            "danmaku": {
              "type": "boolean",
              "description": "enable bullet text"
            }
          },
          "required": [
            "video_name",
            "start",
            "full_screen",
            "playback_speed",
            "danmaku"
          ]
        }
      }
    ],
    "single_tool": [
      {
        "name": "VideoPlayback.OnlineVideos.playOnlineVideo",
        "description": "Watch the video (when to start, watch from scratch by default)",
        "parameters": {
          "type": "object",
          "properties": {
            "video_name": {
              "type": "string",
              "description": "Video Name"
            },
            "start": {
              "type": "string",
              "description": "When to start, watch from scratch by default"
            },
            "full_screen": {
              "type": "boolean",
              "description": "Full Screen"
            },
            "playback_speed": {
              "type": "float",
              "description": "Playback Speed"
            },
            "danmaku": {
              "type": "boolean",
              "description": "enable bullet text"
            }
          },
          "required": [
            "video_name",
            "start",
            "full_screen",
            "playback_speed",
            "danmaku"
          ]
        }
      }
    ],
    "id": 958
  },
  {
    "messages": [
      {
        "role": "user",
        "content": "I want to see \"China on the Tip of the Tongue: A Food Tour\" from the beginning"
      },
      {
        "role": "function call",
        "content": {
          "name": "VideoPlayback.OnlineVideos.playOnlineVideo",
          "arguments": {
            "video_name": "China on Your Tongue: A Food Tour",
            "start": "What/the beginning?"
          }
        }
      },
      {
        "role": "assistant",
        "content": "Whether full-screen viewing is required"
      },
      {
        "role": "user",
        "content": "No, just keep the current window size."
      },
      {
        "role": "function call",
        "content": {
          "name": "VideoPlayback.OnlineVideos.playOnlineVideo",
          "arguments": {
            "video_name": "China on Your Tongue: A Food Tour",
            "start": "What/the beginning?",
            "full_screen": true
          }
        }
      },
      {
        "role": "assistant",
        "content": "What is the playback speed?"
      },
      {
        "role": "user",
        "content": "It was wrong before. Video Name should be Technology Innovation Lecture"
      },
      {
        "role": "function call",
        "content": {
          "name": "VideoPlayback.OnlineVideos.playOnlineVideo",
          "arguments": {
            "video_name": "Technology Innovation Lecture",
            "start": "What/the beginning?",
            "full_screen": true
          }
        }
      },
      {
        "role": "assistant",
        "content": "What is the playback speed?"
      },
      {
        "role": "user",
        "content": "1.5x Speed"
      },
      {
        "role": "function call",
        "content": {
          "name": "VideoPlayback.OnlineVideos.playOnlineVideo",
          "arguments": {
            "video_name": "Technology Innovation Lecture",
            "start": "What/the beginning?",
            "full_screen": true,
            "playback_speed": 1.5
          }
        }
      },
      {
        "role": "assistant",
        "content": "Whether to open the barrage"
      },
      {
        "role": "user",
        "content": "No, I don't need to open the barrage."
      },
      {
        "role": "function call",
        "content": {
          "name": "VideoPlayback.OnlineVideos.playOnlineVideo",
          "arguments": {
            "video_name": "Technology Innovation Lecture",
            "start": "What/the beginning?",
            "full_screen": true,
            "playback_speed": 1.5,
            "danmaku": false
          }
        }
      }
    ],
    "multiple_tools": [
      {
        "name": "MusicRadio.OnlineMusic.participateInMusicTopicDiscussion",
        "description": "Participate in musical conversations by topic and comment content",
        "parameters": {
          "type": "object",
          "properties": {
            "topic": {
              "type": "string",
              "description": "Topic"
            },
            "comment": {
              "type": "string",
              "description": "Comments"
            }
          },
          "required": [
            "topic",
            "comment"
          ]
        }
      },
      {
        "name": "NewsMagazines.NewspapersMagazines.getMagazine",
        "description": "Get a magazine based on its name, number of issues, etc.",
        "parameters": {
          "type": "object",
          "properties": {
            "name": {
              "type": "string",
              "description": "Magazine Name"
            },
            "issue": {
              "type": "string",
              "description": "Number of periods"
            }
          },
          "required": [
            "name",
            "issue"
          ]
        }
      },
      {
        "name": "VideoPlayback.OnlineVideos.playOnlineVideo",
        "description": "Watch the video (when to start, watch from scratch by default)",
        "parameters": {
          "type": "object",
          "properties": {
            "video_name": {
              "type": "string",
              "description": "Video Name"
            },
            "start": {
              "type": "string",
              "description": "When to start, watch from scratch by default"
            },
            "full_screen": {
              "type": "boolean",
              "description": "Full Screen"
            },
            "playback_speed": {
              "type": "float",
              "description": "Playback Speed"
            },
            "danmaku": {
              "type": "boolean",
              "description": "enable bullet text"
            }
          },
          "required": [
            "video_name",
            "start",
            "full_screen",
            "playback_speed",
            "danmaku"
          ]
        }
      },
      {
        "name": "SocialCommunication.Community.pinCommunityPost",
        "description": "Pin a post to a specific community",
        "parameters": {
          "type": "object",
          "properties": {
            "community_name": {
              "type": "string",
              "description": "The name of the community to pin the post to"
            },
            "post_name": {
              "type": "string",
              "description": "Title of the post to sticky"
            }
          },
          "required": [
            "community_name",
            "post_name"
          ]
        }
      },
      {
        "name": "Navigation.PublicTransit.queryBusRoutes",
        "description": "Query bus route information by condition",
        "parameters": {
          "type": "object",
          "properties": {
            "departure": {
              "type": "string",
              "description": "Starting location, default current location"
            },
            "destination": {
              "type": "string",
              "description": "destination"
            },
            "preferred_line": {
              "type": "string",
              "description": "Departure time, the default departure time is now; the preferred route type, such as the shortest time, less transfer, less walking, etc."
            }
          },
          "required": [
            "departure",
            "destination",
            "preferred_line"
          ]
        }
      }
    ],
    "single_tool": [
      {
        "name": "VideoPlayback.OnlineVideos.playOnlineVideo",
        "description": "Watch the video (when to start, watch from scratch by default)",
        "parameters": {
          "type": "object",
          "properties": {
            "video_name": {
              "type": "string",
              "description": "Video Name"
            },
            "start": {
              "type": "string",
              "description": "When to start, watch from scratch by default"
            },
            "full_screen": {
              "type": "boolean",
              "description": "Full Screen"
            },
            "playback_speed": {
              "type": "float",
              "description": "Playback Speed"
            },
            "danmaku": {
              "type": "boolean",
              "description": "enable bullet text"
            }
          },
          "required": [
            "video_name",
            "start",
            "full_screen",
            "playback_speed",
            "danmaku"
          ]
        }
      }
    ],
    "id": 959
  },
  {
    "messages": [
      {
        "role": "user",
        "content": "Can you check the delivery between the recipient is a DJJ and the sender is a WRX?"
      },
      {
        "role": "function call",
        "content": {
          "name": "OnlineShopping.ExpressDelivery.searchExpress",
          "arguments": {
            "recipient_name": "DJJ",
            "send_name": "WRX"
          }
        }
      },
      {
        "role": "assistant",
        "content": "Please provide the courier slip number and recipient address"
      },
      {
        "role": "user",
        "content": "The courier number is 987654321098765 and the address of the recipient is 1000 Lujiazui Ring Road, Pudong New Area, Shanghai."
      },
      {
        "role": "function call",
        "content": {
          "name": "OnlineShopping.ExpressDelivery.searchExpress",
          "arguments": {
            "recipient_name": "DJJ",
            "send_name": "WRX",
            "express_id": "987654321098765"
          }
        }
      },
      {
        "role": "assistant",
        "content": "What's the shipping date?"
      },
      {
        "role": "user",
        "content": "It was wrong before. Tracking Number should be 987654321"
      },
      {
        "role": "function call",
        "content": {
          "name": "OnlineShopping.ExpressDelivery.searchExpress",
          "arguments": {
            "recipient_name": "DJJ",
            "send_name": "WRX",
            "express_id": "987654321"
          }
        }
      },
      {
        "role": "assistant",
        "content": "What's the shipping date?"
      },
      {
        "role": "user",
        "content": "The delivery date is Thursday, May 5th."
      },
      {
        "role": "function call",
        "content": {
          "name": "OnlineShopping.ExpressDelivery.searchExpress",
          "arguments": {
            "recipient_name": "DJJ",
            "send_name": "WRX",
            "express_id": "987654321",
            "date": "May 5"
          }
        }
      }
    ],
    "multiple_tools": [
      {
        "name": "ConvenientLiving.GovernmentServices.queryEducationalQualificationVerification",
        "description": "Verify the authenticity of your qualifications by querying relevant information about your qualifications",
        "parameters": {
          "type": "object",
          "properties": {
            "graduate_name": {
              "type": "string",
              "description": "Graduate Name"
            },
            "school_name": {
              "type": "string",
              "description": "Graduate School Name"
            }
          },
          "required": [
            "graduate_name",
            "school_name"
          ]
        }
      },
      {
        "name": "OnlineShopping.ExpressDelivery.searchExpress",
        "description": "Search courier logistics based on information such as designated courier number, recipient, address, etc.",
        "parameters": {
          "type": "object",
          "properties": {
            "express_id": {
              "type": "string",
              "description": "Tracking Number"
            },
            "date": {
              "type": "string",
              "description": "Shipping date"
            },
            "send_name": {
              "type": "string",
              "description": "Name Of Sender"
            },
            "recipient_name": {
              "type": "string",
              "description": "Recipient's name"
            }
          },
          "required": [
            "express_id",
            "date",
            "send_name",
            "recipient_name"
          ]
        }
      },
      {
        "name": "ConvenientLiving.JobRecruitment.checkJobPositionAvailability",
        "description": "Check if a specific position is still being recruited",
        "parameters": {
          "type": "object",
          "properties": {
            "job_name": {
              "type": "string",
              "description": "Position name"
            },
            "company_name": {
              "type": "string",
              "description": "Company name"
            }
          },
          "required": [
            "job_name",
            "company_name"
          ]
        }
      },
      {
        "name": "OnlineShopping.ExpressDelivery.rateExpressService",
        "description": "Rate courier service",
        "parameters": {
          "type": "object",
          "properties": {
            "express_id": {
              "type": "string",
              "description": "Tracking Number"
            },
            "signing_date": {
              "type": "string",
              "description": "The date of signing"
            },
            "rating": {
              "type": "string",
              "description": "Rating, 1-5 points"
            },
            "comment": {
              "type": "string",
              "description": "Scoring contents"
            }
          },
          "required": [
            "express_id",
            "signing_date",
            "rating",
            "comment"
          ]
        }
      },
      {
        "name": "ConvenientLiving.GovernmentServices.queryTaxDeclarationStatus",
        "description": "Check the progress and results of your tax returns",
        "parameters": {
          "type": "object",
          "properties": {
            "tax_type": {
              "type": "string",
              "description": "Tax types, such as personal income tax, corporate income tax, etc."
            },
            "tax_period": {
              "type": "string",
              "description": "Tax reporting period"
            }
          },
          "required": [
            "tax_type",
            "tax_period"
          ]
        }
      }
    ],
    "single_tool": [
      {
        "name": "OnlineShopping.ExpressDelivery.searchExpress",
        "description": "Search courier logistics based on information such as designated courier number, recipient, address, etc.",
        "parameters": {
          "type": "object",
          "properties": {
            "express_id": {
              "type": "string",
              "description": "Tracking Number"
            },
            "date": {
              "type": "string",
              "description": "Shipping date"
            },
            "send_name": {
              "type": "string",
              "description": "Name Of Sender"
            },
            "recipient_name": {
              "type": "string",
              "description": "Recipient's name"
            }
          },
          "required": [
            "express_id",
            "date",
            "send_name",
            "recipient_name"
          ]
        }
      }
    ],
    "id": 971
  },
  {
    "messages": [
      {
        "role": "user",
        "content": "Historical transactions and consignments, I'd like to take a look at them together."
      },
      {
        "role": "function call",
        "content": {
          "name": "Finance.Stocks.viewStockoperate",
          "arguments": {
            "entrust_his": true,
            "transaction_his": true
          }
        }
      },
      {
        "role": "assistant",
        "content": "Whether a T operation is required Default 0 No"
      },
      {
        "role": "user",
        "content": "Yes"
      },
      {
        "role": "function call",
        "content": {
          "name": "Finance.Stocks.viewStockoperate",
          "arguments": {
            "entrust_his": true,
            "transaction_his": true,
            "T_operate": true
          }
        }
      },
      {
        "role": "assistant",
        "content": "Whether the day's delegation is required Default 0 No"
      },
      {
        "role": "user",
        "content": "It was wrong before. Historical delegation default: 0 No should be False"
      },
      {
        "role": "function call",
        "content": {
          "name": "Finance.Stocks.viewStockoperate",
          "arguments": {
            "entrust_his": false,
            "transaction_his": true,
            "T_operate": true
          }
        }
      },
      {
        "role": "assistant",
        "content": "Whether the day's delegation is required Default 0 No"
      },
      {
        "role": "user",
        "content": "Yes"
      },
      {
        "role": "function call",
        "content": {
          "name": "Finance.Stocks.viewStockoperate",
          "arguments": {
            "entrust_his": false,
            "transaction_his": true,
            "T_operate": true,
            "entrust_today": true
          }
        }
      }
    ],
    "multiple_tools": [
      {
        "name": "Finance.Stocks.viewStockoperate",
        "description": "Query the stock market on the day of trading; the day of consignment; historical trading; historical consignment; T operation",
        "parameters": {
          "type": "object",
          "properties": {
            "transaction_today": {
              "type": "boolean",
              "description": "Deal of the day Default: 0 No"
            },
            "entrust_today": {
              "type": "boolean",
              "description": "Delegation of the day default: 0 No"
            },
            "transaction_his": {
              "type": "boolean",
              "description": "History Closing Default: 0 No"
            },
            "entrust_his": {
              "type": "boolean",
              "description": "Historical delegation default: 0 No"
            },
            "T_operate": {
              "type": "boolean",
              "description": "T Operation default: 0 No"
            }
          },
          "required": [
            "transaction_today",
            "entrust_today",
            "transaction_his",
            "entrust_his",
            "T_operate"
          ]
        }
      },
      {
        "name": "MusicRadio.OnlineMusic.setMusicPreferences",
        "description": "Set your preferences by music type, musician, and language",
        "parameters": {
          "type": "object",
          "properties": {
            "genres": {
              "type": "string",
              "description": "Music type"
            }
          },
          "required": [
            "genres"
          ]
        }
      },
      {
        "name": "Travel.ScenicAreaServices.recommendSimilarScenicSpots",
        "description": "Recommend similar other scenic spots based on designated scenic spots",
        "parameters": {
          "type": "object",
          "properties": {
            "name": {
              "type": "string",
              "description": "Name of scenic spot for reference"
            }
          },
          "required": [
            "name"
          ]
        }
      },
      {
        "name": "MusicRadio.Karaoke.setMusicPreferences",
        "description": "Set your preferences by music type, musician, and language",
        "parameters": {
          "type": "object",
          "properties": {
            "genres": {
              "type": "string",
              "description": "Music type"
            }
          },
          "required": [
            "genres"
          ]
        }
      },
      {
        "name": "UtilityTools.Calendar.alterCalendarschedule",
        "description": "Modify a schedule",
        "parameters": {
          "type": "object",
          "properties": {
            "date_name": {
              "type": "string",
              "description": "Visiting program name"
            },
            "date_name_before": {
              "type": "string",
              "description": "Modified Schedule Name"
            },
            "start_date": {
              "type": "string",
              "description": "Schedule start time"
            },
            "start_date_before": {
              "type": "string",
              "description": "Modified Schedule Start Time"
            }
          },
          "required": [
            "date_name",
            "date_name_before",
            "start_date",
            "start_date_before"
          ]
        }
      }
    ],
    "single_tool": [
      {
        "name": "Finance.Stocks.viewStockoperate",
        "description": "Query the stock market on the day of trading; the day of consignment; historical trading; historical consignment; T operation",
        "parameters": {
          "type": "object",
          "properties": {
            "transaction_today": {
              "type": "boolean",
              "description": "Deal of the day Default: 0 No"
            },
            "entrust_today": {
              "type": "boolean",
              "description": "Delegation of the day default: 0 No"
            },
            "transaction_his": {
              "type": "boolean",
              "description": "History Closing Default: 0 No"
            },
            "entrust_his": {
              "type": "boolean",
              "description": "Historical delegation default: 0 No"
            },
            "T_operate": {
              "type": "boolean",
              "description": "T Operation default: 0 No"
            }
          },
          "required": [
            "transaction_today",
            "entrust_today",
            "transaction_his",
            "entrust_his",
            "T_operate"
          ]
        }
      }
    ],
    "id": 973
  },
  {
    "messages": [
      {
        "role": "user",
        "content": "Summer solstice 6pm, family barbecue time, don't forget to create a schedule on the Aishang calendar to remind me"
      },
      {
        "role": "function call",
        "content": {
          "name": "UtilityTools.Calendar.addCalendarschedule",
          "arguments": {
            "date_name": "Family BBQ",
            "start_date": "Summer solstice 6pm"
          }
        }
      },
      {
        "role": "assistant",
        "content": "What is the end time of the schedule If you are not sure you can use the default 24 o'clock on the day"
      },
      {
        "role": "user",
        "content": "We'll let you know if anything changes on September 10th at 5pm."
      },
      {
        "role": "function call",
        "content": {
          "name": "UtilityTools.Calendar.addCalendarschedule",
          "arguments": {
            "date_name": "Family BBQ",
            "start_date": "Summer solstice 6pm",
            "end_date": "September 10th at 5pm"
          }
        }
      },
      {
        "role": "assistant",
        "content": "What is the description of the agenda"
      },
      {
        "role": "user",
        "content": "It was wrong before. Schedule end time; do not write the default start time 24 o'clock on the same day should be 26-Dec"
      },
      {
        "role": "function call",
        "content": {
          "name": "UtilityTools.Calendar.addCalendarschedule",
          "arguments": {
            "date_name": "Family BBQ",
            "start_date": "Summer solstice 6pm",
            "end_date": "26-Dec"
          }
        }
      },
      {
        "role": "assistant",
        "content": "What is the description of the agenda"
      },
      {
        "role": "user",
        "content": "Prepare thank you notes and small gifts to make sure it goes smoothly."
      },
      {
        "role": "function call",
        "content": {
          "name": "UtilityTools.Calendar.addCalendarschedule",
          "arguments": {
            "date_name": "Family BBQ",
            "start_date": "Summer solstice 6pm",
            "end_date": "26-Dec",
            "schedule": "Prepare thank-you notes and small gifts"
          }
        }
      }
    ],
    "multiple_tools": [
      {
        "name": "UtilityTools.AlarmClock.addAlarm",
        "description": "New key for an alarm clock",
        "parameters": {
          "type": "object",
          "properties": {
            "clock_time_name": {
              "type": "string",
              "description": "Alarm name, default is empty"
            },
            "clock_time": {
              "type": "string",
              "description": "Alarm time"
            }
          },
          "required": [
            "clock_time_name",
            "clock_time"
          ]
        }
      },
      {
        "name": "Health.HealthManagement.createHealthReminder",
        "description": "Create health reminders by reminder content and reminder time",
        "parameters": {
          "type": "object",
          "properties": {
            "content": {
              "type": "string",
              "description": "Alert Content"
            },
            "time": {
              "type": "string",
              "description": "Reminder time"
            }
          },
          "required": [
            "content",
            "time"
          ]
        }
      },
      {
        "name": "UtilityTools.Calendar.addCalendarschedule",
        "description": "Create a new schedule",
        "parameters": {
          "type": "object",
          "properties": {
            "date_name": {
              "type": "string",
              "description": "Visiting program name"
            },
            "start_date": {
              "type": "string",
              "description": "Schedule start time"
            },
            "end_date": {
              "type": "string",
              "description": "Schedule end time; do not write the default start time 24 o'clock on the same day"
            },
            "schedule": {
              "type": "string",
              "description": "Schedule Related Descriptions"
            }
          },
          "required": [
            "date_name",
            "start_date",
            "end_date",
            "schedule"
          ]
        }
      },
      {
        "name": "UtilityTools.Calendar.addCalendarClock",
        "description": "Set a schedule reminder",
        "parameters": {
          "type": "object",
          "properties": {
            "date_name": {
              "type": "string",
              "description": "Visiting program name"
            },
            "start_date": {
              "type": "string",
              "description": "Schedule Reminder Time"
            }
          },
          "required": [
            "date_name",
            "start_date"
          ]
        }
      },
      {
        "name": "UtilityTools.Memo.setNotesReminders",
        "description": "Set a reminder at a certain time",
        "parameters": {
          "type": "object",
          "properties": {
            "title": {
              "type": "string",
              "description": "Memo Title"
            },
            "time": {
              "type": "string",
              "description": "Reminder time"
            },
            "category": {
              "type": "string",
              "description": "Classify"
            }
          },
          "required": [
            "title",
            "time",
            "category"
          ]
        }
      }
    ],
    "single_tool": [
      {
        "name": "UtilityTools.Calendar.addCalendarschedule",
        "description": "Create a new schedule",
        "parameters": {
          "type": "object",
          "properties": {
            "date_name": {
              "type": "string",
              "description": "Visiting program name"
            },
            "start_date": {
              "type": "string",
              "description": "Schedule start time"
            },
            "end_date": {
              "type": "string",
              "description": "Schedule end time; do not write the default start time 24 o'clock on the same day"
            },
            "schedule": {
              "type": "string",
              "description": "Schedule Related Descriptions"
            }
          },
          "required": [
            "date_name",
            "start_date",
            "end_date",
            "schedule"
          ]
        }
      }
    ],
    "id": 976
  },
  {
    "messages": [
      {
        "role": "user",
        "content": "Mark October 31, 2024 as a Halloween party on your calendar"
      },
      {
        "role": "function call",
        "content": {
          "name": "UtilityTools.Calendar.addCalendarschedule",
          "arguments": {
            "date_name": "Halloween Party",
            "start_date": "31-Oct-2024"
          }
        }
      },
      {
        "role": "assistant",
        "content": "When the schedule ends If you are not sure, you can use the default of 24 o'clock on the day"
      },
      {
        "role": "user",
        "content": "December 26th at 24:00"
      },
      {
        "role": "function call",
        "content": {
          "name": "UtilityTools.Calendar.addCalendarschedule",
          "arguments": {
            "date_name": "Halloween Party",
            "start_date": "31-Oct-2024",
            "end_date": "26-Dec"
          }
        }
      },
      {
        "role": "assistant",
        "content": "Please provide a description of your schedule"
      },
      {
        "role": "user",
        "content": "It was wrong before. Schedule end time; do not write the default start time 24 o'clock on the same day should be September 10th at 5pm"
      },
      {
        "role": "function call",
        "content": {
          "name": "UtilityTools.Calendar.addCalendarschedule",
          "arguments": {
            "date_name": "Halloween Party",
            "start_date": "31-Oct-2024",
            "end_date": "September 10th at 5pm"
          }
        }
      },
      {
        "role": "assistant",
        "content": "Please provide a description of your schedule"
      },
      {
        "role": "user",
        "content": "The main activities include having dinner and exchanging gifts."
      },
      {
        "role": "function call",
        "content": {
          "name": "UtilityTools.Calendar.addCalendarschedule",
          "arguments": {
            "date_name": "Halloween Party",
            "start_date": "31-Oct-2024",
            "end_date": "September 10th at 5pm",
            "schedule": "Exchanging gifts"
          }
        }
      }
    ],
    "multiple_tools": [
      {
        "name": "ConvenientLiving.JobRecruitment.collectJob",
        "description": "Favorite posts of interest",
        "parameters": {
          "type": "object",
          "properties": {
            "job_name": {
              "type": "string",
              "description": "Position name"
            },
            "company_name": {
              "type": "string",
              "description": "Company name"
            }
          },
          "required": [
            "job_name",
            "company_name"
          ]
        }
      },
      {
        "name": "UtilityTools.Calendar.addCalendarschedule",
        "description": "Create a new schedule",
        "parameters": {
          "type": "object",
          "properties": {
            "date_name": {
              "type": "string",
              "description": "Visiting program name"
            },
            "start_date": {
              "type": "string",
              "description": "Schedule start time"
            },
            "end_date": {
              "type": "string",
              "description": "Schedule end time; do not write the default start time 24 o'clock on the same day"
            },
            "schedule": {
              "type": "string",
              "description": "Schedule Related Descriptions"
            }
          },
          "required": [
            "date_name",
            "start_date",
            "end_date",
            "schedule"
          ]
        }
      },
      {
        "name": "Navigation.TrainTickets.addTrainWaitlistOrder",
        "description": "User submits train ticket standby order",
        "parameters": {
          "type": "object",
          "properties": {
            "train_number": {
              "type": "string",
              "description": "Number of trips to book; select all by default, up to 6"
            },
            "passenger_name": {
              "type": "string",
              "description": "Rider's name"
            },
            "passenger_id": {
              "type": "string",
              "description": "Rider ID number"
            },
            "ride_date": {
              "type": "string",
              "description": "Trip date in YYYY-MM-DD format"
            },
            "departure_station": {
              "type": "string",
              "description": "Departure Station"
            },
            "destination_station": {
              "type": "string",
              "description": "arrival station"
            },
            "seat_type": {
              "type": "string",
              "description": "Seat Type"
            }
          },
          "required": [
            "train_number",
            "passenger_name",
            "passenger_id",
            "ride_date",
            "departure_station",
            "destination_station",
            "seat_type"
          ]
        }
      },
      {
        "name": "Navigation.MapNavigation.addRemakeToCommonAddress",
        "description": "Add a note to your favorite address",
        "parameters": {
          "type": "object",
          "properties": {
            "address": {
              "type": "string",
              "description": "Primary address for note"
            },
            "remake": {
              "type": "string",
              "description": "Comment Message Content"
            }
          },
          "required": [
            "address",
            "remake"
          ]
        }
      },
      {
        "name": "Photography.PhotoEditing.addWatermarkToPicture",
        "description": "Add a watermark to your photo",
        "parameters": {
          "type": "object",
          "properties": {
            "name_or_path": {
              "type": "string",
              "description": "Photo name or path"
            },
            "text": {
              "type": "string",
              "description": "Watermark text content"
            }
          },
          "required": [
            "name_or_path",
            "text"
          ]
        }
      }
    ],
    "single_tool": [
      {
        "name": "UtilityTools.Calendar.addCalendarschedule",
        "description": "Create a new schedule",
        "parameters": {
          "type": "object",
          "properties": {
            "date_name": {
              "type": "string",
              "description": "Visiting program name"
            },
            "start_date": {
              "type": "string",
              "description": "Schedule start time"
            },
            "end_date": {
              "type": "string",
              "description": "Schedule end time; do not write the default start time 24 o'clock on the same day"
            },
            "schedule": {
              "type": "string",
              "description": "Schedule Related Descriptions"
            }
          },
          "required": [
            "date_name",
            "start_date",
            "end_date",
            "schedule"
          ]
        }
      }
    ],
    "id": 977
  },
  {
    "messages": [
      {
        "role": "user",
        "content": "Can you help me change Wang Wu's alternate reservation seat into a soft bed?"
      },
      {
        "role": "function call",
        "content": {
          "name": "Navigation.TrainTickets.updateTrainWaitlistOrder",
          "arguments": {
            "new_seat_type": "Softbed",
            "passenger_name": "Wangwu"
          }
        }
      },
      {
        "role": "assistant",
        "content": "What number of trips are booked?"
      },
      {
        "role": "user",
        "content": "My booking is D789 from Beijing to Shanghai."
      },
      {
        "role": "function call",
        "content": {
          "name": "Navigation.TrainTickets.updateTrainWaitlistOrder",
          "arguments": {
            "new_seat_type": "Softbed",
            "passenger_name": "Wangwu",
            "train_number": "D789"
          }
        }
      },
      {
        "role": "assistant",
        "content": "What's the number of trips on the modified reservation"
      },
      {
        "role": "user",
        "content": "It was wrong before. Seat Type should be First class seat"
      },
      {
        "role": "function call",
        "content": {
          "name": "Navigation.TrainTickets.updateTrainWaitlistOrder",
          "arguments": {
            "new_seat_type": "First class seat",
            "passenger_name": "Wangwu",
            "train_number": "D789"
          }
        }
      },
      {
        "role": "assistant",
        "content": "What's the number of trips on the modified reservation"
      },
      {
        "role": "user",
        "content": "The number of the modified reservation is D987, check if this information is correct."
      },
      {
        "role": "function call",
        "content": {
          "name": "Navigation.TrainTickets.updateTrainWaitlistOrder",
          "arguments": {
            "new_seat_type": "First class seat",
            "passenger_name": "Wangwu",
            "train_number": "D789",
            "after_number": "D987"
          }
        }
      }
    ],
    "multiple_tools": [
      {
        "name": "Finance.Funds.updateFundRedeemAmount",
        "description": "Update Redemption Amount for Designated Funds",
        "parameters": {
          "type": "object",
          "properties": {
            "fund_name": {
              "type": "string",
              "description": "Fund name"
            },
            "fund_code": {
              "type": "string",
              "description": "Fund  Code"
            },
            "new_amount": {
              "type": "float",
              "description": "Updated redemption amount, unit (yuan)"
            },
            "delta_amount": {
              "type": "float",
              "description": "Increase or decrease in redemption amount, unit (yuan)"
            }
          },
          "required": [
            "fund_name",
            "fund_code",
            "new_amount",
            "delta_amount"
          ]
        }
      },
      {
        "name": "Navigation.FlightTickets.modifyFlightBooking",
        "description": "Changing the departure time of a booked flight is not supported for departure and destination changes",
        "parameters": {
          "type": "object",
          "properties": {
            "departure": {
              "type": "string",
              "description": "Origination"
            },
            "destination": {
              "type": "string",
              "description": "Reach ground"
            },
            "name": {
              "type": "string",
              "description": "Name of person who booked"
            },
            "time": {
              "type": "string",
              "description": "Flight duration before modification"
            },
            "alter_time": {
              "type": "string",
              "description": "Revised flight time"
            },
            "alter_seat": {
              "type": "string",
              "description": "Class Selection"
            }
          },
          "required": [
            "departure",
            "destination",
            "name",
            "time",
            "alter_time",
            "alter_seat"
          ]
        }
      },
      {
        "name": "UtilityTools.AlarmClock.alterAlarm",
        "description": "Modify the alarm clock, including alarm time, ringing method, etc.",
        "parameters": {
          "type": "object",
          "properties": {
            "clock_time_name": {
              "type": "string",
              "description": "Alarm name, defaults to all alarms"
            },
            "clock_time": {
              "type": "string",
              "description": "Alarm time"
            },
            "target_time": {
              "type": "string",
              "description": "Modified target time"
            }
          },
          "required": [
            "clock_time_name",
            "clock_time",
            "target_time"
          ]
        }
      },
      {
        "name": "Navigation.TrainTickets.updateTrainWaitlistOrder",
        "description": "Used to modify submitted train ticket waiting list information",
        "parameters": {
          "type": "object",
          "properties": {
            "train_number": {
              "type": "string",
              "description": "Booked trips"
            },
            "passenger_name": {
              "type": "string",
              "description": "Rider's name"
            },
            "after_number": {
              "type": "string",
              "description": "Booked trips"
            },
            "new_departure_date": {
              "type": "string",
              "description": "New departure date, format 'YYYY-MM-DD', optional if modified"
            },
            "new_seat_type": {
              "type": "string",
              "description": "Seat Type"
            }
          },
          "required": [
            "train_number",
            "passenger_name",
            "after_number",
            "new_departure_date",
            "new_seat_type"
          ]
        }
      },
      {
        "name": "Navigation.TaxiCarRental.modifyCarRentalOrder",
        "description": "Modify the contents of a rental order, such as pick-up time, drop-off time, pick-up person, pick-up location, etc.",
        "parameters": {
          "type": "object",
          "properties": {
            "time": {
              "type": "string",
              "description": "Release Date"
            }
          },
          "required": [
            "time"
          ]
        }
      }
    ],
    "single_tool": [
      {
        "name": "Navigation.TrainTickets.updateTrainWaitlistOrder",
        "description": "Used to modify submitted train ticket waiting list information",
        "parameters": {
          "type": "object",
          "properties": {
            "train_number": {
              "type": "string",
              "description": "Booked trips"
            },
            "passenger_name": {
              "type": "string",
              "description": "Rider's name"
            },
            "after_number": {
              "type": "string",
              "description": "Booked trips"
            },
            "new_departure_date": {
              "type": "string",
              "description": "New departure date, format 'YYYY-MM-DD', optional if modified"
            },
            "new_seat_type": {
              "type": "string",
              "description": "Seat Type"
            }
          },
          "required": [
            "train_number",
            "passenger_name",
            "after_number",
            "new_departure_date",
            "new_seat_type"
          ]
        }
      }
    ],
    "id": 983
  },
  {
    "messages": [
      {
        "role": "user",
        "content": "Classmate Ai, please help me adjust the date of Wang Xiaoming's alternate order on Taobao to October 11th"
      },
      {
        "role": "function call",
        "content": {
          "name": "Navigation.TrainTickets.updateTrainWaitlistOrder",
          "arguments": {
            "passenger_name": "Wang Xiaoming",
            "new_departure_date": "October 11th"
          }
        }
      },
      {
        "role": "assistant",
        "content": "What number of trips are booked?"
      },
      {
        "role": "user",
        "content": "My number is G123, but there seems to be more information you need to know?"
      },
      {
        "role": "function call",
        "content": {
          "name": "Navigation.TrainTickets.updateTrainWaitlistOrder",
          "arguments": {
            "passenger_name": "Wang Xiaoming",
            "new_departure_date": "October 11th",
            "train_number": "G123"
          }
        }
      },
      {
        "role": "assistant",
        "content": "What's the number of trips on the modified reservation"
      },
      {
        "role": "user",
        "content": "It was wrong before. New departure date, format 'YYYY-MM-DD', optional if modified should be 2023-09-01"
      },
      {
        "role": "function call",
        "content": {
          "name": "Navigation.TrainTickets.updateTrainWaitlistOrder",
          "arguments": {
            "passenger_name": "Wang Xiaoming",
            "new_departure_date": "2023-09-01",
            "train_number": "G123"
          }
        }
      },
      {
        "role": "assistant",
        "content": "What's the number of trips on the modified reservation"
      },
      {
        "role": "user",
        "content": "My modified booking is G456."
      },
      {
        "role": "function call",
        "content": {
          "name": "Navigation.TrainTickets.updateTrainWaitlistOrder",
          "arguments": {
            "passenger_name": "Wang Xiaoming",
            "new_departure_date": "2023-09-01",
            "train_number": "G123",
            "after_number": "G456"
          }
        }
      }
    ],
    "multiple_tools": [
      {
        "name": "Finance.Banking.redempteFinancialProducts",
        "description": "Redeem purchased wealth management products",
        "parameters": {
          "type": "object",
          "properties": {
            "product": {
              "type": "string",
              "description": "Name of financial product"
            },
            "redempte_amount": {
              "type": "float",
              "description": "Redemption Amount"
            }
          },
          "required": [
            "product",
            "redempte_amount"
          ]
        }
      },
      {
        "name": "Finance.Funds.recommendFunds",
        "description": "Recommend user-friendly funds based on investment objectives and duration",
        "parameters": {
          "type": "object",
          "properties": {
            "objective": {
              "type": "string",
              "description": "Investment objectives such as robust, aggressive"
            },
            "investment_term": {
              "type": "string",
              "description": "Investment term, e.g. short term, long term"
            }
          },
          "required": [
            "objective",
            "investment_term"
          ]
        }
      },
      {
        "name": "Navigation.TrainTickets.updateTrainWaitlistOrder",
        "description": "Used to modify submitted train ticket waiting list information",
        "parameters": {
          "type": "object",
          "properties": {
            "train_number": {
              "type": "string",
              "description": "Booked trips"
            },
            "passenger_name": {
              "type": "string",
              "description": "Rider's name"
            },
            "after_number": {
              "type": "string",
              "description": "Booked trips"
            },
            "new_departure_date": {
              "type": "string",
              "description": "New departure date, format 'YYYY-MM-DD', optional if modified"
            },
            "new_seat_type": {
              "type": "string",
              "description": "Seat Type"
            }
          },
          "required": [
            "train_number",
            "passenger_name",
            "after_number",
            "new_departure_date",
            "new_seat_type"
          ]
        }
      },
      {
        "name": "ConvenientLiving.FoodDelivery.rateRestaurantOrderDelivery",
        "description": "Rate delivery people on completed orders",
        "parameters": {
          "type": "object",
          "properties": {
            "order_name": {
              "type": "string",
              "description": "Name of the order"
            },
            "rating": {
              "type": "integer",
              "description": "Rating between 1 and 5"
            },
            "comment": {
              "type": "string",
              "description": "Review Content"
            }
          },
          "required": [
            "order_name",
            "rating",
            "comment"
          ]
        }
      },
      {
        "name": "Finance.Stocks.viewStockincome",
        "description": "Reference profit and loss for the day",
        "parameters": {
          "type": "object",
          "properties": {},
          "required": []
        }
      }
    ],
    "single_tool": [
      {
        "name": "Navigation.TrainTickets.updateTrainWaitlistOrder",
        "description": "Used to modify submitted train ticket waiting list information",
        "parameters": {
          "type": "object",
          "properties": {
            "train_number": {
              "type": "string",
              "description": "Booked trips"
            },
            "passenger_name": {
              "type": "string",
              "description": "Rider's name"
            },
            "after_number": {
              "type": "string",
              "description": "Booked trips"
            },
            "new_departure_date": {
              "type": "string",
              "description": "New departure date, format 'YYYY-MM-DD', optional if modified"
            },
            "new_seat_type": {
              "type": "string",
              "description": "Seat Type"
            }
          },
          "required": [
            "train_number",
            "passenger_name",
            "after_number",
            "new_departure_date",
            "new_seat_type"
          ]
        }
      }
    ],
    "id": 984
  },
  {
    "messages": [
      {
        "role": "user",
        "content": "Inside the Pocket Bus, do I have a collection of the line from the past company?"
      },
      {
        "role": "function call",
        "content": {
          "name": "Navigation.PublicTransit.favoriteBusRoutes",
          "arguments": {
            "departure": "Home",
            "destination": "Company"
          }
        }
      },
      {
        "role": "assistant",
        "content": "Please provide the bus routes you would like to collect"
      },
      {
        "role": "user",
        "content": "I want to collect bus line 215."
      },
      {
        "role": "function call",
        "content": {
          "name": "Navigation.PublicTransit.favoriteBusRoutes",
          "arguments": {
            "departure": "Home",
            "destination": "Company",
            "line": "215"
          }
        }
      },
      {
        "role": "assistant",
        "content": "Please provide the name of the bus route you would like to collect"
      },
      {
        "role": "user",
        "content": "It was wrong before. destination should be People's Square"
      },
      {
        "role": "function call",
        "content": {
          "name": "Navigation.PublicTransit.favoriteBusRoutes",
          "arguments": {
            "departure": "Home",
            "destination": "People's Square",
            "line": "215"
          }
        }
      },
      {
        "role": "assistant",
        "content": "Please provide the name of the bus route you would like to collect"
      },
      {
        "role": "user",
        "content": "Tourist Line 101"
      },
      {
        "role": "function call",
        "content": {
          "name": "Navigation.PublicTransit.favoriteBusRoutes",
          "arguments": {
            "departure": "Home",
            "destination": "People's Square",
            "line": "215",
            "bus_name": "Tourist Line 101"
          }
        }
      }
    ],
    "multiple_tools": [
      {
        "name": "Navigation.PublicTransit.favoriteBusRoutes",
        "description": "Favorite Bus Routes",
        "parameters": {
          "type": "object",
          "properties": {
            "line": {
              "type": "string",
              "description": "line"
            },
            "bus_name": {
              "type": "string",
              "description": "Bus name"
            },
            "departure": {
              "type": "string",
              "description": "Starting location, default current location"
            },
            "destination": {
              "type": "string",
              "description": "destination"
            },
            "preferred_line": {
              "type": "string",
              "description": "Departure time, the default departure time is now; the preferred route type, such as the shortest time, less transfer, less walking, etc."
            }
          },
          "required": [
            "line",
            "bus_name",
            "departure",
            "destination",
            "preferred_line"
          ]
        }
      },
      {
        "name": "Navigation.PublicTransit.viewFavoriteBusRoutes",
        "description": "View the user's favorite bus routes",
        "parameters": {
          "type": "object",
          "properties": {},
          "required": []
        }
      },
      {
        "name": "OnlineShopping.Mall.getCartList",
        "description": "View a list of items in your cart",
        "parameters": {
          "type": "object",
          "properties": {},
          "required": []
        }
      },
      {
        "name": "OfficeSoftware.CloudStorage.viewNetdiskCollection",
        "description": "View Drive Favorites",
        "parameters": {
          "type": "object",
          "properties": {},
          "required": []
        }
      },
      {
        "name": "OfficeSoftware.CloudStorage.netdiskCheckStorageUsage",
        "description": "See how much storage you're using and what's left",
        "parameters": {
          "type": "object",
          "properties": {},
          "required": []
        }
      }
    ],
    "single_tool": [
      {
        "name": "Navigation.PublicTransit.favoriteBusRoutes",
        "description": "Favorite Bus Routes",
        "parameters": {
          "type": "object",
          "properties": {
            "line": {
              "type": "string",
              "description": "line"
            },
            "bus_name": {
              "type": "string",
              "description": "Bus name"
            },
            "departure": {
              "type": "string",
              "description": "Starting location, default current location"
            },
            "destination": {
              "type": "string",
              "description": "destination"
            },
            "preferred_line": {
              "type": "string",
              "description": "Departure time, the default departure time is now; the preferred route type, such as the shortest time, less transfer, less walking, etc."
            }
          },
          "required": [
            "line",
            "bus_name",
            "departure",
            "destination",
            "preferred_line"
          ]
        }
      }
    ],
    "id": 997
  },
  {
    "messages": [
      {
        "role": "user",
        "content": "Fast subway line 5, I like to transfer less, collect it"
      },
      {
        "role": "function call",
        "content": {
          "name": "Navigation.PublicTransit.favoriteBusRoutes",
          "arguments": {
            "line": "Rapid Line 5",
            "preferred_line": "Fewer transfers"
          }
        }
      },
      {
        "role": "assistant",
        "content": "What's the name of the bus?"
      },
      {
        "role": "user",
        "content": "Bus Rapid Transit Line 1"
      },
      {
        "role": "function call",
        "content": {
          "name": "Navigation.PublicTransit.favoriteBusRoutes",
          "arguments": {
            "line": "Rapid Line 5",
            "preferred_line": "Fewer transfers",
            "bus_name": "Bus Rapid Transit Line 1"
          }
        }
      },
      {
        "role": "assistant",
        "content": "Where is the starting point? Is it the current position by default?"
      },
      {
        "role": "user",
        "content": "It was wrong before. Bus name should be Tourist Lines"
      },
      {
        "role": "function call",
        "content": {
          "name": "Navigation.PublicTransit.favoriteBusRoutes",
          "arguments": {
            "line": "Rapid Line 5",
            "preferred_line": "Fewer transfers",
            "bus_name": "Tourist Lines"
          }
        }
      },
      {
        "role": "assistant",
        "content": "Where is the starting point? Is it the current position by default?"
      },
      {
        "role": "user",
        "content": "The starting point is the train station, not the current location."
      },
      {
        "role": "function call",
        "content": {
          "name": "Navigation.PublicTransit.favoriteBusRoutes",
          "arguments": {
            "line": "Rapid Line 5",
            "preferred_line": "Fewer transfers",
            "bus_name": "Tourist Lines",
            "departure": "train station"
          }
        }
      }
    ],
    "multiple_tools": [
      {
        "name": "ConvenientLiving.BuyingRentingHomes.favoriteHouse",
        "description": "Collect homes of interest",
        "parameters": {
          "type": "object",
          "properties": {
            "house_name": {
              "type": "string",
              "description": "Property name"
            }
          },
          "required": [
            "house_name"
          ]
        }
      },
      {
        "name": "Navigation.PublicTransit.favoriteBusRoutes",
        "description": "Favorite Bus Routes",
        "parameters": {
          "type": "object",
          "properties": {
            "line": {
              "type": "string",
              "description": "line"
            },
            "bus_name": {
              "type": "string",
              "description": "Bus name"
            },
            "departure": {
              "type": "string",
              "description": "Starting location, default current location"
            },
            "destination": {
              "type": "string",
              "description": "destination"
            },
            "preferred_line": {
              "type": "string",
              "description": "Departure time, the default departure time is now; the preferred route type, such as the shortest time, less transfer, less walking, etc."
            }
          },
          "required": [
            "line",
            "bus_name",
            "departure",
            "destination",
            "preferred_line"
          ]
        }
      },
      {
        "name": "OnlineShopping.Mall.addCollectCommodity",
        "description": "Collect products by trade name",
        "parameters": {
          "type": "object",
          "properties": {
            "goods": {
              "type": "string",
              "description": "Product Name"
            }
          },
          "required": [
            "goods"
          ]
        }
      },
      {
        "name": "OfficeSoftware.Email.forwardMail",
        "description": "Forward the specified message",
        "parameters": {
          "type": "object",
          "properties": {
            "mail_title": {
              "type": "string",
              "description": "Title of the message to forward"
            },
            "receivers": {
              "type": "string",
              "description": "Recipient of the forwarded message"
            }
          },
          "required": [
            "mail_title",
            "receivers"
          ]
        }
      },
      {
        "name": "OnlineShopping.SecondhandTrading.addCollectSecondhandSale",
        "description": "Collect products by trade name",
        "parameters": {
          "type": "object",
          "properties": {
            "search_name": {
              "type": "string",
              "description": "Product Name"
            }
          },
          "required": [
            "search_name"
          ]
        }
      }
    ],
    "single_tool": [
      {
        "name": "Navigation.PublicTransit.favoriteBusRoutes",
        "description": "Favorite Bus Routes",
        "parameters": {
          "type": "object",
          "properties": {
            "line": {
              "type": "string",
              "description": "line"
            },
            "bus_name": {
              "type": "string",
              "description": "Bus name"
            },
            "departure": {
              "type": "string",
              "description": "Starting location, default current location"
            },
            "destination": {
              "type": "string",
              "description": "destination"
            },
            "preferred_line": {
              "type": "string",
              "description": "Departure time, the default departure time is now; the preferred route type, such as the shortest time, less transfer, less walking, etc."
            }
          },
          "required": [
            "line",
            "bus_name",
            "departure",
            "destination",
            "preferred_line"
          ]
        }
      }
    ],
    "id": 998
  },
  {
    "messages": [
      {
        "role": "user",
        "content": "Find a 1 to 5 minute handmade soap making tutorial video."
      },
      {
        "role": "function call",
        "content": {
          "name": "VideoPlayback.ShortVideos.searchShortVideo",
          "arguments": {
            "keyword": "Handmade soap making tutorial",
            "duration": "1——5 minutes"
          }
        }
      },
      {
        "role": "assistant",
        "content": "Do you need to recommend popular follow-ups or video content for the new journey of film and television?"
      },
      {
        "role": "user",
        "content": "Recommend some popular catch-ups for me."
      },
      {
        "role": "function call",
        "content": {
          "name": "VideoPlayback.ShortVideos.searchShortVideo",
          "arguments": {
            "keyword": "1 to 5 minute handmade soap making tutorial",
            "duration": "1——5 minutes",
            "type": "Popular"
          }
        }
      },
      {
        "role": "assistant",
        "content": "Timeframe for publishing What do you want to limit Within one day Within one week Within half a year"
      },
      {
        "role": "user",
        "content": "It was wrong before. Video time: unlimited, 1 minute, 1--5 minutes, more than 5 minutes should be 1 to 5 minutes"
      },
      {
        "role": "function call",
        "content": {
          "name": "VideoPlayback.ShortVideos.searchShortVideo",
          "arguments": {
            "keyword": "1 to 5 minute handmade soap making tutorial",
            "duration": "1 to 5 minutes",
            "type": "Popular"
          }
        }
      },
      {
        "role": "assistant",
        "content": "Timeframe for publishing What do you want to limit Within one day Within one week Within half a year"
      },
      {
        "role": "user",
        "content": "I would like to limit it to one week."
      },
      {
        "role": "function call",
        "content": {
          "name": "VideoPlayback.ShortVideos.searchShortVideo",
          "arguments": {
            "keyword": "1 to 5 minute handmade soap making tutorial",
            "duration": "1 to 5 minutes",
            "type": "Popular",
            "datetime": "Within one week"
          }
        }
      }
    ],
    "multiple_tools": [
      {
        "name": "UtilityTools.Search.searchWeb",
        "description": "Web search (text, voice, photo search default text)",
        "parameters": {
          "type": "object",
          "properties": {
            "keyword": {
              "type": "string",
              "description": "Search Content"
            },
            "type": {
              "type": "string",
              "description": "Text; Voice; Picture; Default Text"
            }
          },
          "required": [
            "keyword",
            "type"
          ]
        }
      },
      {
        "name": "VideoPlayback.OnlineVideos.searchOnlineVideo",
        "description": "Search online videos, which can be searched based on keywords (director/publisher/video keywords); can be searched based on categories; can be searched based on AI smart search",
        "parameters": {
          "type": "object",
          "properties": {
            "keyword": {
              "type": "array",
              "description": "Director/Publisher/Video Keyword Search"
            },
            "video_type": {
              "type": "string",
              "description": "Video Type Categories, Recommended, Popular, Chase, Film and Television New Journey"
            },
            "ai_search": {
              "type": "string",
              "description": "Based on search history, viewing history can only be turned off by default"
            }
          },
          "required": [
            "keyword",
            "video_type",
            "ai_search"
          ]
        }
      },
      {
        "name": "OfficeSoftware.Documents.searchDocuments",
        "description": "Search documents by keyword",
        "parameters": {
          "type": "object",
          "properties": {
            "keyword": {
              "type": "string",
              "description": "Search keywords, required"
            }
          },
          "required": [
            "keyword"
          ]
        }
      },
      {
        "name": "VideoPlayback.ShortVideos.searchShortVideo",
        "description": "Search for short videos based on keywords (vlog blogger/video keywords/taxonomy keywords)",
        "parameters": {
          "type": "object",
          "properties": {
            "keyword": {
              "type": "string",
              "description": "Short video blogger name/video keyword search"
            },
            "type": {
              "type": "string",
              "description": "Recommended, Popular, Chase, Film and TV New Journey/Reference bilibili, etc."
            },
            "datetime": {
              "type": "string",
              "description": "Release time: unlimited, within a day, within a week, within half a year"
            },
            "duration": {
              "type": "string",
              "description": "Video time: unlimited, 1 minute, 1--5 minutes, more than 5 minutes"
            },
            "ai_search": {
              "type": "string",
              "description": "Based on search history, viewing history can only be searched"
            }
          },
          "required": [
            "keyword",
            "type",
            "datetime",
            "duration",
            "ai_search"
          ]
        }
      },
      {
        "name": "Education.ChildrenEducation.searchChildDanceVideo",
        "description": "Search Kid-Friendly Dance Videos",
        "parameters": {
          "type": "object",
          "properties": {
            "dance_type": {
              "type": "string",
              "description": "Types of dance, such as folk dance, modern dance"
            }
          },
          "required": [
            "dance_type"
          ]
        }
      }
    ],
    "single_tool": [
      {
        "name": "VideoPlayback.ShortVideos.searchShortVideo",
        "description": "Search for short videos based on keywords (vlog blogger/video keywords/taxonomy keywords)",
        "parameters": {
          "type": "object",
          "properties": {
            "keyword": {
              "type": "string",
              "description": "Short video blogger name/video keyword search"
            },
            "type": {
              "type": "string",
              "description": "Recommended, Popular, Chase, Film and TV New Journey/Reference bilibili, etc."
            },
            "datetime": {
              "type": "string",
              "description": "Release time: unlimited, within a day, within a week, within half a year"
            },
            "duration": {
              "type": "string",
              "description": "Video time: unlimited, 1 minute, 1--5 minutes, more than 5 minutes"
            },
            "ai_search": {
              "type": "string",
              "description": "Based on search history, viewing history can only be searched"
            }
          },
          "required": [
            "keyword",
            "type",
            "datetime",
            "duration",
            "ai_search"
          ]
        }
      }
    ],
    "id": 999
  },
  {
    "messages": [
      {
        "role": "user",
        "content": "Short videos recommending some home cooking practices."
      },
      {
        "role": "function call",
        "content": {
          "name": "VideoPlayback.ShortVideos.searchShortVideo",
          "arguments": {
            "keyword": "Home-cooked",
            "type": "Referral"
          }
        }
      },
      {
        "role": "assistant",
        "content": "The release time range is not limited to one day, one week or half a year"
      },
      {
        "role": "user",
        "content": "Within one week"
      },
      {
        "role": "function call",
        "content": {
          "name": "VideoPlayback.ShortVideos.searchShortVideo",
          "arguments": {
            "keyword": "Home-cooked",
            "type": "Referral",
            "datetime": "Within one week"
          }
        }
      },
      {
        "role": "assistant",
        "content": "What is the video timeframe?"
      },
      {
        "role": "user",
        "content": "It was wrong before. Short video blogger name/video keyword search should be The last group construction before the studio closes, take the little buddy to Thailand for a tour"
      },
      {
        "role": "function call",
        "content": {
          "name": "VideoPlayback.ShortVideos.searchShortVideo",
          "arguments": {
            "keyword": "The last group construction before the studio closes, take the little buddy to Thailand for a tour",
            "type": "Referral",
            "datetime": "Within one week"
          }
        }
      },
      {
        "role": "assistant",
        "content": "What is the video timeframe?"
      },
      {
        "role": "user",
        "content": "The duration of the video ranges from 1 to 5 minutes."
      },
      {
        "role": "function call",
        "content": {
          "name": "VideoPlayback.ShortVideos.searchShortVideo",
          "arguments": {
            "keyword": "The last group construction before the studio closes, take the little buddy to Thailand for a tour",
            "type": "Referral",
            "datetime": "Within one week",
            "duration": "1 to 5 minutes"
          }
        }
      }
    ],
    "multiple_tools": [
      {
        "name": "OfficeSoftware.Email.collectMail",
        "description": "Favorite a specified message",
        "parameters": {
          "type": "object",
          "properties": {
            "mail_title": {
              "type": "string",
              "description": "Title of the message to favorite"
            }
          },
          "required": [
            "mail_title"
          ]
        }
      },
      {
        "name": "MusicRadio.Karaoke.getRecommendedAccompaniments",
        "description": "Get my recommended song accompaniment based on historical preferences",
        "parameters": {
          "type": "object",
          "properties": {},
          "required": []
        }
      },
      {
        "name": "Finance.Funds.recommendFunds",
        "description": "Recommend user-friendly funds based on investment objectives and duration",
        "parameters": {
          "type": "object",
          "properties": {
            "objective": {
              "type": "string",
              "description": "Investment objectives such as robust, aggressive"
            },
            "investment_term": {
              "type": "string",
              "description": "Investment term, e.g. short term, long term"
            }
          },
          "required": [
            "objective",
            "investment_term"
          ]
        }
      },
      {
        "name": "NewsMagazines.NewspapersMagazines.getRecommendedMagazines",
        "description": "Recommend newspapers and magazines according to user preferences",
        "parameters": {
          "type": "object",
          "properties": {},
          "required": []
        }
      },
      {
        "name": "VideoPlayback.ShortVideos.searchShortVideo",
        "description": "Search for short videos based on keywords (vlog blogger/video keywords/taxonomy keywords)",
        "parameters": {
          "type": "object",
          "properties": {
            "keyword": {
              "type": "string",
              "description": "Short video blogger name/video keyword search"
            },
            "type": {
              "type": "string",
              "description": "Recommended, Popular, Chase, Film and TV New Journey/Reference bilibili, etc."
            },
            "datetime": {
              "type": "string",
              "description": "Release time: unlimited, within a day, within a week, within half a year"
            },
            "duration": {
              "type": "string",
              "description": "Video time: unlimited, 1 minute, 1--5 minutes, more than 5 minutes"
            },
            "ai_search": {
              "type": "string",
              "description": "Based on search history, viewing history can only be searched"
            }
          },
          "required": [
            "keyword",
            "type",
            "datetime",
            "duration",
            "ai_search"
          ]
        }
      }
    ],
    "single_tool": [
      {
        "name": "VideoPlayback.ShortVideos.searchShortVideo",
        "description": "Search for short videos based on keywords (vlog blogger/video keywords/taxonomy keywords)",
        "parameters": {
          "type": "object",
          "properties": {
            "keyword": {
              "type": "string",
              "description": "Short video blogger name/video keyword search"
            },
            "type": {
              "type": "string",
              "description": "Recommended, Popular, Chase, Film and TV New Journey/Reference bilibili, etc."
            },
            "datetime": {
              "type": "string",
              "description": "Release time: unlimited, within a day, within a week, within half a year"
            },
            "duration": {
              "type": "string",
              "description": "Video time: unlimited, 1 minute, 1--5 minutes, more than 5 minutes"
            },
            "ai_search": {
              "type": "string",
              "description": "Based on search history, viewing history can only be searched"
            }
          },
          "required": [
            "keyword",
            "type",
            "datetime",
            "duration",
            "ai_search"
          ]
        }
      }
    ],
    "id": 1000
  },
  {
    "messages": [
      {
        "role": "user",
        "content": "The view room next to the Oriental Pearl Tower is 8 years old. Estimate the current market value"
      },
      {
        "role": "function call",
        "content": {
          "name": "ConvenientLiving.BuyingRentingHomes.predictHousePrice",
          "arguments": {
            "location": "View room next to Oriental Pearl Tower",
            "age": 8
          }
        }
      },
      {
        "role": "assistant",
        "content": "What's the name of the property"
      },
      {
        "role": "user",
        "content": "The house name is Lvyin Community Building B 202, located in the eastern part of the city."
      },
      {
        "role": "function call",
        "content": {
          "name": "ConvenientLiving.BuyingRentingHomes.predictHousePrice",
          "arguments": {
            "location": "View room next to Oriental Pearl Tower",
            "age": 8,
            "house_name": "202, Building B, Lvyin Community"
          }
        }
      },
      {
        "role": "assistant",
        "content": "What is the size of the house?"
      },
      {
        "role": "user",
        "content": "My house is 80 sqm, perfect for a small family."
      },
      {
        "role": "function call",
        "content": {
          "name": "ConvenientLiving.BuyingRentingHomes.predictHousePrice",
          "arguments": {
            "location": "View room next to Oriental Pearl Tower",
            "age": 8,
            "house_name": "202, Building B, Lvyin Community",
            "house_area": "80 sqm"
          }
        }
      },
      {
        "role": "assistant",
        "content": "Please provide the floor information of the house"
      },
      {
        "role": "user",
        "content": "This is a mid-rise house, about 5th floor."
      },
      {
        "role": "function call",
        "content": {
          "name": "ConvenientLiving.BuyingRentingHomes.predictHousePrice",
          "arguments": {
            "location": "View room next to Oriental Pearl Tower",
            "age": 8,
            "house_name": "202, Building B, Lvyin Community",
            "house_area": "80 sqm",
            "level": "Mid level"
          }
        }
      },
      {
        "role": "assistant",
        "content": "Please provide the unit type of the house"
      },
      {
        "role": "user",
        "content": "The house is two bedrooms and one living room, perfect for a small family."
      },
      {
        "role": "function call",
        "content": {
          "name": "ConvenientLiving.BuyingRentingHomes.predictHousePrice",
          "arguments": {
            "location": "View room next to Oriental Pearl Tower",
            "age": 8,
            "house_name": "202, Building B, Lvyin Community",
            "house_area": "80 sqm",
            "level": "Mid level",
            "house_type": "2 bedrooms & 1 living room"
          }
        }
      },
      {
        "role": "assistant",
        "content": "What's a neighborhood?"
      },
      {
        "role": "user",
        "content": "The neighborhood is Luyin neighborhood, a beautiful residential area."
      },
      {
        "role": "function call",
        "content": {
          "name": "ConvenientLiving.BuyingRentingHomes.predictHousePrice",
          "arguments": {
            "location": "View room next to Oriental Pearl Tower",
            "age": 8,
            "house_name": "202, Building B, Lvyin Community",
            "house_area": "80 sqm",
            "level": "Mid level",
            "house_type": "2 bedrooms & 1 living room",
            "housing_estate": "Lvyin Neighborhood"
          }
        }
      },
      {
        "role": "assistant",
        "content": "What is the predicted time period?"
      },
      {
        "role": "user",
        "content": "It was wrong before. Property name should be Sunshine Gardens Tower A 301"
      },
      {
        "role": "function call",
        "content": {
          "name": "ConvenientLiving.BuyingRentingHomes.predictHousePrice",
          "arguments": {
            "location": "View room next to Oriental Pearl Tower",
            "age": 8,
            "house_name": "Sunshine Gardens Tower A 301",
            "house_area": "80 sqm",
            "level": "Mid level",
            "house_type": "2 bedrooms & 1 living room",
            "housing_estate": "Lvyin Neighborhood"
          }
        }
      },
      {
        "role": "assistant",
        "content": "What is the predicted time period?"
      },
      {
        "role": "user",
        "content": "The time period I need to predict is 5 years."
      },
      {
        "role": "function call",
        "content": {
          "name": "ConvenientLiving.BuyingRentingHomes.predictHousePrice",
          "arguments": {
            "location": "View room next to Oriental Pearl Tower",
            "age": 8,
            "house_name": "Sunshine Gardens Tower A 301",
            "house_area": "80 sqm",
            "level": "Mid level",
            "house_type": "2 bedrooms & 1 living room",
            "housing_estate": "Lvyin Neighborhood",
            "time_period": 5
          }
        }
      }
    ],
    "multiple_tools": [
      {
        "name": "OfficeSoftware.CloudStorage.netdiskCheckStorageUsage",
        "description": "See how much storage you're using and what's left",
        "parameters": {
          "type": "object",
          "properties": {},
          "required": []
        }
      },
      {
        "name": "ConvenientLiving.BuyingRentingHomes.predictHousePrice",
        "description": "Evaluate the value of the home",
        "parameters": {
          "type": "object",
          "properties": {
            "house_name": {
              "type": "string",
              "description": "Property name"
            },
            "house_area": {
              "type": "string",
              "description": "Area"
            },
            "level": {
              "type": "string",
              "description": "Floor"
            },
            "age": {
              "type": "integer",
              "description": "Room Age"
            },
            "house_type": {
              "type": "string",
              "description": "Layout"
            },
            "housing_estate": {
              "type": "string",
              "description": "Community"
            },
            "location": {
              "type": "string",
              "description": "Position"
            },
            "time_period": {
              "type": "integer",
              "description": "Forecasted time period in years"
            }
          },
          "required": [
            "house_name",
            "house_area",
            "level",
            "age",
            "house_type",
            "housing_estate",
            "location",
            "time_period"
          ]
        }
      },
      {
        "name": "Travel.ItineraryServices.estimateTravelCost",
        "description": "Estimate the approximate cost of a given trip",
        "parameters": {
          "type": "object",
          "properties": {
            "origin": {
              "type": "string",
              "description": "Origination"
            },
            "destination": {
              "type": "string",
              "description": "destination"
            }
          },
          "required": [
            "origin",
            "destination"
          ]
        }
      },
      {
        "name": "VideoPlayback.ShortVideos.commentShortVideo",
        "description": "Comment on a short video",
        "parameters": {
          "type": "object",
          "properties": {
            "name": {
              "type": "string",
              "description": "Short video name"
            },
            "comment": {
              "type": "string",
              "description": "Comments"
            }
          },
          "required": [
            "name",
            "comment"
          ]
        }
      },
      {
        "name": "SystemTools.SystemSettings.setSystemVolume",
        "description": "Set your phone's individual volume levels",
        "parameters": {
          "type": "object",
          "properties": {
            "set_volume": {
              "type": "integer",
              "description": "Volume, 0 to 100"
            },
            "type_volume": {
              "type": "string",
              "description": "Adjustment type, such as ringtone, notification, media, defaults to media"
            }
          },
          "required": [
            "set_volume",
            "type_volume"
          ]
        }
      }
    ],
    "single_tool": [
      {
        "name": "ConvenientLiving.BuyingRentingHomes.predictHousePrice",
        "description": "Evaluate the value of the home",
        "parameters": {
          "type": "object",
          "properties": {
            "house_name": {
              "type": "string",
              "description": "Property name"
            },
            "house_area": {
              "type": "string",
              "description": "Area"
            },
            "level": {
              "type": "string",
              "description": "Floor"
            },
            "age": {
              "type": "integer",
              "description": "Room Age"
            },
            "house_type": {
              "type": "string",
              "description": "Layout"
            },
            "housing_estate": {
              "type": "string",
              "description": "Community"
            },
            "location": {
              "type": "string",
              "description": "Position"
            },
            "time_period": {
              "type": "integer",
              "description": "Forecasted time period in years"
            }
          },
          "required": [
            "house_name",
            "house_area",
            "level",
            "age",
            "house_type",
            "housing_estate",
            "location",
            "time_period"
          ]
        }
      }
    ],
    "id": 1003
  },
  {
    "messages": [
      {
        "role": "user",
        "content": "What hotels are available in Chengdu on May 1st?"
      },
      {
        "role": "function call",
        "content": {
          "name": "Travel.HotelServices.searchHotel",
          "arguments": {
            "destination": "Chengdu",
            "checkin_date": "May 1"
          }
        }
      },
      {
        "role": "assistant",
        "content": "When is your checkout date"
      },
      {
        "role": "user",
        "content": "My check out date is October 5th and I still have my morning flight that day."
      },
      {
        "role": "function call",
        "content": {
          "name": "Travel.HotelServices.searchHotel",
          "arguments": {
            "destination": "Chengdu",
            "checkin_date": "May 1",
            "checkout_date": "October 5th"
          }
        }
      },
      {
        "role": "assistant",
        "content": "What is your price range preference 0 ~ 300 300 ~ 600 600 ~ 1000 More than 1000"
      },
      {
        "role": "user",
        "content": "It was wrong before. destination should be Xi 'an Bell Tower"
      },
      {
        "role": "function call",
        "content": {
          "name": "Travel.HotelServices.searchHotel",
          "arguments": {
            "destination": "Xi 'an Bell Tower",
            "checkin_date": "May 1",
            "checkout_date": "October 5th"
          }
        }
      },
      {
        "role": "assistant",
        "content": "What is your price range preference 0 ~ 300 300 ~ 600 600 ~ 1000 More than 1000"
      },
      {
        "role": "user",
        "content": "My price range preference is 300 ~ 600."
      },
      {
        "role": "function call",
        "content": {
          "name": "Travel.HotelServices.searchHotel",
          "arguments": {
            "destination": "Xi 'an Bell Tower",
            "checkin_date": "May 1",
            "checkout_date": "October 5th",
            "price_range": "300~600"
          }
        }
      }
    ],
    "multiple_tools": [
      {
        "name": "Navigation.FlightTickets.searchFlight",
        "description": "Find tickets for specific dates",
        "parameters": {
          "type": "object",
          "properties": {
            "date": {
              "type": "string",
              "description": "Trip start time"
            },
            "departure": {
              "type": "string",
              "description": "Origination"
            },
            "destination": {
              "type": "string",
              "description": "Reach ground"
            },
            "type": {
              "type": "string",
              "description": "One-way, round-trip, multi-trip"
            },
            "site_type": {
              "type": "string",
              "description": "Economy, Business"
            }
          },
          "required": [
            "date",
            "departure",
            "destination",
            "type",
            "site_type"
          ]
        }
      },
      {
        "name": "SocialCommunication.Community.searchCommunityPosts",
        "description": "Find related posts in a specific community by keyword",
        "parameters": {
          "type": "object",
          "properties": {
            "community_name": {
              "type": "string",
              "description": "The name of the community where you want to find posts"
            },
            "key_words": {
              "type": "string",
              "description": "Keywords used to find posts"
            }
          },
          "required": [
            "community_name",
            "key_words"
          ]
        }
      },
      {
        "name": "Travel.HotelServices.searchHotel",
        "description": "Search for hotels that match the criteria entered by the user",
        "parameters": {
          "type": "object",
          "properties": {
            "destination": {
              "type": "string",
              "description": "destination"
            },
            "checkin_date": {
              "type": "string",
              "description": "Check-in date (default today)"
            },
            "checkout_date": {
              "type": "string",
              "description": "DEPARTURE DATE"
            },
            "price_range": {
              "type": "string",
              "description": "Price range: 0 ~ 300; 300 ~ 600; 600 ~ 1000; 1000 to Shenyang"
            }
          },
          "required": [
            "destination",
            "checkin_date",
            "checkout_date",
            "price_range"
          ]
        }
      },
      {
        "name": "ConvenientLiving.BuyingRentingHomes.searchRentingHouses",
        "description": "Search for rentals by criteria",
        "parameters": {
          "type": "object",
          "properties": {
            "price": {
              "type": "string",
              "description": "Rents"
            },
            "house_area": {
              "type": "string",
              "description": "Area"
            },
            "level": {
              "type": "string",
              "description": "Floor"
            },
            "age": {
              "type": "integer",
              "description": "fixed number of years"
            },
            "house_type": {
              "type": "string",
              "description": "Layout"
            },
            "housing_estate": {
              "type": "string",
              "description": "Community"
            },
            "location": {
              "type": "string",
              "description": "Position"
            },
            "indoor_decoration": {
              "type": "string",
              "description": "decorate"
            },
            "furniture": {
              "type": "string",
              "description": "Furniture"
            }
          },
          "required": [
            "price",
            "house_area",
            "level",
            "age",
            "house_type",
            "housing_estate",
            "location",
            "indoor_decoration",
            "furniture"
          ]
        }
      },
      {
        "name": "Education.ChildrenEducation.searchChildPoem",
        "description": "Search for child-friendly poems",
        "parameters": {
          "type": "object",
          "properties": {
            "poem_type": {
              "type": "string",
              "description": "Types of poetry, such as ancient poetry, modern poetry"
            }
          },
          "required": [
            "poem_type"
          ]
        }
      }
    ],
    "single_tool": [
      {
        "name": "Travel.HotelServices.searchHotel",
        "description": "Search for hotels that match the criteria entered by the user",
        "parameters": {
          "type": "object",
          "properties": {
            "destination": {
              "type": "string",
              "description": "destination"
            },
            "checkin_date": {
              "type": "string",
              "description": "Check-in date (default today)"
            },
            "checkout_date": {
              "type": "string",
              "description": "DEPARTURE DATE"
            },
            "price_range": {
              "type": "string",
              "description": "Price range: 0 ~ 300; 300 ~ 600; 600 ~ 1000; 1000 to Shenyang"
            }
          },
          "required": [
            "destination",
            "checkin_date",
            "checkout_date",
            "price_range"
          ]
        }
      }
    ],
    "id": 1012
  },
  {
    "messages": [
      {
        "role": "user",
        "content": "Help me find out which hotels are checking out from Hangzhou tomorrow?"
      },
      {
        "role": "function call",
        "content": {
          "name": "Travel.HotelServices.searchHotel",
          "arguments": {
            "destination": "Hangzhou",
            "checkout_date": "Tomorrow"
          }
        }
      },
      {
        "role": "assistant",
        "content": "When is your check-in date? Is it today by default?"
      },
      {
        "role": "user",
        "content": "My check-in date is April 15th, not today."
      },
      {
        "role": "function call",
        "content": {
          "name": "Travel.HotelServices.searchHotel",
          "arguments": {
            "destination": "Hangzhou",
            "checkout_date": "Tomorrow",
            "checkin_date": "April 15th"
          }
        }
      },
      {
        "role": "assistant",
        "content": "Is your price range preference 0 ~ 300 300 ~ 600 600 ~ 1000 or 1000 +"
      },
      {
        "role": "user",
        "content": "It was wrong before. Check-in date (default today) should be 05-01"
      },
      {
        "role": "function call",
        "content": {
          "name": "Travel.HotelServices.searchHotel",
          "arguments": {
            "destination": "Hangzhou",
            "checkout_date": "Tomorrow",
            "checkin_date": "05-01"
          }
        }
      },
      {
        "role": "assistant",
        "content": "Is your price range preference 0 ~ 300 300 ~ 600 600 ~ 1000 or 1000 +"
      },
      {
        "role": "user",
        "content": "300 ~ 600, this range is more in line with my budget."
      },
      {
        "role": "function call",
        "content": {
          "name": "Travel.HotelServices.searchHotel",
          "arguments": {
            "destination": "Hangzhou",
            "checkout_date": "Tomorrow",
            "checkin_date": "05-01",
            "price_range": "300~600"
          }
        }
      }
    ],
    "multiple_tools": [
      {
        "name": "SocialCommunication.InstantMessaging.searchSystemMessage",
        "description": "Search system SMS to specified keywords",
        "parameters": {
          "type": "object",
          "properties": {
            "message_key": {
              "type": "string",
              "description": "Search SMS keywords"
            },
            "message_type": {
              "type": "string",
              "description": "Search SMS type: text, image, audio, video, default text"
            }
          },
          "required": [
            "message_key",
            "message_type"
          ]
        }
      },
      {
        "name": "Finance.Banking.searchFinancialProducts",
        "description": "Search for bank financial products based on specific criteria",
        "parameters": {
          "type": "object",
          "properties": {
            "keywords": {
              "type": "string",
              "description": "Search for keywords such as high yield, short term, etc."
            }
          },
          "required": [
            "keywords"
          ]
        }
      },
      {
        "name": "Travel.HotelServices.searchHotel",
        "description": "Search for hotels that match the criteria entered by the user",
        "parameters": {
          "type": "object",
          "properties": {
            "destination": {
              "type": "string",
              "description": "destination"
            },
            "checkin_date": {
              "type": "string",
              "description": "Check-in date (default today)"
            },
            "checkout_date": {
              "type": "string",
              "description": "DEPARTURE DATE"
            },
            "price_range": {
              "type": "string",
              "description": "Price range: 0 ~ 300; 300 ~ 600; 600 ~ 1000; 1000 to Shenyang"
            }
          },
          "required": [
            "destination",
            "checkin_date",
            "checkout_date",
            "price_range"
          ]
        }
      },
      {
        "name": "OfficeSoftware.CloudStorage.netdiskSearchFiles",
        "description": "Search for relevant files in Drive by keywords",
        "parameters": {
          "type": "object",
          "properties": {
            "keyword": {
              "type": "string",
              "description": "Keywords Search"
            }
          },
          "required": [
            "keyword"
          ]
        }
      },
      {
        "name": "UtilityTools.FileManagement.searchFiles",
        "description": "Search for relevant documents based on keywords",
        "parameters": {
          "type": "object",
          "properties": {
            "keyword": {
              "type": "string",
              "description": "Keywords Search"
            },
            "type": {
              "type": "string",
              "description": "files, tags, recently deleted, tencent documents, device storage, pictures, videos, audio, documents, installation package, compressed package, cloud disk, private safe, download, search in bluetooth; default file search"
            },
            "time": {
              "type": "string",
              "description": "Search by time"
            },
            "size": {
              "type": "string",
              "description": "File size"
            }
          },
          "required": [
            "keyword",
            "type",
            "time",
            "size"
          ]
        }
      }
    ],
    "single_tool": [
      {
        "name": "Travel.HotelServices.searchHotel",
        "description": "Search for hotels that match the criteria entered by the user",
        "parameters": {
          "type": "object",
          "properties": {
            "destination": {
              "type": "string",
              "description": "destination"
            },
            "checkin_date": {
              "type": "string",
              "description": "Check-in date (default today)"
            },
            "checkout_date": {
              "type": "string",
              "description": "DEPARTURE DATE"
            },
            "price_range": {
              "type": "string",
              "description": "Price range: 0 ~ 300; 300 ~ 600; 600 ~ 1000; 1000 to Shenyang"
            }
          },
          "required": [
            "destination",
            "checkin_date",
            "checkout_date",
            "price_range"
          ]
        }
      }
    ],
    "id": 1013
  },
  {
    "messages": [
      {
        "role": "user",
        "content": "I would like to change the date of the train ticket for D528 to October 11, is it okay?"
      },
      {
        "role": "function call",
        "content": {
          "name": "Navigation.TrainTickets.modifyTrainPassengerOrder",
          "arguments": {
            "after_ride_date": "October 11th",
            "before_number": "D528"
          }
        }
      },
      {
        "role": "assistant",
        "content": "Please provide the number of cars for the modified reservation and the passenger information or seat type that needs to be modified"
      },
      {
        "role": "user",
        "content": "I need to change the train number to T1234, the passenger is still Zhang San, but the seat type is changed to first class."
      },
      {
        "role": "function call",
        "content": {
          "name": "Navigation.TrainTickets.modifyTrainPassengerOrder",
          "arguments": {
            "after_ride_date": "October 11th",
            "before_number": "D528",
            "after_number": "T1234"
          }
        }
      },
      {
        "role": "assistant",
        "content": "Please provide a revised seat type"
      },
      {
        "role": "user",
        "content": "I want a seatless ticket, okay?"
      },
      {
        "role": "function call",
        "content": {
          "name": "Navigation.TrainTickets.modifyTrainPassengerOrder",
          "arguments": {
            "after_ride_date": "October 11th",
            "before_number": "D528",
            "after_number": "T1234",
            "after_seat_type": "Seatless"
          }
        }
      },
      {
        "role": "assistant",
        "content": "What was the original rider's name?"
      },
      {
        "role": "user",
        "content": "It was wrong before. Date of trip should be Christmas"
      },
      {
        "role": "function call",
        "content": {
          "name": "Navigation.TrainTickets.modifyTrainPassengerOrder",
          "arguments": {
            "after_ride_date": "Christmas",
            "before_number": "D528",
            "after_number": "T1234",
            "after_seat_type": "Seatless"
          }
        }
      },
      {
        "role": "assistant",
        "content": "What was the original rider's name?"
      },
      {
        "role": "user",
        "content": "The original passenger's name was Wang Wu."
      },
      {
        "role": "function call",
        "content": {
          "name": "Navigation.TrainTickets.modifyTrainPassengerOrder",
          "arguments": {
            "after_ride_date": "Christmas",
            "before_number": "D528",
            "after_number": "T1234",
            "after_seat_type": "Seatless",
            "before_name": "Wangwu"
          }
        }
      }
    ],
    "multiple_tools": [
      {
        "name": "Health.HealthManagement.updateDietRecord",
        "description": "Changing dietary records based on updated conditions",
        "parameters": {
          "type": "object",
          "properties": {
            "food_name": {
              "type": "string",
              "description": "Food Name"
            },
            "meal_type": {
              "type": "string",
              "description": "Types of meals, such as breakfast, lunch, dinner, or add-ons"
            },
            "time": {
              "type": "string",
              "description": "Meal Time"
            },
            "update_content": {
              "type": "string",
              "description": "Updates, such as changes to food names, meal types, meal times, etc."
            }
          },
          "required": [
            "food_name",
            "meal_type",
            "time",
            "update_content"
          ]
        }
      },
      {
        "name": "Navigation.FlightTickets.modifyFlightBooking",
        "description": "Changing the departure time of a booked flight is not supported for departure and destination changes",
        "parameters": {
          "type": "object",
          "properties": {
            "departure": {
              "type": "string",
              "description": "Origination"
            },
            "destination": {
              "type": "string",
              "description": "Reach ground"
            },
            "name": {
              "type": "string",
              "description": "Name of person who booked"
            },
            "time": {
              "type": "string",
              "description": "Flight duration before modification"
            },
            "alter_time": {
              "type": "string",
              "description": "Revised flight time"
            },
            "alter_seat": {
              "type": "string",
              "description": "Class Selection"
            }
          },
          "required": [
            "departure",
            "destination",
            "name",
            "time",
            "alter_time",
            "alter_seat"
          ]
        }
      },
      {
        "name": "Navigation.TrainTickets.modifyTrainPassengerOrder",
        "description": "Modify rider information or seat type for a specific order, etc.",
        "parameters": {
          "type": "object",
          "properties": {
            "before_number": {
              "type": "string",
              "description": "Booked trips"
            },
            "before_name": {
              "type": "string",
              "description": "Original rider name"
            },
            "after_number": {
              "type": "string",
              "description": "Booked trips"
            },
            "after_name": {
              "type": "string",
              "description": "Rider's name"
            },
            "after_ride_date": {
              "type": "string",
              "description": "Date of trip"
            },
            "after_seat_type": {
              "type": "string",
              "description": "Seat Type"
            }
          },
          "required": [
            "before_number",
            "before_name",
            "after_number",
            "after_name",
            "after_ride_date",
            "after_seat_type"
          ]
        }
      },
      {
        "name": "Navigation.TrainTickets.updateTrainWaitlistOrder",
        "description": "Used to modify submitted train ticket waiting list information",
        "parameters": {
          "type": "object",
          "properties": {
            "train_number": {
              "type": "string",
              "description": "Booked trips"
            },
            "passenger_name": {
              "type": "string",
              "description": "Rider's name"
            },
            "after_number": {
              "type": "string",
              "description": "Booked trips"
            },
            "new_departure_date": {
              "type": "string",
              "description": "New departure date, format 'YYYY-MM-DD', optional if modified"
            },
            "new_seat_type": {
              "type": "string",
              "description": "Seat Type"
            }
          },
          "required": [
            "train_number",
            "passenger_name",
            "after_number",
            "new_departure_date",
            "new_seat_type"
          ]
        }
      },
      {
        "name": "OfficeSoftware.Documents.updateDocument",
        "description": "Updates the specified document content based on the document name",
        "parameters": {
          "type": "object",
          "properties": {
            "document_name": {
              "type": "string",
              "description": "Document name to update, required"
            },
            "new_content": {
              "type": "string",
              "description": "New document content, required"
            }
          },
          "required": [
            "document_name",
            "new_content"
          ]
        }
      }
    ],
    "single_tool": [
      {
        "name": "Navigation.TrainTickets.modifyTrainPassengerOrder",
        "description": "Modify rider information or seat type for a specific order, etc.",
        "parameters": {
          "type": "object",
          "properties": {
            "before_number": {
              "type": "string",
              "description": "Booked trips"
            },
            "before_name": {
              "type": "string",
              "description": "Original rider name"
            },
            "after_number": {
              "type": "string",
              "description": "Booked trips"
            },
            "after_name": {
              "type": "string",
              "description": "Rider's name"
            },
            "after_ride_date": {
              "type": "string",
              "description": "Date of trip"
            },
            "after_seat_type": {
              "type": "string",
              "description": "Seat Type"
            }
          },
          "required": [
            "before_number",
            "before_name",
            "after_number",
            "after_name",
            "after_ride_date",
            "after_seat_type"
          ]
        }
      }
    ],
    "id": 1038
  },
  {
    "messages": [
      {
        "role": "user",
        "content": "Please adjust the departure date of the T45 train to August 8."
      },
      {
        "role": "function call",
        "content": {
          "name": "Navigation.TrainTickets.modifyTrainPassengerOrder",
          "arguments": {
            "after_ride_date": "August 8th",
            "before_number": "T45"
          }
        }
      },
      {
        "role": "assistant",
        "content": "Please provide the train number for the modified reservation"
      },
      {
        "role": "user",
        "content": "I need to change the train number to Z7890"
      },
      {
        "role": "function call",
        "content": {
          "name": "Navigation.TrainTickets.modifyTrainPassengerOrder",
          "arguments": {
            "after_ride_date": "August 8th",
            "before_number": "T45",
            "after_number": "Z7890"
          }
        }
      },
      {
        "role": "assistant",
        "content": "Please provide a revised seat type"
      },
      {
        "role": "user",
        "content": "I want to change to a soft sleeper."
      },
      {
        "role": "function call",
        "content": {
          "name": "Navigation.TrainTickets.modifyTrainPassengerOrder",
          "arguments": {
            "after_ride_date": "August 8th",
            "before_number": "T45",
            "after_number": "Z7890",
            "after_seat_type": "Softbed"
          }
        }
      },
      {
        "role": "assistant",
        "content": "What was the original rider's name?"
      },
      {
        "role": "user",
        "content": "It was wrong before. Seat Type should be Seatless"
      },
      {
        "role": "function call",
        "content": {
          "name": "Navigation.TrainTickets.modifyTrainPassengerOrder",
          "arguments": {
            "after_ride_date": "August 8th",
            "before_number": "T45",
            "after_number": "Z7890",
            "after_seat_type": "Seatless"
          }
        }
      },
      {
        "role": "assistant",
        "content": "What was the original rider's name?"
      },
      {
        "role": "user",
        "content": "The original passenger's name was Li Si."
      },
      {
        "role": "function call",
        "content": {
          "name": "Navigation.TrainTickets.modifyTrainPassengerOrder",
          "arguments": {
            "after_ride_date": "August 8th",
            "before_number": "T45",
            "after_number": "Z7890",
            "after_seat_type": "Seatless",
            "before_name": "Li Si"
          }
        }
      }
    ],
    "multiple_tools": [
      {
        "name": "OfficeSoftware.Email.appendixManageMail",
        "description": "Get all attachments",
        "parameters": {
          "type": "object",
          "properties": {},
          "required": []
        }
      },
      {
        "name": "Navigation.TrainTickets.modifyTrainPassengerOrder",
        "description": "Modify rider information or seat type for a specific order, etc.",
        "parameters": {
          "type": "object",
          "properties": {
            "before_number": {
              "type": "string",
              "description": "Booked trips"
            },
            "before_name": {
              "type": "string",
              "description": "Original rider name"
            },
            "after_number": {
              "type": "string",
              "description": "Booked trips"
            },
            "after_name": {
              "type": "string",
              "description": "Rider's name"
            },
            "after_ride_date": {
              "type": "string",
              "description": "Date of trip"
            },
            "after_seat_type": {
              "type": "string",
              "description": "Seat Type"
            }
          },
          "required": [
            "before_number",
            "before_name",
            "after_number",
            "after_name",
            "after_ride_date",
            "after_seat_type"
          ]
        }
      },
      {
        "name": "Finance.Funds.updateFundRedeemAmount",
        "description": "Update Redemption Amount for Designated Funds",
        "parameters": {
          "type": "object",
          "properties": {
            "fund_name": {
              "type": "string",
              "description": "Fund name"
            },
            "fund_code": {
              "type": "string",
              "description": "Fund  Code"
            },
            "new_amount": {
              "type": "float",
              "description": "Updated redemption amount, unit (yuan)"
            },
            "delta_amount": {
              "type": "float",
              "description": "Increase or decrease in redemption amount, unit (yuan)"
            }
          },
          "required": [
            "fund_name",
            "fund_code",
            "new_amount",
            "delta_amount"
          ]
        }
      },
      {
        "name": "MusicRadio.OnlineMusic.getMusicRecommendationsByStyle",
        "description": "Get music recommendations based on style",
        "parameters": {
          "type": "object",
          "properties": {
            "style": {
              "type": "string",
              "description": "Music Style"
            }
          },
          "required": [
            "style"
          ]
        }
      },
      {
        "name": "Finance.Funds.recommendFunds",
        "description": "Recommend user-friendly funds based on investment objectives and duration",
        "parameters": {
          "type": "object",
          "properties": {
            "objective": {
              "type": "string",
              "description": "Investment objectives such as robust, aggressive"
            },
            "investment_term": {
              "type": "string",
              "description": "Investment term, e.g. short term, long term"
            }
          },
          "required": [
            "objective",
            "investment_term"
          ]
        }
      }
    ],
    "single_tool": [
      {
        "name": "Navigation.TrainTickets.modifyTrainPassengerOrder",
        "description": "Modify rider information or seat type for a specific order, etc.",
        "parameters": {
          "type": "object",
          "properties": {
            "before_number": {
              "type": "string",
              "description": "Booked trips"
            },
            "before_name": {
              "type": "string",
              "description": "Original rider name"
            },
            "after_number": {
              "type": "string",
              "description": "Booked trips"
            },
            "after_name": {
              "type": "string",
              "description": "Rider's name"
            },
            "after_ride_date": {
              "type": "string",
              "description": "Date of trip"
            },
            "after_seat_type": {
              "type": "string",
              "description": "Seat Type"
            }
          },
          "required": [
            "before_number",
            "before_name",
            "after_number",
            "after_name",
            "after_ride_date",
            "after_seat_type"
          ]
        }
      }
    ],
    "id": 1039
  },
  {
    "messages": [
      {
        "role": "user",
        "content": "I don't need the bus route from the tech park to Central Square anymore"
      },
      {
        "role": "function call",
        "content": {
          "name": "Navigation.PublicTransit.deleteFavoriteRoute",
          "arguments": {
            "departure": "Technology Park",
            "destination": "Central Plaza"
          }
        }
      },
      {
        "role": "assistant",
        "content": "Please provide the name of the bus route you would like to remove from your collection"
      },
      {
        "role": "user",
        "content": "Route 211"
      },
      {
        "role": "function call",
        "content": {
          "name": "Navigation.PublicTransit.deleteFavoriteRoute",
          "arguments": {
            "departure": "Technology Park",
            "destination": "Central Plaza",
            "line": "Route 211"
          }
        }
      },
      {
        "role": "assistant",
        "content": "Please provide the name of the bus route you would like to remove from your collection"
      },
      {
        "role": "user",
        "content": "It was wrong before. destination should be a university town "
      },
      {
        "role": "function call",
        "content": {
          "name": "Navigation.PublicTransit.deleteFavoriteRoute",
          "arguments": {
            "departure": "Technology Park",
            "destination": "a university town ",
            "line": "Route 211"
          }
        }
      },
      {
        "role": "assistant",
        "content": "Please provide the name of the bus route you would like to remove from your collection"
      },
      {
        "role": "user",
        "content": "The bus route I want to delete my collection is 520."
      },
      {
        "role": "function call",
        "content": {
          "name": "Navigation.PublicTransit.deleteFavoriteRoute",
          "arguments": {
            "departure": "Technology Park",
            "destination": "a university town ",
            "line": "Route 211",
            "bus_name": "Public transportation"
          }
        }
      }
    ],
    "multiple_tools": [
      {
        "name": "Navigation.PublicTransit.deleteFavoriteRoute",
        "description": "Delete User Favorite Specified Bus Lines",
        "parameters": {
          "type": "object",
          "properties": {
            "line": {
              "type": "string",
              "description": "line"
            },
            "bus_name": {
              "type": "string",
              "description": "Bus name"
            },
            "departure": {
              "type": "string",
              "description": "Starting location, default current location"
            },
            "destination": {
              "type": "string",
              "description": "destination"
            },
            "preferred_line": {
              "type": "string",
              "description": "Departure time, the default departure time is now; the preferred route type, such as the shortest time, less transfer, less walking, etc."
            }
          },
          "required": [
            "line",
            "bus_name",
            "departure",
            "destination",
            "preferred_line"
          ]
        }
      },
      {
        "name": "UtilityTools.Reading.deleteReadingBookFromShelf",
        "description": "Remove books from shelves",
        "parameters": {
          "type": "object",
          "properties": {
            "book_name": {
              "type": "string",
              "description": "Book Name"
            },
            "book_author": {
              "type": "string",
              "description": "Author name"
            }
          },
          "required": [
            "book_name",
            "book_author"
          ]
        }
      },
      {
        "name": "UtilityTools.Weather.removeCity",
        "description": "Remove selected cities from the weather watchlist",
        "parameters": {
          "type": "object",
          "properties": {
            "city": {
              "type": "string",
              "description": "City"
            }
          },
          "required": [
            "city"
          ]
        }
      },
      {
        "name": "SocialCommunication.InstantMessaging.removeContact",
        "description": "Remove the specified contact",
        "parameters": {
          "type": "object",
          "properties": {
            "contact_name": {
              "type": "string",
              "description": "Contact name to remove, required"
            }
          },
          "required": [
            "contact_name"
          ]
        }
      },
      {
        "name": "OfficeSoftware.Conferencing.removeParticipants",
        "description": "Remove participants from the meeting",
        "parameters": {
          "type": "object",
          "properties": {
            "meeting_id": {
              "type": "string",
              "description": "Conference No."
            },
            "title": {
              "type": "string",
              "description": "Meeting Title:"
            },
            "time": {
              "type": "string",
              "description": "Meeting Date"
            },
            "participant_list": {
              "type": "string",
              "description": "Remove people list"
            }
          },
          "required": [
            "meeting_id",
            "title",
            "time",
            "participant_list"
          ]
        }
      }
    ],
    "single_tool": [
      {
        "name": "Navigation.PublicTransit.deleteFavoriteRoute",
        "description": "Delete User Favorite Specified Bus Lines",
        "parameters": {
          "type": "object",
          "properties": {
            "line": {
              "type": "string",
              "description": "line"
            },
            "bus_name": {
              "type": "string",
              "description": "Bus name"
            },
            "departure": {
              "type": "string",
              "description": "Starting location, default current location"
            },
            "destination": {
              "type": "string",
              "description": "destination"
            },
            "preferred_line": {
              "type": "string",
              "description": "Departure time, the default departure time is now; the preferred route type, such as the shortest time, less transfer, less walking, etc."
            }
          },
          "required": [
            "line",
            "bus_name",
            "departure",
            "destination",
            "preferred_line"
          ]
        }
      }
    ],
    "id": 1042
  },
  {
    "messages": [
      {
        "role": "user",
        "content": "Remove all less walkable G2 bus route options from my collection"
      },
      {
        "role": "function call",
        "content": {
          "name": "Navigation.PublicTransit.deleteFavoriteRoute",
          "arguments": {
            "line": "G2",
            "preferred_line": "Less walking"
          }
        }
      },
      {
        "role": "assistant",
        "content": "What's the name of the bus?"
      },
      {
        "role": "user",
        "content": "Bus name is 102"
      },
      {
        "role": "function call",
        "content": {
          "name": "Navigation.PublicTransit.deleteFavoriteRoute",
          "arguments": {
            "line": "G2",
            "preferred_line": "Less walking",
            "bus_name": "Route 102"
          }
        }
      },
      {
        "role": "assistant",
        "content": "Please provide the default current location for the start location"
      },
      {
        "role": "user",
        "content": "It was wrong before. Departure time, the default departure time is now; the preferred route type, such as the shortest time, less transfer, less walking, etc. should be Minimum time required"
      },
      {
        "role": "function call",
        "content": {
          "name": "Navigation.PublicTransit.deleteFavoriteRoute",
          "arguments": {
            "line": "G2",
            "preferred_line": "Minimum time required",
            "bus_name": "Route 102"
          }
        }
      },
      {
        "role": "assistant",
        "content": "Please provide the default current location for the start location"
      },
      {
        "role": "user",
        "content": "From train station"
      },
      {
        "role": "function call",
        "content": {
          "name": "Navigation.PublicTransit.deleteFavoriteRoute",
          "arguments": {
            "line": "G2",
            "preferred_line": "Minimum time required",
            "bus_name": "Route 102",
            "departure": "train station"
          }
        }
      }
    ],
    "multiple_tools": [
      {
        "name": "OnlineShopping.Mall.removeCollectCommodity",
        "description": "Remove the specified item from the wishlist (empty by default)",
        "parameters": {
          "type": "object",
          "properties": {
            "goods": {
              "type": "string",
              "description": "Product Name"
            }
          },
          "required": [
            "goods"
          ]
        }
      },
      {
        "name": "Travel.ItineraryServices.deleteTravelItinerary",
        "description": "Delete travel itinerary",
        "parameters": {
          "type": "object",
          "properties": {
            "destination": {
              "type": "string",
              "description": "Destination"
            }
          },
          "required": [
            "destination"
          ]
        }
      },
      {
        "name": "UtilityTools.Search.deleteWebBookmark",
        "description": "Delete bookmarks specified in favorites; delete bookmarks specified in favorites; delete all bookmarks in favorites",
        "parameters": {
          "type": "object",
          "properties": {
            "bookmark": {
              "type": "string",
              "description": "Bookmark title, defaults to all bookmarks from the current collection"
            }
          },
          "required": [
            "bookmark"
          ]
        }
      },
      {
        "name": "Navigation.PublicTransit.deleteFavoriteRoute",
        "description": "Delete User Favorite Specified Bus Lines",
        "parameters": {
          "type": "object",
          "properties": {
            "line": {
              "type": "string",
              "description": "line"
            },
            "bus_name": {
              "type": "string",
              "description": "Bus name"
            },
            "departure": {
              "type": "string",
              "description": "Starting location, default current location"
            },
            "destination": {
              "type": "string",
              "description": "destination"
            },
            "preferred_line": {
              "type": "string",
              "description": "Departure time, the default departure time is now; the preferred route type, such as the shortest time, less transfer, less walking, etc."
            }
          },
          "required": [
            "line",
            "bus_name",
            "departure",
            "destination",
            "preferred_line"
          ]
        }
      },
      {
        "name": "OnlineShopping.SecondhandTrading.deleteCollectSecondhandSale",
        "description": "Remove the specified item from the wishlist (empty by default)",
        "parameters": {
          "type": "object",
          "properties": {
            "search_name": {
              "type": "string",
              "description": "Product Name"
            }
          },
          "required": [
            "search_name"
          ]
        }
      }
    ],
    "single_tool": [
      {
        "name": "Navigation.PublicTransit.deleteFavoriteRoute",
        "description": "Delete User Favorite Specified Bus Lines",
        "parameters": {
          "type": "object",
          "properties": {
            "line": {
              "type": "string",
              "description": "line"
            },
            "bus_name": {
              "type": "string",
              "description": "Bus name"
            },
            "departure": {
              "type": "string",
              "description": "Starting location, default current location"
            },
            "destination": {
              "type": "string",
              "description": "destination"
            },
            "preferred_line": {
              "type": "string",
              "description": "Departure time, the default departure time is now; the preferred route type, such as the shortest time, less transfer, less walking, etc."
            }
          },
          "required": [
            "line",
            "bus_name",
            "departure",
            "destination",
            "preferred_line"
          ]
        }
      }
    ],
    "id": 1043
  },
  {
    "messages": [
      {
        "role": "user",
        "content": "Traveling abroad, if you want to buy a worry-free travel insurance, you will be insured for one year."
      },
      {
        "role": "function call",
        "content": {
          "name": "Finance.Insurance.purchaseInsurance",
          "arguments": {
            "insurance_name": "Travel worry-free",
            "period": 1
          }
        }
      },
      {
        "role": "assistant",
        "content": "What type of insurance products do you need, such as life insurance, health insurance, property insurance, car insurance, etc."
      },
      {
        "role": "user",
        "content": "I need information about property insurance."
      },
      {
        "role": "function call",
        "content": {
          "name": "Finance.Insurance.purchaseInsurance",
          "arguments": {
            "insurance_name": "Travel worry-free",
            "period": 1,
            "insurance_type": "Property insurance"
          }
        }
      },
      {
        "role": "assistant",
        "content": "Who the beneficiaries are and what are the protections"
      },
      {
        "role": "user",
        "content": "It was wrong before. Types of insurance products, such as life insurance, health insurance, property insurance, car insurance, etc. should be health insurance "
      },
      {
        "role": "function call",
        "content": {
          "name": "Finance.Insurance.purchaseInsurance",
          "arguments": {
            "insurance_name": "Travel worry-free",
            "period": 1,
            "insurance_type": "health insurance "
          }
        }
      },
      {
        "role": "assistant",
        "content": "Who the beneficiaries are and what are the protections"
      },
      {
        "role": "user",
        "content": "The beneficiary is myself and the protected property is my cottage."
      },
      {
        "role": "function call",
        "content": {
          "name": "Finance.Insurance.purchaseInsurance",
          "arguments": {
            "insurance_name": "Travel worry-free",
            "period": 1,
            "insurance_type": "health insurance ",
            "insurance_benefit": "My cottage"
          }
        }
      }
    ],
    "multiple_tools": [
      {
        "name": "Navigation.TrainTickets.bookTrainTicket",
        "description": "Book a train ticket for a specific time, origin, or destination for a specific rider",
        "parameters": {
          "type": "object",
          "properties": {
            "ride_date": {
              "type": "string",
              "description": "Date of trip"
            },
            "departure_station": {
              "type": "string",
              "description": "Departure Station"
            },
            "destination_station": {
              "type": "string",
              "description": "arrival station"
            },
            "train_type": {
              "type": "string",
              "description": "Train type, optional types are high-speed rail, motor vehicles, general express, express, etc."
            },
            "seat_type": {
              "type": "string",
              "description": "Seat Type"
            },
            "passenger_name": {
              "type": "string",
              "description": "Rider's name"
            },
            "passenger_id": {
              "type": "string",
              "description": "Rider ID number"
            }
          },
          "required": [
            "ride_date",
            "departure_station",
            "destination_station",
            "train_type",
            "seat_type",
            "passenger_name",
            "passenger_id"
          ]
        }
      },
      {
        "name": "Finance.Insurance.purchaseInsurance",
        "description": "Purchase insurance products",
        "parameters": {
          "type": "object",
          "properties": {
            "insurance_name": {
              "type": "string",
              "description": "Insurance Product Name"
            },
            "insurance_type": {
              "type": "string",
              "description": "Types of insurance products, such as life insurance, health insurance, property insurance, car insurance, etc."
            },
            "insurance_benefit": {
              "type": "string",
              "description": "Beneficiary/Protected Property"
            },
            "amount": {
              "type": "float",
              "description": "Coverage Amount"
            },
            "period": {
              "type": "integer",
              "description": "Insurance period, fixed time for some products, units (years)"
            }
          },
          "required": [
            "insurance_name",
            "insurance_type",
            "insurance_benefit",
            "amount",
            "period"
          ]
        }
      },
      {
        "name": "Finance.Stocks.buyStock",
        "description": "Purchase of Designated Shares",
        "parameters": {
          "type": "object",
          "properties": {
            "stock_code": {
              "type": "string",
              "description": "Ticker"
            },
            "stock_name": {
              "type": "string",
              "description": "Stock Key Name"
            },
            "price": {
              "type": "float",
              "description": "Purchase Amount, Unit: Yuan"
            },
            "amount": {
              "type": "string",
              "description": "Bid Volume; Specific Value; Whole Warehouse; Half Warehouse; 1/3 Warehouse; 1/4 Warehouse"
            }
          },
          "required": [
            "stock_code",
            "stock_name",
            "price",
            "amount"
          ]
        }
      },
      {
        "name": "Travel.HotelServices.bookHotel",
        "description": "Book a room at a selected hotel",
        "parameters": {
          "type": "object",
          "properties": {
            "name": {
              "type": "string",
              "description": "Hotel Name"
            },
            "checkin_date": {
              "type": "string",
              "description": "Check-in Date"
            },
            "checkout_date": {
              "type": "string",
              "description": "DEPARTURE DATE"
            },
            "room_type": {
              "type": "string",
              "description": "Room types"
            },
            "tenant_name": {
              "type": "string",
              "description": "Name of the guest staying"
            },
            "tenant_number": {
              "type": "string",
              "description": "Telephone number of the guest staying at the hotel"
            }
          },
          "required": [
            "name",
            "checkin_date",
            "checkout_date",
            "room_type",
            "tenant_name",
            "tenant_number"
          ]
        }
      },
      {
        "name": "ConvenientLiving.FoodDelivery.placeRestaurantOrder",
        "description": "Order select restaurants and dishes",
        "parameters": {
          "type": "object",
          "properties": {
            "restaurant_name": {
              "type": "string",
              "description": "Name of the restaurant"
            },
            "dishes": {
              "type": "string",
              "description": "Array containing item IDs"
            },
            "delivery_address": {
              "type": "string",
              "description": "Delivery address"
            },
            "delivery_time": {
              "type": "string",
              "description": "Expected delivery time in HH: mm format"
            },
            "note": {
              "type": "string",
              "description": "Remarks"
            }
          },
          "required": [
            "restaurant_name",
            "dishes",
            "delivery_address",
            "delivery_time",
            "note"
          ]
        }
      }
    ],
    "single_tool": [
      {
        "name": "Finance.Insurance.purchaseInsurance",
        "description": "Purchase insurance products",
        "parameters": {
          "type": "object",
          "properties": {
            "insurance_name": {
              "type": "string",
              "description": "Insurance Product Name"
            },
            "insurance_type": {
              "type": "string",
              "description": "Types of insurance products, such as life insurance, health insurance, property insurance, car insurance, etc."
            },
            "insurance_benefit": {
              "type": "string",
              "description": "Beneficiary/Protected Property"
            },
            "amount": {
              "type": "float",
              "description": "Coverage Amount"
            },
            "period": {
              "type": "integer",
              "description": "Insurance period, fixed time for some products, units (years)"
            }
          },
          "required": [
            "insurance_name",
            "insurance_type",
            "insurance_benefit",
            "amount",
            "period"
          ]
        }
      }
    ],
    "id": 1045
  },
  {
    "messages": [
      {
        "role": "user",
        "content": "I want to walk to Guangzhou Tower and plan a route for me"
      },
      {
        "role": "function call",
        "content": {
          "name": "Navigation.MapNavigation.planNavigationRoute",
          "arguments": {
            "destination": "Guangzhou Tower",
            "mode": "Walking"
          }
        }
      },
      {
        "role": "assistant",
        "content": "Please provide the name or address of your departure location If using your current location please confirm directly"
      },
      {
        "role": "user",
        "content": "Shanghai Hongqiao Railway Station"
      },
      {
        "role": "function call",
        "content": {
          "name": "Navigation.MapNavigation.planNavigationRoute",
          "arguments": {
            "destination": "Guangzhou Tower",
            "mode": "Walking",
            "departure": "Shanghai Hongqiao Railway Station"
          }
        }
      },
      {
        "role": "assistant",
        "content": "When do you plan to leave?"
      },
      {
        "role": "user",
        "content": "It was wrong before. Name or address of the destination should be Shanghai Disneyland"
      },
      {
        "role": "function call",
        "content": {
          "name": "Navigation.MapNavigation.planNavigationRoute",
          "arguments": {
            "destination": "Shanghai Disneyland",
            "mode": "Walking",
            "departure": "Shanghai Hongqiao Railway Station"
          }
        }
      },
      {
        "role": "assistant",
        "content": "When do you plan to leave?"
      },
      {
        "role": "user",
        "content": "I plan to leave at 10am."
      },
      {
        "role": "function call",
        "content": {
          "name": "Navigation.MapNavigation.planNavigationRoute",
          "arguments": {
            "destination": "Shanghai Disneyland",
            "mode": "Walking",
            "departure": "Shanghai Hongqiao Railway Station",
            "time": "10am"
          }
        }
      }
    ],
    "multiple_tools": [
      {
        "name": "Education.ChildrenEducation.getLearningPath",
        "description": "Get child-friendly learning path planning",
        "parameters": {
          "type": "object",
          "properties": {
            "child_age": {
              "type": "integer",
              "description": "Age of children"
            }
          },
          "required": [
            "child_age"
          ]
        }
      },
      {
        "name": "Navigation.MapNavigation.vehicleNavigationRoute",
        "description": "Specify a vehicle as a way to get around and search for a route",
        "parameters": {
          "type": "object",
          "properties": {
            "departure": {
              "type": "string",
              "description": "The name or address of the departure location, the default current location"
            },
            "destination": {
              "type": "string",
              "description": "Name or address of the destination"
            },
            "vehicle": {
              "type": "string",
              "description": "Specify how you want to travel"
            }
          },
          "required": [
            "departure",
            "destination",
            "vehicle"
          ]
        }
      },
      {
        "name": "Health.Fitness.generateExercisePlan",
        "description": "Generate fitness plans based on fitness goals, etc.",
        "parameters": {
          "type": "object",
          "properties": {
            "goal": {
              "type": "string",
              "description": "Fitness Goals"
            }
          },
          "required": [
            "goal"
          ]
        }
      },
      {
        "name": "Health.HealthManagement.getRecommendedDietPlan",
        "description": "Get recommended meal plans",
        "parameters": {
          "type": "object",
          "properties": {},
          "required": []
        }
      },
      {
        "name": "Navigation.MapNavigation.planNavigationRoute",
        "description": "Search navigation routes by origin and destination",
        "parameters": {
          "type": "object",
          "properties": {
            "departure": {
              "type": "string",
              "description": "The name or address of the departure location, the default current location"
            },
            "destination": {
              "type": "string",
              "description": "Name or address of the destination"
            },
            "time": {
              "type": "string",
              "description": "Departure time, default current time"
            },
            "mode": {
              "type": "string",
              "description": "Getting around, by car, public transport, bike, or on foot, by default"
            },
            "preferred_route": {
              "type": "string",
              "description": "Preferred route type, such as direct, few transfers, etc., optional"
            }
          },
          "required": [
            "departure",
            "destination",
            "time",
            "mode",
            "preferred_route"
          ]
        }
      }
    ],
    "single_tool": [
      {
        "name": "Navigation.MapNavigation.planNavigationRoute",
        "description": "Search navigation routes by origin and destination",
        "parameters": {
          "type": "object",
          "properties": {
            "departure": {
              "type": "string",
              "description": "The name or address of the departure location, the default current location"
            },
            "destination": {
              "type": "string",
              "description": "Name or address of the destination"
            },
            "time": {
              "type": "string",
              "description": "Departure time, default current time"
            },
            "mode": {
              "type": "string",
              "description": "Getting around, by car, public transport, bike, or on foot, by default"
            },
            "preferred_route": {
              "type": "string",
              "description": "Preferred route type, such as direct, few transfers, etc., optional"
            }
          },
          "required": [
            "departure",
            "destination",
            "time",
            "mode",
            "preferred_route"
          ]
        }
      }
    ],
    "id": 1056
  },
  {
    "messages": [
      {
        "role": "user",
        "content": "How do I walk to the nearest Starbucks?"
      },
      {
        "role": "function call",
        "content": {
          "name": "Navigation.MapNavigation.planNavigationRoute",
          "arguments": {
            "destination": "Starbucks",
            "mode": "Walking"
          }
        }
      },
      {
        "role": "assistant",
        "content": "Please provide the name or address of your departure location If not provided the current location will be used"
      },
      {
        "role": "user",
        "content": "Tiananmen"
      },
      {
        "role": "function call",
        "content": {
          "name": "Navigation.MapNavigation.planNavigationRoute",
          "arguments": {
            "destination": "Starbucks",
            "mode": "Walking",
            "departure": "Tiananmen"
          }
        }
      },
      {
        "role": "assistant",
        "content": "When do you plan to leave?"
      },
      {
        "role": "user",
        "content": "It was wrong before. Getting around, by car, public transport, bike, or on foot, by default should be DRIVING"
      },
      {
        "role": "function call",
        "content": {
          "name": "Navigation.MapNavigation.planNavigationRoute",
          "arguments": {
            "destination": "Starbucks",
            "mode": "DRIVING",
            "departure": "Tiananmen"
          }
        }
      },
      {
        "role": "assistant",
        "content": "When do you plan to leave?"
      },
      {
        "role": "user",
        "content": "I plan to leave at 3pm."
      },
      {
        "role": "function call",
        "content": {
          "name": "Navigation.MapNavigation.planNavigationRoute",
          "arguments": {
            "destination": "Starbucks",
            "mode": "DRIVING",
            "departure": "Tiananmen",
            "time": "15:00"
          }
        }
      }
    ],
    "multiple_tools": [
      {
        "name": "Navigation.MapNavigation.planNavigationRoute",
        "description": "Search navigation routes by origin and destination",
        "parameters": {
          "type": "object",
          "properties": {
            "departure": {
              "type": "string",
              "description": "The name or address of the departure location, the default current location"
            },
            "destination": {
              "type": "string",
              "description": "Name or address of the destination"
            },
            "time": {
              "type": "string",
              "description": "Departure time, default current time"
            },
            "mode": {
              "type": "string",
              "description": "Getting around, by car, public transport, bike, or on foot, by default"
            },
            "preferred_route": {
              "type": "string",
              "description": "Preferred route type, such as direct, few transfers, etc., optional"
            }
          },
          "required": [
            "departure",
            "destination",
            "time",
            "mode",
            "preferred_route"
          ]
        }
      },
      {
        "name": "MusicRadio.RadioStations.radioListenRadio",
        "description": "Listen to stations by station name",
        "parameters": {
          "type": "object",
          "properties": {
            "name": {
              "type": "string",
              "description": "Radio Name"
            }
          },
          "required": [
            "name"
          ]
        }
      },
      {
        "name": "Education.OnlineClasses.enrollCourse",
        "description": "Enroll in a designated course",
        "parameters": {
          "type": "object",
          "properties": {
            "course_name": {
              "type": "string",
              "description": "Course Title"
            }
          },
          "required": [
            "course_name"
          ]
        }
      },
      {
        "name": "Navigation.FlightTickets.checkInOnlineFlight",
        "description": "Online check-in for selected flights",
        "parameters": {
          "type": "object",
          "properties": {
            "flight_number": {
              "type": "string",
              "description": "e.g. CA1234"
            },
            "name": {
              "type": "string",
              "description": "Name"
            },
            "passenger_id": {
              "type": "string",
              "description": "Rider ID number"
            }
          },
          "required": [
            "flight_number",
            "name",
            "passenger_id"
          ]
        }
      },
      {
        "name": "ConvenientLiving.FoodDelivery.getRestaurantOpenHours",
        "description": "Get hours at select restaurants",
        "parameters": {
          "type": "object",
          "properties": {
            "restaurant_name": {
              "type": "string",
              "description": "Restaurant name:"
            }
          },
          "required": [
            "restaurant_name"
          ]
        }
      }
    ],
    "single_tool": [
      {
        "name": "Navigation.MapNavigation.planNavigationRoute",
        "description": "Search navigation routes by origin and destination",
        "parameters": {
          "type": "object",
          "properties": {
            "departure": {
              "type": "string",
              "description": "The name or address of the departure location, the default current location"
            },
            "destination": {
              "type": "string",
              "description": "Name or address of the destination"
            },
            "time": {
              "type": "string",
              "description": "Departure time, default current time"
            },
            "mode": {
              "type": "string",
              "description": "Getting around, by car, public transport, bike, or on foot, by default"
            },
            "preferred_route": {
              "type": "string",
              "description": "Preferred route type, such as direct, few transfers, etc., optional"
            }
          },
          "required": [
            "departure",
            "destination",
            "time",
            "mode",
            "preferred_route"
          ]
        }
      }
    ],
    "id": 1057
  },
  {
    "messages": [
      {
        "role": "user",
        "content": "We're using wink for our meeting this Saturday from 9:30 am to 11:30 am to see what's"
      },
      {
        "role": "function call",
        "content": {
          "name": "OfficeSoftware.Conferencing.createMeeting",
          "arguments": {
            "start_time": "Saturday 9:30 am",
            "end_time": "Saturday 11:30 am"
          }
        }
      },
      {
        "role": "assistant",
        "content": "What's the title of the meeting"
      },
      {
        "role": "user",
        "content": "Update on product launches"
      },
      {
        "role": "function call",
        "content": {
          "name": "OfficeSoftware.Conferencing.createMeeting",
          "arguments": {
            "start_time": "Saturday 9:30 am",
            "end_time": "Saturday 11:30 am",
            "title": "Product Launch Event"
          }
        }
      },
      {
        "role": "assistant",
        "content": "What is the address of the meeting?"
      },
      {
        "role": "user",
        "content": "It was wrong before. Conference Start Time should be Tomorrow at 10am"
      },
      {
        "role": "function call",
        "content": {
          "name": "OfficeSoftware.Conferencing.createMeeting",
          "arguments": {
            "start_time": "Tomorrow at 10am",
            "end_time": "Saturday 11:30 am",
            "title": "Product Launch Event"
          }
        }
      },
      {
        "role": "assistant",
        "content": "What is the address of the meeting?"
      },
      {
        "role": "user",
        "content": "The main venue of the conference is located at the National Convention Center."
      },
      {
        "role": "function call",
        "content": {
          "name": "OfficeSoftware.Conferencing.createMeeting",
          "arguments": {
            "start_time": "Tomorrow at 10am",
            "end_time": "Saturday 11:30 am",
            "title": "Product Launch Event",
            "location": "Main venue"
          }
        }
      }
    ],
    "multiple_tools": [
      {
        "name": "OfficeSoftware.Documents.createDocument",
        "description": "Create a new document",
        "parameters": {
          "type": "object",
          "properties": {
            "document_name": {
              "type": "string",
              "description": "Document name, required"
            }
          },
          "required": [
            "document_name"
          ]
        }
      },
      {
        "name": "UtilityTools.Calendar.addCalendarschedule",
        "description": "Create a new schedule",
        "parameters": {
          "type": "object",
          "properties": {
            "date_name": {
              "type": "string",
              "description": "Visiting program name"
            },
            "start_date": {
              "type": "string",
              "description": "Schedule start time"
            },
            "end_date": {
              "type": "string",
              "description": "Schedule end time; do not write the default start time 24 o'clock on the same day"
            },
            "schedule": {
              "type": "string",
              "description": "Schedule Related Descriptions"
            }
          },
          "required": [
            "date_name",
            "start_date",
            "end_date",
            "schedule"
          ]
        }
      },
      {
        "name": "Travel.ItineraryServices.createTravelItinerary",
        "description": "Create a personalized travel itinerary",
        "parameters": {
          "type": "object",
          "properties": {
            "destination": {
              "type": "string",
              "description": "destination"
            }
          },
          "required": [
            "destination"
          ]
        }
      },
      {
        "name": "OfficeSoftware.Conferencing.createMeeting",
        "description": "Create a new meeting",
        "parameters": {
          "type": "object",
          "properties": {
            "title": {
              "type": "string",
              "description": "Meeting Title:"
            },
            "start_time": {
              "type": "string",
              "description": "Conference Start Time"
            },
            "end_time": {
              "type": "string",
              "description": "Meeting end time"
            },
            "location": {
              "type": "string",
              "description": "Meeting Address"
            },
            "participant_list": {
              "type": "string",
              "description": "List of participants in the meeting"
            }
          },
          "required": [
            "title",
            "start_time",
            "end_time",
            "location",
            "participant_list"
          ]
        }
      },
      {
        "name": "Travel.HotelServices.bookHotel",
        "description": "Book a room at a selected hotel",
        "parameters": {
          "type": "object",
          "properties": {
            "name": {
              "type": "string",
              "description": "Hotel Name"
            },
            "checkin_date": {
              "type": "string",
              "description": "Check-in Date"
            },
            "checkout_date": {
              "type": "string",
              "description": "DEPARTURE DATE"
            },
            "room_type": {
              "type": "string",
              "description": "Room types"
            },
            "tenant_name": {
              "type": "string",
              "description": "Name of the guest staying"
            },
            "tenant_number": {
              "type": "string",
              "description": "Telephone number of the guest staying at the hotel"
            }
          },
          "required": [
            "name",
            "checkin_date",
            "checkout_date",
            "room_type",
            "tenant_name",
            "tenant_number"
          ]
        }
      }
    ],
    "single_tool": [
      {
        "name": "OfficeSoftware.Conferencing.createMeeting",
        "description": "Create a new meeting",
        "parameters": {
          "type": "object",
          "properties": {
            "title": {
              "type": "string",
              "description": "Meeting Title:"
            },
            "start_time": {
              "type": "string",
              "description": "Conference Start Time"
            },
            "end_time": {
              "type": "string",
              "description": "Meeting end time"
            },
            "location": {
              "type": "string",
              "description": "Meeting Address"
            },
            "participant_list": {
              "type": "string",
              "description": "List of participants in the meeting"
            }
          },
          "required": [
            "title",
            "start_time",
            "end_time",
            "location",
            "participant_list"
          ]
        }
      }
    ],
    "id": 1063
  },
  {
    "messages": [
      {
        "role": "user",
        "content": "Flights to Sanya from Nanjing canceled at China Southern Airlines"
      },
      {
        "role": "function call",
        "content": {
          "name": "Navigation.FlightTickets.cancelFlightBooking",
          "arguments": {
            "departure": "Nanjing",
            "destination": "Sanya Railway Station"
          }
        }
      },
      {
        "role": "assistant",
        "content": "What's the name of the person who booked the reservation"
      },
      {
        "role": "user",
        "content": "The name of the booker is Li Si, who will attend this meeting."
      },
      {
        "role": "function call",
        "content": {
          "name": "Navigation.FlightTickets.cancelFlightBooking",
          "arguments": {
            "departure": "Nanjing",
            "destination": "Sanya Railway Station",
            "name": "Li Si"
          }
        }
      },
      {
        "role": "assistant",
        "content": "What time does the flight leave?"
      },
      {
        "role": "user",
        "content": "It was wrong before. Reach ground should be Shanghai"
      },
      {
        "role": "function call",
        "content": {
          "name": "Navigation.FlightTickets.cancelFlightBooking",
          "arguments": {
            "departure": "Nanjing",
            "destination": "Shanghai",
            "name": "Li Si"
          }
        }
      },
      {
        "role": "assistant",
        "content": "What time does the flight leave?"
      },
      {
        "role": "user",
        "content": "My flight departs the day after tomorrow at 4pm."
      },
      {
        "role": "function call",
        "content": {
          "name": "Navigation.FlightTickets.cancelFlightBooking",
          "arguments": {
            "departure": "Nanjing",
            "destination": "Shanghai",
            "name": "Li Si",
            "time": "The day after tomorrow at 4pm"
          }
        }
      }
    ],
    "multiple_tools": [
      {
        "name": "Education.OnlineClasses.cancelCourse",
        "description": "Cancel Enrolled Courses",
        "parameters": {
          "type": "object",
          "properties": {
            "course_name": {
              "type": "string",
              "description": "Course Title"
            }
          },
          "required": [
            "course_name"
          ]
        }
      },
      {
        "name": "Navigation.TaxiCarRental.cancelCarRentalOrder",
        "description": "Cancel the rental (all pending reservations are canceled by default)",
        "parameters": {
          "type": "object",
          "properties": {
            "time": {
              "type": "string",
              "description": "Release Date"
            }
          },
          "required": [
            "time"
          ]
        }
      },
      {
        "name": "Navigation.TrainTickets.cancelTrainTicket",
        "description": "Cancelling a booked train ticket",
        "parameters": {
          "type": "object",
          "properties": {
            "train_number": {
              "type": "string",
              "description": "Wagon Number"
            },
            "name": {
              "type": "string",
              "description": "Rider's name"
            },
            "time": {
              "type": "string",
              "description": "To cancel a reservation for a certain time"
            },
            "departure_station": {
              "type": "string",
              "description": "Departure Station"
            },
            "destination_station": {
              "type": "string",
              "description": "arrival station"
            }
          },
          "required": [
            "train_number",
            "name",
            "time",
            "departure_station",
            "destination_station"
          ]
        }
      },
      {
        "name": "Navigation.FlightTickets.cancelFlightBooking",
        "description": "Cancelling a flight for a specific reservation",
        "parameters": {
          "type": "object",
          "properties": {
            "departure": {
              "type": "string",
              "description": "Origination"
            },
            "destination": {
              "type": "string",
              "description": "Reach ground"
            },
            "name": {
              "type": "string",
              "description": "Name of person who booked"
            },
            "time": {
              "type": "string",
              "description": "Flight departure time"
            },
            "passenger_id": {
              "type": "string",
              "description": "Rider ID number"
            }
          },
          "required": [
            "departure",
            "destination",
            "name",
            "time",
            "passenger_id"
          ]
        }
      },
      {
        "name": "Finance.Funds.cancelFundAutoPurchase",
        "description": "Unsubscribe from auto-subscription for designated funds",
        "parameters": {
          "type": "object",
          "properties": {
            "fund_name": {
              "type": "string",
              "description": "Fund name"
            },
            "fund_code": {
              "type": "string",
              "description": "Fund  Code"
            }
          },
          "required": [
            "fund_name",
            "fund_code"
          ]
        }
      }
    ],
    "single_tool": [
      {
        "name": "Navigation.FlightTickets.cancelFlightBooking",
        "description": "Cancelling a flight for a specific reservation",
        "parameters": {
          "type": "object",
          "properties": {
            "departure": {
              "type": "string",
              "description": "Origination"
            },
            "destination": {
              "type": "string",
              "description": "Reach ground"
            },
            "name": {
              "type": "string",
              "description": "Name of person who booked"
            },
            "time": {
              "type": "string",
              "description": "Flight departure time"
            },
            "passenger_id": {
              "type": "string",
              "description": "Rider ID number"
            }
          },
          "required": [
            "departure",
            "destination",
            "name",
            "time",
            "passenger_id"
          ]
        }
      }
    ],
    "id": 1075
  },
  {
    "messages": [
      {
        "role": "user",
        "content": "I'm looking for a house with a minimum price of $3,000 in the city center"
      },
      {
        "role": "function call",
        "content": {
          "name": "ConvenientLiving.BuyingRentingHomes.searchSalingHouses",
          "arguments": {
            "min_price": "3,000 yuan",
            "location": "the centre of town "
          }
        }
      },
      {
        "role": "assistant",
        "content": "What's the highest price you'd like"
      },
      {
        "role": "user",
        "content": "I would like the maximum price to be 2.5 million."
      },
      {
        "role": "function call",
        "content": {
          "name": "ConvenientLiving.BuyingRentingHomes.searchSalingHouses",
          "arguments": {
            "min_price": "3,000 yuan",
            "location": "the centre of town ",
            "max_price": "2.5 million"
          }
        }
      },
      {
        "role": "assistant",
        "content": "How many square meters do you want the house to be?"
      },
      {
        "role": "user",
        "content": "It was wrong before. Position should be East District"
      },
      {
        "role": "function call",
        "content": {
          "name": "ConvenientLiving.BuyingRentingHomes.searchSalingHouses",
          "arguments": {
            "min_price": "3,000 yuan",
            "location": "East District",
            "max_price": "2.5 million"
          }
        }
      },
      {
        "role": "assistant",
        "content": "How many square meters do you want the house to be?"
      },
      {
        "role": "user",
        "content": "I want a house about 80 square meters."
      },
      {
        "role": "function call",
        "content": {
          "name": "ConvenientLiving.BuyingRentingHomes.searchSalingHouses",
          "arguments": {
            "min_price": "3,000 yuan",
            "location": "East District",
            "max_price": "2.5 million",
            "house_area": "80 sqm"
          }
        }
      },
      {
        "role": "assistant",
        "content": "What floor would you like the house to be located on?"
      },
      {
        "role": "user",
        "content": "I would like the house to be on a high floor."
      },
      {
        "role": "function call",
        "content": {
          "name": "ConvenientLiving.BuyingRentingHomes.searchSalingHouses",
          "arguments": {
            "min_price": "3,000 yuan",
            "location": "East District",
            "max_price": "2.5 million",
            "house_area": "80 sqm",
            "level": "Higher-up"
          }
        }
      },
      {
        "role": "assistant",
        "content": "What is the age of the home?"
      },
      {
        "role": "user",
        "content": "The house was built in 2015."
      },
      {
        "role": "function call",
        "content": {
          "name": "ConvenientLiving.BuyingRentingHomes.searchSalingHouses",
          "arguments": {
            "min_price": "3,000 yuan",
            "location": "East District",
            "max_price": "2.5 million",
            "house_area": "80 sqm",
            "level": "Higher-up",
            "age": 5
          }
        }
      },
      {
        "role": "assistant",
        "content": "What type of house do you want? How many rooms? How many halls?"
      },
      {
        "role": "user",
        "content": "What I want is two bedrooms and one living room."
      },
      {
        "role": "function call",
        "content": {
          "name": "ConvenientLiving.BuyingRentingHomes.searchSalingHouses",
          "arguments": {
            "min_price": "3,000 yuan",
            "location": "East District",
            "max_price": "2.5 million",
            "house_area": "80 sqm",
            "level": "Higher-up",
            "age": 5,
            "house_type": "2 bedrooms & 1 living room"
          }
        }
      },
      {
        "role": "assistant",
        "content": "What is the cell name"
      },
      {
        "role": "user",
        "content": "The name of the neighborhood is Cuihu neighborhood, which is located in the center of the city and has a beautiful environment."
      },
      {
        "role": "function call",
        "content": {
          "name": "ConvenientLiving.BuyingRentingHomes.searchSalingHouses",
          "arguments": {
            "min_price": "3,000 yuan",
            "location": "East District",
            "max_price": "2.5 million",
            "house_area": "80 sqm",
            "level": "Higher-up",
            "age": 5,
            "house_type": "2 bedrooms & 1 living room",
            "housing_estate": "Cuihu District"
          }
        }
      }
    ],
    "multiple_tools": [
      {
        "name": "ConvenientLiving.BuyingRentingHomes.searchSalingHouses",
        "description": "Search for properties based on user needs",
        "parameters": {
          "type": "object",
          "properties": {
            "min_price": {
              "type": "string",
              "description": "rock-bottom prices"
            },
            "max_price": {
              "type": "string",
              "description": "Max Price"
            },
            "house_area": {
              "type": "string",
              "description": "Area"
            },
            "level": {
              "type": "string",
              "description": "Floor"
            },
            "age": {
              "type": "integer",
              "description": "fixed number of years"
            },
            "house_type": {
              "type": "string",
              "description": "Layout"
            },
            "housing_estate": {
              "type": "string",
              "description": "Community"
            },
            "location": {
              "type": "string",
              "description": "Position"
            }
          },
          "required": [
            "min_price",
            "max_price",
            "house_area",
            "level",
            "age",
            "house_type",
            "housing_estate",
            "location"
          ]
        }
      },
      {
        "name": "Health.HealthManagement.setHealthGoal",
        "description": "Set health goals based on target type, target weight, target time, etc.",
        "parameters": {
          "type": "object",
          "properties": {
            "goal_title": {
              "type": "string",
              "description": "Target Headings"
            },
            "goal_content": {
              "type": "string",
              "description": "Detailed description of the goal, such as weight loss of 10kg, body fat rate reduction of 5%, etc."
            },
            "time_limit": {
              "type": "string",
              "description": "Time to complete goal"
            }
          },
          "required": [
            "goal_title",
            "goal_content",
            "time_limit"
          ]
        }
      },
      {
        "name": "ConvenientLiving.JobRecruitment.searchJobs",
        "description": "Enter job title and other criteria to search for job information",
        "parameters": {
          "type": "object",
          "properties": {
            "job_name": {
              "type": "string",
              "description": "Position name"
            }
          },
          "required": [
            "job_name"
          ]
        }
      },
      {
        "name": "VideoPlayback.OnlineVideos.searchOnlineVideo",
        "description": "Search online videos, which can be searched based on keywords (director/publisher/video keywords); can be searched based on categories; can be searched based on AI smart search",
        "parameters": {
          "type": "object",
          "properties": {
            "keyword": {
              "type": "array",
              "description": "Director/Publisher/Video Keyword Search"
            },
            "video_type": {
              "type": "string",
              "description": "Video Type Categories, Recommended, Popular, Chase, Film and Television New Journey"
            },
            "ai_search": {
              "type": "string",
              "description": "Based on search history, viewing history can only be turned off by default"
            }
          },
          "required": [
            "keyword",
            "video_type",
            "ai_search"
          ]
        }
      },
      {
        "name": "Travel.HotelServices.searchHotel",
        "description": "Search for hotels that match the criteria entered by the user",
        "parameters": {
          "type": "object",
          "properties": {
            "destination": {
              "type": "string",
              "description": "destination"
            },
            "checkin_date": {
              "type": "string",
              "description": "Check-in date (default today)"
            },
            "checkout_date": {
              "type": "string",
              "description": "DEPARTURE DATE"
            },
            "price_range": {
              "type": "string",
              "description": "Price range: 0 ~ 300; 300 ~ 600; 600 ~ 1000; 1000 to Shenyang"
            }
          },
          "required": [
            "destination",
            "checkin_date",
            "checkout_date",
            "price_range"
          ]
        }
      }
    ],
    "single_tool": [
      {
        "name": "ConvenientLiving.BuyingRentingHomes.searchSalingHouses",
        "description": "Search for properties based on user needs",
        "parameters": {
          "type": "object",
          "properties": {
            "min_price": {
              "type": "string",
              "description": "rock-bottom prices"
            },
            "max_price": {
              "type": "string",
              "description": "Max Price"
            },
            "house_area": {
              "type": "string",
              "description": "Area"
            },
            "level": {
              "type": "string",
              "description": "Floor"
            },
            "age": {
              "type": "integer",
              "description": "fixed number of years"
            },
            "house_type": {
              "type": "string",
              "description": "Layout"
            },
            "housing_estate": {
              "type": "string",
              "description": "Community"
            },
            "location": {
              "type": "string",
              "description": "Position"
            }
          },
          "required": [
            "min_price",
            "max_price",
            "house_area",
            "level",
            "age",
            "house_type",
            "housing_estate",
            "location"
          ]
        }
      }
    ],
    "id": 1079
  },
  {
    "messages": [
      {
        "role": "user",
        "content": "Help me search for listings near Jiangbei Subway Station, starting from 5,000 yuan"
      },
      {
        "role": "function call",
        "content": {
          "name": "ConvenientLiving.BuyingRentingHomes.searchSalingHouses",
          "arguments": {
            "min_price": "RMB5,000",
            "location": "Jiangbei Subway Station"
          }
        }
      },
      {
        "role": "assistant",
        "content": "What's the highest price you'd like"
      },
      {
        "role": "user",
        "content": "I hope the maximum price is 5 million."
      },
      {
        "role": "function call",
        "content": {
          "name": "ConvenientLiving.BuyingRentingHomes.searchSalingHouses",
          "arguments": {
            "min_price": "RMB5,000",
            "location": "Jiangbei Subway Station",
            "max_price": "5 million"
          }
        }
      },
      {
        "role": "assistant",
        "content": "How many square meters do you want the house to be?"
      },
      {
        "role": "user",
        "content": "I want a house about 120 square meters."
      },
      {
        "role": "function call",
        "content": {
          "name": "ConvenientLiving.BuyingRentingHomes.searchSalingHouses",
          "arguments": {
            "min_price": "RMB5,000",
            "location": "Jiangbei Subway Station",
            "max_price": "5 million",
            "house_area": "120 sqm"
          }
        }
      },
      {
        "role": "assistant",
        "content": "What floor would you like the house to be located on?"
      },
      {
        "role": "user",
        "content": "Middle, probably between 5 and 10 floors."
      },
      {
        "role": "function call",
        "content": {
          "name": "ConvenientLiving.BuyingRentingHomes.searchSalingHouses",
          "arguments": {
            "min_price": "RMB5,000",
            "location": "Jiangbei Subway Station",
            "max_price": "5 million",
            "house_area": "120 sqm",
            "level": "Mid level"
          }
        }
      },
      {
        "role": "assistant",
        "content": "Are there any requirements for the construction life of the house?"
      },
      {
        "role": "user",
        "content": "A home needs to be more than 10 years old, but not more than 50 years old."
      },
      {
        "role": "function call",
        "content": {
          "name": "ConvenientLiving.BuyingRentingHomes.searchSalingHouses",
          "arguments": {
            "min_price": "RMB5,000",
            "location": "Jiangbei Subway Station",
            "max_price": "5 million",
            "house_area": "120 sqm",
            "level": "Mid level",
            "age": 10
          }
        }
      },
      {
        "role": "assistant",
        "content": "What type of home are you looking for?"
      },
      {
        "role": "user",
        "content": "It was wrong before. Position should be East District"
      },
      {
        "role": "function call",
        "content": {
          "name": "ConvenientLiving.BuyingRentingHomes.searchSalingHouses",
          "arguments": {
            "min_price": "RMB5,000",
            "location": "East District",
            "max_price": "5 million",
            "house_area": "120 sqm",
            "level": "Mid level",
            "age": 10
          }
        }
      },
      {
        "role": "assistant",
        "content": "What type of home are you looking for?"
      },
      {
        "role": "user",
        "content": "What I want is a three-bedroom, two-lobby house with north-south penetration."
      },
      {
        "role": "function call",
        "content": {
          "name": "ConvenientLiving.BuyingRentingHomes.searchSalingHouses",
          "arguments": {
            "min_price": "RMB5,000",
            "location": "East District",
            "max_price": "5 million",
            "house_area": "120 sqm",
            "level": "Mid level",
            "age": 10,
            "house_type": "Three bedrooms and two living rooms"
          }
        }
      },
      {
        "role": "assistant",
        "content": "What is the cell name"
      },
      {
        "role": "user",
        "content": "The name of the neighborhood is Sunshine Garden."
      },
      {
        "role": "function call",
        "content": {
          "name": "ConvenientLiving.BuyingRentingHomes.searchSalingHouses",
          "arguments": {
            "min_price": "RMB5,000",
            "location": "East District",
            "max_price": "5 million",
            "house_area": "120 sqm",
            "level": "Mid level",
            "age": 10,
            "house_type": "Three bedrooms and two living rooms",
            "housing_estate": "Sunny Gardens"
          }
        }
      }
    ],
    "multiple_tools": [
      {
        "name": "ConvenientLiving.FoodDelivery.searchRestaurants",
        "description": "Search for restaurants on Meituan based on user input",
        "parameters": {
          "type": "object",
          "properties": {
            "location": {
              "type": "string",
              "description": "Location"
            },
            "name": {
              "type": "string",
              "description": "regional cuisine"
            },
            "order": {
              "type": "string",
              "description": "Sort by e.g. rating, distance, average spend"
            }
          },
          "required": [
            "location",
            "name",
            "order"
          ]
        }
      },
      {
        "name": "ConvenientLiving.BuyingRentingHomes.searchSalingHouses",
        "description": "Search for properties based on user needs",
        "parameters": {
          "type": "object",
          "properties": {
            "min_price": {
              "type": "string",
              "description": "rock-bottom prices"
            },
            "max_price": {
              "type": "string",
              "description": "Max Price"
            },
            "house_area": {
              "type": "string",
              "description": "Area"
            },
            "level": {
              "type": "string",
              "description": "Floor"
            },
            "age": {
              "type": "integer",
              "description": "fixed number of years"
            },
            "house_type": {
              "type": "string",
              "description": "Layout"
            },
            "housing_estate": {
              "type": "string",
              "description": "Community"
            },
            "location": {
              "type": "string",
              "description": "Position"
            }
          },
          "required": [
            "min_price",
            "max_price",
            "house_area",
            "level",
            "age",
            "house_type",
            "housing_estate",
            "location"
          ]
        }
      },
      {
        "name": "Navigation.MapNavigation.searchLocation",
        "description": "Search for a location by keyword, which can be a location, a point of interest such as a gas station, a charging pile, etc., and return a list of address information",
        "parameters": {
          "type": "object",
          "properties": {
            "keyword": {
              "type": "string",
              "description": "Keywords for search"
            }
          },
          "required": [
            "keyword"
          ]
        }
      },
      {
        "name": "ConvenientLiving.GovernmentServices.searchEnterpriseByName",
        "description": "Search related businesses based on keywords entered",
        "parameters": {
          "type": "object",
          "properties": {
            "keyword": {
              "type": "string",
              "description": "Search keywords"
            }
          },
          "required": [
            "keyword"
          ]
        }
      },
      {
        "name": "MusicRadio.RadioStations.radioSearchPlaylist",
        "description": "Search Playlists",
        "parameters": {
          "type": "object",
          "properties": {
            "keyword": {
              "type": "string",
              "description": "category"
            }
          },
          "required": [
            "keyword"
          ]
        }
      }
    ],
    "single_tool": [
      {
        "name": "ConvenientLiving.BuyingRentingHomes.searchSalingHouses",
        "description": "Search for properties based on user needs",
        "parameters": {
          "type": "object",
          "properties": {
            "min_price": {
              "type": "string",
              "description": "rock-bottom prices"
            },
            "max_price": {
              "type": "string",
              "description": "Max Price"
            },
            "house_area": {
              "type": "string",
              "description": "Area"
            },
            "level": {
              "type": "string",
              "description": "Floor"
            },
            "age": {
              "type": "integer",
              "description": "fixed number of years"
            },
            "house_type": {
              "type": "string",
              "description": "Layout"
            },
            "housing_estate": {
              "type": "string",
              "description": "Community"
            },
            "location": {
              "type": "string",
              "description": "Position"
            }
          },
          "required": [
            "min_price",
            "max_price",
            "house_area",
            "level",
            "age",
            "house_type",
            "housing_estate",
            "location"
          ]
        }
      }
    ],
    "id": 1080
  },
  {
    "messages": [
      {
        "role": "user",
        "content": "Find a house in Pudong New Area, Shanghai with a rent of about 1500 yuan per month"
      },
      {
        "role": "function call",
        "content": {
          "name": "ConvenientLiving.BuyingRentingHomes.searchRentingHouses",
          "arguments": {
            "price": "$1,500 per month",
            "location": "Pudong New Area of Shanghai City"
          }
        }
      },
      {
        "role": "assistant",
        "content": "What is the size of the house?"
      },
      {
        "role": "user",
        "content": "My house is 60 sqm, perfect for a family of two."
      },
      {
        "role": "function call",
        "content": {
          "name": "ConvenientLiving.BuyingRentingHomes.searchRentingHouses",
          "arguments": {
            "price": "$1,500 per month",
            "location": "Pudong New Area of Shanghai City",
            "house_area": "60 sqm"
          }
        }
      },
      {
        "role": "assistant",
        "content": "What floor would you like the house to be located on?"
      },
      {
        "role": "user",
        "content": "I would like the house to be on a high floor."
      },
      {
        "role": "function call",
        "content": {
          "name": "ConvenientLiving.BuyingRentingHomes.searchRentingHouses",
          "arguments": {
            "price": "$1,500 per month",
            "location": "Pudong New Area of Shanghai City",
            "house_area": "60 sqm",
            "level": "Higher-up"
          }
        }
      },
      {
        "role": "assistant",
        "content": "What is the age of the home?"
      },
      {
        "role": "user",
        "content": "The house was built 10 years ago."
      },
      {
        "role": "function call",
        "content": {
          "name": "ConvenientLiving.BuyingRentingHomes.searchRentingHouses",
          "arguments": {
            "price": "$1,500 per month",
            "location": "Pudong New Area of Shanghai City",
            "house_area": "60 sqm",
            "level": "Higher-up",
            "age": 10
          }
        }
      },
      {
        "role": "assistant",
        "content": "What do you want your home to look like?"
      },
      {
        "role": "user",
        "content": "I want one bedroom and one living room."
      },
      {
        "role": "function call",
        "content": {
          "name": "ConvenientLiving.BuyingRentingHomes.searchRentingHouses",
          "arguments": {
            "price": "$1,500 per month",
            "location": "Pudong New Area of Shanghai City",
            "house_area": "60 sqm",
            "level": "Higher-up",
            "age": 10,
            "house_type": "1 bedroom & 1 living room"
          }
        }
      },
      {
        "role": "assistant",
        "content": "What is the cell name"
      },
      {
        "role": "user",
        "content": "The name of the neighborhood is a green home with a beautiful environment and comfortable living."
      },
      {
        "role": "function call",
        "content": {
          "name": "ConvenientLiving.BuyingRentingHomes.searchRentingHouses",
          "arguments": {
            "price": "$1,500 per month",
            "location": "Pudong New Area of Shanghai City",
            "house_area": "60 sqm",
            "level": "Higher-up",
            "age": 10,
            "house_type": "1 bedroom & 1 living room",
            "housing_estate": "Green Homes"
          }
        }
      },
      {
        "role": "assistant",
        "content": "What is the decoration of the house like?"
      },
      {
        "role": "user",
        "content": "It was wrong before. Floor should be Mid level"
      },
      {
        "role": "function call",
        "content": {
          "name": "ConvenientLiving.BuyingRentingHomes.searchRentingHouses",
          "arguments": {
            "price": "$1,500 per month",
            "location": "Pudong New Area of Shanghai City",
            "house_area": "60 sqm",
            "level": "Mid level",
            "age": 10,
            "house_type": "1 bedroom & 1 living room",
            "housing_estate": "Green Homes"
          }
        }
      },
      {
        "role": "assistant",
        "content": "What is the decoration of the house like?"
      },
      {
        "role": "user",
        "content": "The house is simply decorated and looks very clean and tidy."
      },
      {
        "role": "function call",
        "content": {
          "name": "ConvenientLiving.BuyingRentingHomes.searchRentingHouses",
          "arguments": {
            "price": "$1,500 per month",
            "location": "Pudong New Area of Shanghai City",
            "house_area": "60 sqm",
            "level": "Mid level",
            "age": 10,
            "house_type": "1 bedroom & 1 living room",
            "housing_estate": "Green Homes",
            "indoor_decoration": "Simple decoration"
          }
        }
      },
      {
        "role": "assistant",
        "content": "Whether the house needs to be furnished"
      },
      {
        "role": "user",
        "content": "Yes, the house needs to be equipped with basic furniture including bed, sofa, dining table, etc."
      },
      {
        "role": "function call",
        "content": {
          "name": "ConvenientLiving.BuyingRentingHomes.searchRentingHouses",
          "arguments": {
            "price": "$1,500 per month",
            "location": "Pudong New Area of Shanghai City",
            "house_area": "60 sqm",
            "level": "Mid level",
            "age": 10,
            "house_type": "1 bedroom & 1 living room",
            "housing_estate": "Green Homes",
            "indoor_decoration": "Simple decoration",
            "furniture": "Basic furniture"
          }
        }
      }
    ],
    "multiple_tools": [
      {
        "name": "NewsMagazines.NewspapersMagazines.searchKeyMagazines",
        "description": "Search magazines by keyword",
        "parameters": {
          "type": "object",
          "properties": {
            "keyword": {
              "type": "string",
              "description": "Keywords"
            }
          },
          "required": [
            "keyword"
          ]
        }
      },
      {
        "name": "ConvenientLiving.BuyingRentingHomes.searchSalingHouses",
        "description": "Search for properties based on user needs",
        "parameters": {
          "type": "object",
          "properties": {
            "min_price": {
              "type": "string",
              "description": "rock-bottom prices"
            },
            "max_price": {
              "type": "string",
              "description": "Max Price"
            },
            "house_area": {
              "type": "string",
              "description": "Area"
            },
            "level": {
              "type": "string",
              "description": "Floor"
            },
            "age": {
              "type": "integer",
              "description": "fixed number of years"
            },
            "house_type": {
              "type": "string",
              "description": "Layout"
            },
            "housing_estate": {
              "type": "string",
              "description": "Community"
            },
            "location": {
              "type": "string",
              "description": "Position"
            }
          },
          "required": [
            "min_price",
            "max_price",
            "house_area",
            "level",
            "age",
            "house_type",
            "housing_estate",
            "location"
          ]
        }
      },
      {
        "name": "ConvenientLiving.BuyingRentingHomes.searchRentingHouses",
        "description": "Search for rentals by criteria",
        "parameters": {
          "type": "object",
          "properties": {
            "price": {
              "type": "string",
              "description": "Rents"
            },
            "house_area": {
              "type": "string",
              "description": "Area"
            },
            "level": {
              "type": "string",
              "description": "Floor"
            },
            "age": {
              "type": "integer",
              "description": "fixed number of years"
            },
            "house_type": {
              "type": "string",
              "description": "Layout"
            },
            "housing_estate": {
              "type": "string",
              "description": "Community"
            },
            "location": {
              "type": "string",
              "description": "Position"
            },
            "indoor_decoration": {
              "type": "string",
              "description": "decorate"
            },
            "furniture": {
              "type": "string",
              "description": "Furniture"
            }
          },
          "required": [
            "price",
            "house_area",
            "level",
            "age",
            "house_type",
            "housing_estate",
            "location",
            "indoor_decoration",
            "furniture"
          ]
        }
      },
      {
        "name": "Travel.HotelServices.searchHotel",
        "description": "Search for hotels that match the criteria entered by the user",
        "parameters": {
          "type": "object",
          "properties": {
            "destination": {
              "type": "string",
              "description": "destination"
            },
            "checkin_date": {
              "type": "string",
              "description": "Check-in date (default today)"
            },
            "checkout_date": {
              "type": "string",
              "description": "DEPARTURE DATE"
            },
            "price_range": {
              "type": "string",
              "description": "Price range: 0 ~ 300; 300 ~ 600; 600 ~ 1000; 1000 to Shenyang"
            }
          },
          "required": [
            "destination",
            "checkin_date",
            "checkout_date",
            "price_range"
          ]
        }
      },
      {
        "name": "Navigation.MapNavigation.searchLocation",
        "description": "Search for a location by keyword, which can be a location, a point of interest such as a gas station, a charging pile, etc., and return a list of address information",
        "parameters": {
          "type": "object",
          "properties": {
            "keyword": {
              "type": "string",
              "description": "Keywords for search"
            }
          },
          "required": [
            "keyword"
          ]
        }
      }
    ],
    "single_tool": [
      {
        "name": "ConvenientLiving.BuyingRentingHomes.searchRentingHouses",
        "description": "Search for rentals by criteria",
        "parameters": {
          "type": "object",
          "properties": {
            "price": {
              "type": "string",
              "description": "Rents"
            },
            "house_area": {
              "type": "string",
              "description": "Area"
            },
            "level": {
              "type": "string",
              "description": "Floor"
            },
            "age": {
              "type": "integer",
              "description": "fixed number of years"
            },
            "house_type": {
              "type": "string",
              "description": "Layout"
            },
            "housing_estate": {
              "type": "string",
              "description": "Community"
            },
            "location": {
              "type": "string",
              "description": "Position"
            },
            "indoor_decoration": {
              "type": "string",
              "description": "decorate"
            },
            "furniture": {
              "type": "string",
              "description": "Furniture"
            }
          },
          "required": [
            "price",
            "house_area",
            "level",
            "age",
            "house_type",
            "housing_estate",
            "location",
            "indoor_decoration",
            "furniture"
          ]
        }
      }
    ],
    "id": 1081
  },
  {
    "messages": [
      {
        "role": "user",
        "content": "Help me search for rent information of about 2000 yuan per month in Chaoyang District, Beijing"
      },
      {
        "role": "function call",
        "content": {
          "name": "ConvenientLiving.BuyingRentingHomes.searchRentingHouses",
          "arguments": {
            "price": "$2000 per month",
            "location": "Room 301, Future Business Center 17"
          }
        }
      },
      {
        "role": "assistant",
        "content": "Need to know how much square meter you want your house to be"
      },
      {
        "role": "user",
        "content": "I would like the house to be about 70 square meters."
      },
      {
        "role": "function call",
        "content": {
          "name": "ConvenientLiving.BuyingRentingHomes.searchRentingHouses",
          "arguments": {
            "price": "$2000 per month",
            "location": "Room 301, Future Business Center 17",
            "house_area": "70 sqm"
          }
        }
      },
      {
        "role": "assistant",
        "content": "What floor would you like the house to be located on?"
      },
      {
        "role": "user",
        "content": "Middle level, good and convenient view."
      },
      {
        "role": "function call",
        "content": {
          "name": "ConvenientLiving.BuyingRentingHomes.searchRentingHouses",
          "arguments": {
            "price": "$2000 per month",
            "location": "Room 301, Future Business Center 17",
            "house_area": "70 sqm",
            "level": "Mid level"
          }
        }
      },
      {
        "role": "assistant",
        "content": "What is the age of the house"
      },
      {
        "role": "user",
        "content": "It was wrong before. Floor should be Higher-up"
      },
      {
        "role": "function call",
        "content": {
          "name": "ConvenientLiving.BuyingRentingHomes.searchRentingHouses",
          "arguments": {
            "price": "$2000 per month",
            "location": "Room 301, Future Business Center 17",
            "house_area": "70 sqm",
            "level": "Higher-up"
          }
        }
      },
      {
        "role": "assistant",
        "content": "What is the age of the house"
      },
      {
        "role": "user",
        "content": "The age of the house is 5 years."
      },
      {
        "role": "function call",
        "content": {
          "name": "ConvenientLiving.BuyingRentingHomes.searchRentingHouses",
          "arguments": {
            "price": "$2000 per month",
            "location": "Room 301, Future Business Center 17",
            "house_area": "70 sqm",
            "level": "Higher-up",
            "age": 5
          }
        }
      },
      {
        "role": "assistant",
        "content": "What do you want your home to look like?"
      },
      {
        "role": "user",
        "content": "What I want is a two-bedroom apartment with better lighting."
      },
      {
        "role": "function call",
        "content": {
          "name": "ConvenientLiving.BuyingRentingHomes.searchRentingHouses",
          "arguments": {
            "price": "$2000 per month",
            "location": "Room 301, Future Business Center 17",
            "house_area": "70 sqm",
            "level": "Higher-up",
            "age": 5,
            "house_type": "2 bedrooms & 1 living room"
          }
        }
      },
      {
        "role": "assistant",
        "content": "What is the cell name"
      },
      {
        "role": "user",
        "content": "The name of the neighborhood is Sunshine Garden."
      },
      {
        "role": "function call",
        "content": {
          "name": "ConvenientLiving.BuyingRentingHomes.searchRentingHouses",
          "arguments": {
            "price": "$2000 per month",
            "location": "Room 301, Future Business Center 17",
            "house_area": "70 sqm",
            "level": "Higher-up",
            "age": 5,
            "house_type": "2 bedrooms & 1 living room",
            "housing_estate": "Sunny Gardens"
          }
        }
      },
      {
        "role": "assistant",
        "content": "How would you like your home to be renovated"
      },
      {
        "role": "user",
        "content": "I hope it is finely decorated so that you can check in directly and do not have to spend time and energy to take care of it."
      },
      {
        "role": "function call",
        "content": {
          "name": "ConvenientLiving.BuyingRentingHomes.searchRentingHouses",
          "arguments": {
            "price": "$2000 per month",
            "location": "Room 301, Future Business Center 17",
            "house_area": "70 sqm",
            "level": "Higher-up",
            "age": 5,
            "house_type": "2 bedrooms & 1 living room",
            "housing_estate": "Sunny Gardens",
            "indoor_decoration": "Fine decoration"
          }
        }
      },
      {
        "role": "assistant",
        "content": "Whether the house needs to be furnished"
      },
      {
        "role": "user",
        "content": "Yes, I would like the house to be fully furnished and convenient for living."
      },
      {
        "role": "function call",
        "content": {
          "name": "ConvenientLiving.BuyingRentingHomes.searchRentingHouses",
          "arguments": {
            "price": "$2000 per month",
            "location": "Room 301, Future Business Center 17",
            "house_area": "70 sqm",
            "level": "Higher-up",
            "age": 5,
            "house_type": "2 bedrooms & 1 living room",
            "housing_estate": "Sunny Gardens",
            "indoor_decoration": "Fine decoration",
            "furniture": "Fully furnished appliances"
          }
        }
      }
    ],
    "multiple_tools": [
      {
        "name": "MusicRadio.OnlineMusic.getConcertInfo",
        "description": "Get information about a concert by keyword, concert location, concert date",
        "parameters": {
          "type": "object",
          "properties": {
            "name": {
              "type": "string",
              "description": "Concert Name"
            },
            "location": {
              "type": "string",
              "description": "Location of the concert"
            },
            "date": {
              "type": "string",
              "description": "Concert dates"
            }
          },
          "required": [
            "name",
            "location",
            "date"
          ]
        }
      },
      {
        "name": "VideoPlayback.OnlineVideos.searchOnlineVideo",
        "description": "Search online videos, which can be searched based on keywords (director/publisher/video keywords); can be searched based on categories; can be searched based on AI smart search",
        "parameters": {
          "type": "object",
          "properties": {
            "keyword": {
              "type": "array",
              "description": "Director/Publisher/Video Keyword Search"
            },
            "video_type": {
              "type": "string",
              "description": "Video Type Categories, Recommended, Popular, Chase, Film and Television New Journey"
            },
            "ai_search": {
              "type": "string",
              "description": "Based on search history, viewing history can only be turned off by default"
            }
          },
          "required": [
            "keyword",
            "video_type",
            "ai_search"
          ]
        }
      },
      {
        "name": "OnlineShopping.ExpressDelivery.searchContactInfos",
        "description": "Search for contacts based on given name, phone, address, etc.",
        "parameters": {
          "type": "object",
          "properties": {
            "name": {
              "type": "string",
              "description": "Name"
            },
            "phone": {
              "type": "string",
              "description": "Phone No."
            },
            "address": {
              "type": "string",
              "description": "Address"
            }
          },
          "required": [
            "name",
            "phone",
            "address"
          ]
        }
      },
      {
        "name": "ConvenientLiving.BuyingRentingHomes.searchRentingHouses",
        "description": "Search for rentals by criteria",
        "parameters": {
          "type": "object",
          "properties": {
            "price": {
              "type": "string",
              "description": "Rents"
            },
            "house_area": {
              "type": "string",
              "description": "Area"
            },
            "level": {
              "type": "string",
              "description": "Floor"
            },
            "age": {
              "type": "integer",
              "description": "fixed number of years"
            },
            "house_type": {
              "type": "string",
              "description": "Layout"
            },
            "housing_estate": {
              "type": "string",
              "description": "Community"
            },
            "location": {
              "type": "string",
              "description": "Position"
            },
            "indoor_decoration": {
              "type": "string",
              "description": "decorate"
            },
            "furniture": {
              "type": "string",
              "description": "Furniture"
            }
          },
          "required": [
            "price",
            "house_area",
            "level",
            "age",
            "house_type",
            "housing_estate",
            "location",
            "indoor_decoration",
            "furniture"
          ]
        }
      },
      {
        "name": "OnlineShopping.ExpressDelivery.searchExpress",
        "description": "Search courier logistics based on information such as designated courier number, recipient, address, etc.",
        "parameters": {
          "type": "object",
          "properties": {
            "express_id": {
              "type": "string",
              "description": "Tracking Number"
            },
            "date": {
              "type": "string",
              "description": "Shipping date"
            },
            "send_name": {
              "type": "string",
              "description": "Name Of Sender"
            },
            "recipient_name": {
              "type": "string",
              "description": "Recipient's name"
            }
          },
          "required": [
            "express_id",
            "date",
            "send_name",
            "recipient_name"
          ]
        }
      }
    ],
    "single_tool": [
      {
        "name": "ConvenientLiving.BuyingRentingHomes.searchRentingHouses",
        "description": "Search for rentals by criteria",
        "parameters": {
          "type": "object",
          "properties": {
            "price": {
              "type": "string",
              "description": "Rents"
            },
            "house_area": {
              "type": "string",
              "description": "Area"
            },
            "level": {
              "type": "string",
              "description": "Floor"
            },
            "age": {
              "type": "integer",
              "description": "fixed number of years"
            },
            "house_type": {
              "type": "string",
              "description": "Layout"
            },
            "housing_estate": {
              "type": "string",
              "description": "Community"
            },
            "location": {
              "type": "string",
              "description": "Position"
            },
            "indoor_decoration": {
              "type": "string",
              "description": "decorate"
            },
            "furniture": {
              "type": "string",
              "description": "Furniture"
            }
          },
          "required": [
            "price",
            "house_area",
            "level",
            "age",
            "house_type",
            "housing_estate",
            "location",
            "indoor_decoration",
            "furniture"
          ]
        }
      }
    ],
    "id": 1082
  },
  {
    "messages": [
      {
        "role": "user",
        "content": "I want to watch the full screen short video “A Dog's Day”"
      },
      {
        "role": "function call",
        "content": {
          "name": "VideoPlayback.ShortVideos.playShortVideo",
          "arguments": {
            "video_name": "A day in the life of a dog",
            "full_screen": true
          }
        }
      },
      {
        "role": "assistant",
        "content": "What is the playback speed?"
      },
      {
        "role": "user",
        "content": "1.0, I want to maintain normal speed."
      },
      {
        "role": "function call",
        "content": {
          "name": "VideoPlayback.ShortVideos.playShortVideo",
          "arguments": {
            "video_name": "A day in the life of a dog",
            "full_screen": true,
            "playback_speed": 1.0
          }
        }
      },
      {
        "role": "assistant",
        "content": "Whether to open the barrage"
      },
      {
        "role": "user",
        "content": "It was wrong before. Short video name should be Laughing Cat Highlights"
      },
      {
        "role": "function call",
        "content": {
          "name": "VideoPlayback.ShortVideos.playShortVideo",
          "arguments": {
            "video_name": "Laughing Cat Highlights",
            "full_screen": true,
            "playback_speed": 1.0
          }
        }
      },
      {
        "role": "assistant",
        "content": "Whether to open the barrage"
      },
      {
        "role": "user",
        "content": "No, I don't need to open the barrage."
      },
      {
        "role": "function call",
        "content": {
          "name": "VideoPlayback.ShortVideos.playShortVideo",
          "arguments": {
            "video_name": "Laughing Cat Highlights",
            "full_screen": true,
            "playback_speed": 1.0,
            "danmaku": false
          }
        }
      }
    ],
    "multiple_tools": [
      {
        "name": "Travel.ItineraryServices.viewTravelItinerary",
        "description": "View a user-created trip by trip name or keyword",
        "parameters": {
          "type": "object",
          "properties": {
            "name": {
              "type": "string",
              "description": "Trip name or keyword"
            }
          },
          "required": [
            "name"
          ]
        }
      },
      {
        "name": "VideoPlayback.OnlineVideos.playOnlineVideo",
        "description": "Watch the video (when to start, watch from scratch by default)",
        "parameters": {
          "type": "object",
          "properties": {
            "video_name": {
              "type": "string",
              "description": "Video Name"
            },
            "start": {
              "type": "string",
              "description": "When to start, watch from scratch by default"
            },
            "full_screen": {
              "type": "boolean",
              "description": "Full Screen"
            },
            "playback_speed": {
              "type": "float",
              "description": "Playback Speed"
            },
            "danmaku": {
              "type": "boolean",
              "description": "enable bullet text"
            }
          },
          "required": [
            "video_name",
            "start",
            "full_screen",
            "playback_speed",
            "danmaku"
          ]
        }
      },
      {
        "name": "VideoPlayback.ShortVideos.playShortVideo",
        "description": "Watch the short video, watch from scratch by default",
        "parameters": {
          "type": "object",
          "properties": {
            "video_name": {
              "type": "string",
              "description": "Short video name"
            },
            "full_screen": {
              "type": "boolean",
              "description": "Full Screen"
            },
            "playback_speed": {
              "type": "float",
              "description": "Playback Speed"
            },
            "danmaku": {
              "type": "boolean",
              "description": "enable bullet text"
            }
          },
          "required": [
            "video_name",
            "full_screen",
            "playback_speed",
            "danmaku"
          ]
        }
      },
      {
        "name": "OfficeSoftware.Email.getMailContent",
        "description": "Get the full content of the specified message",
        "parameters": {
          "type": "object",
          "properties": {
            "mail_title": {
              "type": "string",
              "description": "Subject of the message to get the content"
            }
          },
          "required": [
            "mail_title"
          ]
        }
      },
      {
        "name": "NewsMagazines.News.readNews",
        "description": "Read the full content of the specified news",
        "parameters": {
          "type": "object",
          "properties": {
            "source_name": {
              "type": "string",
              "description": "News Source Name"
            },
            "news_name": {
              "type": "string",
              "description": "News Name"
            }
          },
          "required": [
            "source_name",
            "news_name"
          ]
        }
      }
    ],
    "single_tool": [
      {
        "name": "VideoPlayback.ShortVideos.playShortVideo",
        "description": "Watch the short video, watch from scratch by default",
        "parameters": {
          "type": "object",
          "properties": {
            "video_name": {
              "type": "string",
              "description": "Short video name"
            },
            "full_screen": {
              "type": "boolean",
              "description": "Full Screen"
            },
            "playback_speed": {
              "type": "float",
              "description": "Playback Speed"
            },
            "danmaku": {
              "type": "boolean",
              "description": "enable bullet text"
            }
          },
          "required": [
            "video_name",
            "full_screen",
            "playback_speed",
            "danmaku"
          ]
        }
      }
    ],
    "id": 1096
  },
  {
    "messages": [
      {
        "role": "user",
        "content": "I want to see the \"kitty funny\" short video from scratch instead of the full screen"
      },
      {
        "role": "function call",
        "content": {
          "name": "VideoPlayback.ShortVideos.playShortVideo",
          "arguments": {
            "video_name": "Cat Fun",
            "full_screen": false
          }
        }
      },
      {
        "role": "assistant",
        "content": "What is the playback speed?"
      },
      {
        "role": "user",
        "content": "1.2x Speed"
      },
      {
        "role": "function call",
        "content": {
          "name": "VideoPlayback.ShortVideos.playShortVideo",
          "arguments": {
            "video_name": "Cat Fun",
            "full_screen": false,
            "playback_speed": 1.2
          }
        }
      },
      {
        "role": "assistant",
        "content": "Whether to open the barrage"
      },
      {
        "role": "user",
        "content": "It was wrong before. Short video name should be Laughing Cat Highlights"
      },
      {
        "role": "function call",
        "content": {
          "name": "VideoPlayback.ShortVideos.playShortVideo",
          "arguments": {
            "video_name": "Laughing Cat Highlights",
            "full_screen": false,
            "playback_speed": 1.2
          }
        }
      },
      {
        "role": "assistant",
        "content": "Whether to open the barrage"
      },
      {
        "role": "user",
        "content": "Yes, open barrage True"
      },
      {
        "role": "function call",
        "content": {
          "name": "VideoPlayback.ShortVideos.playShortVideo",
          "arguments": {
            "video_name": "Laughing Cat Highlights",
            "full_screen": false,
            "playback_speed": 1.2,
            "danmaku": true
          }
        }
      }
    ],
    "multiple_tools": [
      {
        "name": "VideoPlayback.ShortVideos.playShortVideo",
        "description": "Watch the short video, watch from scratch by default",
        "parameters": {
          "type": "object",
          "properties": {
            "video_name": {
              "type": "string",
              "description": "Short video name"
            },
            "full_screen": {
              "type": "boolean",
              "description": "Full Screen"
            },
            "playback_speed": {
              "type": "float",
              "description": "Playback Speed"
            },
            "danmaku": {
              "type": "boolean",
              "description": "enable bullet text"
            }
          },
          "required": [
            "video_name",
            "full_screen",
            "playback_speed",
            "danmaku"
          ]
        }
      },
      {
        "name": "NewsMagazines.News.readNews",
        "description": "Read the full content of the specified news",
        "parameters": {
          "type": "object",
          "properties": {
            "source_name": {
              "type": "string",
              "description": "News Source Name"
            },
            "news_name": {
              "type": "string",
              "description": "News Name"
            }
          },
          "required": [
            "source_name",
            "news_name"
          ]
        }
      },
      {
        "name": "VideoPlayback.OnlineVideos.playOnlineVideo",
        "description": "Watch the video (when to start, watch from scratch by default)",
        "parameters": {
          "type": "object",
          "properties": {
            "video_name": {
              "type": "string",
              "description": "Video Name"
            },
            "start": {
              "type": "string",
              "description": "When to start, watch from scratch by default"
            },
            "full_screen": {
              "type": "boolean",
              "description": "Full Screen"
            },
            "playback_speed": {
              "type": "float",
              "description": "Playback Speed"
            },
            "danmaku": {
              "type": "boolean",
              "description": "enable bullet text"
            }
          },
          "required": [
            "video_name",
            "start",
            "full_screen",
            "playback_speed",
            "danmaku"
          ]
        }
      },
      {
        "name": "Finance.Stocks.viewStockstrategy",
        "description": "View investment playbook",
        "parameters": {
          "type": "object",
          "properties": {},
          "required": []
        }
      },
      {
        "name": "OfficeSoftware.Email.getMailContent",
        "description": "Get the full content of the specified message",
        "parameters": {
          "type": "object",
          "properties": {
            "mail_title": {
              "type": "string",
              "description": "Subject of the message to get the content"
            }
          },
          "required": [
            "mail_title"
          ]
        }
      }
    ],
    "single_tool": [
      {
        "name": "VideoPlayback.ShortVideos.playShortVideo",
        "description": "Watch the short video, watch from scratch by default",
        "parameters": {
          "type": "object",
          "properties": {
            "video_name": {
              "type": "string",
              "description": "Short video name"
            },
            "full_screen": {
              "type": "boolean",
              "description": "Full Screen"
            },
            "playback_speed": {
              "type": "float",
              "description": "Playback Speed"
            },
            "danmaku": {
              "type": "boolean",
              "description": "enable bullet text"
            }
          },
          "required": [
            "video_name",
            "full_screen",
            "playback_speed",
            "danmaku"
          ]
        }
      }
    ],
    "id": 1097
  }
]